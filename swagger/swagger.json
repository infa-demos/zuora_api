{
  "swagger" : "2.0",
  "info" : {
    "description" : "\n# Introduction\n\nWelcome to the reference for the Zuora REST API!\n\n<a href=\"http://en.wikipedia.org/wiki/REST_API\" target=\"_blank\">REST</a> is a web-service protocol that lends itself to rapid development by using everyday HTTP and JSON technology.\n\nThe Zuora REST API provides a broad set of operations and resources that:\n\n* Enable Web Storefront integration from your website.\n* Support self-service subscriber sign-ups and account management.\n* Process revenue schedules through custom revenue rule models.\n* Enable manipulation of most objects in the Zuora Object Model.\n\n## Endpoints\n\nThe Zuora REST API is provided via the following endpoints.\n\n| Tenant                 | Base URL for REST Endpoints                                                                                                                                         |\n|-------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Production | https://rest.zuora.com/v1                                                                                                                                           |\n| API Sandbox    | https://rest.apisandbox.zuora.com/v1                                                                                                                                |\n\nThe production endpoint provides access to your live user data. The API Sandbox tenant is a good place to test your code without affecting real-world data. To use it, you must be provisioned with an API Sandbox tenant - your Zuora representative can help you if needed.\n\n## Access to the API\n\nIf you have a Zuora tenant, you already have access to the API.\n\nIf you don't have a Zuora tenant, go to <a href=\"https://www.zuora.com/resource/zuora-test-drive\" target=\"_blank\">https://www.zuora.com/resource/zuora-test-drive</a> and sign up for a Production Test Drive tenant. The tenant comes with seed data, such as a sample product catalog.\n\n\nWe recommend that you <a href=\"https://knowledgecenter.zuora.com/CF_Users_and_Administrators/A_Administrator_Settings/Manage_Users/Create_an_API_User\" target=\"_blank\">create an API user</a> specifically for making API calls. Don't log in to the Zuora UI with this account. Logging in to the UI enables a security feature that periodically expires the account's password, which may eventually cause authentication failures with the API. Note that a user role does not have write access to Zuora REST services unless it has the API Write Access permission as described in those instructions.\n\n\n# Authentication\n\nThere are three ways to authenticate:\n\n *   Use username and password. Include authentication with each request in the header:\n     *   `apiAccessKeyId`\n     *   `apiSecretAccessKey`\n     *   `entityId` or `entityName` (Only for [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity \"Multi-entity\"). See \"Entity Id and Entity Name\" below for more information.)\n\n  * Use an authorization cookie. The  cookie authorizes the user to make calls to the REST API for the duration specified in  **Administration > Security Policies > Session timeout**. The cookie expiration time is reset with this duration after every call to the REST API. To obtain a cookie, call the REST  `connections` resource with the following API user information:\n    *   ID\n    *   password\n    *   entity Id or entity name (Only for [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity \"Multi-entity\"). See \"Entity Id and Entity Name\" below for more information.)\n\n  *   For CORS-enabled APIs only: Include a 'single-use' token in the request header, which re-authenticates the user with each request. See below for more details.\n\n\n## Entity Id and Entity Name\n\nThe `entityId` and `entityName`  parameters are only used for  [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity).\n\nThe  `entityId` and `entityName` parameters specify the Id and the  [name of the entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity/B_Introduction_to_Entity_and_Entity_Hierarchy#Name_and_Display_Name \"Introduction to Entity and Entity Hierarchy\") that you want to access, respectively. Note that you must have permission to access the entity. You can get the entity Id and entity name through the REST GET Entities call.\n\nYou can specify either the  `entityId` or `entityName` parameter in the authentication to access and view an entity.\n\n*   If both `entityId` and `entityName` are specified in the authentication, an error occurs. \n*   If neither  `entityId` nor  `entityName` is specified in the authentication, you will log in to the entity in which your user account is created. \n\nSee [API User Authentication](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity/A_Overview_of_Multi-entity#API_User_Authentication \"Zuora Multi-entity\") for more information.\n\n## Token Authentication for CORS-Enabled APIs\n\nThe CORS mechanism enables REST API calls to Zuora to be made directly from your customer's browser, with all credit card and security information transmitted directly to Zuora. This minimizes your PCI compliance burden, allows you to implement advanced validation on your payment forms, and makes your payment forms look just like any other part of your website.\n\nFor security reasons, instead of using cookies, an API request via CORS uses **tokens** for authentication.\n\nThe token method of authentication is only designed for use with requests that must originate from your customer's browser; **it should not be considered a replacement to the existing cookie authentication** mechanism.\n\nSee [Zuora CORS REST ](https://knowledgecenter.zuora.com/DC_Developers/REST_API/A_REST_basics/G_CORS_REST \"Zuora CORS REST\")for details on how CORS works and how you can begin to implement customer calls to the Zuora REST APIs. See  [HMAC Signatures](/BC_Developers/REST_API/B_REST_API_reference/HMAC_Signatures \"HMAC Signatures\") for details on the HMAC method that returns the authentication token.\n\n\n\n# Requests and Responses\n\n\n## Request IDs\n\nAs a general rule, when asked to supply a \"key\" for an account or subscription (accountKey, account-key, subscriptionKey, subscription-key), you can provide either the actual ID or the number of the entity.\n\n## HTTP Request Body\n\nMost of the parameters and data accompanying your requests will be contained in the body of the HTTP request.\n\nThe Zuora REST API accepts JSON in the HTTP request body.  No other data format (e.g., XML) is supported.\n\n\n## Testing a Request\n\nUse a third party client, such as [curl](https://curl.haxx.se/ \"curl\"), [Postman](https://www.getpostman.com/ \"Postman\"),  or [Advanced REST Client](https://advancedrestclient.com/ \"Advanced REST Client\"), to test the Zuora REST API.\n\nYou can test the Zuora REST API from the Zuora API Sandbox or Production tenants. If connecting to Production, bear in mind that you are working with your live production data, not sample data or test data.\n\n## Testing with Credit Cards\n\nSooner or later it will probably be necessary to test some transactions that involve credit cards. For suggestions on how to handle this, see [Going Live With Your Payment Gateway](https://knowledgecenter.zuora.com/CB_Billing/M_Payment_Gateways/C_Managing_Payment_Gateways/B_Going_Live_Payment_Gateways#Testing_with_Credit_Cards \"C_Zuora_User_Guides/A_Billing_and_Payments/M_Payment_Gateways/C_Managing_Payment_Gateways/B_Going_Live_Payment_Gateways#Testing_with_Credit_Cards\").\n\n    \n## Error Handling\n\nResponses and error codes are detailed in [Responses and errors](https://knowledgecenter.zuora.com/DC_Developers/REST_API/A_REST_basics/3_Responses_and_errors \"Responses and errors\").\n\n\n\n# Pagination\n\nWhen retrieving information (using GET methods), the optional `pageSize` query parameter sets the maximum number of rows to return in a response. The maximum is `40`; larger values are treated as `40`. If this value is empty or invalid, `pageSize` typically defaults to `10`.\n\nThe default value for the maximum number of rows retrieved can be overridden at the method level.\n\nIf more rows are available, the response will include a `nextPage` element, which contains a URL for requesting the next page.  If this value is not provided, no more rows are available. No \"previous page\" element is explicitly provided; to support backward paging, use the previous call.\n\n## Array Size\n\nFor data items that are not paginated, the REST API supports arrays of up to 300 rows.  Thus, for instance, repeated pagination can retrieve thousands of customer accounts, but within any account an array of no more than 300 rate plans is returned.\n\n\n# API Versions\n\nThe Zuora REST API are version controlled. Versioning ensures that Zuora REST API changes are backward compatible. Zuora uses a major and minor version nomenclature to manage changes. By specifying a version in a REST request, you can get expected responses regardless of future changes to the API.\n\n\n## Major Version\n\nThe major version number of the REST API appears in the REST URL. Currently, Zuora only supports the **v1** major version. For example,  `POST https://rest.zuora.com/v1/subscriptions` .\n\n\n## Minor Version\n\nZuora uses minor versions for the REST API to control small changes. For example, a field in a REST method is deprecated and a new field is used to replace it. \n\nSome fields in the REST methods are supported as of minor versions. If a field is not noted with a minor version, this field is available for all minor versions. If a field is noted with a minor version, this field is in version control. You must specify the supported minor version in the request header to process without an error. \n\nIf a field is in version control, it is either with a minimum minor version or a maximum minor version, or both of them. You can only use this field with the minor version between the minimum and the maximum minor versions. For example, the  `invoiceCollect` field in the POST Subscription method is in version control and its maximum minor version is 189.0. You can only use this field with the minor version 189.0 or earlier.\n\nThe supported minor versions are not serial, see [Zuora REST API Minor Version History](https://knowledgecenter.zuora.com/DC_Developers/REST_API/A_REST_basics/Zuora_REST_API_Minor_Version_History \"Zuora REST API Minor Version History\") for the fields and their supported minor versions. In our REST API documentation, if a field or feature requires a minor version number, we note that in the field description.\n\nYou only need to specify the version number when you use the fields require a minor version. To specify the minor version, set the `zuora-version` parameter to the minor version number in the request header for the request call. For example, the `collect` field is in 196.0 minor version. If you want to use this field for the POST Subscription method, set the  `zuora-version` parameter to `196.0` in the request header. The `zuora-version` parameter is case sensitive. \n\nFor all the REST API fields, by default, if the minor version is not specified in the request header, Zuora will use the minimum minor version of the REST API to avoid breaking your integration. \n\n \n# Zuora Object Model\nThe following diagram presents a high-level view of the key Zuora objects. Click the image to open it in a new tab to resize it.\n\n<a href=\"https://www.zuora.com/wp-content/uploads/2016/11/ZuoraERD.jpeg\" target=\"_blank\"><img src=\"https://www.zuora.com/wp-content/uploads/2016/11/ZuoraERD.jpeg\" alt=\"Zuora Object Model Diagram\"></a>\n",
    "version" : "1.0.0",
    "title" : "Zuora API Reference",
    "contact" : {
      "email" : "docs@zuora.com"
    },
    "x-logo" : {
      "url" : "https://dl.dropboxusercontent.com/u/99612594/zuoralogo.png"
    }
  },
  "host" : "rest.zuora.com",
  "basePath" : "/v1",
  "tags" : [ {
    "name" : "Actions",
    "description" : "Actions are operations that are batch in nature. For example, the \"create\", \"update\", \"delete\", and other operations allow changes to up-to 50 objects at a time. The \"query\" operation will return up-to 2000 result records back at a time, before requiring additional pages of data to be returned via a subsequent \"queryMore\" operation."
  }, {
    "name" : "Accounting Codes",
    "description" : ""
  }, {
    "name" : "Accounting Periods",
    "description" : ""
  }, {
    "name" : "Accounts",
    "description" : ""
  }, {
    "name" : "Amendments",
    "description" : ""
  }, {
    "name" : "Attachments",
    "description" : ""
  }, {
    "name" : "Catalog",
    "description" : ""
  }, {
    "name" : "Charge Revenue Summaries",
    "description" : ""
  }, {
    "name" : "Communication Profiles",
    "description" : ""
  }, {
    "name" : "Connections",
    "description" : ""
  }, {
    "name" : "Contacts",
    "description" : ""
  }, {
    "name" : "Credit Balance Adjustments",
    "description" : ""
  }, {
    "name" : "Custom Exchange Rates",
    "description" : ""
  }, {
    "name" : "Exports",
    "description" : ""
  }, {
    "name" : "Features",
    "description" : ""
  }, {
    "name" : "Get Files",
    "description" : ""
  }, {
    "name" : "HMAC Signatures",
    "description" : ""
  }, {
    "name" : "Hosted Pages",
    "description" : ""
  }, {
    "name" : "Imports",
    "description" : ""
  }, {
    "name" : "Invoice Adjustments",
    "description" : ""
  }, {
    "name" : "Invoice Item Adjustments",
    "description" : ""
  }, {
    "name" : "Invoice Items",
    "description" : ""
  }, {
    "name" : "Invoice Payments",
    "description" : ""
  }, {
    "name" : "Invoice Split Items",
    "description" : ""
  }, {
    "name" : "Invoice Splits",
    "description" : ""
  }, {
    "name" : "Invoices",
    "description" : ""
  }, {
    "name" : "Journal Runs",
    "description" : ""
  }, {
    "name" : "Mass Updater",
    "description" : ""
  }, {
    "name" : "Notification History",
    "description" : ""
  }, {
    "name" : "Operations",
    "description" : ""
  }, {
    "name" : "Payment Method Snapshots",
    "description" : ""
  }, {
    "name" : "Payment Method Transaction Logs",
    "description" : ""
  }, {
    "name" : "Payment Methods",
    "description" : ""
  }, {
    "name" : "Payment Transaction Logs",
    "description" : ""
  }, {
    "name" : "Payments",
    "description" : ""
  }, {
    "name" : "Product Features",
    "description" : ""
  }, {
    "name" : "Product Rate Plan Charge Tiers",
    "description" : ""
  }, {
    "name" : "Product Rate Plan Charges",
    "description" : ""
  }, {
    "name" : "Product Rate Plans",
    "description" : ""
  }, {
    "name" : "Products",
    "description" : ""
  }, {
    "name" : "Quotes Document",
    "description" : ""
  }, {
    "name" : "Rate Plan Charge Tiers",
    "description" : ""
  }, {
    "name" : "Rate Plan Charges",
    "description" : ""
  }, {
    "name" : "Rate Plans",
    "description" : ""
  }, {
    "name" : "Refund Invoice Payments",
    "description" : ""
  }, {
    "name" : "Refund Transaction Logs",
    "description" : ""
  }, {
    "name" : "Refunds",
    "description" : ""
  }, {
    "name" : "Revenue Events",
    "description" : ""
  }, {
    "name" : "Revenue Items",
    "description" : ""
  }, {
    "name" : "Revenue Rules",
    "description" : ""
  }, {
    "name" : "Revenue Schedules",
    "description" : ""
  }, {
    "name" : "RSA Signatures",
    "description" : ""
  }, {
    "name" : "Settings",
    "description" : ""
  }, {
    "name" : "Subscription Product Features",
    "description" : ""
  }, {
    "name" : "Subscriptions",
    "description" : ""
  }, {
    "name" : "Summary Journal Entries",
    "description" : ""
  }, {
    "name" : "Taxation Items",
    "description" : ""
  }, {
    "name" : "Transactions",
    "description" : ""
  }, {
    "name" : "Unit Of Measure",
    "description" : ""
  }, {
    "name" : "Usage",
    "description" : ""
  } ],
  "schemes" : [ "https" ],
  "consumes" : [ "application/json; charset=utf-8" ],
  "produces" : [ "application/json; charset=utf-8" ],
  "paths" : {
    "/accounting-codes" : {
      "get" : {
        "tags" : [ "Accounting Codes" ],
        "summary" : "Get all accounting codes",
        "description" : "This reference describes how to query all accounting codes in your chart of accounts through the REST API.",
        "operationId" : "GETAccountingCodes",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GETAccountingCodesType"
            },
            "examples" : {
              "application/json" : {
                "accountingCodes" : [ {
                  "id" : "e20b0747478025a10147816ba1c20097",
                  "name" : "Accounts Receivable",
                  "type" : "AccountsReceivable",
                  "glAccountName" : null,
                  "glAccountNumber" : null,
                  "notes" : null,
                  "category" : "Assets",
                  "status" : "Active",
                  "CustomField__c" : null,
                  "createdOn" : "2014-07-29 02:20:20",
                  "createdBy" : "e20b074746ec48f40147140f51e30a1a",
                  "updatedOn" : "2014-07-29 02:20:20",
                  "updatedBy" : "e20b074746ec48f40147140f51e30a1a"
                }, {
                  "id" : "e20b0747478025a10147816ba21900a0",
                  "name" : "Discounts",
                  "type" : "SalesDiscounts",
                  "glAccountName" : null,
                  "glAccountNumber" : null,
                  "notes" : null,
                  "category" : "Revenue",
                  "status" : "Inactive",
                  "CustomField__c" : null,
                  "createdOn" : "2014-07-29 02:20:20",
                  "createdBy" : "e20b074746ec48f40147140f51e30a1a",
                  "updatedOn" : "2014-09-27 22:11:07",
                  "updatedBy" : "e20b074746ec48f40147140f51e30a1a"
                } ],
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/accounting-codes\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/accounting-codes');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/accounting-codes\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/accounting-codes\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/accounting-codes\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/accounting-codes\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "post" : {
        "tags" : [ "Accounting Codes" ],
        "summary" : "Create accounting code",
        "description" : "This reference describes how to create a new accounting code through the REST API. \nThe accounting code will be active as soon as it has been created.\n\n## Prerequisites\n  If you have Zuora Finance enabled on your tenant, you must have the  Configure Accounting Codes permission. \n",
        "operationId" : "POST_AccountingCode",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/POSTAccountingCodeType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/POSTAccountingCodeResponseType"
            },
            "examples" : {
              "application/json" : {
                "id" : "8a8081ae547aac1e01547efb61f20140",
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"name\": \"CASH\", \n    \"type\": \"Cash\"\n}' \"https://rest.zuora.com/v1/accounting-codes\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/accounting-codes');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"name\": \"CASH\", \n    \"type\": \"Cash\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"name\\\": \\\"CASH\\\", \\n    \\\"type\\\": \\\"Cash\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/accounting-codes\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"name\\\": \\\"CASH\\\", \\n    \\\"type\\\": \\\"Cash\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/accounting-codes\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/accounting-codes\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"name\\\": \\\"CASH\\\", \\n    \\\"type\\\": \\\"Cash\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/accounting-codes\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"name\\\": \\\"CASH\\\", \\n    \\\"type\\\": \\\"Cash\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/accounting-codes/{ac-id}" : {
      "get" : {
        "tags" : [ "Accounting Codes" ],
        "summary" : "Query an accounting code",
        "description" : "This reference describes how to query an accounting code through the REST API.",
        "operationId" : "GETAccountingCodeItem",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ac-id",
          "in" : "path",
          "description" : "ID of the accounting code you want to query.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GETAccountingCodeItemType"
            },
            "examples" : {
              "application/json" : {
                "id" : "8a8081ae547aac1e01547efb61f20140",
                "name" : "CASH",
                "type" : "Cash",
                "glAccountName" : null,
                "glAccountNumber" : null,
                "notes" : null,
                "category" : "Assets",
                "status" : "Active",
                "customField__c" : "customValue",
                "createdOn" : "2016-05-04 01:23:07",
                "createdBy" : "e20b074746ec48f40147140f51e30a1a",
                "updatedOn" : "2016-05-05 20:07:38",
                "updatedBy" : "e20b074746ec48f40147140f51e30a1a",
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/accounting-codes/{ac-id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/accounting-codes/{ac-id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/accounting-codes/{ac-id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/accounting-codes/{ac-id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/accounting-codes/{ac-id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/accounting-codes/{ac-id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "put" : {
        "tags" : [ "Accounting Codes" ],
        "summary" : "Update an accounting code",
        "description" : "This reference describes how to update an existing accounting code through the REST API.\n## Prerequisites\n  If you have Zuora Finance enabled on your tenant, you must have the  Manage Accounting Code permission. \n## Limitations\nYou can only update accounting codes that are not already associated with any transactions.\n",
        "operationId" : "PUT_AccountingCode",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ac-id",
          "in" : "path",
          "description" : "ID of the accounting code you want to update.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PUTAccountingCodeType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CommonResponseType"
            },
            "examples" : {
              "application/json" : {
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X PUT -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"name\": \"CASH\", \n    \"type\": \"Cash\"\n}' \"https://rest.zuora.com/v1/accounting-codes/{ac-id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/accounting-codes/{ac-id}');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"name\": \"CASH\", \n    \"type\": \"Cash\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"name\\\": \\\"CASH\\\", \\n    \\\"type\\\": \\\"Cash\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/accounting-codes/{ac-id}\")\n  .put(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"name\\\": \\\"CASH\\\", \\n    \\\"type\\\": \\\"Cash\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"PUT\", \"/accounting-codes/{ac-id}\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/accounting-codes/{ac-id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"name\\\": \\\"CASH\\\", \\n    \\\"type\\\": \\\"Cash\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/accounting-codes/{ac-id}\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"name\\\": \\\"CASH\\\", \\n    \\\"type\\\": \\\"Cash\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Accounting Codes" ],
        "summary" : "Delete accounting code",
        "description" : "This reference describes how to delete an accounting code through the REST API.\n## Prerequisites\nIf you have Zuora Finance enabled on your tenant, then you must have the Delete Unused Accounting Code permission.\n## Limitations\nYou can only delete accounting codes that have never been associated with any transactions. An accounting code must be deactivated before you can delete it.\n",
        "operationId" : "DELETE_AccountingCode",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ac-id",
          "in" : "path",
          "description" : "ID of the accounting code you want to delete.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CommonResponseType"
            },
            "examples" : {
              "application/json" : {
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/accounting-codes/{ac-id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/accounting-codes/{ac-id}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/accounting-codes/{ac-id}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/accounting-codes/{ac-id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/accounting-codes/{ac-id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/accounting-codes/{ac-id}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/accounting-codes/{ac-id}/activate" : {
      "put" : {
        "tags" : [ "Accounting Codes" ],
        "summary" : "Activate accounting code",
        "description" : "This reference describes how to activate an accounting code through the REST API.\n\nPrerequisites\n-------------\nIf you have Zuora Finance enabled on your tenant, you must have the Manage Accounting Code permission. \n",
        "operationId" : "PUT_ActivateAccountingCode",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ac-id",
          "in" : "path",
          "description" : "ID of the accounting code you want to activate.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CommonResponseType"
            },
            "examples" : {
              "application/json" : {
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X PUT -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{}' \"https://rest.zuora.com/v1/accounting-codes/{ac-id}/activate\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/accounting-codes/{ac-id}/activate');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/accounting-codes/{ac-id}/activate\")\n  .put(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"PUT\", \"/accounting-codes/{ac-id}/activate\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/accounting-codes/{ac-id}/activate\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/accounting-codes/{ac-id}/activate\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/accounting-codes/{ac-id}/deactivate" : {
      "put" : {
        "tags" : [ "Accounting Codes" ],
        "summary" : "Deactivate accounting code",
        "description" : "This reference describes how to deactivate an accounting code through the REST API.\n\n## Prerequisites\nIf you have Zuora Finance enabled on your tenant, you must have the Manage Accounting Code permission.\n## Limitations\nYou can only deactivate accounting codes that are not associated with any transactions. \nYou cannot disable accounting codes of type AccountsReceivable.\n",
        "operationId" : "PUT_DeactivateAccountingCode",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ac-id",
          "in" : "path",
          "description" : "ID of the accounting code you want to deactivate.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CommonResponseType"
            },
            "examples" : {
              "application/json" : {
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X PUT -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{}' \"https://rest.zuora.com/v1/accounting-codes/{ac-id}/deactivate\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/accounting-codes/{ac-id}/deactivate');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/accounting-codes/{ac-id}/deactivate\")\n  .put(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"PUT\", \"/accounting-codes/{ac-id}/deactivate\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/accounting-codes/{ac-id}/deactivate\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/accounting-codes/{ac-id}/deactivate\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/accounting-periods" : {
      "get" : {
        "tags" : [ "Accounting Periods" ],
        "summary" : "Get all accounting periods",
        "description" : "Retrieves all accounting periods on your tenant.",
        "operationId" : "GETAccountingPeriods",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GETAccountingPeriodsType"
            },
            "examples" : {
              "application/json" : {
                "accountingPeriods" : [ {
                  "id" : "8a8081ae5374904f01538338b66e1005",
                  "name" : "Mar 2016",
                  "startDate" : "2016-03-01",
                  "endDate" : "2016-03-31",
                  "status" : "Open",
                  "runTrialBalanceStatus" : "Error",
                  "runTrialBalanceStart" : "2016-03-16 23:25:22",
                  "runTrialBalanceEnd" : null,
                  "runTrialBalanceErrorMessage" : "Error creating the trial balance: exchange rate from USD to GBP on 08/03/2015 is not available.  Please import the rate and run trial balance again.",
                  "fiscalYear" : 2016,
                  "notes" : "",
                  "fileIds" : {
                    "unprocessedChargesFileId" : null,
                    "accountsReceivableInvoiceAgingDetailExportFileId" : "8a8081ae5374904f01538340273013f3",
                    "accountsReceivableAccountAgingDetailExportFileId" : "8a8081ae5374904f01538340274a13f4",
                    "revenueDetailExcelFileId" : "8a8081ae5374904f0153834032e41417",
                    "revenueDetailCsvFileId" : "8a8081ae5374904f0153834033221418",
                    "arRollForwardDetailExportFileId" : null,
                    "fxRealizedGainAndLossDetailExportFileId" : null,
                    "fxUnrealizedGainAndLossDetailExportFileId" : null
                  },
                  "createdOn" : "2016-03-16 23:17:25",
                  "createdBy" : "e20b074746ec48f40147140f51e30a1a",
                  "updatedOn" : "2016-03-16 23:25:22",
                  "updatedBy" : "e20b074746ec48f40147140f51e30a1a"
                }, {
                  "id" : "8a8081ae5374904f0153833918af1007",
                  "name" : "Apr 2016",
                  "startDate" : "2016-04-01",
                  "endDate" : "2016-04-30",
                  "status" : "Open",
                  "runTrialBalanceStatus" : "Error",
                  "runTrialBalanceStart" : "2016-03-16 23:23:40",
                  "runTrialBalanceEnd" : null,
                  "runTrialBalanceErrorMessage" : null,
                  "fiscalYear" : 2016,
                  "notes" : "",
                  "fileIds" : {
                    "unprocessedChargesFileId" : null,
                    "accountsReceivableInvoiceAgingDetailExportFileId" : "8a8081ae5374904f0153833e9a651363",
                    "accountsReceivableAccountAgingDetailExportFileId" : "8a8081ae5374904f0153833e9a7a1364",
                    "revenueDetailExcelFileId" : "8a8081ae5374904f0153833ea2c813ae",
                    "revenueDetailCsvFileId" : "8a8081ae5374904f0153833ea2d613af",
                    "arRollForwardDetailExportFileId" : null,
                    "fxRealizedGainAndLossDetailExportFileId" : null,
                    "fxUnrealizedGainAndLossDetailExportFileId" : null
                  },
                  "createdOn" : "2016-03-16 23:17:50",
                  "createdBy" : "e20b074746ec48f40147140f51e30a1a",
                  "updatedOn" : "2016-03-16 23:23:40",
                  "updatedBy" : "e20b074746ec48f40147140f51e30a1a"
                }, {
                  "id" : "8a8081ae5374904f0153833e4590132d",
                  "name" : "May 2016",
                  "startDate" : "2016-05-01",
                  "endDate" : "2016-05-31",
                  "status" : "Open",
                  "runTrialBalanceStatus" : "Error",
                  "runTrialBalanceStart" : "2016-05-18 01:42:30",
                  "runTrialBalanceEnd" : null,
                  "runTrialBalanceErrorMessage" : null,
                  "fiscalYear" : 2016,
                  "notes" : "",
                  "fileIds" : {
                    "unprocessedChargesFileId" : null,
                    "accountsReceivableInvoiceAgingDetailExportFileId" : null,
                    "accountsReceivableAccountAgingDetailExportFileId" : null,
                    "revenueDetailExcelFileId" : "8a8081ae54c2eabb0154c307e27e0033",
                    "revenueDetailCsvFileId" : "8a8081ae54c2eabb0154c307e2920034",
                    "arRollForwardDetailExportFileId" : null,
                    "fxRealizedGainAndLossDetailExportFileId" : null,
                    "fxUnrealizedGainAndLossDetailExportFileId" : null
                  },
                  "createdOn" : "2016-03-16 23:23:29",
                  "createdBy" : "e20b074746ec48f40147140f51e30a1a",
                  "updatedOn" : "2016-05-18 01:42:30",
                  "updatedBy" : "e20b074746ec48f40147140f51e30a1a"
                }, {
                  "id" : "e20b0747478025a1014780e489a60002",
                  "name" : "Open-Ended",
                  "startDate" : "2016-06-01",
                  "endDate" : null,
                  "status" : "Open",
                  "runTrialBalanceStatus" : "Pending",
                  "runTrialBalanceStart" : null,
                  "runTrialBalanceEnd" : null,
                  "runTrialBalanceErrorMessage" : null,
                  "fiscalYear" : 0,
                  "notes" : null,
                  "fileIds" : {
                    "unprocessedChargesFileId" : null,
                    "accountsReceivableInvoiceAgingDetailExportFileId" : null,
                    "accountsReceivableAccountAgingDetailExportFileId" : null,
                    "revenueDetailExcelFileId" : null,
                    "revenueDetailCsvFileId" : null,
                    "arRollForwardDetailExportFileId" : null,
                    "fxRealizedGainAndLossDetailExportFileId" : null,
                    "fxUnrealizedGainAndLossDetailExportFileId" : null
                  },
                  "createdOn" : "2014-07-28 23:52:46",
                  "createdBy" : "402881e522cf4f9b0122cf5d82860002",
                  "updatedOn" : "2016-03-16 23:23:29",
                  "updatedBy" : "e20b074746ec48f40147140f51e30a1a"
                } ],
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/accounting-periods\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/accounting-periods');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/accounting-periods\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/accounting-periods\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/accounting-periods\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/accounting-periods\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "post" : {
        "tags" : [ "Accounting Periods" ],
        "summary" : "Create accounting period",
        "description" : "Creates an accounting period.\nPrerequisites\n-------------\n* You must have Zuora Finance enabled on your tenant.\n* You must have the Create Accounting Period user permission.\n\nLimitations\n-----------\n* When creating the first accounting period on your tenant, the start date must be equal to or earlier than the date of the earliest transaction on the tenant.\n* Start and end dates of accounting periods must be contiguous. For example, if one accounting period ends on January 31, the next period must start on February 1.\n* If you have the Revenue Recognition Package and have enabled the \"Monthly recognition over time\" revenue recognition model, the accounting period start date and end date must be on the first day and last day of the month, respectively. Note that the start and end dates do not necessarily have to be in the same month.",
        "operationId" : "POST_AccountingPeriod",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/POSTAccountingPeriodType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/POSTAccountingPeriodResponseType"
            },
            "examples" : {
              "application/json" : {
                "id" : "7b7181ae547aac1e01547efb61f20162",
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"endDate\": \"2016-06-30\", \n    \"fiscalYear\": 2016, \n    \"name\": \"Jun 2016\", \n    \"notes\": \"optional notes here\", \n    \"startDate\": \"2016-06-01\"\n}' \"https://rest.zuora.com/v1/accounting-periods\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/accounting-periods');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"endDate\": \"2016-06-30\", \n    \"fiscalYear\": 2016, \n    \"name\": \"Jun 2016\", \n    \"notes\": \"optional notes here\", \n    \"startDate\": \"2016-06-01\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"endDate\\\": \\\"2016-06-30\\\", \\n    \\\"fiscalYear\\\": 2016, \\n    \\\"name\\\": \\\"Jun 2016\\\", \\n    \\\"notes\\\": \\\"optional notes here\\\", \\n    \\\"startDate\\\": \\\"2016-06-01\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/accounting-periods\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"endDate\\\": \\\"2016-06-30\\\", \\n    \\\"fiscalYear\\\": 2016, \\n    \\\"name\\\": \\\"Jun 2016\\\", \\n    \\\"notes\\\": \\\"optional notes here\\\", \\n    \\\"startDate\\\": \\\"2016-06-01\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/accounting-periods\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/accounting-periods\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"endDate\\\": \\\"2016-06-30\\\", \\n    \\\"fiscalYear\\\": 2016, \\n    \\\"name\\\": \\\"Jun 2016\\\", \\n    \\\"notes\\\": \\\"optional notes here\\\", \\n    \\\"startDate\\\": \\\"2016-06-01\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/accounting-periods\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"endDate\\\": \\\"2016-06-30\\\", \\n    \\\"fiscalYear\\\": 2016, \\n    \\\"name\\\": \\\"Jun 2016\\\", \\n    \\\"notes\\\": \\\"optional notes here\\\", \\n    \\\"startDate\\\": \\\"2016-06-01\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/accounting-periods/{ap-id}" : {
      "get" : {
        "tags" : [ "Accounting Periods" ],
        "summary" : "Get accounting period",
        "description" : "Retrieves an accounting period.\nPrerequisites\n-------------\n\nYou must have Zuora Finance enabled on your tenant.\n",
        "operationId" : "GET_AccountingPeriod",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ap-id",
          "in" : "path",
          "description" : "ID of the accounting period you want to get.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GETAccountingPeriodType"
            },
            "examples" : {
              "application/json" : {
                "id" : "e20b074749d2a38b0149eac2e9550aa9",
                "name" : "Oct 2014",
                "startDate" : "2014-10-01",
                "endDate" : "2014-10-31",
                "status" : "Closed",
                "runTrialBalanceStatus" : "Completed",
                "runTrialBalanceStart" : "2015-09-28 00:53:13",
                "runTrialBalanceEnd" : "2015-09-28 00:53:36",
                "runTrialBalanceErrorMessage" : null,
                "fiscalYear" : 2014,
                "notes" : "",
                "fileIds" : {
                  "unprocessedChargesFileId" : null,
                  "accountsReceivableInvoiceAgingDetailExportFileId" : "8a8081ae5002967c015012f122f10913",
                  "accountsReceivableAccountAgingDetailExportFileId" : "8a8081ae5002967c015012f1230e0914",
                  "revenueDetailExcelFileId" : "8a8081ae5002967c015012f129870925",
                  "revenueDetailCsvFileId" : "8a8081ae5002967c015012f129a10926",
                  "arRollForwardDetailExportFileId" : "8a8081ae5002967c015012f15d7b09e2",
                  "fxRealizedGainAndLossDetailExportFileId" : "8a8081ae5002967c015012f151a609ba",
                  "fxUnrealizedGainAndLossDetailExportFileId" : "8a8081ae5002967c015012f150b509b8"
                },
                "createdOn" : "2014-11-25 22:21:22",
                "createdBy" : "e20b074746ec48f40147140f51e30a1a",
                "updatedOn" : "2015-09-28 00:53:13",
                "updatedBy" : "e20b074746ec48f40147140f51e30a1a",
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/accounting-periods/{ap-id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/accounting-periods/{ap-id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/accounting-periods/{ap-id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/accounting-periods/{ap-id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/accounting-periods/{ap-id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/accounting-periods/{ap-id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "put" : {
        "tags" : [ "Accounting Periods" ],
        "summary" : "Update accounting period",
        "description" : "\nUpdates an accounting period.\n\nPrerequisites\n-------------\n\n* You must have Zuora Finance enabled on your tenant.\n\n* You must have the Create Accounting Period user permission. See [Finance Roles](https://knowledgecenter.zuora.com/CF_Users_and_Administrators/A_Administrator_Settings/User_Roles/f_Finance_Roles).\n\nLimitations\n-----------\n\n* You can update the start date of only the earliest accounting period on your tenant. You cannot update the start date of later periods.\n\n* If you update the earliest accounting period, the start date must be equal to or earlier than the date of the earliest transaction on the tenant.\n\n* Start and end dates of accounting periods must be contiguous. For example, if one accounting period ends on January 31, the next period must start on February 1.\n\n* If you have the Revenue Recognition Package and have enabled the \"Monthly recognition over time\" revenue recognition model, the accounting period start date and end date must be on the first day and last day of the month, respectively. Note that the start and end dates do not necessarily have to be in the same month.\n\n* You cannot update the start date or end date of an accounting period if:\n  * Any revenue has been distributed into the period.\n  * The period has any active journal entries.\n",
        "operationId" : "PUT_UpdateAccountingPeriod",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ap-id",
          "in" : "path",
          "description" : "ID of the accounting period you want to update.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PUTAccountingPeriodType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CommonResponseType"
            },
            "examples" : {
              "application/json" : {
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X PUT -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"endDate\": \"2016-01-31\", \n    \"fiscalYear\": 2016, \n    \"name\": \"Jan 2016\", \n    \"startDate\": \"2016-01-01\"\n}' \"https://rest.zuora.com/v1/accounting-periods/{ap-id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/accounting-periods/{ap-id}');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"endDate\": \"2016-01-31\", \n    \"fiscalYear\": 2016, \n    \"name\": \"Jan 2016\", \n    \"startDate\": \"2016-01-01\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"endDate\\\": \\\"2016-01-31\\\", \\n    \\\"fiscalYear\\\": 2016, \\n    \\\"name\\\": \\\"Jan 2016\\\", \\n    \\\"startDate\\\": \\\"2016-01-01\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/accounting-periods/{ap-id}\")\n  .put(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"endDate\\\": \\\"2016-01-31\\\", \\n    \\\"fiscalYear\\\": 2016, \\n    \\\"name\\\": \\\"Jan 2016\\\", \\n    \\\"startDate\\\": \\\"2016-01-01\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"PUT\", \"/accounting-periods/{ap-id}\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/accounting-periods/{ap-id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"endDate\\\": \\\"2016-01-31\\\", \\n    \\\"fiscalYear\\\": 2016, \\n    \\\"name\\\": \\\"Jan 2016\\\", \\n    \\\"startDate\\\": \\\"2016-01-01\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/accounting-periods/{ap-id}\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"endDate\\\": \\\"2016-01-31\\\", \\n    \\\"fiscalYear\\\": 2016, \\n    \\\"name\\\": \\\"Jan 2016\\\", \\n    \\\"startDate\\\": \\\"2016-01-01\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Accounting Periods" ],
        "summary" : "Delete accounting period",
        "description" : "\nDeletes an accounting period.\n\nPrerequisites\n-------------\n\n * You must have Zuora Finance enabled on your tenant.\n\n * You must have the Delete Accounting Period user permission. See [Finance Roles](https://knowledgecenter.zuora.com/CF_Users_and_Administrators/A_Administrator_Settings/User_Roles/f_Finance_Roles).\n\n\nLimitations\n-----------\n\nThe accounting period to be deleted:\n\n* Must be the most recent accounting period\n\n* Must be an open accounting period\n\n* Must have no revenue distributed into it\n\n* Must not have any active journal entries\n\n* Must not be the open-ended accounting period\n\n* Must not be in the process of running a trial balance\n",
        "operationId" : "DELETE_AccountingPeriod",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ap-id",
          "in" : "path",
          "description" : "ID of the accounting period you want to delete.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CommonResponseType"
            },
            "examples" : {
              "application/json" : {
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/accounting-periods/{ap-id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/accounting-periods/{ap-id}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/accounting-periods/{ap-id}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/accounting-periods/{ap-id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/accounting-periods/{ap-id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/accounting-periods/{ap-id}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/accounting-periods/{ap-id}/close" : {
      "put" : {
        "tags" : [ "Accounting Periods" ],
        "summary" : "Close accounting period",
        "description" : "Close an accounting period by accounting period ID.\n\nPrerequisites\n-------------\nYou must have Zuora Finance enabled on your tenant. You must have the Manage Close Process and Run Trial Balance user permissions.\n\nLimitations\n-----------\n* The accounting period cannot already be closed.\n* The accounting period cannot be in the process of running a trial balance.\n* All earlier accounting periods must be closed.\n* There must be no required action items for the accounting period. See Reconcile Transactions Before Closing an Accounting Period for more information.\n\nNotes\n-----\nWhen you close an accounting period in Zuora, a trial balance is automatically run for that period. A successful response means only that the accounting period is now closed, but does not mean that the trial balance has successfully completed.",
        "operationId" : "PUT_CloseAccountingPeriod",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ap-id",
          "in" : "path",
          "description" : "ID of the accounting period you want to close.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CommonResponseType"
            },
            "examples" : {
              "application/json" : {
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X PUT -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{}' \"https://rest.zuora.com/v1/accounting-periods/{ap-id}/close\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/accounting-periods/{ap-id}/close');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/accounting-periods/{ap-id}/close\")\n  .put(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"PUT\", \"/accounting-periods/{ap-id}/close\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/accounting-periods/{ap-id}/close\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/accounting-periods/{ap-id}/close\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/accounting-periods/{ap-id}/pending-close" : {
      "put" : {
        "tags" : [ "Accounting Periods" ],
        "summary" : "Set accounting period to pending close",
        "description" : "Sets an accounting period to pending close.\n\n\nPrerequisites\n-------------\n\n* You must have Zuora Finance enabled on your tenant.\n* You must have the Manage Close Process and Run Trial Balance user permissions.\n\n            \nLimitations \n -----------\n \n * The accounting period cannot be closed or pending close.\n \n * The accounting period cannot be in the process of running a trial balance.\n \n * All earlier accounting periods must be closed.\n \n \nNotes\n-----\nWhen you set an accounting period to pending close in Zuora, a trial balance is automatically run for that period. A response of `{ \"success\": true }`  means only that the accounting period status is now pending close, but does not mean that the trial balance has successfully completed. You can use the Get Accounting Period REST API call to view details about the outcome of the trial balance.\n",
        "operationId" : "PUT_PendingCloseAccountingPeriod",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ap-id",
          "in" : "path",
          "description" : "ID of the accounting period you want to set to pending close.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CommonResponseType"
            },
            "examples" : {
              "application/json" : {
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X PUT -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{}' \"https://rest.zuora.com/v1/accounting-periods/{ap-id}/pending-close\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/accounting-periods/{ap-id}/pending-close');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/accounting-periods/{ap-id}/pending-close\")\n  .put(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"PUT\", \"/accounting-periods/{ap-id}/pending-close\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/accounting-periods/{ap-id}/pending-close\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/accounting-periods/{ap-id}/pending-close\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/accounting-periods/{ap-id}/reopen" : {
      "put" : {
        "tags" : [ "Accounting Periods" ],
        "summary" : "Re-open accounting period",
        "description" : "Re-opens an accounting period.\nPrerequisites\n-------------\n* You must have Zuora Finance enabled on your tenant.\n* You must have the Manage Close Process and Run Trial Balance user permissions.\n\nLimitations\n-----------\n* The accounting period must be closed or pending close.\n* You can only re-open an accounting period that is immediately previous to an open period.",
        "operationId" : "PUT_ReopenAccountingPeriod",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ap-id",
          "in" : "path",
          "description" : "ID of the accounting period that you want to re-open.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CommonResponseType"
            },
            "examples" : {
              "application/json" : {
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X PUT -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{}' \"https://rest.zuora.com/v1/accounting-periods/{ap-id}/reopen\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/accounting-periods/{ap-id}/reopen');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/accounting-periods/{ap-id}/reopen\")\n  .put(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"PUT\", \"/accounting-periods/{ap-id}/reopen\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/accounting-periods/{ap-id}/reopen\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/accounting-periods/{ap-id}/reopen\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/accounting-periods/{ap-id}/run-trial-balance" : {
      "put" : {
        "tags" : [ "Accounting Periods" ],
        "summary" : "Run trial balance",
        "description" : "Runs the trial balance for an accounting period. \n\nPrerequisites\n-------------\n\n* You must have Zuora Finance enabled on your tenant.\n\n* You must have the Manage Close Process and Run Trial Balance user permissions. See [Finance Roles](https://knowledgecenter.zuora.com/CF_Users_and_Administrators/A_Administrator_Settings/User_Roles/f_Finance_Roles).\n\n          \nLimitations \n-----------\n \n * The accounting period must be open.\n \n * The accounting period cannot already be in the process of running a trial balance.\n \nNotes\n-----\nThe trial balance is run asynchronously. A response of `{ \"success\": true }` means only that the trial balance has started processing, but does not mean that the trial balance has successfully completed. You can use the [Get Accounting Period](https://knowledgecenter.zuora.com/DC_Developers/REST_API/B_REST_API_reference/Accounting_Periods/Get_Accounting_Period) REST API call to view details about the outcome of the trial balance.\n",
        "operationId" : "PUT_RunTrialBalance",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ap-id",
          "in" : "path",
          "description" : "ID of the accounting period for which you want to run a trial balance.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CommonResponseType"
            },
            "examples" : {
              "application/json" : {
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X PUT -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{}' \"https://rest.zuora.com/v1/accounting-periods/{ap-id}/run-trial-balance\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/accounting-periods/{ap-id}/run-trial-balance');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/accounting-periods/{ap-id}/run-trial-balance\")\n  .put(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"PUT\", \"/accounting-periods/{ap-id}/run-trial-balance\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/accounting-periods/{ap-id}/run-trial-balance\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/accounting-periods/{ap-id}/run-trial-balance\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/accounts" : {
      "post" : {
        "tags" : [ "Accounts" ],
        "summary" : "Create account",
        "description" : "This REST API reference describes how to create a customer account with a credit-card payment method, a bill-to contact, and an optional sold-to contact. Request and response field descriptions and sample code are provided. Use this method to optionally create a subscription, invoice for that subscription, and collect payment through the default payment method. The transaction is atomic; if any part fails for any reason, the entire transaction is rolled back.\n\nThis API call is CORS Enabled, so you can use client-side Javascript to invoke the call. \n\n## Notes\n1. The account is created in active status.  \n2. The request must provide either a **creditCard** structure or the **hpmCreditCardPaymentMethodId** field (but not both). The one provided becomes the default payment method for this account. If the credit card information is declined or can't be verified, then the account is not created.\n3. Customer accounts created with this call are automatically be set to Auto Pay.\n4. If either the **workEmail** or **personalEmail** are specified, then the account's email delivery preference is automatically set to `true`. (In that case, emails go to the **workEmail** address, if it exists, or else the **personalEmail**.) If neither field is specified, the email delivery preference is automatically set to `false`.\n\n## Defaults for customerAcceptanceDate and serviceActivationDate\nDefault values for **customerAcceptanceDate** and **serviceActivationDate** are set as follows.\n\n|        | serviceActivationDate(SA) specified          | serviceActivationDate (SA) NOT specified  |\n| ------------- |:-------------:| -----:|\n| customerAcceptanceDate (CA) specified      | SA uses value in the request call; CA uses value in the request call| CA uses value in the request call;SA uses CE as default |\n| customerAcceptanceDate (CA) NOT specified      | SA uses value in the request call; CA uses SA as default |   SA and CA use CE as default |\n",
        "operationId" : "POST_Account",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/POSTAccountType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/POSTAccountResponseType"
            },
            "examples" : {
              "application/json" : {
                "name" : "Zuora Test Account",
                "currency" : "USD",
                "notes" : "This account is for demo purposes.",
                "billCycleDay" : 0,
                "autoPay" : false,
                "paymentTerm" : "Due Upon Receipt",
                "billToContact" : {
                  "address1" : "1051 E Hillsdale Blvd",
                  "city" : "Foster City",
                  "country" : "United States",
                  "firstName" : "John",
                  "lastName" : "Smith",
                  "zipCode" : "94404",
                  "state" : "CA",
                  "workEmail" : "john.smith@test.com"
                },
                "hpmCreditCardPaymentMethodId" : "2c92c0f93cf64d94013cfe2d20db61a7",
                "subscription" : {
                  "termType" : "TERMED",
                  "initialTerm" : 12,
                  "renewalTerm" : 12,
                  "autoRenew" : true,
                  "notes" : "This is a trial subscription for POST account demo.",
                  "subscribeToRatePlans" : [ {
                    "productRatePlanId" : "2c92c0f94ac8307f014ae5d3d1d469e2",
                    "chargeOverrides" : [ {
                      "productRatePlanChargeId" : "2c92c0f94ac8307f014ae5d4a5156b28",
                      "price" : 1000
                    }, {
                      "productRatePlanChargeId" : "2c92c0f94ac8307f014ae5dbe2947851",
                      "price" : 1000
                    } ]
                  }, {
                    "productRatePlanId" : "2c92c0f93cf64d94013d027681560341",
                    "chargeOverrides" : [ {
                      "productRatePlanChargeId" : "2c92c0f83cf64298013d027725a67b7b",
                      "price" : 1000
                    } ]
                  } ],
                  "contractEffectiveDate" : "2016-01-01"
                },
                "invoice" : true,
                "collect" : false
              }
            }
          }
        }
      }
    },
    "/accounts/{account-key}" : {
      "get" : {
        "tags" : [ "Accounts" ],
        "summary" : "Get account",
        "description" : "This REST API reference describes how to retrieve basic information about a customer account.\n\nThis REST call is a quick retrieval that doesn't include the account's subscriptions, invoices, payments, or usage details. Use Get account summary to get more detailed information about an account.\n",
        "operationId" : "GET_Account",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "account-key",
          "in" : "path",
          "description" : "Account number or account ID.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GETAccountType"
            },
            "examples" : {
              "application/json" : {
                "basicInfo" : {
                  "id" : "402892c74c9193cd014c91d35b0a0132",
                  "name" : "Test",
                  "accountNumber" : "A00000001",
                  "notes" : "",
                  "status" : "Active",
                  "crmId" : "",
                  "batch" : "Batch1",
                  "invoiceTemplateId" : null,
                  "communicationProfileId" : "303d186840e611df817c002185d714e1"
                },
                "billingAndPayment" : {
                  "billCycleDay" : 1,
                  "currency" : "USD",
                  "paymentTerm" : "Net 30",
                  "paymentGateway" : "TestGateway"
                },
                "metrics" : {
                  "balance" : 0,
                  "totalInvoiceBalance" : 0,
                  "creditBalance" : 0,
                  "contractedMrr" : -900
                },
                "billToContact" : {
                  "address1" : "",
                  "address2" : "",
                  "city" : "",
                  "country" : null,
                  "county" : null,
                  "fax" : "",
                  "firstName" : "Test",
                  "homePhone" : "",
                  "lastName" : "Test",
                  "mobilePhone" : "",
                  "nickname" : "",
                  "otherPhone" : "",
                  "otherPhoneType" : null,
                  "personalEmail" : "",
                  "state" : "",
                  "taxRegion" : null,
                  "workEmail" : "Test@zuora.com",
                  "workPhone" : "",
                  "zipCode" : ""
                },
                "soldToContact" : {
                  "address1" : "",
                  "address2" : "",
                  "city" : "",
                  "country" : null,
                  "county" : null,
                  "fax" : "",
                  "firstName" : "Test",
                  "homePhone" : "",
                  "lastName" : "Test",
                  "mobilePhone" : "",
                  "nickname" : "",
                  "otherPhone" : "",
                  "otherPhoneType" : null,
                  "personalEmail" : "",
                  "state" : "",
                  "taxRegion" : null,
                  "workEmail" : "Test@zuora.com",
                  "workPhone" : "",
                  "zipCode" : ""
                },
                "success" : true
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Accounts" ],
        "summary" : "Update account",
        "description" : "This REST API reference describes how to update a customer account by specifying the account-key.\n\n## Notes\n1. Only the fields to be changed should be specified.  Any field that's not included in the request body will not be changed.\n2. If an empty field is submitted with this call, the corresponding field in the account is emptied.\n3. Email addresses: If no email addresses are specified, no change is made to the email addresses on file or to the email delivery preference. If either the **personalEmail** or **workEmail** is specified (or both), the system updates the corresponding email address(es) on file and the email delivery preference is set to `true`. (In that case, emails go to the **workEmail** address, if it exists, or else the **personalEmail**.) On the other hand, if as a result of this call both of the email addresses for the account are empty, the email delivery preference is set to `false`.\n4. The bill-to and sold-to contacts are separate data entities; updating either one does not update the other.\n",
        "operationId" : "PUT_Account",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "account-key",
          "in" : "path",
          "description" : "Account number or account ID.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PUTAccountType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CommonResponseType"
            },
            "examples" : {
              "application/json" : {
                "success" : true
              }
            }
          }
        }
      }
    },
    "/accounts/{account-key}/summary" : {
      "get" : {
        "tags" : [ "Accounts" ],
        "summary" : "Get account summary",
        "description" : "This REST API reference describes how to retrieve detailed information about the specified customer account.\n\nThe response includes everything retrieved with the Get basic account information call, plus a summary of the account's subscriptions, invoices, payments, and usage for the last six months.\n\n## Notes \nReturns only the six most recent subscriptions based on the subscription updatedDate. Within those subscriptions, there may be many rate plans and many rate plan charges. These items are subject to the maximum limit on the array size. \n",
        "operationId" : "GET_AccountSummary",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "account-key",
          "in" : "path",
          "description" : "Account number or account ID.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GETAccountSummaryType"
            },
            "examples" : {
              "application/json" : {
                "payments" : [ {
                  "paidInvoices" : [ {
                    "invoiceNumber" : "INV00000159",
                    "appliedPaymentAmount" : 5.0,
                    "invoiceId" : "2c92a09539190dbe0139190f42780012"
                  }, {
                    "invoiceNumber" : "INV00000323",
                    "appliedPaymentAmount" : 139722.1,
                    "invoiceId" : "2c92a0953a3fa95d013a407c10a60100"
                  }, {
                    "invoiceNumber" : "INV00000160",
                    "appliedPaymentAmount" : 10521.0,
                    "invoiceId" : "2c92a09739190dc60139194bcf1b0098"
                  } ],
                  "paymentNumber" : "P-00000075",
                  "status" : "Processed",
                  "effectiveDate" : "2013-03-27",
                  "id" : "2c92c8f83dabf9cf013daf3bfa0305a6",
                  "paymentType" : "Electronic"
                }, {
                  "paidInvoices" : [ {
                    "invoiceNumber" : "INV00000159",
                    "appliedPaymentAmount" : 5.0,
                    "invoiceId" : "2c92a09539190dbe0139190f42780012"
                  } ],
                  "paymentNumber" : "P-00000056",
                  "status" : "Processed",
                  "effectiveDate" : "2012-08-11",
                  "id" : "2c92a0f9391832b101391922ad5f049d",
                  "paymentType" : "Electronic"
                } ],
                "invoices" : [ {
                  "amount" : 139722.1,
                  "status" : "Posted",
                  "invoiceNumber" : "INV00000323",
                  "invoiceDate" : "2013-02-11",
                  "balance" : 0.0,
                  "id" : "2c92a0953a3fa95d013a407c10a60100",
                  "dueDate" : "2013-02-11"
                }, {
                  "amount" : 10521.0,
                  "status" : "Posted",
                  "invoiceNumber" : "INV00000160",
                  "invoiceDate" : "2012-08-11",
                  "balance" : 0.0,
                  "id" : "2c92a09739190dc60139194bcf1b0098",
                  "dueDate" : "2012-08-11"
                }, {
                  "amount" : 10.0,
                  "status" : "Posted",
                  "invoiceNumber" : "INV00000159",
                  "invoiceDate" : "2012-08-11",
                  "balance" : 0.0,
                  "id" : "2c92a09539190dbe0139190f42780012",
                  "dueDate" : "2012-08-11"
                } ],
                "usage" : [ {
                  "unitOfMeasure" : "UOM",
                  "quantity" : 10.0,
                  "startDate" : "2012-02"
                }, {
                  "unitOfMeasure" : "UOM",
                  "quantity" : 10.0,
                  "startDate" : "2012-01"
                } ],
                "basicInfo" : {
                  "defaultPaymentMethod" : {
                    "creditCardNumber" : "************1111",
                    "paymentMethodType" : "CreditCard",
                    "creditCardExpirationMonth" : 10,
                    "creditCardExpirationYear" : 2020,
                    "creditCardType" : "Visa",
                    "id" : "2c92c8f83dabf9cf013daef12dd303b0"
                  },
                  "status" : "Active",
                  "lastInvoiceDate" : "2013-02-11",
                  "lastPaymentAmount" : 150248.1,
                  "billCycleDay" : 1,
                  "name" : "subscribeCallYan_1",
                  "balance" : 0.0,
                  "accountNumber" : "A00001115",
                  "id" : "2c92a0f9391832b10139183e277a0042",
                  "dfadsf__c" : null,
                  "currency" : "USD",
                  "lastPaymentDate" : "2013-03-27"
                },
                "soldToContact" : {
                  "fax" : "",
                  "taxRegion" : "",
                  "country" : "United States",
                  "zipCode" : "95135",
                  "county" : "",
                  "lastName" : "Cho",
                  "workEmail" : "work_email@zbcloud.com",
                  "state" : "California",
                  "address2" : "",
                  "address1" : "278 Bridgeton Circle",
                  "firstName" : "Bill",
                  "id" : "2c92a0f9391832b10139183e27940043",
                  "workPhone" : "5555551212",
                  "city" : "San Jose"
                },
                "success" : true,
                "subscriptions" : [ {
                  "termEndDate" : "2014-02-01",
                  "termStartDate" : "2013-02-01",
                  "status" : "Active",
                  "initialTerm" : 12,
                  "autoRenew" : true,
                  "subscriptionNumber" : "A-S00001081",
                  "subscriptionStartDate" : "2013-02-01",
                  "id" : "2c92c8f83dc4f752013dc72c24ee016d",
                  "ratePlans" : [ {
                    "productName" : "Recurring Charge",
                    "ratePlanName" : "QSF_Tier"
                  } ],
                  "termType" : "TERMED",
                  "renewalTerm" : 3
                }, {
                  "termEndDate" : "2014-02-01",
                  "termStartDate" : "2013-02-01",
                  "status" : "Active",
                  "initialTerm" : 12,
                  "autoRenew" : true,
                  "subscriptionNumber" : "A-S00001080",
                  "subscriptionStartDate" : "2013-02-01",
                  "id" : "2c92c8f83dc4f752013dc72bb85c0127",
                  "ratePlans" : [ {
                    "productName" : "Recurring Charge",
                    "ratePlanName" : "QSF_Tier"
                  } ],
                  "termType" : "TERMED",
                  "renewalTerm" : 3
                }, {
                  "termEndDate" : "2014-04-01",
                  "termStartDate" : "2013-12-01",
                  "status" : "Cancelled",
                  "initialTerm" : 10,
                  "autoRenew" : false,
                  "subscriptionNumber" : "A-S00001079",
                  "subscriptionStartDate" : "2013-02-01",
                  "id" : "2c92c8f83dc4f752013dc723fdab00d4",
                  "ratePlans" : [ {
                    "productName" : "Recurring Charge",
                    "ratePlanName" : "QSF_Tier"
                  } ],
                  "termType" : "TERMED",
                  "renewalTerm" : 4
                }, {
                  "termEndDate" : "2012-02-11",
                  "termStartDate" : "2011-02-11",
                  "status" : "Active",
                  "initialTerm" : 12,
                  "autoRenew" : false,
                  "subscriptionNumber" : "A-S00001076",
                  "subscriptionStartDate" : "2011-02-11",
                  "id" : "2c92c8f83db0b4b4013db4717ad000ec",
                  "ratePlans" : [ {
                    "productName" : "Recurring Charge",
                    "ratePlanName" : "Month_PerUnit"
                  }, {
                    "productName" : "Recurring Charge",
                    "ratePlanName" : "Month_PerUnit"
                  } ],
                  "termType" : "TERMED",
                  "renewalTerm" : 3
                }, {
                  "termEndDate" : "2012-02-11",
                  "termStartDate" : "2011-02-11",
                  "status" : "Active",
                  "initialTerm" : 12,
                  "autoRenew" : false,
                  "subscriptionNumber" : "A-S00001075",
                  "subscriptionStartDate" : "2011-02-11",
                  "id" : "2c92c8f83db0b4b4013db3ab6a4d00bc",
                  "ratePlans" : [ {
                    "productName" : "Recurring Charge",
                    "ratePlanName" : "Month_PerUnit"
                  }, {
                    "productName" : "Recurring Charge",
                    "ratePlanName" : "Month_PerUnit"
                  } ],
                  "termType" : "TERMED",
                  "renewalTerm" : 3
                }, {
                  "termEndDate" : "2012-02-11",
                  "termStartDate" : "2011-02-11",
                  "status" : "Active",
                  "initialTerm" : 12,
                  "autoRenew" : false,
                  "subscriptionNumber" : "A-S00001074",
                  "subscriptionStartDate" : "2011-02-11",
                  "id" : "2c92c8f83db0b4b4013db3aa9fbd0090",
                  "ratePlans" : [ {
                    "productName" : "Recurring Charge",
                    "ratePlanName" : "Month_PerUnit"
                  } ],
                  "termType" : "TERMED",
                  "renewalTerm" : 3
                } ],
                "billToContact" : {
                  "fax" : "",
                  "taxRegion" : "",
                  "country" : "United States",
                  "zipCode" : "95135",
                  "county" : "",
                  "lastName" : "Zou",
                  "workEmail" : "work_email@zbcloud.com",
                  "state" : "California",
                  "address2" : "",
                  "address1" : "1400 Bridge Pkwy",
                  "firstName" : "Cheng",
                  "id" : "2c92a0f9391832b10139183e27940043",
                  "workPhone" : "5555551212",
                  "city" : "San Jose"
                }
              }
            }
          }
        }
      }
    },
    "/action/amend" : {
      "post" : {
        "tags" : [ "Actions" ],
        "summary" : "Amend",
        "description" : "\nUse the amend call to change a subscription, such as upgrading the subscription.\n\nThe amend call:\n\n* Supports the Amendment object\n* Is not an asynchronous process\n\n## Limits \n### Objects per Call \nUp to ten Amendment objects.\n\n### System Rate Limits  \n1,000 calls per 10-minute time window per tenant.\n\nIf you approach or exceed this limit, you will receive a 429 error. Multi-threading causes you to approach this limit more quickly.\n\n### Errors \nIf one of your Amendment objects fails in a single amend call, then the entire call fails.\n\n## Required Fields \nThe following fields are always required for this call:\n\n* `Amendment`.`Type`\n* `Amendment`.`Name`\n* `Amendment`.`SubscriptionId`\n",
        "operationId" : "ProxyActionPOSTamend",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "amendRequest",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProxyActionamendRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyActionamendResponse"
            },
            "examples" : {
              "application/json" : {
                "results" : [ {
                  "SubscriptionId" : "2c93808457d787030157e02e27e21eaa",
                  "TotalDeltaTcv" : 360,
                  "AmendmentIds" : [ "2c93808457d787030157e02e27781ea0" ],
                  "TotalDeltaMrr" : 30,
                  "Success" : true
                } ]
              }
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyBadRequestResponse"
            },
            "examples" : {
              "application/json" : {
                "Errors" : [ {
                  "Code" : "INVALID_VALUE",
                  "Message" : "The account number 123xProxy is invalid."
                } ],
                "Success" : false
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"requests\": [\n        {\n            \"AmendOptions\": {\n                \"GenerateInvoice\": false, \n                \"InvoiceProcessingOptions\": {}, \n                \"ProcessPayments\": false\n            }, \n            \"Amendments\": [\n                {\n                    \"ContractEffectiveDate\": \"2016-10-20\", \n                    \"CurrentTerm\": 3, \n                    \"CurrentTermPeriodType\": \"Day\", \n                    \"CustomerAcceptanceDate\": \"2016-10-20\", \n                    \"Description\": \"AM7j4i2rsxb9\", \n                    \"EffectiveDate\": \"2016-10-20\", \n                    \"Name\": \"AM7j4i2rsxb9\", \n                    \"RatePlanData\": {\n                        \"RatePlan\": {\n                            \"ProductRatePlanId\": \"2c93808457d787030157e02e250e1e9a\"\n                        }, \n                        \"RatePlanChargeData\": [\n                            {\n                                \"RatePlanCharge\": {\n                                    \"ProductRatePlanChargeId\": \"2c93808457d787030157e02e26701e9d\"\n                                }\n                            }\n                        ]\n                    }, \n                    \"RenewalSetting\": \"RENEW_TO_EVERGREEN\", \n                    \"RenewalTerm\": 2, \n                    \"RenewalTermPeriodType\": \"Day\", \n                    \"ServiceActivationDate\": \"2016-10-20\", \n                    \"Status\": \"Completed\", \n                    \"SubscriptionId\": \"2c93808457d787030157e02e23911e8d\", \n                    \"TermStartDate\": \"2016-10-20\", \n                    \"TermType\": \"TERMED\", \n                    \"Type\": \"NewProduct\"\n                }\n            ], \n            \"PreviewOptions\": {\n                \"EnablePreviewMode\": false\n            }\n        }\n    ]\n}' \"https://rest.zuora.com/v1/action/amend\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/action/amend');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"requests\": [\n        {\n            \"AmendOptions\": {\n                \"GenerateInvoice\": false, \n                \"InvoiceProcessingOptions\": {}, \n                \"ProcessPayments\": false\n            }, \n            \"Amendments\": [\n                {\n                    \"ContractEffectiveDate\": \"2016-10-20\", \n                    \"CurrentTerm\": 3, \n                    \"CurrentTermPeriodType\": \"Day\", \n                    \"CustomerAcceptanceDate\": \"2016-10-20\", \n                    \"Description\": \"AM7j4i2rsxb9\", \n                    \"EffectiveDate\": \"2016-10-20\", \n                    \"Name\": \"AM7j4i2rsxb9\", \n                    \"RatePlanData\": {\n                        \"RatePlan\": {\n                            \"ProductRatePlanId\": \"2c93808457d787030157e02e250e1e9a\"\n                        }, \n                        \"RatePlanChargeData\": [\n                            {\n                                \"RatePlanCharge\": {\n                                    \"ProductRatePlanChargeId\": \"2c93808457d787030157e02e26701e9d\"\n                                }\n                            }\n                        ]\n                    }, \n                    \"RenewalSetting\": \"RENEW_TO_EVERGREEN\", \n                    \"RenewalTerm\": 2, \n                    \"RenewalTermPeriodType\": \"Day\", \n                    \"ServiceActivationDate\": \"2016-10-20\", \n                    \"Status\": \"Completed\", \n                    \"SubscriptionId\": \"2c93808457d787030157e02e23911e8d\", \n                    \"TermStartDate\": \"2016-10-20\", \n                    \"TermType\": \"TERMED\", \n                    \"Type\": \"NewProduct\"\n                }\n            ], \n            \"PreviewOptions\": {\n                \"EnablePreviewMode\": false\n            }\n        }\n    ]\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"requests\\\": [\\n        {\\n            \\\"AmendOptions\\\": {\\n                \\\"GenerateInvoice\\\": false, \\n                \\\"InvoiceProcessingOptions\\\": {}, \\n                \\\"ProcessPayments\\\": false\\n            }, \\n            \\\"Amendments\\\": [\\n                {\\n                    \\\"ContractEffectiveDate\\\": \\\"2016-10-20\\\", \\n                    \\\"CurrentTerm\\\": 3, \\n                    \\\"CurrentTermPeriodType\\\": \\\"Day\\\", \\n                    \\\"CustomerAcceptanceDate\\\": \\\"2016-10-20\\\", \\n                    \\\"Description\\\": \\\"AM7j4i2rsxb9\\\", \\n                    \\\"EffectiveDate\\\": \\\"2016-10-20\\\", \\n                    \\\"Name\\\": \\\"AM7j4i2rsxb9\\\", \\n                    \\\"RatePlanData\\\": {\\n                        \\\"RatePlan\\\": {\\n                            \\\"ProductRatePlanId\\\": \\\"2c93808457d787030157e02e250e1e9a\\\"\\n                        }, \\n                        \\\"RatePlanChargeData\\\": [\\n                            {\\n                                \\\"RatePlanCharge\\\": {\\n                                    \\\"ProductRatePlanChargeId\\\": \\\"2c93808457d787030157e02e26701e9d\\\"\\n                                }\\n                            }\\n                        ]\\n                    }, \\n                    \\\"RenewalSetting\\\": \\\"RENEW_TO_EVERGREEN\\\", \\n                    \\\"RenewalTerm\\\": 2, \\n                    \\\"RenewalTermPeriodType\\\": \\\"Day\\\", \\n                    \\\"ServiceActivationDate\\\": \\\"2016-10-20\\\", \\n                    \\\"Status\\\": \\\"Completed\\\", \\n                    \\\"SubscriptionId\\\": \\\"2c93808457d787030157e02e23911e8d\\\", \\n                    \\\"TermStartDate\\\": \\\"2016-10-20\\\", \\n                    \\\"TermType\\\": \\\"TERMED\\\", \\n                    \\\"Type\\\": \\\"NewProduct\\\"\\n                }\\n            ], \\n            \\\"PreviewOptions\\\": {\\n                \\\"EnablePreviewMode\\\": false\\n            }\\n        }\\n    ]\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/action/amend\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"requests\\\": [\\n        {\\n            \\\"AmendOptions\\\": {\\n                \\\"GenerateInvoice\\\": false, \\n                \\\"InvoiceProcessingOptions\\\": {}, \\n                \\\"ProcessPayments\\\": false\\n            }, \\n            \\\"Amendments\\\": [\\n                {\\n                    \\\"ContractEffectiveDate\\\": \\\"2016-10-20\\\", \\n                    \\\"CurrentTerm\\\": 3, \\n                    \\\"CurrentTermPeriodType\\\": \\\"Day\\\", \\n                    \\\"CustomerAcceptanceDate\\\": \\\"2016-10-20\\\", \\n                    \\\"Description\\\": \\\"AM7j4i2rsxb9\\\", \\n                    \\\"EffectiveDate\\\": \\\"2016-10-20\\\", \\n                    \\\"Name\\\": \\\"AM7j4i2rsxb9\\\", \\n                    \\\"RatePlanData\\\": {\\n                        \\\"RatePlan\\\": {\\n                            \\\"ProductRatePlanId\\\": \\\"2c93808457d787030157e02e250e1e9a\\\"\\n                        }, \\n                        \\\"RatePlanChargeData\\\": [\\n                            {\\n                                \\\"RatePlanCharge\\\": {\\n                                    \\\"ProductRatePlanChargeId\\\": \\\"2c93808457d787030157e02e26701e9d\\\"\\n                                }\\n                            }\\n                        ]\\n                    }, \\n                    \\\"RenewalSetting\\\": \\\"RENEW_TO_EVERGREEN\\\", \\n                    \\\"RenewalTerm\\\": 2, \\n                    \\\"RenewalTermPeriodType\\\": \\\"Day\\\", \\n                    \\\"ServiceActivationDate\\\": \\\"2016-10-20\\\", \\n                    \\\"Status\\\": \\\"Completed\\\", \\n                    \\\"SubscriptionId\\\": \\\"2c93808457d787030157e02e23911e8d\\\", \\n                    \\\"TermStartDate\\\": \\\"2016-10-20\\\", \\n                    \\\"TermType\\\": \\\"TERMED\\\", \\n                    \\\"Type\\\": \\\"NewProduct\\\"\\n                }\\n            ], \\n            \\\"PreviewOptions\\\": {\\n                \\\"EnablePreviewMode\\\": false\\n            }\\n        }\\n    ]\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/action/amend\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/action/amend\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"requests\\\": [\\n        {\\n            \\\"AmendOptions\\\": {\\n                \\\"GenerateInvoice\\\": false, \\n                \\\"InvoiceProcessingOptions\\\": {}, \\n                \\\"ProcessPayments\\\": false\\n            }, \\n            \\\"Amendments\\\": [\\n                {\\n                    \\\"ContractEffectiveDate\\\": \\\"2016-10-20\\\", \\n                    \\\"CurrentTerm\\\": 3, \\n                    \\\"CurrentTermPeriodType\\\": \\\"Day\\\", \\n                    \\\"CustomerAcceptanceDate\\\": \\\"2016-10-20\\\", \\n                    \\\"Description\\\": \\\"AM7j4i2rsxb9\\\", \\n                    \\\"EffectiveDate\\\": \\\"2016-10-20\\\", \\n                    \\\"Name\\\": \\\"AM7j4i2rsxb9\\\", \\n                    \\\"RatePlanData\\\": {\\n                        \\\"RatePlan\\\": {\\n                            \\\"ProductRatePlanId\\\": \\\"2c93808457d787030157e02e250e1e9a\\\"\\n                        }, \\n                        \\\"RatePlanChargeData\\\": [\\n                            {\\n                                \\\"RatePlanCharge\\\": {\\n                                    \\\"ProductRatePlanChargeId\\\": \\\"2c93808457d787030157e02e26701e9d\\\"\\n                                }\\n                            }\\n                        ]\\n                    }, \\n                    \\\"RenewalSetting\\\": \\\"RENEW_TO_EVERGREEN\\\", \\n                    \\\"RenewalTerm\\\": 2, \\n                    \\\"RenewalTermPeriodType\\\": \\\"Day\\\", \\n                    \\\"ServiceActivationDate\\\": \\\"2016-10-20\\\", \\n                    \\\"Status\\\": \\\"Completed\\\", \\n                    \\\"SubscriptionId\\\": \\\"2c93808457d787030157e02e23911e8d\\\", \\n                    \\\"TermStartDate\\\": \\\"2016-10-20\\\", \\n                    \\\"TermType\\\": \\\"TERMED\\\", \\n                    \\\"Type\\\": \\\"NewProduct\\\"\\n                }\\n            ], \\n            \\\"PreviewOptions\\\": {\\n                \\\"EnablePreviewMode\\\": false\\n            }\\n        }\\n    ]\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/action/amend\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"requests\\\": [\\n        {\\n            \\\"AmendOptions\\\": {\\n                \\\"GenerateInvoice\\\": false, \\n                \\\"InvoiceProcessingOptions\\\": {}, \\n                \\\"ProcessPayments\\\": false\\n            }, \\n            \\\"Amendments\\\": [\\n                {\\n                    \\\"ContractEffectiveDate\\\": \\\"2016-10-20\\\", \\n                    \\\"CurrentTerm\\\": 3, \\n                    \\\"CurrentTermPeriodType\\\": \\\"Day\\\", \\n                    \\\"CustomerAcceptanceDate\\\": \\\"2016-10-20\\\", \\n                    \\\"Description\\\": \\\"AM7j4i2rsxb9\\\", \\n                    \\\"EffectiveDate\\\": \\\"2016-10-20\\\", \\n                    \\\"Name\\\": \\\"AM7j4i2rsxb9\\\", \\n                    \\\"RatePlanData\\\": {\\n                        \\\"RatePlan\\\": {\\n                            \\\"ProductRatePlanId\\\": \\\"2c93808457d787030157e02e250e1e9a\\\"\\n                        }, \\n                        \\\"RatePlanChargeData\\\": [\\n                            {\\n                                \\\"RatePlanCharge\\\": {\\n                                    \\\"ProductRatePlanChargeId\\\": \\\"2c93808457d787030157e02e26701e9d\\\"\\n                                }\\n                            }\\n                        ]\\n                    }, \\n                    \\\"RenewalSetting\\\": \\\"RENEW_TO_EVERGREEN\\\", \\n                    \\\"RenewalTerm\\\": 2, \\n                    \\\"RenewalTermPeriodType\\\": \\\"Day\\\", \\n                    \\\"ServiceActivationDate\\\": \\\"2016-10-20\\\", \\n                    \\\"Status\\\": \\\"Completed\\\", \\n                    \\\"SubscriptionId\\\": \\\"2c93808457d787030157e02e23911e8d\\\", \\n                    \\\"TermStartDate\\\": \\\"2016-10-20\\\", \\n                    \\\"TermType\\\": \\\"TERMED\\\", \\n                    \\\"Type\\\": \\\"NewProduct\\\"\\n                }\\n            ], \\n            \\\"PreviewOptions\\\": {\\n                \\\"EnablePreviewMode\\\": false\\n            }\\n        }\\n    ]\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/action/create" : {
      "post" : {
        "tags" : [ "Actions" ],
        "summary" : "Create",
        "description" : "Use the create call to create one or more objects of a specific type. You can specify different types in different create calls, but each create call must apply to only one type of object.\n\n## Limits\n\n### Objects per Call\n\n50 objects are supported in a single call.\n\n### Rate Limiting\n\nA maximum of 8,000 calls is supported per 10-minute time window per tenant.\n\nIf you approach or exceed this limit, you will receive a 429 error. Multi-threading causes you to approach this limit more quickly.\n\n## How to Use this Call\n\nYou can call create on an array of one or more zObjects. It returns an array of SaveResults, indicating the success or failure of creating each object. The following information applies to this call:\n\n* You cannot pass in null zObjects.\n* You can pass in a maximum of 50 zObjects at a time.\n* All objects must be of the same type.\n\n### Using Create and Subscribe Calls \nBoth the create and subscribe calls will create a new account. However, there are differences between the calls.\n\nUse the create call to create an account independent of a subscription.\n\nUse the subscribe call to create the account with the subscription and the initial payment information.\n",
        "operationId" : "ProxyActionPOSTcreate",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "createRequest",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProxyActioncreateRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyActioncreateResponse"
            },
            "examples" : {
              "application/json" : [ {
                "Success" : true,
                "Id" : "2c93808457d787030157e0324aea5158"
              } ]
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyBadRequestResponse"
            },
            "examples" : {
              "application/json" : {
                "Errors" : [ {
                  "Code" : "INVALID_VALUE",
                  "Message" : "The account number 123xProxy is invalid."
                } ],
                "Success" : false
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"objects\": [\n        {\n            \"AccountingCode\": \"Accounts Receivable\", \n            \"AdjustmentDate\": \"2016-10-20\", \n            \"Amount\": 1.2, \n            \"Comment\": \"this is comments\", \n            \"InvoiceId\": \"2c93808457d787030157e03248c75142\", \n            \"InvoiceNumber\": \"INV00000001\", \n            \"ReferenceId\": \"refid-1476935174845\", \n            \"SourceId\": \"2c93808457d787030157e03248c95144\", \n            \"SourceType\": \"InvoiceDetail\", \n            \"Type\": \"Credit\"\n        }\n    ], \n    \"type\": \"InvoiceItemAdjustment\"\n}' \"https://rest.zuora.com/v1/action/create\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/action/create');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"objects\": [\n        {\n            \"AccountingCode\": \"Accounts Receivable\", \n            \"AdjustmentDate\": \"2016-10-20\", \n            \"Amount\": 1.2, \n            \"Comment\": \"this is comments\", \n            \"InvoiceId\": \"2c93808457d787030157e03248c75142\", \n            \"InvoiceNumber\": \"INV00000001\", \n            \"ReferenceId\": \"refid-1476935174845\", \n            \"SourceId\": \"2c93808457d787030157e03248c95144\", \n            \"SourceType\": \"InvoiceDetail\", \n            \"Type\": \"Credit\"\n        }\n    ], \n    \"type\": \"InvoiceItemAdjustment\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"objects\\\": [\\n        {\\n            \\\"AccountingCode\\\": \\\"Accounts Receivable\\\", \\n            \\\"AdjustmentDate\\\": \\\"2016-10-20\\\", \\n            \\\"Amount\\\": 1.2, \\n            \\\"Comment\\\": \\\"this is comments\\\", \\n            \\\"InvoiceId\\\": \\\"2c93808457d787030157e03248c75142\\\", \\n            \\\"InvoiceNumber\\\": \\\"INV00000001\\\", \\n            \\\"ReferenceId\\\": \\\"refid-1476935174845\\\", \\n            \\\"SourceId\\\": \\\"2c93808457d787030157e03248c95144\\\", \\n            \\\"SourceType\\\": \\\"InvoiceDetail\\\", \\n            \\\"Type\\\": \\\"Credit\\\"\\n        }\\n    ], \\n    \\\"type\\\": \\\"InvoiceItemAdjustment\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/action/create\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"objects\\\": [\\n        {\\n            \\\"AccountingCode\\\": \\\"Accounts Receivable\\\", \\n            \\\"AdjustmentDate\\\": \\\"2016-10-20\\\", \\n            \\\"Amount\\\": 1.2, \\n            \\\"Comment\\\": \\\"this is comments\\\", \\n            \\\"InvoiceId\\\": \\\"2c93808457d787030157e03248c75142\\\", \\n            \\\"InvoiceNumber\\\": \\\"INV00000001\\\", \\n            \\\"ReferenceId\\\": \\\"refid-1476935174845\\\", \\n            \\\"SourceId\\\": \\\"2c93808457d787030157e03248c95144\\\", \\n            \\\"SourceType\\\": \\\"InvoiceDetail\\\", \\n            \\\"Type\\\": \\\"Credit\\\"\\n        }\\n    ], \\n    \\\"type\\\": \\\"InvoiceItemAdjustment\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/action/create\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/action/create\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"objects\\\": [\\n        {\\n            \\\"AccountingCode\\\": \\\"Accounts Receivable\\\", \\n            \\\"AdjustmentDate\\\": \\\"2016-10-20\\\", \\n            \\\"Amount\\\": 1.2, \\n            \\\"Comment\\\": \\\"this is comments\\\", \\n            \\\"InvoiceId\\\": \\\"2c93808457d787030157e03248c75142\\\", \\n            \\\"InvoiceNumber\\\": \\\"INV00000001\\\", \\n            \\\"ReferenceId\\\": \\\"refid-1476935174845\\\", \\n            \\\"SourceId\\\": \\\"2c93808457d787030157e03248c95144\\\", \\n            \\\"SourceType\\\": \\\"InvoiceDetail\\\", \\n            \\\"Type\\\": \\\"Credit\\\"\\n        }\\n    ], \\n    \\\"type\\\": \\\"InvoiceItemAdjustment\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/action/create\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"objects\\\": [\\n        {\\n            \\\"AccountingCode\\\": \\\"Accounts Receivable\\\", \\n            \\\"AdjustmentDate\\\": \\\"2016-10-20\\\", \\n            \\\"Amount\\\": 1.2, \\n            \\\"Comment\\\": \\\"this is comments\\\", \\n            \\\"InvoiceId\\\": \\\"2c93808457d787030157e03248c75142\\\", \\n            \\\"InvoiceNumber\\\": \\\"INV00000001\\\", \\n            \\\"ReferenceId\\\": \\\"refid-1476935174845\\\", \\n            \\\"SourceId\\\": \\\"2c93808457d787030157e03248c95144\\\", \\n            \\\"SourceType\\\": \\\"InvoiceDetail\\\", \\n            \\\"Type\\\": \\\"Credit\\\"\\n        }\\n    ], \\n    \\\"type\\\": \\\"InvoiceItemAdjustment\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/action/delete" : {
      "post" : {
        "tags" : [ "Actions" ],
        "summary" : "Delete",
        "description" : "Deletes one or more objects of the same type. You can specify different types in different delete calls, but each delete call must apply only to one type of object.\n\nThe following information applies to this call:\n\n* You will need to first determine the IDs for the objects you wish to delete.\n* You cannot pass in any null IDs.\n* All objects in a specific delete call must be of the same type.\n\n\n### Objects per Call\n50 objects are supported in a single call.\n\n### Rate Limiting\n1,000 calls are supported per 10-minute time window per tenant.\n\nIf you approach or exceed this limit, you will receive a 429 error. Multi-threading causes you to approach this limit more quickly.\n",
        "operationId" : "ProxyActionPOSTdelete",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "deleteRequest",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProxyActiondeleteRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyActiondeleteResponse"
            },
            "examples" : {
              "application/json" : [ {
                "id" : "2c93808457d787030157e031fcd34e19",
                "success" : true
              } ]
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyBadRequestResponse"
            },
            "examples" : {
              "application/json" : {
                "Errors" : [ {
                  "Code" : "INVALID_VALUE",
                  "Message" : "The account number 123xProxy is invalid."
                } ],
                "Success" : false
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"ids\": [\n        \"2c93808457d787030157e031fcd34e19\"\n    ], \n    \"type\": \"ProductRatePlanCharge\"\n}' \"https://rest.zuora.com/v1/action/delete\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/action/delete');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"ids\": [\n        \"2c93808457d787030157e031fcd34e19\"\n    ], \n    \"type\": \"ProductRatePlanCharge\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"ids\\\": [\\n        \\\"2c93808457d787030157e031fcd34e19\\\"\\n    ], \\n    \\\"type\\\": \\\"ProductRatePlanCharge\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/action/delete\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"ids\\\": [\\n        \\\"2c93808457d787030157e031fcd34e19\\\"\\n    ], \\n    \\\"type\\\": \\\"ProductRatePlanCharge\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/action/delete\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/action/delete\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"ids\\\": [\\n        \\\"2c93808457d787030157e031fcd34e19\\\"\\n    ], \\n    \\\"type\\\": \\\"ProductRatePlanCharge\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/action/delete\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"ids\\\": [\\n        \\\"2c93808457d787030157e031fcd34e19\\\"\\n    ], \\n    \\\"type\\\": \\\"ProductRatePlanCharge\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/action/execute" : {
      "post" : {
        "tags" : [ "Actions" ],
        "summary" : "Execute",
        "description" : "Use the execute call to execute a process to split an invoice into multiple invoices. The original invoice must be in draft status. The resulting invoices are called split invoices.\n\n**Note:** This feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com). \n\nTo split a draft invoice into multiple split invoices:\n\n1. Use the create call to create a separate InvoiceSplitItem object for each split invoice that you want to create from the original draft invoice.\n2. Use the create call to create a single InvoiceSplit object to collect all of the InvoiceSplitItem objects.\n3. Use the execute call to split the draft invoice into multiple split invoices.\n\nYou need to create InvoiceSplitItem objects and an InvoiceSplit object before you can use the execute call. \n\n* Supported objects: InvoiceSplit\n* Asynchronous process: yes\n",
        "operationId" : "ProxyActionPOSTexecute",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "executeRequest",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProxyActionexecuteRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyActionexecuteResponse"
            },
            "examples" : {
              "application/json" : [ {
                "Success" : true,
                "Id" : "2c93808457d787030157e031d5844c53"
              } ]
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyBadRequestResponse"
            },
            "examples" : {
              "application/json" : {
                "Errors" : [ {
                  "Code" : "INVALID_VALUE",
                  "Message" : "The account number 123xProxy is invalid."
                } ],
                "Success" : false
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"ids\": [\n        \"2c93808457d787030157e031d5844c53\"\n    ], \n    \"synchronous\": false, \n    \"type\": \"InvoiceSplit\"\n}' \"https://rest.zuora.com/v1/action/execute\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/action/execute');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"ids\": [\n        \"2c93808457d787030157e031d5844c53\"\n    ], \n    \"synchronous\": false, \n    \"type\": \"InvoiceSplit\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"ids\\\": [\\n        \\\"2c93808457d787030157e031d5844c53\\\"\\n    ], \\n    \\\"synchronous\\\": false, \\n    \\\"type\\\": \\\"InvoiceSplit\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/action/execute\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"ids\\\": [\\n        \\\"2c93808457d787030157e031d5844c53\\\"\\n    ], \\n    \\\"synchronous\\\": false, \\n    \\\"type\\\": \\\"InvoiceSplit\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/action/execute\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/action/execute\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"ids\\\": [\\n        \\\"2c93808457d787030157e031d5844c53\\\"\\n    ], \\n    \\\"synchronous\\\": false, \\n    \\\"type\\\": \\\"InvoiceSplit\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/action/execute\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"ids\\\": [\\n        \\\"2c93808457d787030157e031d5844c53\\\"\\n    ], \\n    \\\"synchronous\\\": false, \\n    \\\"type\\\": \\\"InvoiceSplit\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/action/generate" : {
      "post" : {
        "tags" : [ "Actions" ],
        "summary" : "Generate",
        "description" : "Generates an on-demand invoice for a specific customer. This is similar to creating an ad-hoc bill run for a specific customer account in the Zuora UI.\n\n* Supported objects: Invoice\n* Asynchronous process: yes\n\nThe id of the generated invoice is returned in the response. If multiple invoices are generated, only the id of the first invoice generated is returned. This occurs when an account has multiple subscriptions with the [invoice subscription separately](https://knowledgecenter.zuora.com/BC_Subscription_Management/Subscriptions/B_Creating_Subscriptions/Invoicing_Subscriptions_Separately) option enabled.\n\n## Limits\nRate limit: 8000 calls per 10-minute block, per-tenant\n\nIf you approach or exceed the limits, then you receive a 429 error.\n",
        "operationId" : "ProxyActionPOSTgenerate",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "generateRequest",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProxyActiongenerateRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyActiongenerateResponse"
            },
            "examples" : {
              "application/json" : [ {
                "Success" : true,
                "Id" : "2c93808457d787030157e0306cd13a86"
              } ]
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyBadRequestResponse"
            },
            "examples" : {
              "application/json" : {
                "Errors" : [ {
                  "Code" : "INVALID_VALUE",
                  "Message" : "The account number 123xProxy is invalid."
                } ],
                "Success" : false
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"objects\": [\n        {\n            \"AccountId\": \"2c93808457d787030157e0306be53a75\", \n            \"InvoiceDate\": \"2016-10-20\", \n            \"TargetDate\": \"2016-10-20\"\n        }\n    ], \n    \"type\": \"Invoice\"\n}' \"https://rest.zuora.com/v1/action/generate\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/action/generate');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"objects\": [\n        {\n            \"AccountId\": \"2c93808457d787030157e0306be53a75\", \n            \"InvoiceDate\": \"2016-10-20\", \n            \"TargetDate\": \"2016-10-20\"\n        }\n    ], \n    \"type\": \"Invoice\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"objects\\\": [\\n        {\\n            \\\"AccountId\\\": \\\"2c93808457d787030157e0306be53a75\\\", \\n            \\\"InvoiceDate\\\": \\\"2016-10-20\\\", \\n            \\\"TargetDate\\\": \\\"2016-10-20\\\"\\n        }\\n    ], \\n    \\\"type\\\": \\\"Invoice\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/action/generate\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"objects\\\": [\\n        {\\n            \\\"AccountId\\\": \\\"2c93808457d787030157e0306be53a75\\\", \\n            \\\"InvoiceDate\\\": \\\"2016-10-20\\\", \\n            \\\"TargetDate\\\": \\\"2016-10-20\\\"\\n        }\\n    ], \\n    \\\"type\\\": \\\"Invoice\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/action/generate\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/action/generate\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"objects\\\": [\\n        {\\n            \\\"AccountId\\\": \\\"2c93808457d787030157e0306be53a75\\\", \\n            \\\"InvoiceDate\\\": \\\"2016-10-20\\\", \\n            \\\"TargetDate\\\": \\\"2016-10-20\\\"\\n        }\\n    ], \\n    \\\"type\\\": \\\"Invoice\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/action/generate\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"objects\\\": [\\n        {\\n            \\\"AccountId\\\": \\\"2c93808457d787030157e0306be53a75\\\", \\n            \\\"InvoiceDate\\\": \\\"2016-10-20\\\", \\n            \\\"TargetDate\\\": \\\"2016-10-20\\\"\\n        }\\n    ], \\n    \\\"type\\\": \\\"Invoice\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/action/query" : {
      "post" : {
        "tags" : [ "Actions" ],
        "summary" : "Query",
        "description" : "The query call sends a query expression by specifying the object to query, the fields to retrieve from that object, and any filters to determine whether a given object should be queried.\n\n\nYou can use ZOQL (Zuora Object Query Language) to construct those queries, passing them through the `queryString`.\n\n\nOnce the call is made, the API executes the query against the specified object and returns a query response object to your application. Your application can then iterate through rows in the query response to retrieve information.\n\n## Limitations \n\nThis call has the following limitations:\n\n* All ZOQL keywords must be in lower case.\n* The number of records returned is limited to 2000 records\n",
        "operationId" : "ProxyActionPOSTquery",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "queryRequest",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProxyActionqueryRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyActionqueryResponse"
            },
            "examples" : {
              "application/json" : {
                "records" : [ {
                  "AdjustmentNumber" : "IIA-00000001",
                  "ServiceEndDate" : "2016-10-20",
                  "Id" : "2c93808457d787030157e0324aea5158",
                  "AccountingCode" : "Accounts Receivable",
                  "UpdatedDate" : "2016-10-20T05:46:14.000+02:00",
                  "AccountId" : "2c93808457d787030157e032485b5131",
                  "Comment" : "this is comments",
                  "InvoiceNumber" : "INV00000001",
                  "InvoiceId" : "2c93808457d787030157e03248c75142",
                  "ServiceStartDate" : "2016-10-20",
                  "CreatedById" : "2c93808457d787030157e032283c4fb2",
                  "CreatedDate" : "2016-10-20T05:46:14.000+02:00",
                  "InvoiceItemName" : "OneTime_Flat Fee Pricing1476935174089",
                  "UpdatedById" : "2c93808457d787030157e032283c4fb2",
                  "Amount" : 1.2,
                  "AdjustmentDate" : "2016-10-20",
                  "SourceId" : "2c93808457d787030157e03248c95144",
                  "SourceType" : "InvoiceDetail",
                  "Status" : "Processed",
                  "Type" : "Credit",
                  "ReferenceId" : "refid-1476935174845",
                  "ReasonCode" : "Standard Adjustment"
                } ],
                "size" : 1,
                "done" : true
              }
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyBadRequestResponse"
            },
            "examples" : {
              "application/json" : {
                "Errors" : [ {
                  "Code" : "INVALID_VALUE",
                  "Message" : "The account number 123xProxy is invalid."
                } ],
                "Success" : false
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"queryString\": \"select AccountId, AccountingCode, AdjustmentDate, AdjustmentNumber, Amount, CancelledById, CancelledDate, Comment, CreatedById, CreatedDate, InvoiceId, InvoiceItemName, InvoiceNumber, ReferenceId, ServiceEndDate, ServiceStartDate, SourceId, SourceType, Status, TransferredToAccounting, Type, UpdatedById, UpdatedDate, ReasonCode from InvoiceItemAdjustment where Id = '2c93808457d787030157e0324aea5158'\"\n}' \"https://rest.zuora.com/v1/action/query\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/action/query');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"queryString\": \"select AccountId, AccountingCode, AdjustmentDate, AdjustmentNumber, Amount, CancelledById, CancelledDate, Comment, CreatedById, CreatedDate, InvoiceId, InvoiceItemName, InvoiceNumber, ReferenceId, ServiceEndDate, ServiceStartDate, SourceId, SourceType, Status, TransferredToAccounting, Type, UpdatedById, UpdatedDate, ReasonCode from InvoiceItemAdjustment where Id = '2c93808457d787030157e0324aea5158'\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"queryString\\\": \\\"select AccountId, AccountingCode, AdjustmentDate, AdjustmentNumber, Amount, CancelledById, CancelledDate, Comment, CreatedById, CreatedDate, InvoiceId, InvoiceItemName, InvoiceNumber, ReferenceId, ServiceEndDate, ServiceStartDate, SourceId, SourceType, Status, TransferredToAccounting, Type, UpdatedById, UpdatedDate, ReasonCode from InvoiceItemAdjustment where Id = '2c93808457d787030157e0324aea5158'\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/action/query\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"queryString\\\": \\\"select AccountId, AccountingCode, AdjustmentDate, AdjustmentNumber, Amount, CancelledById, CancelledDate, Comment, CreatedById, CreatedDate, InvoiceId, InvoiceItemName, InvoiceNumber, ReferenceId, ServiceEndDate, ServiceStartDate, SourceId, SourceType, Status, TransferredToAccounting, Type, UpdatedById, UpdatedDate, ReasonCode from InvoiceItemAdjustment where Id = '2c93808457d787030157e0324aea5158'\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/action/query\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/action/query\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"queryString\\\": \\\"select AccountId, AccountingCode, AdjustmentDate, AdjustmentNumber, Amount, CancelledById, CancelledDate, Comment, CreatedById, CreatedDate, InvoiceId, InvoiceItemName, InvoiceNumber, ReferenceId, ServiceEndDate, ServiceStartDate, SourceId, SourceType, Status, TransferredToAccounting, Type, UpdatedById, UpdatedDate, ReasonCode from InvoiceItemAdjustment where Id = '2c93808457d787030157e0324aea5158'\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/action/query\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"queryString\\\": \\\"select AccountId, AccountingCode, AdjustmentDate, AdjustmentNumber, Amount, CancelledById, CancelledDate, Comment, CreatedById, CreatedDate, InvoiceId, InvoiceItemName, InvoiceNumber, ReferenceId, ServiceEndDate, ServiceStartDate, SourceId, SourceType, Status, TransferredToAccounting, Type, UpdatedById, UpdatedDate, ReasonCode from InvoiceItemAdjustment where Id = '2c93808457d787030157e0324aea5158'\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/action/queryMore" : {
      "post" : {
        "tags" : [ "Actions" ],
        "summary" : "QueryMore",
        "description" : "Use queryMore to request additional results from a previous query call. If your initial query call returns more than 2000 results, you can use queryMore to query for the additional results.\n\n\nAny `queryLocator` results greater than 2,000, will only be stored by Zuora for 5 days before it is deleted.\n\n\n This call sends a request for additional results from an initial query call. If the initial query call returns more than 2000 results, you can use the `queryLocator` returned from query to request the next set of results.\n\n\n**Note:** Zuora expires queryMore cursors after 15 minutes of activity.\n\n\nTo use queryMore, you first construct a query call. By default, the query call will return up to 2000 results. If there are more than 2000 results, query will return a boolean `done`, which will be marked as `false`, and a `queryLocator`, which is a marker you will pass to queryMore to get the next set of results.\n",
        "operationId" : "ProxyActionPOSTqueryMore",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "queryMoreRequest",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProxyActionqueryMoreRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyActionqueryMoreResponse"
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyBadRequestResponse"
            },
            "examples" : {
              "application/json" : {
                "Errors" : [ {
                  "Code" : "INVALID_VALUE",
                  "Message" : "The account number 123xProxy is invalid."
                } ],
                "Success" : false
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{}' \"https://rest.zuora.com/v1/action/queryMore\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/action/queryMore');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/action/queryMore\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/action/queryMore\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/action/queryMore\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/action/queryMore\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/action/subscribe" : {
      "post" : {
        "tags" : [ "Actions" ],
        "summary" : "Subscribe",
        "description" : "\nThis call performs many actions.  Use the subscribe call to bundle information required to create at least one new subscription. \n\nThe call takes in an array of SubscribeRequests. Because it takes an array, you can submit a batch of subscription requests at once. You can create up to 50 different subscriptions in a single subscribe call.\n\nThis is a combined call that you can use to perform all of the following tasks in a single call:\n\n* Create accounts\n* Create contacts\n* Create payment methods, including external payment options\n* Create an invoice for the subscription\n* Apply the first payment to a subscription\n\n## Object Limits \n50 objects are supported in a single call.\n\n## System Rate Limits \nA maximum of 3,000 calls is supported per 10-minute time window per tenant.\n\nIf you approach or exceed this limit, you will receive a 429 error. Multi-threading causes you to approach this limit more quickly.\n\n## Effective Date\nIf the effective date is in the future, the invoices will not be generated, and there will be no invoice number.\n\n## Subscription Name, Number, and ID \n### Subscription Name and Number \nThe subscription name is a unique identifier for the subscription. If you do not specify a value for the name, Zuora will create one automatically. The automatically generated value is known as the subscription number, such as `A-S00000080`. You cannot change the subscription name or number after creating the subscription. \n\n* **Subscription name**: The name that you set for the subscription.\n* **Subscription number**: The value generated by Zuora automatically if you do not specify a subscription name. \n\nBoth the subscription name and number must be unique. If they are not, an error will occur.\n\n### Subscription ID \nThe subscription ID is a 32-digit ID in the format 4028xxxx. This is also the unique identifier for a subscription. This value is automatically generated by the system and cannot be edited or updated, but it can be queried. One subscription can have only one subscription name or number, but it can have multiple IDs: Each version of a subscription has a different ID.\n\nThe Subscription object contains the fields `OriginalId` and `PreviousSubscriptionId`. `OriginalId` is the ID for the first version of a subscription. `PreviousSubscriptionId` is the ID of the version created immediately prior to the current version.\n\n## Subscription Preview \nYou can preview invoices that would be generated by the subscribe call. \n\n## Invoice Subscriptions Separately\nIf you have enabled the invoice subscriptions separately feature, a subscribe call will generate an invoice for each subscription for every subscription where the field `IsInvoiceSeparate` is set to `true`.\n\nIf the invoice subscriptions separately feature is disabled, a subscribe call will generate a single invoice for all subscriptions.\n\nSee [Invoicing Subscriptions Separately](https://knowledgecenter.zuora.com/BC_Subscription_Management/Subscriptions/B_Creating_Subscriptions/Invoicing_Subscriptions_Separately) for more information.\n\n## Subscriptions and Draft Invoices \nIf a draft invoice that includes charges exists in a customer account, using the subscribe call to create a new subscription and generate an invoice will cause the new subscription to be added to the existing draft invoice. Zuora will then post the invoice. \n\n## When to Use Subscribe and Create Calls \nYou can use either the subscribe call or the create call to create the objects associated with a subscription (accounts, contacts, and so on). There are differences between these calls, however, and some situations are better for one or the other.\n\n### Use the Subscribe Call \nThe subscribe call bundles up all the information you need for a subscription. Use the subscribe call to create new subscriptions when you have all the information you need.\n\nSubscribe calls cannot update BillTo, SoldTo, and Payment information objects cannot be updated if there is an existing account ID in the call. These objects are not supported in a subscribe call.\n\n### Use the Create Call \nThe create call is more useful when you want to develop in stages. For example, if you want to first create an account, then a contact, and so on. If you do not have all information available, use the create call. To create a subscription, you must activate the account from Draft status to Active by calling the subscribe call.\n",
        "operationId" : "ProxyActionPOSTsubscribe",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "subscribeRequest",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProxyActionsubscribeRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyActionsubscribeResponse"
            },
            "examples" : {
              "application/json" : [ {
                "AccountNumber" : "AN_1476935174239",
                "SubscriptionNumber" : "S_1476935174239",
                "InvoiceResult" : {
                  "Invoice" : [ {
                    "InvoiceNumber" : "INV00000001",
                    "Id" : "2c93808457d787030157e03248c75142"
                  } ]
                },
                "TotalTcv" : 100.3,
                "SubscriptionId" : "2c93808457d787030157e03248715134",
                "TotalMrr" : 0,
                "AccountId" : "2c93808457d787030157e032485b5131",
                "Success" : true,
                "InvoiceNumber" : "INV00000001",
                "InvoiceId" : "2c93808457d787030157e03248c75142"
              } ]
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyBadRequestResponse"
            },
            "examples" : {
              "application/json" : {
                "Errors" : [ {
                  "Code" : "INVALID_VALUE",
                  "Message" : "The account number 123xProxy is invalid."
                } ],
                "Success" : false
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"subscribes\": [\n        {\n            \"Account\": {\n                \"AccountNumber\": \"AN_1476935174239\", \n                \"AutoPay\": false, \n                \"Batch\": \"Batch1\", \n                \"BillCycleDay\": 1, \n                \"Currency\": \"USD\", \n                \"Name\": \"AC_1476935174239\", \n                \"PaymentTerm\": \"Due Upon Receipt\", \n                \"Status\": \"Draft\"\n            }, \n            \"BillToContact\": {\n                \"Address1\": \"312 2nd Ave W\", \n                \"City\": \"Seattle\", \n                \"Country\": \"United States\", \n                \"FirstName\": \"FN1476935174239\", \n                \"LastName\": \"LN1476935174239\", \n                \"PersonalEmail\": \"person@test.com\", \n                \"PostalCode\": \"98119\", \n                \"State\": \"Washington\", \n                \"WorkEmail\": \"work@test.com\"\n            }, \n            \"PaymentMethod\": {\n                \"CreditCardAddress1\": \"312 2nd Ave W\", \n                \"CreditCardCity\": \"Seattle\", \n                \"CreditCardCountry\": \"United States\", \n                \"CreditCardExpirationMonth\": 12, \n                \"CreditCardExpirationYear\": 2020, \n                \"CreditCardHolderName\": \"Somebody\", \n                \"CreditCardNumber\": \"4111111111111111\", \n                \"CreditCardPostalCode\": \"98119\", \n                \"CreditCardState\": \"Washington\", \n                \"CreditCardType\": \"Visa\", \n                \"Type\": \"CreditCard\"\n            }, \n            \"PreviewOptions\": {\n                \"EnablePreviewMode\": false, \n                \"NumberOfPeriods\": 3\n            }, \n            \"SubscribeOptions\": {\n                \"GenerateInvoice\": true, \n                \"ProcessPayments\": false, \n                \"SubscribeInvoiceProcessingOptions\": {}\n            }, \n            \"SubscriptionData\": {\n                \"RatePlanData\": [\n                    {\n                        \"RatePlan\": {\n                            \"ProductRatePlanId\": \"2c93808457d787030157e0324735512b\"\n                        }, \n                        \"RatePlanChargeData\": [\n                            {\n                                \"RatePlanCharge\": {\n                                    \"ProductRatePlanChargeId\": \"2c93808457d787030157e03247c2512d\"\n                                }\n                            }\n                        ]\n                    }\n                ], \n                \"Subscription\": {\n                    \"AutoRenew\": false, \n                    \"ContractAcceptanceDate\": \"2016-10-20\", \n                    \"ContractEffectiveDate\": \"2016-10-20\", \n                    \"InitialTerm\": 12, \n                    \"Name\": \"S_1476935174239\", \n                    \"Notes\": \"this is notes\", \n                    \"RenewalTerm\": 12, \n                    \"ServiceActivationDate\": \"2016-10-20\", \n                    \"TermStartDate\": \"2016-10-20\", \n                    \"TermType\": \"TERMED\"\n                }\n            }\n        }\n    ]\n}' \"https://rest.zuora.com/v1/action/subscribe\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/action/subscribe');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"subscribes\": [\n        {\n            \"Account\": {\n                \"AccountNumber\": \"AN_1476935174239\", \n                \"AutoPay\": false, \n                \"Batch\": \"Batch1\", \n                \"BillCycleDay\": 1, \n                \"Currency\": \"USD\", \n                \"Name\": \"AC_1476935174239\", \n                \"PaymentTerm\": \"Due Upon Receipt\", \n                \"Status\": \"Draft\"\n            }, \n            \"BillToContact\": {\n                \"Address1\": \"312 2nd Ave W\", \n                \"City\": \"Seattle\", \n                \"Country\": \"United States\", \n                \"FirstName\": \"FN1476935174239\", \n                \"LastName\": \"LN1476935174239\", \n                \"PersonalEmail\": \"person@test.com\", \n                \"PostalCode\": \"98119\", \n                \"State\": \"Washington\", \n                \"WorkEmail\": \"work@test.com\"\n            }, \n            \"PaymentMethod\": {\n                \"CreditCardAddress1\": \"312 2nd Ave W\", \n                \"CreditCardCity\": \"Seattle\", \n                \"CreditCardCountry\": \"United States\", \n                \"CreditCardExpirationMonth\": 12, \n                \"CreditCardExpirationYear\": 2020, \n                \"CreditCardHolderName\": \"Somebody\", \n                \"CreditCardNumber\": \"4111111111111111\", \n                \"CreditCardPostalCode\": \"98119\", \n                \"CreditCardState\": \"Washington\", \n                \"CreditCardType\": \"Visa\", \n                \"Type\": \"CreditCard\"\n            }, \n            \"PreviewOptions\": {\n                \"EnablePreviewMode\": false, \n                \"NumberOfPeriods\": 3\n            }, \n            \"SubscribeOptions\": {\n                \"GenerateInvoice\": true, \n                \"ProcessPayments\": false, \n                \"SubscribeInvoiceProcessingOptions\": {}\n            }, \n            \"SubscriptionData\": {\n                \"RatePlanData\": [\n                    {\n                        \"RatePlan\": {\n                            \"ProductRatePlanId\": \"2c93808457d787030157e0324735512b\"\n                        }, \n                        \"RatePlanChargeData\": [\n                            {\n                                \"RatePlanCharge\": {\n                                    \"ProductRatePlanChargeId\": \"2c93808457d787030157e03247c2512d\"\n                                }\n                            }\n                        ]\n                    }\n                ], \n                \"Subscription\": {\n                    \"AutoRenew\": false, \n                    \"ContractAcceptanceDate\": \"2016-10-20\", \n                    \"ContractEffectiveDate\": \"2016-10-20\", \n                    \"InitialTerm\": 12, \n                    \"Name\": \"S_1476935174239\", \n                    \"Notes\": \"this is notes\", \n                    \"RenewalTerm\": 12, \n                    \"ServiceActivationDate\": \"2016-10-20\", \n                    \"TermStartDate\": \"2016-10-20\", \n                    \"TermType\": \"TERMED\"\n                }\n            }\n        }\n    ]\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"subscribes\\\": [\\n        {\\n            \\\"Account\\\": {\\n                \\\"AccountNumber\\\": \\\"AN_1476935174239\\\", \\n                \\\"AutoPay\\\": false, \\n                \\\"Batch\\\": \\\"Batch1\\\", \\n                \\\"BillCycleDay\\\": 1, \\n                \\\"Currency\\\": \\\"USD\\\", \\n                \\\"Name\\\": \\\"AC_1476935174239\\\", \\n                \\\"PaymentTerm\\\": \\\"Due Upon Receipt\\\", \\n                \\\"Status\\\": \\\"Draft\\\"\\n            }, \\n            \\\"BillToContact\\\": {\\n                \\\"Address1\\\": \\\"312 2nd Ave W\\\", \\n                \\\"City\\\": \\\"Seattle\\\", \\n                \\\"Country\\\": \\\"United States\\\", \\n                \\\"FirstName\\\": \\\"FN1476935174239\\\", \\n                \\\"LastName\\\": \\\"LN1476935174239\\\", \\n                \\\"PersonalEmail\\\": \\\"person@test.com\\\", \\n                \\\"PostalCode\\\": \\\"98119\\\", \\n                \\\"State\\\": \\\"Washington\\\", \\n                \\\"WorkEmail\\\": \\\"work@test.com\\\"\\n            }, \\n            \\\"PaymentMethod\\\": {\\n                \\\"CreditCardAddress1\\\": \\\"312 2nd Ave W\\\", \\n                \\\"CreditCardCity\\\": \\\"Seattle\\\", \\n                \\\"CreditCardCountry\\\": \\\"United States\\\", \\n                \\\"CreditCardExpirationMonth\\\": 12, \\n                \\\"CreditCardExpirationYear\\\": 2020, \\n                \\\"CreditCardHolderName\\\": \\\"Somebody\\\", \\n                \\\"CreditCardNumber\\\": \\\"4111111111111111\\\", \\n                \\\"CreditCardPostalCode\\\": \\\"98119\\\", \\n                \\\"CreditCardState\\\": \\\"Washington\\\", \\n                \\\"CreditCardType\\\": \\\"Visa\\\", \\n                \\\"Type\\\": \\\"CreditCard\\\"\\n            }, \\n            \\\"PreviewOptions\\\": {\\n                \\\"EnablePreviewMode\\\": false, \\n                \\\"NumberOfPeriods\\\": 3\\n            }, \\n            \\\"SubscribeOptions\\\": {\\n                \\\"GenerateInvoice\\\": true, \\n                \\\"ProcessPayments\\\": false, \\n                \\\"SubscribeInvoiceProcessingOptions\\\": {}\\n            }, \\n            \\\"SubscriptionData\\\": {\\n                \\\"RatePlanData\\\": [\\n                    {\\n                        \\\"RatePlan\\\": {\\n                            \\\"ProductRatePlanId\\\": \\\"2c93808457d787030157e0324735512b\\\"\\n                        }, \\n                        \\\"RatePlanChargeData\\\": [\\n                            {\\n                                \\\"RatePlanCharge\\\": {\\n                                    \\\"ProductRatePlanChargeId\\\": \\\"2c93808457d787030157e03247c2512d\\\"\\n                                }\\n                            }\\n                        ]\\n                    }\\n                ], \\n                \\\"Subscription\\\": {\\n                    \\\"AutoRenew\\\": false, \\n                    \\\"ContractAcceptanceDate\\\": \\\"2016-10-20\\\", \\n                    \\\"ContractEffectiveDate\\\": \\\"2016-10-20\\\", \\n                    \\\"InitialTerm\\\": 12, \\n                    \\\"Name\\\": \\\"S_1476935174239\\\", \\n                    \\\"Notes\\\": \\\"this is notes\\\", \\n                    \\\"RenewalTerm\\\": 12, \\n                    \\\"ServiceActivationDate\\\": \\\"2016-10-20\\\", \\n                    \\\"TermStartDate\\\": \\\"2016-10-20\\\", \\n                    \\\"TermType\\\": \\\"TERMED\\\"\\n                }\\n            }\\n        }\\n    ]\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/action/subscribe\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"subscribes\\\": [\\n        {\\n            \\\"Account\\\": {\\n                \\\"AccountNumber\\\": \\\"AN_1476935174239\\\", \\n                \\\"AutoPay\\\": false, \\n                \\\"Batch\\\": \\\"Batch1\\\", \\n                \\\"BillCycleDay\\\": 1, \\n                \\\"Currency\\\": \\\"USD\\\", \\n                \\\"Name\\\": \\\"AC_1476935174239\\\", \\n                \\\"PaymentTerm\\\": \\\"Due Upon Receipt\\\", \\n                \\\"Status\\\": \\\"Draft\\\"\\n            }, \\n            \\\"BillToContact\\\": {\\n                \\\"Address1\\\": \\\"312 2nd Ave W\\\", \\n                \\\"City\\\": \\\"Seattle\\\", \\n                \\\"Country\\\": \\\"United States\\\", \\n                \\\"FirstName\\\": \\\"FN1476935174239\\\", \\n                \\\"LastName\\\": \\\"LN1476935174239\\\", \\n                \\\"PersonalEmail\\\": \\\"person@test.com\\\", \\n                \\\"PostalCode\\\": \\\"98119\\\", \\n                \\\"State\\\": \\\"Washington\\\", \\n                \\\"WorkEmail\\\": \\\"work@test.com\\\"\\n            }, \\n            \\\"PaymentMethod\\\": {\\n                \\\"CreditCardAddress1\\\": \\\"312 2nd Ave W\\\", \\n                \\\"CreditCardCity\\\": \\\"Seattle\\\", \\n                \\\"CreditCardCountry\\\": \\\"United States\\\", \\n                \\\"CreditCardExpirationMonth\\\": 12, \\n                \\\"CreditCardExpirationYear\\\": 2020, \\n                \\\"CreditCardHolderName\\\": \\\"Somebody\\\", \\n                \\\"CreditCardNumber\\\": \\\"4111111111111111\\\", \\n                \\\"CreditCardPostalCode\\\": \\\"98119\\\", \\n                \\\"CreditCardState\\\": \\\"Washington\\\", \\n                \\\"CreditCardType\\\": \\\"Visa\\\", \\n                \\\"Type\\\": \\\"CreditCard\\\"\\n            }, \\n            \\\"PreviewOptions\\\": {\\n                \\\"EnablePreviewMode\\\": false, \\n                \\\"NumberOfPeriods\\\": 3\\n            }, \\n            \\\"SubscribeOptions\\\": {\\n                \\\"GenerateInvoice\\\": true, \\n                \\\"ProcessPayments\\\": false, \\n                \\\"SubscribeInvoiceProcessingOptions\\\": {}\\n            }, \\n            \\\"SubscriptionData\\\": {\\n                \\\"RatePlanData\\\": [\\n                    {\\n                        \\\"RatePlan\\\": {\\n                            \\\"ProductRatePlanId\\\": \\\"2c93808457d787030157e0324735512b\\\"\\n                        }, \\n                        \\\"RatePlanChargeData\\\": [\\n                            {\\n                                \\\"RatePlanCharge\\\": {\\n                                    \\\"ProductRatePlanChargeId\\\": \\\"2c93808457d787030157e03247c2512d\\\"\\n                                }\\n                            }\\n                        ]\\n                    }\\n                ], \\n                \\\"Subscription\\\": {\\n                    \\\"AutoRenew\\\": false, \\n                    \\\"ContractAcceptanceDate\\\": \\\"2016-10-20\\\", \\n                    \\\"ContractEffectiveDate\\\": \\\"2016-10-20\\\", \\n                    \\\"InitialTerm\\\": 12, \\n                    \\\"Name\\\": \\\"S_1476935174239\\\", \\n                    \\\"Notes\\\": \\\"this is notes\\\", \\n                    \\\"RenewalTerm\\\": 12, \\n                    \\\"ServiceActivationDate\\\": \\\"2016-10-20\\\", \\n                    \\\"TermStartDate\\\": \\\"2016-10-20\\\", \\n                    \\\"TermType\\\": \\\"TERMED\\\"\\n                }\\n            }\\n        }\\n    ]\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/action/subscribe\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/action/subscribe\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"subscribes\\\": [\\n        {\\n            \\\"Account\\\": {\\n                \\\"AccountNumber\\\": \\\"AN_1476935174239\\\", \\n                \\\"AutoPay\\\": false, \\n                \\\"Batch\\\": \\\"Batch1\\\", \\n                \\\"BillCycleDay\\\": 1, \\n                \\\"Currency\\\": \\\"USD\\\", \\n                \\\"Name\\\": \\\"AC_1476935174239\\\", \\n                \\\"PaymentTerm\\\": \\\"Due Upon Receipt\\\", \\n                \\\"Status\\\": \\\"Draft\\\"\\n            }, \\n            \\\"BillToContact\\\": {\\n                \\\"Address1\\\": \\\"312 2nd Ave W\\\", \\n                \\\"City\\\": \\\"Seattle\\\", \\n                \\\"Country\\\": \\\"United States\\\", \\n                \\\"FirstName\\\": \\\"FN1476935174239\\\", \\n                \\\"LastName\\\": \\\"LN1476935174239\\\", \\n                \\\"PersonalEmail\\\": \\\"person@test.com\\\", \\n                \\\"PostalCode\\\": \\\"98119\\\", \\n                \\\"State\\\": \\\"Washington\\\", \\n                \\\"WorkEmail\\\": \\\"work@test.com\\\"\\n            }, \\n            \\\"PaymentMethod\\\": {\\n                \\\"CreditCardAddress1\\\": \\\"312 2nd Ave W\\\", \\n                \\\"CreditCardCity\\\": \\\"Seattle\\\", \\n                \\\"CreditCardCountry\\\": \\\"United States\\\", \\n                \\\"CreditCardExpirationMonth\\\": 12, \\n                \\\"CreditCardExpirationYear\\\": 2020, \\n                \\\"CreditCardHolderName\\\": \\\"Somebody\\\", \\n                \\\"CreditCardNumber\\\": \\\"4111111111111111\\\", \\n                \\\"CreditCardPostalCode\\\": \\\"98119\\\", \\n                \\\"CreditCardState\\\": \\\"Washington\\\", \\n                \\\"CreditCardType\\\": \\\"Visa\\\", \\n                \\\"Type\\\": \\\"CreditCard\\\"\\n            }, \\n            \\\"PreviewOptions\\\": {\\n                \\\"EnablePreviewMode\\\": false, \\n                \\\"NumberOfPeriods\\\": 3\\n            }, \\n            \\\"SubscribeOptions\\\": {\\n                \\\"GenerateInvoice\\\": true, \\n                \\\"ProcessPayments\\\": false, \\n                \\\"SubscribeInvoiceProcessingOptions\\\": {}\\n            }, \\n            \\\"SubscriptionData\\\": {\\n                \\\"RatePlanData\\\": [\\n                    {\\n                        \\\"RatePlan\\\": {\\n                            \\\"ProductRatePlanId\\\": \\\"2c93808457d787030157e0324735512b\\\"\\n                        }, \\n                        \\\"RatePlanChargeData\\\": [\\n                            {\\n                                \\\"RatePlanCharge\\\": {\\n                                    \\\"ProductRatePlanChargeId\\\": \\\"2c93808457d787030157e03247c2512d\\\"\\n                                }\\n                            }\\n                        ]\\n                    }\\n                ], \\n                \\\"Subscription\\\": {\\n                    \\\"AutoRenew\\\": false, \\n                    \\\"ContractAcceptanceDate\\\": \\\"2016-10-20\\\", \\n                    \\\"ContractEffectiveDate\\\": \\\"2016-10-20\\\", \\n                    \\\"InitialTerm\\\": 12, \\n                    \\\"Name\\\": \\\"S_1476935174239\\\", \\n                    \\\"Notes\\\": \\\"this is notes\\\", \\n                    \\\"RenewalTerm\\\": 12, \\n                    \\\"ServiceActivationDate\\\": \\\"2016-10-20\\\", \\n                    \\\"TermStartDate\\\": \\\"2016-10-20\\\", \\n                    \\\"TermType\\\": \\\"TERMED\\\"\\n                }\\n            }\\n        }\\n    ]\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/action/subscribe\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"subscribes\\\": [\\n        {\\n            \\\"Account\\\": {\\n                \\\"AccountNumber\\\": \\\"AN_1476935174239\\\", \\n                \\\"AutoPay\\\": false, \\n                \\\"Batch\\\": \\\"Batch1\\\", \\n                \\\"BillCycleDay\\\": 1, \\n                \\\"Currency\\\": \\\"USD\\\", \\n                \\\"Name\\\": \\\"AC_1476935174239\\\", \\n                \\\"PaymentTerm\\\": \\\"Due Upon Receipt\\\", \\n                \\\"Status\\\": \\\"Draft\\\"\\n            }, \\n            \\\"BillToContact\\\": {\\n                \\\"Address1\\\": \\\"312 2nd Ave W\\\", \\n                \\\"City\\\": \\\"Seattle\\\", \\n                \\\"Country\\\": \\\"United States\\\", \\n                \\\"FirstName\\\": \\\"FN1476935174239\\\", \\n                \\\"LastName\\\": \\\"LN1476935174239\\\", \\n                \\\"PersonalEmail\\\": \\\"person@test.com\\\", \\n                \\\"PostalCode\\\": \\\"98119\\\", \\n                \\\"State\\\": \\\"Washington\\\", \\n                \\\"WorkEmail\\\": \\\"work@test.com\\\"\\n            }, \\n            \\\"PaymentMethod\\\": {\\n                \\\"CreditCardAddress1\\\": \\\"312 2nd Ave W\\\", \\n                \\\"CreditCardCity\\\": \\\"Seattle\\\", \\n                \\\"CreditCardCountry\\\": \\\"United States\\\", \\n                \\\"CreditCardExpirationMonth\\\": 12, \\n                \\\"CreditCardExpirationYear\\\": 2020, \\n                \\\"CreditCardHolderName\\\": \\\"Somebody\\\", \\n                \\\"CreditCardNumber\\\": \\\"4111111111111111\\\", \\n                \\\"CreditCardPostalCode\\\": \\\"98119\\\", \\n                \\\"CreditCardState\\\": \\\"Washington\\\", \\n                \\\"CreditCardType\\\": \\\"Visa\\\", \\n                \\\"Type\\\": \\\"CreditCard\\\"\\n            }, \\n            \\\"PreviewOptions\\\": {\\n                \\\"EnablePreviewMode\\\": false, \\n                \\\"NumberOfPeriods\\\": 3\\n            }, \\n            \\\"SubscribeOptions\\\": {\\n                \\\"GenerateInvoice\\\": true, \\n                \\\"ProcessPayments\\\": false, \\n                \\\"SubscribeInvoiceProcessingOptions\\\": {}\\n            }, \\n            \\\"SubscriptionData\\\": {\\n                \\\"RatePlanData\\\": [\\n                    {\\n                        \\\"RatePlan\\\": {\\n                            \\\"ProductRatePlanId\\\": \\\"2c93808457d787030157e0324735512b\\\"\\n                        }, \\n                        \\\"RatePlanChargeData\\\": [\\n                            {\\n                                \\\"RatePlanCharge\\\": {\\n                                    \\\"ProductRatePlanChargeId\\\": \\\"2c93808457d787030157e03247c2512d\\\"\\n                                }\\n                            }\\n                        ]\\n                    }\\n                ], \\n                \\\"Subscription\\\": {\\n                    \\\"AutoRenew\\\": false, \\n                    \\\"ContractAcceptanceDate\\\": \\\"2016-10-20\\\", \\n                    \\\"ContractEffectiveDate\\\": \\\"2016-10-20\\\", \\n                    \\\"InitialTerm\\\": 12, \\n                    \\\"Name\\\": \\\"S_1476935174239\\\", \\n                    \\\"Notes\\\": \\\"this is notes\\\", \\n                    \\\"RenewalTerm\\\": 12, \\n                    \\\"ServiceActivationDate\\\": \\\"2016-10-20\\\", \\n                    \\\"TermStartDate\\\": \\\"2016-10-20\\\", \\n                    \\\"TermType\\\": \\\"TERMED\\\"\\n                }\\n            }\\n        }\\n    ]\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/action/update" : {
      "post" : {
        "tags" : [ "Actions" ],
        "summary" : "Update",
        "description" : "\nUpdates the information in one or more objects of the same type. You can specify different types of objects in different update calls, but each specific update call must apply to only one type of object.\n\nYou can update an array of one or more zObjects. It returns an array of SaveResults, indicating the success or failure of updating each object. The following information applies to this call:\n\n* You cannot pass in null zObjects.\n* You can pass in a maximum of 50 zObjects at a time.\n* All objects must be of the same type.\n* For each field in each object, you must determine that object's ID. Then populate the fields that you want update with the new information.\n* Zuora ignores unrecognized fields in update calls. For example, if an optional field is spelled incorrectly or a field that does not exist is specified, Zuora ignores the field and continues to process the call. No error message is returned for unrecognized fields.\n\n## Object Limits \n50 objects are supported in a single call.\n\n## System Rate Limits  \nA maximum of 5,000 calls is supported per 10-minute time window per tenant.\n\nIf you approach or exceed this limit, you will receive a 429 error. Multi-threading causes you to approach this limit more quickly.\n",
        "operationId" : "ProxyActionPOSTupdate",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "updateRequest",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProxyActionupdateRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyActionupdateResponse"
            },
            "examples" : {
              "application/json" : [ {
                "Success" : true,
                "Id" : "2c93808457d787030157e0321fdf4fab"
              } ]
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyBadRequestResponse"
            },
            "examples" : {
              "application/json" : {
                "Errors" : [ {
                  "Code" : "INVALID_VALUE",
                  "Message" : "The account number 123xProxy is invalid."
                } ],
                "Success" : false
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"objects\": [\n        {\n            \"AccountNumber\": \"AN_1476935163869\", \n            \"AutoPay\": true, \n            \"Batch\": \"Batch1\", \n            \"BillCycleDay\": 1, \n            \"BillToId\": \"2c93808457d787030157e03220684fac\", \n            \"CrmId\": \"crmid\", \n            \"Currency\": \"USD\", \n            \"DefaultPaymentMethodId\": \"2c93808457d787030157e03220ec4fad\", \n            \"Id\": \"2c93808457d787030157e0321fdf4fab\", \n            \"InvoiceTemplateId\": \"2c93808457d787030157e03208864f97\", \n            \"Name\": \"AC_1476935163869\", \n            \"Notes\": \"this is notes\", \n            \"PaymentTerm\": \"Due Upon Receipt\", \n            \"SoldToId\": \"2c93808457d787030157e03220684fac\", \n            \"Status\": \"Active\"\n        }\n    ], \n    \"type\": \"Account\"\n}' \"https://rest.zuora.com/v1/action/update\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/action/update');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"objects\": [\n        {\n            \"AccountNumber\": \"AN_1476935163869\", \n            \"AutoPay\": true, \n            \"Batch\": \"Batch1\", \n            \"BillCycleDay\": 1, \n            \"BillToId\": \"2c93808457d787030157e03220684fac\", \n            \"CrmId\": \"crmid\", \n            \"Currency\": \"USD\", \n            \"DefaultPaymentMethodId\": \"2c93808457d787030157e03220ec4fad\", \n            \"Id\": \"2c93808457d787030157e0321fdf4fab\", \n            \"InvoiceTemplateId\": \"2c93808457d787030157e03208864f97\", \n            \"Name\": \"AC_1476935163869\", \n            \"Notes\": \"this is notes\", \n            \"PaymentTerm\": \"Due Upon Receipt\", \n            \"SoldToId\": \"2c93808457d787030157e03220684fac\", \n            \"Status\": \"Active\"\n        }\n    ], \n    \"type\": \"Account\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"objects\\\": [\\n        {\\n            \\\"AccountNumber\\\": \\\"AN_1476935163869\\\", \\n            \\\"AutoPay\\\": true, \\n            \\\"Batch\\\": \\\"Batch1\\\", \\n            \\\"BillCycleDay\\\": 1, \\n            \\\"BillToId\\\": \\\"2c93808457d787030157e03220684fac\\\", \\n            \\\"CrmId\\\": \\\"crmid\\\", \\n            \\\"Currency\\\": \\\"USD\\\", \\n            \\\"DefaultPaymentMethodId\\\": \\\"2c93808457d787030157e03220ec4fad\\\", \\n            \\\"Id\\\": \\\"2c93808457d787030157e0321fdf4fab\\\", \\n            \\\"InvoiceTemplateId\\\": \\\"2c93808457d787030157e03208864f97\\\", \\n            \\\"Name\\\": \\\"AC_1476935163869\\\", \\n            \\\"Notes\\\": \\\"this is notes\\\", \\n            \\\"PaymentTerm\\\": \\\"Due Upon Receipt\\\", \\n            \\\"SoldToId\\\": \\\"2c93808457d787030157e03220684fac\\\", \\n            \\\"Status\\\": \\\"Active\\\"\\n        }\\n    ], \\n    \\\"type\\\": \\\"Account\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/action/update\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"objects\\\": [\\n        {\\n            \\\"AccountNumber\\\": \\\"AN_1476935163869\\\", \\n            \\\"AutoPay\\\": true, \\n            \\\"Batch\\\": \\\"Batch1\\\", \\n            \\\"BillCycleDay\\\": 1, \\n            \\\"BillToId\\\": \\\"2c93808457d787030157e03220684fac\\\", \\n            \\\"CrmId\\\": \\\"crmid\\\", \\n            \\\"Currency\\\": \\\"USD\\\", \\n            \\\"DefaultPaymentMethodId\\\": \\\"2c93808457d787030157e03220ec4fad\\\", \\n            \\\"Id\\\": \\\"2c93808457d787030157e0321fdf4fab\\\", \\n            \\\"InvoiceTemplateId\\\": \\\"2c93808457d787030157e03208864f97\\\", \\n            \\\"Name\\\": \\\"AC_1476935163869\\\", \\n            \\\"Notes\\\": \\\"this is notes\\\", \\n            \\\"PaymentTerm\\\": \\\"Due Upon Receipt\\\", \\n            \\\"SoldToId\\\": \\\"2c93808457d787030157e03220684fac\\\", \\n            \\\"Status\\\": \\\"Active\\\"\\n        }\\n    ], \\n    \\\"type\\\": \\\"Account\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/action/update\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/action/update\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"objects\\\": [\\n        {\\n            \\\"AccountNumber\\\": \\\"AN_1476935163869\\\", \\n            \\\"AutoPay\\\": true, \\n            \\\"Batch\\\": \\\"Batch1\\\", \\n            \\\"BillCycleDay\\\": 1, \\n            \\\"BillToId\\\": \\\"2c93808457d787030157e03220684fac\\\", \\n            \\\"CrmId\\\": \\\"crmid\\\", \\n            \\\"Currency\\\": \\\"USD\\\", \\n            \\\"DefaultPaymentMethodId\\\": \\\"2c93808457d787030157e03220ec4fad\\\", \\n            \\\"Id\\\": \\\"2c93808457d787030157e0321fdf4fab\\\", \\n            \\\"InvoiceTemplateId\\\": \\\"2c93808457d787030157e03208864f97\\\", \\n            \\\"Name\\\": \\\"AC_1476935163869\\\", \\n            \\\"Notes\\\": \\\"this is notes\\\", \\n            \\\"PaymentTerm\\\": \\\"Due Upon Receipt\\\", \\n            \\\"SoldToId\\\": \\\"2c93808457d787030157e03220684fac\\\", \\n            \\\"Status\\\": \\\"Active\\\"\\n        }\\n    ], \\n    \\\"type\\\": \\\"Account\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/action/update\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"objects\\\": [\\n        {\\n            \\\"AccountNumber\\\": \\\"AN_1476935163869\\\", \\n            \\\"AutoPay\\\": true, \\n            \\\"Batch\\\": \\\"Batch1\\\", \\n            \\\"BillCycleDay\\\": 1, \\n            \\\"BillToId\\\": \\\"2c93808457d787030157e03220684fac\\\", \\n            \\\"CrmId\\\": \\\"crmid\\\", \\n            \\\"Currency\\\": \\\"USD\\\", \\n            \\\"DefaultPaymentMethodId\\\": \\\"2c93808457d787030157e03220ec4fad\\\", \\n            \\\"Id\\\": \\\"2c93808457d787030157e0321fdf4fab\\\", \\n            \\\"InvoiceTemplateId\\\": \\\"2c93808457d787030157e03208864f97\\\", \\n            \\\"Name\\\": \\\"AC_1476935163869\\\", \\n            \\\"Notes\\\": \\\"this is notes\\\", \\n            \\\"PaymentTerm\\\": \\\"Due Upon Receipt\\\", \\n            \\\"SoldToId\\\": \\\"2c93808457d787030157e03220684fac\\\", \\n            \\\"Status\\\": \\\"Active\\\"\\n        }\\n    ], \\n    \\\"type\\\": \\\"Account\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/amendments/subscriptions/{subscription-id}" : {
      "get" : {
        "tags" : [ "Amendments" ],
        "summary" : "Get amendments by subscription ID",
        "description" : "Retrieves detailed information about the amendment with the specified subscription.",
        "operationId" : "GET_AmendmentsBySubscriptionID",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "subscription-id",
          "in" : "path",
          "description" : "The ID of the subscription whose amendment changes you want to retrieve.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GETAmendmentType"
            },
            "examples" : {
              "application/json" : {
                "success" : true,
                "id" : "402896a9529c100a01529c30e26a0018",
                "code" : "A-AM00000002",
                "name" : "testAmendment",
                "type" : "TermsAndConditions",
                "description" : "just for test",
                "status" : "Completed",
                "contractEffectiveDate" : "2016-02-01",
                "serviceActivationDate" : "2016-02-01",
                "customerAcceptanceDate" : "2016-02-01",
                "effectiveDate" : "2016-02-01",
                "newSubscriptionId" : "402896a9529c100a01529c311930001d",
                "baseSubscriptionId" : "402896a9529c100a01529c2f2cc30010",
                "termType" : "TERMED",
                "currentTerm" : 2,
                "currentTermPeriodType" : "Month",
                "termStartDate" : "2015-12-31",
                "renewalSetting" : "RENEW_WITH_SPECIFIC_TERM",
                "renewalTerm" : 1,
                "renewalTermPeriodType" : "Month",
                "autoRenew" : false,
                "specificUpdateDate" : null,
                "newRatePlanId" : null,
                "baseRatePlanId" : null,
                "destinationAccountId" : "402896a9529bc3dc01529bcba7120023",
                "destinationInvoiceOwnerId" : "402896a9529bc3dc01529bcba7120023"
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/amendments/subscriptions/{subscription-id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/amendments/subscriptions/{subscription-id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/amendments/subscriptions/{subscription-id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/amendments/subscriptions/{subscription-id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/amendments/subscriptions/{subscription-id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/amendments/subscriptions/{subscription-id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/amendments/{amendment-key}" : {
      "get" : {
        "tags" : [ "Amendments" ],
        "summary" : "Get amendments by key",
        "description" : "Retrieves detailed information about the specified subscription amendment.",
        "operationId" : "GETAmendment",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "amendment-key",
          "in" : "path",
          "description" : "Can be the amendment ID or the amendment code.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GETAmendmentType"
            },
            "examples" : {
              "application/json" : {
                "success" : true,
                "id" : "402896a9529c100a01529c30e26a0018",
                "code" : "A-AM00000002",
                "name" : "testAmendment",
                "type" : "TermsAndConditions",
                "description" : "just for test",
                "status" : "Completed",
                "contractEffectiveDate" : "2016-02-01",
                "serviceActivationDate" : "2016-02-01",
                "customerAcceptanceDate" : "2016-02-01",
                "effectiveDate" : "2016-02-01",
                "newSubscriptionId" : "402896a9529c100a01529c311930001d",
                "baseSubscriptionId" : "402896a9529c100a01529c2f2cc30010",
                "termType" : "TERMED",
                "currentTerm" : 2,
                "currentTermPeriodType" : "Month",
                "termStartDate" : "2015-12-31",
                "renewalSetting" : "RENEW_WITH_SPECIFIC_TERM",
                "renewalTerm" : 1,
                "renewalTermPeriodType" : "Month",
                "autoRenew" : false,
                "specificUpdateDate" : null,
                "newRatePlanId" : null,
                "baseRatePlanId" : null,
                "destinationAccountId" : "402896a9529bc3dc01529bcba7120023",
                "destinationInvoiceOwnerId" : "402896a9529bc3dc01529bcba7120023"
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/amendments/{amendment-key}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/amendments/{amendment-key}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/amendments/{amendment-key}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/amendments/{amendment-key}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/amendments/{amendment-key}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/amendments/{amendment-key}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/attachments" : {
      "post" : {
        "tags" : [ "Attachments" ],
        "summary" : "Add attachments",
        "description" : "Use the Add Attachment REST request with a multipart/form-data to attach a document file to an Account, a Subscription, or an Invoice.",
        "operationId" : "POST_Attachments",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "description",
          "in" : "query",
          "description" : "Description of the attachment document.\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "associatedObjectType",
          "in" : "query",
          "description" : "Specify one of the following values: Account, Subscription, or Invoice.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "associatedObjectKey",
          "in" : "query",
          "description" : "For the Subscription type, specify the Subscription Number. An attachment is tied tied to the Subscription Number and thus viewable with every subscription version.\n\nFor Account and Invoice, specify the id.\n",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/POSTAttachmentType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/POSTAttachmentResponseType"
            },
            "examples" : {
              "application/json" : {
                "success" : true,
                "id" : "402880ea536ff494015372a7ea17001f",
                "fileId" : "402880ea536ff494015372a7ea12001e"
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '\"curl\\n--form \\\"file=@PODocument.pdf\\\" \\\\\\n-X POST https://api.zuora.com/rest/v1/attachments/?description=123&associatedObjectType=Subscription&associatedObjectKey=A-S00005714\"' \"https://rest.zuora.com/v1/attachments\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/attachments');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('\"curl\\n--form \\\"file=@PODocument.pdf\\\" \\\\\\n-X POST https://api.zuora.com/rest/v1/attachments/?description=123&associatedObjectType=Subscription&associatedObjectKey=A-S00005714\"');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"\\\"curl\\\\n--form \\\\\\\"file=@PODocument.pdf\\\\\\\" \\\\\\\\\\\\n-X POST https://api.zuora.com/rest/v1/attachments/?description=123&associatedObjectType=Subscription&associatedObjectKey=A-S00005714\\\"\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/attachments\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"\\\"curl\\\\n--form \\\\\\\"file=@PODocument.pdf\\\\\\\" \\\\\\\\\\\\n-X POST https://api.zuora.com/rest/v1/attachments/?description=123&associatedObjectType=Subscription&associatedObjectKey=A-S00005714\\\"\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/attachments\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/attachments\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"\\\"curl\\\\n--form \\\\\\\"file=@PODocument.pdf\\\\\\\" \\\\\\\\\\\\n-X POST https://api.zuora.com/rest/v1/attachments/?description=123&associatedObjectType=Subscription&associatedObjectKey=A-S00005714\\\"\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/attachments\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"\\\"curl\\\\n--form \\\\\\\"file=@PODocument.pdf\\\\\\\" \\\\\\\\\\\\n-X POST https://api.zuora.com/rest/v1/attachments/?description=123&associatedObjectType=Subscription&associatedObjectKey=A-S00005714\\\"\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/attachments/{attachment-id}" : {
      "get" : {
        "tags" : [ "Attachments" ],
        "summary" : "View attachments",
        "description" : "Use the View Attachment REST request to retrieve information about an attachment document.",
        "operationId" : "GETAttachments",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "attachment-id",
          "in" : "path",
          "description" : "Id of the attachment you want to view.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GETAttachmentResponseType"
            },
            "examples" : {
              "application/json" : {
                "id" : "8a8083e1545b706a01547316d93f4401",
                "fileName" : "AttachTest.txt",
                "description" : "",
                "fileId" : "8a8083e1545b706a01547316d9094400",
                "fileContentType" : "text/plain",
                "createdOn" : "2016-05-02 13:09:17",
                "createdBy" : "4028e487327fd45a0132829ebb673ff9",
                "updatedOn" : "2016-05-02 13:09:17",
                "updatedBy" : "4028e487327fd45a0132829ebb673ff9",
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/attachments/{attachment-id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/attachments/{attachment-id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/attachments/{attachment-id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/attachments/{attachment-id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/attachments/{attachment-id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/attachments/{attachment-id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "put" : {
        "tags" : [ "Attachments" ],
        "summary" : "Edit attachments",
        "description" : "Use the Edit Attachment REST request to make changes to the descriptive fields of an attachment, such as the description and the file name. You cannot change the actual content of the attached file in Zuora. If you need to change the actual content, you need to delete the attachment and add the updated file as a new attachment.",
        "operationId" : "PUT_Attachments",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "attachment-id",
          "in" : "path",
          "description" : "Id of the attachment to be updated.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "description" : "",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PUTAttachmentType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CommonResponseType"
            },
            "examples" : {
              "application/json" : {
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X PUT -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '\"curl\\n-H \\\"filename\\\":\\\"Image123.png\\\" \\\\\\n-H \\\"description\\\":\\\"Updated Image\\\" \\\\\\n-H \\\"Accept:application:json\\\" \\\\\\n-X PUT https://api.zuora.com/rest/v1/attachments/8a8083e1545b706a015473153e4743f\"' \"https://rest.zuora.com/v1/attachments/{attachment-id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/attachments/{attachment-id}');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('\"curl\\n-H \\\"filename\\\":\\\"Image123.png\\\" \\\\\\n-H \\\"description\\\":\\\"Updated Image\\\" \\\\\\n-H \\\"Accept:application:json\\\" \\\\\\n-X PUT https://api.zuora.com/rest/v1/attachments/8a8083e1545b706a015473153e4743f\"');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"\\\"curl\\\\n-H \\\\\\\"filename\\\\\\\":\\\\\\\"Image123.png\\\\\\\" \\\\\\\\\\\\n-H \\\\\\\"description\\\\\\\":\\\\\\\"Updated Image\\\\\\\" \\\\\\\\\\\\n-H \\\\\\\"Accept:application:json\\\\\\\" \\\\\\\\\\\\n-X PUT https://api.zuora.com/rest/v1/attachments/8a8083e1545b706a015473153e4743f\\\"\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/attachments/{attachment-id}\")\n  .put(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"\\\"curl\\\\n-H \\\\\\\"filename\\\\\\\":\\\\\\\"Image123.png\\\\\\\" \\\\\\\\\\\\n-H \\\\\\\"description\\\\\\\":\\\\\\\"Updated Image\\\\\\\" \\\\\\\\\\\\n-H \\\\\\\"Accept:application:json\\\\\\\" \\\\\\\\\\\\n-X PUT https://api.zuora.com/rest/v1/attachments/8a8083e1545b706a015473153e4743f\\\"\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"PUT\", \"/attachments/{attachment-id}\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/attachments/{attachment-id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"\\\"curl\\\\n-H \\\\\\\"filename\\\\\\\":\\\\\\\"Image123.png\\\\\\\" \\\\\\\\\\\\n-H \\\\\\\"description\\\\\\\":\\\\\\\"Updated Image\\\\\\\" \\\\\\\\\\\\n-H \\\\\\\"Accept:application:json\\\\\\\" \\\\\\\\\\\\n-X PUT https://api.zuora.com/rest/v1/attachments/8a8083e1545b706a015473153e4743f\\\"\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/attachments/{attachment-id}\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"\\\"curl\\\\n-H \\\\\\\"filename\\\\\\\":\\\\\\\"Image123.png\\\\\\\" \\\\\\\\\\\\n-H \\\\\\\"description\\\\\\\":\\\\\\\"Updated Image\\\\\\\" \\\\\\\\\\\\n-H \\\\\\\"Accept:application:json\\\\\\\" \\\\\\\\\\\\n-X PUT https://api.zuora.com/rest/v1/attachments/8a8083e1545b706a015473153e4743f\\\"\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Attachments" ],
        "summary" : "Delete attachments",
        "description" : "Use the Delete Attachment REST request to delete an attachment from a Zuora object.",
        "operationId" : "DELETE_Attachments",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "attachment-id",
          "in" : "path",
          "description" : "Id of the attachment to be deleted.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CommonResponseType"
            },
            "examples" : {
              "application/json" : {
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/attachments/{attachment-id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/attachments/{attachment-id}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/attachments/{attachment-id}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/attachments/{attachment-id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/attachments/{attachment-id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/attachments/{attachment-id}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/attachments/{object-type}/{object-key}" : {
      "get" : {
        "tags" : [ "Attachments" ],
        "summary" : "View attachments list",
        "description" : "Use the View Attachment REST request to get a list of attachments on an account, an invoice, or a subscription.",
        "operationId" : "GETAttachmentsResponse",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "object-type",
          "in" : "path",
          "description" : "\nSpecify one of the following:\n* Account\n\n* Subscription\n\n* Invoice\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "object-key",
          "in" : "path",
          "description" : "Id of the attachment. This id is included in the response from the Add Attachment request.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GETAttachmentsResponseType"
            },
            "examples" : {
              "application/json" : {
                "attachments" : [ {
                  "id" : "402896b95397c169015397c2ebca0003",
                  "fileName" : "Search _ Splunk.pdf",
                  "description" : null,
                  "fileId" : "402896b95397c169015397c2ebc50002",
                  "fileContentType" : "application/pdf",
                  "createdOn" : "2016-03-21 14:00:47",
                  "createdBy" : "402881e522cf4f9b0122cf5d82860002",
                  "updatedOn" : "2016-03-21 14:00:47",
                  "updatedBy" : "402881e522cf4f9b0122cf5d82860002",
                  "success" : true
                }, {
                  "id" : "8a8083e1545b706a01547316d93f4401",
                  "fileName" : "AttachTest.txt",
                  "description" : "",
                  "fileId" : "8a8083e1545b706a01547316d9094400",
                  "fileContentType" : "text/plain",
                  "createdOn" : "2016-05-02 13:09:17",
                  "createdBy" : "4028e487327fd45a0132829ebb673ff9",
                  "updatedOn" : "2016-05-02 13:09:17",
                  "updatedBy" : "4028e487327fd45a0132829ebb673ff9"
                } ],
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/attachments/{object-type}/{object-key}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/attachments/{object-type}/{object-key}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/attachments/{object-type}/{object-key}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/attachments/{object-type}/{object-key}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/attachments/{object-type}/{object-key}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/attachments/{object-type}/{object-key}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/bulk" : {
      "post" : {
        "tags" : [ "Mass Updater" ],
        "summary" : "Perform mass action",
        "description" : "This reference describes how to perform a mass action through the REST API. \n\nUsing this API method, you send a multipart/form-data request containing a `.csv` file with data about the mass action you want to perform. Zuora returns a key and then asynchronously processes the mass action. You can use the key to get details about the result of the mass action.\n",
        "operationId" : "POSTMassUpdate",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Content-Type",
          "in" : "header",
          "description" : "Must be multipart/form-data.\n",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/POSTMassUpdateType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/POSTMassUpdateResponseType"
            },
            "examples" : {
              "application/json" : {
                "success" : true,
                "bulkKey" : "402892f04c97b89a014c97bb30a50003"
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '\"curl\\n-H \\\"apiAccessKeyId:Username\\\"\\n-H \\\"apiSecretAccessKey:Password\\\"\\n-H \\\"Accept:application/json\\\"\\n--form \\\"file=@CreateRevenueSchedules.csv\\\"\\n--form \\\"params={actionType:CreateRevenueSchedule}\\\"\\n-X POST https://api.zuora.com/rest/v1/bulk\"' \"https://rest.zuora.com/v1/bulk\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/bulk');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('\"curl\\n-H \\\"apiAccessKeyId:Username\\\"\\n-H \\\"apiSecretAccessKey:Password\\\"\\n-H \\\"Accept:application/json\\\"\\n--form \\\"file=@CreateRevenueSchedules.csv\\\"\\n--form \\\"params={actionType:CreateRevenueSchedule}\\\"\\n-X POST https://api.zuora.com/rest/v1/bulk\"');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"\\\"curl\\\\n-H \\\\\\\"apiAccessKeyId:Username\\\\\\\"\\\\n-H \\\\\\\"apiSecretAccessKey:Password\\\\\\\"\\\\n-H \\\\\\\"Accept:application/json\\\\\\\"\\\\n--form \\\\\\\"file=@CreateRevenueSchedules.csv\\\\\\\"\\\\n--form \\\\\\\"params={actionType:CreateRevenueSchedule}\\\\\\\"\\\\n-X POST https://api.zuora.com/rest/v1/bulk\\\"\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/bulk\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"\\\"curl\\\\n-H \\\\\\\"apiAccessKeyId:Username\\\\\\\"\\\\n-H \\\\\\\"apiSecretAccessKey:Password\\\\\\\"\\\\n-H \\\\\\\"Accept:application/json\\\\\\\"\\\\n--form \\\\\\\"file=@CreateRevenueSchedules.csv\\\\\\\"\\\\n--form \\\\\\\"params={actionType:CreateRevenueSchedule}\\\\\\\"\\\\n-X POST https://api.zuora.com/rest/v1/bulk\\\"\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/bulk\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/bulk\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"\\\"curl\\\\n-H \\\\\\\"apiAccessKeyId:Username\\\\\\\"\\\\n-H \\\\\\\"apiSecretAccessKey:Password\\\\\\\"\\\\n-H \\\\\\\"Accept:application/json\\\\\\\"\\\\n--form \\\\\\\"file=@CreateRevenueSchedules.csv\\\\\\\"\\\\n--form \\\\\\\"params={actionType:CreateRevenueSchedule}\\\\\\\"\\\\n-X POST https://api.zuora.com/rest/v1/bulk\\\"\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/bulk\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"\\\"curl\\\\n-H \\\\\\\"apiAccessKeyId:Username\\\\\\\"\\\\n-H \\\\\\\"apiSecretAccessKey:Password\\\\\\\"\\\\n-H \\\\\\\"Accept:application/json\\\\\\\"\\\\n--form \\\\\\\"file=@CreateRevenueSchedules.csv\\\\\\\"\\\\n--form \\\\\\\"params={actionType:CreateRevenueSchedule}\\\\\\\"\\\\n-X POST https://api.zuora.com/rest/v1/bulk\\\"\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/bulk/{bulk-key}" : {
      "get" : {
        "tags" : [ "Mass Updater" ],
        "summary" : "Get mass action result",
        "description" : "This reference describes how to get information about the result of a mass action through the REST API. \n",
        "operationId" : "GETMassUpdate",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bulk-key",
          "in" : "path",
          "description" : "String of 32 characters that identifies a mass action. You get the bulk-key after performing a mass action through the REST API.\n",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GETMassUpdateType"
            },
            "examples" : {
              "application/json" : {
                "actionType" : "UpdateAccountingCode",
                "inputSize" : 354,
                "uploadedBy" : "john.doe@acme.com",
                "uploadedOn" : "2015-04-07 14:22:09",
                "status" : "Completed",
                "startedOn" : "2015-04-07 14:22:11",
                "endedOn" : "2015-04-07 14:32:01",
                "outputSize" : 350,
                "outputURL" : "https://api.zuora.com/apps/api/file/402892c84c9285b1014c9293f5320007",
                "outputType" : "(url:.csv.zip)",
                "totalCount" : 3,
                "processedCount" : 3,
                "errorCount" : 1,
                "successCount" : 2,
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/bulk/{bulk-key}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/bulk/{bulk-key}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/bulk/{bulk-key}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/bulk/{bulk-key}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/bulk/{bulk-key}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/bulk/{bulk-key}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/bulk/{bulk-key}/stop" : {
      "put" : {
        "tags" : [ "Mass Updater" ],
        "summary" : "Stop mass action",
        "description" : "This reference describes how to stop a mass action through the REST API. You can stop a mass action when its status is Pending or Processing. After you have stopped a mass action, you can get the mass action result to see details of the mass action.\n\n- If you stop a mass action when its status is Pending, no response file is generated because no records have been processed.\n\n- If you stop a mass action when its status is Processing, a response file is generated. You can check the response file to see which records have been processed and which have not. In the response file, the **Success** column has the value `Y` (successful) or `N` (failed) for processed records, and a blank value for unprocessed records.\n\nRecords that have already been processed when a mass action is stopped are not rolled back.\n",
        "operationId" : "PUT_MassUpdater",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "bulk-key",
          "in" : "path",
          "description" : "String of 32 characters that identifies a mass action. You get the bulk-key after performing a mass action through the REST API.\n",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CommonResponseType"
            },
            "examples" : {
              "application/json" : {
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X PUT -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{}' \"https://rest.zuora.com/v1/bulk/{bulk-key}/stop\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/bulk/{bulk-key}/stop');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/bulk/{bulk-key}/stop\")\n  .put(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"PUT\", \"/bulk/{bulk-key}/stop\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/bulk/{bulk-key}/stop\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/bulk/{bulk-key}/stop\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/catalog/products" : {
      "get" : {
        "tags" : [ "Catalog" ],
        "summary" : "Get product catalog",
        "description" : "This REST API reference describes how to retrieve the entire product catalog, including all products, features, and their corresponding rate plans, charges. Products are returned in reverse chronological order on the UpdatedDate field. \n\nWith rate plans and rate plan charges, the REST API has a maximum array size. \n",
        "operationId" : "GET_Catalog",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GETCatalogType"
            },
            "examples" : {
              "application/json" : {
                "products" : [ {
                  "id" : "2c92c0f94f7243eb014f726032281e9a",
                  "sku" : "SKU-00000608",
                  "name" : "TeamCollab",
                  "description" : "Team Collaboration",
                  "category" : "Base Products",
                  "effectiveStartDate" : "2015-01-01",
                  "effectiveEndDate" : "2021-01-01",
                  "productRatePlans" : [ {
                    "id" : "2c92c0f94f7243e6014f7260f69923aa",
                    "status" : "Active",
                    "name" : "TeamCollab Basic",
                    "description" : "",
                    "effectiveStartDate" : "2015-08-28",
                    "effectiveEndDate" : "2017-08-30",
                    "productRatePlanCharges" : [ {
                      "id" : "2c92c0f94f7243e6014f7261f2ac24eb",
                      "name" : "Annual Basic",
                      "type" : "Recurring",
                      "model" : "FlatFee",
                      "uom" : "Each",
                      "pricingSummary" : [ "USD1200/Each" ],
                      "pricing" : [ {
                        "currency" : "USD",
                        "price" : 234.0,
                        "tiers" : null,
                        "includedUnits" : null,
                        "overagePrice" : null,
                        "discountPercentage" : null,
                        "discountAmount" : null
                      } ],
                      "defaultQuantity" : 233.0,
                      "applyDiscountTo" : null,
                      "discountLevel" : null,
                      "endDateCondition" : "Fixed_Period",
                      "upToPeriods" : 1,
                      "upToPeriodsType" : "Years",
                      "billingDay" : "DefaultFromCustomer",
                      "listPriceBase" : "Per_Billing_Period",
                      "billingTiming" : "IN_ADVANCE",
                      "billingPeriod" : "Annual",
                      "billingPeriodAlignment" : "AlignToCharge",
                      "specificBillingPeriod" : null,
                      "smoothingModel" : null,
                      "numberOfPeriods" : null,
                      "overageCalculationOption" : null,
                      "overageUnusedUnitsCreditOption" : null,
                      "usageRecordRatingOption" : null,
                      "priceChangeOption" : null,
                      "priceIncreasePercentage" : null,
                      "useTenantDefaultForPriceChange" : true,
                      "taxable" : false,
                      "taxCode" : "",
                      "taxMode" : "TaxExclusive",
                      "triggerEvent" : "ContractEffective",
                      "description" : "",
                      "revenueRecognitionRuleName" : "Recognize upon invoicing",
                      "useDiscountSpecificAccountingCode" : null,
                      "includedUnits" : null,
                      "maxQuantity" : null,
                      "minQuantity" : null,
                      "prepayPeriods" : null,
                      "financeInformation" : {
                        "recognizedRevenueAccountingCode" : "Subscription Revenue",
                        "recognizedRevenueAccountingCodeType" : "SalesRevenue",
                        "deferredRevenueAccountingCode" : "Subscription Revenue",
                        "deferredRevenueAccountingCodeType" : "SalesRevenue"
                      }
                    } ]
                  } ]
                } ]
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/catalog/products\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/catalog/products');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/catalog/products\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/catalog/products\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/catalog/products\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/catalog/products\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/charge-revenue-summaries/subscription-charges/{charge-key}" : {
      "get" : {
        "tags" : [ "Charge Revenue Summaries" ],
        "summary" : "Get charge summary details by charge ID",
        "description" : "This REST API reference describes how to retrieve the details of a charge revenue summary by specifying the subscription charge ID. This response retrieves all revenue items associated with a charge revenue summary.\n",
        "operationId" : "GET_CRSByChargeID",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "charge-key",
          "in" : "path",
          "description" : "ID of the subscription rate plan charge; for example, 402892793e173340013e173b81000012.\n",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GETChargeRSDetailType"
            },
            "examples" : {
              "application/json" : {
                "number" : "CRS-00000001",
                "recognitionRuleName" : "Recognize daily over time",
                "amount" : 428,
                "undistributedUnrecognizedRevenue" : 0,
                "recognizedRevenue" : 0,
                "unrecognizedRevenue" : 428,
                "currency" : "USD",
                "notes" : null,
                "accountId" : "2c92c0f9410f55ee014110a008f6791f",
                "subscriptionId" : "2c92c0f9410f55dd014110a14aa47f09",
                "subscriptionChargeId" : "2c92c0f9410f55dd014110b22cbc023f",
                "revenueItems" : [ {
                  "accountingPeriodName" : "May 2012",
                  "isAccountingPeriodClosed" : false,
                  "amount" : 100,
                  "currency" : "USD",
                  "accountingPeriodStartDate" : "2012-05-01",
                  "accountingPeriodEndDate" : "2012-05-31"
                }, {
                  "accountingPeriodName" : "Jun 2012",
                  "isAccountingPeriodClosed" : false,
                  "amount" : 92,
                  "currency" : "USD",
                  "accountingPeriodStartDate" : "2012-06-01",
                  "accountingPeriodEndDate" : "2012-06-30"
                }, {
                  "accountingPeriodName" : "Jul 2012",
                  "isAccountingPeriodClosed" : false,
                  "amount" : 0,
                  "currency" : "USD",
                  "accountingPeriodStartDate" : "2012-07-01",
                  "accountingPeriodEndDate" : "2012-07-31"
                }, {
                  "accountingPeriodName" : "Aug 2012",
                  "isAccountingPeriodClosed" : false,
                  "amount" : 85,
                  "currency" : "USD",
                  "accountingPeriodStartDate" : "2012-08-01",
                  "accountingPeriodEndDate" : "2012-08-31"
                }, {
                  "accountingPeriodName" : "Sep 2012",
                  "isAccountingPeriodClosed" : false,
                  "amount" : 85,
                  "currency" : "USD",
                  "accountingPeriodStartDate" : "2012-09-01",
                  "accountingPeriodEndDate" : "2012-09-30"
                }, {
                  "accountingPeriodName" : "Jan'2013",
                  "isAccountingPeriodClosed" : false,
                  "amount" : 80,
                  "currency" : "USD",
                  "accountingPeriodStartDate" : "2013-01-01",
                  "accountingPeriodEndDate" : "2013-01-31"
                }, {
                  "accountingPeriodName" : "Feb'2013",
                  "isAccountingPeriodClosed" : false,
                  "amount" : 5,
                  "currency" : "USD",
                  "accountingPeriodStartDate" : "2013-02-01",
                  "accountingPeriodEndDate" : "2013-02-28"
                }, {
                  "accountingPeriodName" : "Sep'2013",
                  "isAccountingPeriodClosed" : false,
                  "amount" : -7,
                  "currency" : "USD",
                  "accountingPeriodStartDate" : "2013-09-01",
                  "accountingPeriodEndDate" : "2013-09-30"
                }, {
                  "accountingPeriodName" : "Nov'2013",
                  "isAccountingPeriodClosed" : false,
                  "amount" : -12,
                  "currency" : "USD",
                  "accountingPeriodStartDate" : "2013-11-01",
                  "accountingPeriodEndDate" : "2013-11-30"
                }, {
                  "accountingPeriodName" : "Dec 2013",
                  "isAccountingPeriodClosed" : false,
                  "amount" : 0,
                  "currency" : "USD",
                  "accountingPeriodStartDate" : "2013-12-11",
                  "accountingPeriodEndDate" : "2014-01-10"
                }, {
                  "accountingPeriodName" : "Open-Ended",
                  "isAccountingPeriodClosed" : false,
                  "amount" : 0,
                  "currency" : "USD",
                  "accountingPeriodStartDate" : "2014-03-12",
                  "accountingPeriodEndDate" : null
                } ],
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/charge-revenue-summaries/subscription-charges/{charge-key}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/charge-revenue-summaries/subscription-charges/{charge-key}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/charge-revenue-summaries/subscription-charges/{charge-key}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/charge-revenue-summaries/subscription-charges/{charge-key}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/charge-revenue-summaries/subscription-charges/{charge-key}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/charge-revenue-summaries/subscription-charges/{charge-key}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/charge-revenue-summaries/{crs-number}" : {
      "get" : {
        "tags" : [ "Charge Revenue Summaries" ],
        "summary" : "Get charge summary details by CRS number",
        "description" : "This REST API reference describes how to retrieve the details of a charge revenue summary by specifying the charge revenue summary number. The response includes all revenue items associated with the charge revenue summary.\n",
        "operationId" : "GET_CRSByCRSNumber",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "crs-number",
          "in" : "path",
          "description" : "The charge revenue summary number.\n",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GETChargeRSDetailType"
            },
            "examples" : {
              "application/json" : {
                "number" : "CRS-00000001",
                "recognitionRuleName" : "Recognize upon invoicing",
                "amount" : 660,
                "undistributedUnrecognizedRevenue" : 565,
                "recognizedRevenue" : 0,
                "unrecognizedRevenue" : 660,
                "currency" : "USD",
                "notes" : null,
                "accountId" : "2c92c0f8439770960143b2141f5a555e",
                "subscriptionId" : "2c92c0f943977b4f0143b23487999327",
                "subscriptionChargeId" : "2c92c0f943977b4f0143b11187ed432e",
                "revenueItems" : [ {
                  "accountingPeriodName" : "Sep'2013",
                  "isAccountingPeriodClosed" : false,
                  "amount" : 35,
                  "currency" : "USD",
                  "accountingPeriodStartDate" : "2013-09-01",
                  "accountingPeriodEndDate" : "2013-09-30"
                }, {
                  "accountingPeriodName" : "Oct'2013",
                  "isAccountingPeriodClosed" : false,
                  "amount" : 50,
                  "currency" : "USD",
                  "accountingPeriodStartDate" : "2013-10-01",
                  "accountingPeriodEndDate" : "2013-10-31"
                }, {
                  "accountingPeriodName" : "Open-Ended",
                  "isAccountingPeriodClosed" : false,
                  "amount" : 150,
                  "currency" : "USD",
                  "accountingPeriodStartDate" : "2013-12-11",
                  "accountingPeriodEndDate" : null
                } ],
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/charge-revenue-summaries/{crs-number}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/charge-revenue-summaries/{crs-number}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/charge-revenue-summaries/{crs-number}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/charge-revenue-summaries/{crs-number}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/charge-revenue-summaries/{crs-number}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/charge-revenue-summaries/{crs-number}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/connections" : {
      "post" : {
        "tags" : [ "Connections" ],
        "summary" : "Establish connection to Zuora REST API service",
        "description" : "Establishes a connection to the Zuora REST API service based on a valid user credentials.\n\nThis call authenticates the user and returns an API session cookie that's used to authorize subsequent calls to the REST API. A call to `connections` is a required first step before using the Zuora REST API to access data.\n\nThe credentials must belong to a user account that has permission to access the API service.\n\nAs noted elsewhere, it's strongly recommended that an account used for Zuora API activity is never used to log into the Zuora UI.  Once an account is used to log into the UI, it may be subject to periodic forced password changes, which may eventually lead to authentication failures when using the API.\n",
        "operationId" : "POST_Connections",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "apiAccessKeyId",
          "in" : "header",
          "description" : "Account username\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "apiSecretAccessKey",
          "in" : "header",
          "description" : "Account password\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Content-Type",
          "in" : "header",
          "description" : "Must be set to \"application/json\"\n",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CommonResponseType"
            },
            "examples" : {
              "application/json" : {
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{}' \"https://rest.zuora.com/v1/connections\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/connections');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/connections\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/connections\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/connections\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/connections\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/custom-exchange-rates/{currency}" : {
      "get" : {
        "tags" : [ "Custom Exchange Rates" ],
        "summary" : "Get custom foreign currency exchange rates",
        "description" : "This feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/). \n\nThis reference describes how to query custom foreign exchange rates from Zuora. You can use this API method to query exchange rates only if you use a custom exchange rate provider and upload rates with the Import Foreign Exchange Rates mass action. \n",
        "operationId" : "GETCustomExchangeRates",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "currency",
          "in" : "path",
          "description" : "The target currency. The exchange rates in the response are calculated in relation to the target currency.\n\nThe value must be a three-letter currency code, for example, USD. \n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "startDate",
          "in" : "query",
          "description" : "Start date of the date range for which you want to get exchange rates.\n\nThe date must be in yyyy-mm-dd format, for example, 2016-01-15. The start date cannot be later than the end date.\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "End date of the date range for which you want to get exchange rates.\n\nThe date must be in yyyy-mm-dd format, for example, 2016-01-16. The end date can be a maximum of 90 days after the start date.\n",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GETCustomExchangeRatesType"
            },
            "examples" : {
              "application/json" : {
                "success" : true,
                "inverse" : true,
                "rates" : {
                  "2016-01-15" : {
                    "providerExchangeRateDate" : "2016-01-14",
                    "JPY" : 0.0084,
                    "EUR" : 1.0815,
                    "GBP" : 1.4472
                  },
                  "2016-01-16" : {
                    "providerExchangeRateDate" : "2016-01-15",
                    "JPY" : 0.0085,
                    "EUR" : 1.0827,
                    "GBP" : 1.4634
                  }
                }
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/custom-exchange-rates/{currency}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/custom-exchange-rates/{currency}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/custom-exchange-rates/{currency}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/custom-exchange-rates/{currency}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/custom-exchange-rates/{currency}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/custom-exchange-rates/{currency}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/files/{file-id}" : {
      "get" : {
        "tags" : [ "Get Files" ],
        "summary" : "Get files",
        "description" : "Retrieve a file by specifying its file ID. You can retrieve accounting period reports, such as the Revenue Detail report, as well as other files such as invoice PDFs.\n\n## Example\n\n```curl\ncurl -i -k -H \"apiAccessKeyId:$USER_NAME\" -H \"apiSecretAccessKey:$PASSWORD\"\n-H \"Accept:application/pdf\"\n-X GET https://apisandbox-api.zuora.com/rest/v1/files/2c92c08c55534cf00155581fb474314d\n-o /Users/jsmith/Downloads/invoiceFile1.pdf\n```\nThe invoice PDF is downloaded to /Users/jsmith/Downloads and named invoiceFile1.pdf.\n\n## File Size Limitation\nThe maximum export file size is 2047MB. If you have large data requests that go over this limit, you will get the following 403 HTTP response code from Zuora.\n\n`<security:max-object-size>2047MB</security:max-object-size>`\n\nSubmit a request at [Zuora Global Support](https://zuora.zendesk.com/agent/) if you require additional assistance.\n\nWe can work with you to determine if large file optimization is an option for you.\n",
        "operationId" : "GET_Files",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "file-id",
          "in" : "path",
          "description" : "The Zuora ID of the file you want to retrieve.\n",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : ""
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/files/{file-id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/files/{file-id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/files/{file-id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/files/{file-id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/files/{file-id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/files/{file-id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/hmac-signatures" : {
      "post" : {
        "tags" : [ "HMAC Signatures" ],
        "summary" : "Return HMAC signatures",
        "description" : "This REST API reference describes how to return unique signature and token values that used to process a CORS enabled API call.\n",
        "operationId" : "POSTHMACSignature",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/POSTHMACSignatureType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/POSTHMACSignatureResponseType"
            },
            "examples" : {
              "application/json" : {
                "signature" : "ZmI0ZjE2ZTMxMWY1YjA0ZTc4MTg1ZDhlYWRkMTEwNDE3M2RiMzNiNQ==",
                "token" : "gCH6gYqQffQCsFKSLuxyagXsuXcIK0uf",
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"accountKey\": \"A00000001\", \n    \"method\": \"POST\", \n    \"uri\": \"https://api.zuora.com/rest/v1/payment-methods/credit-cards\"\n}' \"https://rest.zuora.com/v1/hmac-signatures\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/hmac-signatures');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"accountKey\": \"A00000001\", \n    \"method\": \"POST\", \n    \"uri\": \"https://api.zuora.com/rest/v1/payment-methods/credit-cards\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"accountKey\\\": \\\"A00000001\\\", \\n    \\\"method\\\": \\\"POST\\\", \\n    \\\"uri\\\": \\\"https://api.zuora.com/rest/v1/payment-methods/credit-cards\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/hmac-signatures\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"accountKey\\\": \\\"A00000001\\\", \\n    \\\"method\\\": \\\"POST\\\", \\n    \\\"uri\\\": \\\"https://api.zuora.com/rest/v1/payment-methods/credit-cards\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/hmac-signatures\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/hmac-signatures\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"accountKey\\\": \\\"A00000001\\\", \\n    \\\"method\\\": \\\"POST\\\", \\n    \\\"uri\\\": \\\"https://api.zuora.com/rest/v1/payment-methods/credit-cards\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/hmac-signatures\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"accountKey\\\": \\\"A00000001\\\", \\n    \\\"method\\\": \\\"POST\\\", \\n    \\\"uri\\\": \\\"https://api.zuora.com/rest/v1/payment-methods/credit-cards\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/hostedpages" : {
      "get" : {
        "tags" : [ "Hosted Pages" ],
        "summary" : "Return hosted pages",
        "description" : "The hostedpages call returns the Payment Pages configuration metadata,\nspecifically, page ID, page version, payment method type.\n\nThe following are the version-specific and general REST requests for Payment Pages:\n\n* The request for Payment Pages 1.0 configuration information: `GET <BaseURL>/hostedpages?version=1`\n* The request for Payment Pages 2.0 configuration information: `GET <BaseURL>/hostedpages?version=2`\n* The request for all versions of Payment Pages configuration information: `GET <BaseURL>/hostedpages`\n\n## Notes\nIf you do not have the corresponding tenant setting enabled, e.g., the request `version` parameter set to 2 with the Payment Pages 2.0 setting disabled, you will receive an error.\n",
        "operationId" : "GetHostedPages",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "versionNumber",
          "in" : "query",
          "description" : "Version of the Payment Pages for which you want to retrieve the configuration information. Specify 1 for Payment Pages 1.0 or 2 for Payment Pages 2.0. If omitted, information for all versions of Payment Pages are returned.\n\nThe response also depends on your tenant settings for Payment Pages 1.0 and Payment Pages 2.0. For example, if only the tenant setting for Payment Pages 2.0 is enabled, the response will only contain information for Payment Pages 2.0 forms even when this parameter is omitted.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GetHostedPagesType"
            },
            "examples" : {
              "application/json" : {
                "hostedpages" : [ {
                  "pageId" : "8a85858f49a3f2230149abccaa2e004a",
                  "pageType" : "ACH",
                  "pageVersion" : 2.0
                }, {
                  "pageId" : "8a85858f49a3f2230149abcd99090057",
                  "pageType" : "Bank Transfer",
                  "pageVersion" : 2.0
                }, {
                  "pageId" : "8a85858f49a3f2230149a71083d40019",
                  "pageType" : "Credit Card",
                  "pageVersion" : 2.0
                } ],
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/hostedpages\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/hostedpages');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/hostedpages\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/hostedpages\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/hostedpages\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/hostedpages\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/journal-entries" : {
      "post" : {
        "tags" : [ "Summary Journal Entries" ],
        "summary" : "Create summary journal entry",
        "description" : "This REST API reference describes how to manually create a summary journal entry. Request and response field descriptions and sample code are provided.\n## Requirements\n1.The sum of debits must equal the sum of credits in the summary journal entry.\n\n2.The following applies only if you use foreign currency conversion:\n  * If you have configured Aggregate transactions with different currencies during a Journal Run to \"Yes\", the value of the **currency** field must be the same as your tenant's home currency. That is, you must create journal entries using your home currency.\n  * All journal entries in an accounting period must either all be aggregated or all be unaggregated. You cannot have a mix of aggregated and unaggregated journal entries in the same accounting period.\n",
        "operationId" : "POSTJournalEntry",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/POSTJournalEntryType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/POSTJournalEntryResponseType"
            },
            "examples" : {
              "application/json" : {
                "success" : true,
                "journalEntryNumber" : "JE-00000001"
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"accountingPeriodName\": \"Nov-2014\", \n    \"cf_pk1__c\": \"CreditCard\", \n    \"cf_pk2__c\": \"John Smith\", \n    \"cf_txt1__c\": \"1000001\", \n    \"cf_txt2__c\": \"2014-11-01\", \n    \"currency\": \"USD\", \n    \"journalEntryDate\": \"2014-09-09\", \n    \"journalEntryItems\": [\n        {\n            \"accountingCodeName\": \"Accounts Receivable\", \n            \"accountingCodeType\": \"Deferred Revenue\", \n            \"amount\": \"400.9\", \n            \"homeCurrencyAmount\": \"801.8\", \n            \"type\": \"Credit\"\n        }, \n        {\n            \"accountingCodeName\": \"Subscription Revenue\", \n            \"accountingCodeType\": \"Sales Revenue\", \n            \"amount\": \"400.9\", \n            \"homeCurrencyAmount\": \"801.8\", \n            \"type\": \"Debit\"\n        }\n    ], \n    \"notes\": \"my account\", \n    \"segments\": [\n        {\n            \"segmentName\": \"billToCountry\", \n            \"segmentValue\": \"United States\"\n        }, \n        {\n            \"segmentName\": \"billToState\", \n            \"segmentValue\": \"California\"\n        }\n    ], \n    \"transferredToAccounting\": \"No\"\n}' \"https://rest.zuora.com/v1/journal-entries\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/journal-entries');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"accountingPeriodName\": \"Nov-2014\", \n    \"cf_pk1__c\": \"CreditCard\", \n    \"cf_pk2__c\": \"John Smith\", \n    \"cf_txt1__c\": \"1000001\", \n    \"cf_txt2__c\": \"2014-11-01\", \n    \"currency\": \"USD\", \n    \"journalEntryDate\": \"2014-09-09\", \n    \"journalEntryItems\": [\n        {\n            \"accountingCodeName\": \"Accounts Receivable\", \n            \"accountingCodeType\": \"Deferred Revenue\", \n            \"amount\": \"400.9\", \n            \"homeCurrencyAmount\": \"801.8\", \n            \"type\": \"Credit\"\n        }, \n        {\n            \"accountingCodeName\": \"Subscription Revenue\", \n            \"accountingCodeType\": \"Sales Revenue\", \n            \"amount\": \"400.9\", \n            \"homeCurrencyAmount\": \"801.8\", \n            \"type\": \"Debit\"\n        }\n    ], \n    \"notes\": \"my account\", \n    \"segments\": [\n        {\n            \"segmentName\": \"billToCountry\", \n            \"segmentValue\": \"United States\"\n        }, \n        {\n            \"segmentName\": \"billToState\", \n            \"segmentValue\": \"California\"\n        }\n    ], \n    \"transferredToAccounting\": \"No\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"accountingPeriodName\\\": \\\"Nov-2014\\\", \\n    \\\"cf_pk1__c\\\": \\\"CreditCard\\\", \\n    \\\"cf_pk2__c\\\": \\\"John Smith\\\", \\n    \\\"cf_txt1__c\\\": \\\"1000001\\\", \\n    \\\"cf_txt2__c\\\": \\\"2014-11-01\\\", \\n    \\\"currency\\\": \\\"USD\\\", \\n    \\\"journalEntryDate\\\": \\\"2014-09-09\\\", \\n    \\\"journalEntryItems\\\": [\\n        {\\n            \\\"accountingCodeName\\\": \\\"Accounts Receivable\\\", \\n            \\\"accountingCodeType\\\": \\\"Deferred Revenue\\\", \\n            \\\"amount\\\": \\\"400.9\\\", \\n            \\\"homeCurrencyAmount\\\": \\\"801.8\\\", \\n            \\\"type\\\": \\\"Credit\\\"\\n        }, \\n        {\\n            \\\"accountingCodeName\\\": \\\"Subscription Revenue\\\", \\n            \\\"accountingCodeType\\\": \\\"Sales Revenue\\\", \\n            \\\"amount\\\": \\\"400.9\\\", \\n            \\\"homeCurrencyAmount\\\": \\\"801.8\\\", \\n            \\\"type\\\": \\\"Debit\\\"\\n        }\\n    ], \\n    \\\"notes\\\": \\\"my account\\\", \\n    \\\"segments\\\": [\\n        {\\n            \\\"segmentName\\\": \\\"billToCountry\\\", \\n            \\\"segmentValue\\\": \\\"United States\\\"\\n        }, \\n        {\\n            \\\"segmentName\\\": \\\"billToState\\\", \\n            \\\"segmentValue\\\": \\\"California\\\"\\n        }\\n    ], \\n    \\\"transferredToAccounting\\\": \\\"No\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/journal-entries\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"accountingPeriodName\\\": \\\"Nov-2014\\\", \\n    \\\"cf_pk1__c\\\": \\\"CreditCard\\\", \\n    \\\"cf_pk2__c\\\": \\\"John Smith\\\", \\n    \\\"cf_txt1__c\\\": \\\"1000001\\\", \\n    \\\"cf_txt2__c\\\": \\\"2014-11-01\\\", \\n    \\\"currency\\\": \\\"USD\\\", \\n    \\\"journalEntryDate\\\": \\\"2014-09-09\\\", \\n    \\\"journalEntryItems\\\": [\\n        {\\n            \\\"accountingCodeName\\\": \\\"Accounts Receivable\\\", \\n            \\\"accountingCodeType\\\": \\\"Deferred Revenue\\\", \\n            \\\"amount\\\": \\\"400.9\\\", \\n            \\\"homeCurrencyAmount\\\": \\\"801.8\\\", \\n            \\\"type\\\": \\\"Credit\\\"\\n        }, \\n        {\\n            \\\"accountingCodeName\\\": \\\"Subscription Revenue\\\", \\n            \\\"accountingCodeType\\\": \\\"Sales Revenue\\\", \\n            \\\"amount\\\": \\\"400.9\\\", \\n            \\\"homeCurrencyAmount\\\": \\\"801.8\\\", \\n            \\\"type\\\": \\\"Debit\\\"\\n        }\\n    ], \\n    \\\"notes\\\": \\\"my account\\\", \\n    \\\"segments\\\": [\\n        {\\n            \\\"segmentName\\\": \\\"billToCountry\\\", \\n            \\\"segmentValue\\\": \\\"United States\\\"\\n        }, \\n        {\\n            \\\"segmentName\\\": \\\"billToState\\\", \\n            \\\"segmentValue\\\": \\\"California\\\"\\n        }\\n    ], \\n    \\\"transferredToAccounting\\\": \\\"No\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/journal-entries\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/journal-entries\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"accountingPeriodName\\\": \\\"Nov-2014\\\", \\n    \\\"cf_pk1__c\\\": \\\"CreditCard\\\", \\n    \\\"cf_pk2__c\\\": \\\"John Smith\\\", \\n    \\\"cf_txt1__c\\\": \\\"1000001\\\", \\n    \\\"cf_txt2__c\\\": \\\"2014-11-01\\\", \\n    \\\"currency\\\": \\\"USD\\\", \\n    \\\"journalEntryDate\\\": \\\"2014-09-09\\\", \\n    \\\"journalEntryItems\\\": [\\n        {\\n            \\\"accountingCodeName\\\": \\\"Accounts Receivable\\\", \\n            \\\"accountingCodeType\\\": \\\"Deferred Revenue\\\", \\n            \\\"amount\\\": \\\"400.9\\\", \\n            \\\"homeCurrencyAmount\\\": \\\"801.8\\\", \\n            \\\"type\\\": \\\"Credit\\\"\\n        }, \\n        {\\n            \\\"accountingCodeName\\\": \\\"Subscription Revenue\\\", \\n            \\\"accountingCodeType\\\": \\\"Sales Revenue\\\", \\n            \\\"amount\\\": \\\"400.9\\\", \\n            \\\"homeCurrencyAmount\\\": \\\"801.8\\\", \\n            \\\"type\\\": \\\"Debit\\\"\\n        }\\n    ], \\n    \\\"notes\\\": \\\"my account\\\", \\n    \\\"segments\\\": [\\n        {\\n            \\\"segmentName\\\": \\\"billToCountry\\\", \\n            \\\"segmentValue\\\": \\\"United States\\\"\\n        }, \\n        {\\n            \\\"segmentName\\\": \\\"billToState\\\", \\n            \\\"segmentValue\\\": \\\"California\\\"\\n        }\\n    ], \\n    \\\"transferredToAccounting\\\": \\\"No\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/journal-entries\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"accountingPeriodName\\\": \\\"Nov-2014\\\", \\n    \\\"cf_pk1__c\\\": \\\"CreditCard\\\", \\n    \\\"cf_pk2__c\\\": \\\"John Smith\\\", \\n    \\\"cf_txt1__c\\\": \\\"1000001\\\", \\n    \\\"cf_txt2__c\\\": \\\"2014-11-01\\\", \\n    \\\"currency\\\": \\\"USD\\\", \\n    \\\"journalEntryDate\\\": \\\"2014-09-09\\\", \\n    \\\"journalEntryItems\\\": [\\n        {\\n            \\\"accountingCodeName\\\": \\\"Accounts Receivable\\\", \\n            \\\"accountingCodeType\\\": \\\"Deferred Revenue\\\", \\n            \\\"amount\\\": \\\"400.9\\\", \\n            \\\"homeCurrencyAmount\\\": \\\"801.8\\\", \\n            \\\"type\\\": \\\"Credit\\\"\\n        }, \\n        {\\n            \\\"accountingCodeName\\\": \\\"Subscription Revenue\\\", \\n            \\\"accountingCodeType\\\": \\\"Sales Revenue\\\", \\n            \\\"amount\\\": \\\"400.9\\\", \\n            \\\"homeCurrencyAmount\\\": \\\"801.8\\\", \\n            \\\"type\\\": \\\"Debit\\\"\\n        }\\n    ], \\n    \\\"notes\\\": \\\"my account\\\", \\n    \\\"segments\\\": [\\n        {\\n            \\\"segmentName\\\": \\\"billToCountry\\\", \\n            \\\"segmentValue\\\": \\\"United States\\\"\\n        }, \\n        {\\n            \\\"segmentName\\\": \\\"billToState\\\", \\n            \\\"segmentValue\\\": \\\"California\\\"\\n        }\\n    ], \\n    \\\"transferredToAccounting\\\": \\\"No\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/journal-entries/journal-runs/{jr-number}" : {
      "get" : {
        "tags" : [ "Summary Journal Entries" ],
        "summary" : "Get all summary journal entries in a journal run",
        "description" : "\nThis REST API reference describes how to retrieve information about all summary journal entries in a journal run.\n",
        "operationId" : "GETJournalEntriesInJournalRun",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "jr-number",
          "in" : "path",
          "description" : "Journal run number.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GETJournalEntriesInJournalRunType"
            },
            "examples" : {
              "application/json" : {
                "success" : true,
                "journalEntries" : [ {
                  "number" : "JE-00000006",
                  "status" : "Created",
                  "journalEntryDate" : "2016-12-31",
                  "currency" : "USD",
                  "homeCurrency" : "USD",
                  "aggregateCurrency" : true,
                  "transactionType" : "Invoice Item",
                  "accountingPeriodName" : "Dec'16",
                  "timePeriodStart" : "2016-12-01",
                  "timePeriodEnd" : "2016-12-31",
                  "transferredToAccounting" : "No",
                  "notes" : "note",
                  "cf_txt1__c" : "custom text",
                  "segments" : [ {
                    "segmentName" : "Seg1",
                    "segmentValue" : "seg value"
                  } ],
                  "journalEntryItems" : [ {
                    "accountingCodeType" : "AccountsReceivable",
                    "accountingCodeName" : "Accounts Receivable",
                    "glAccountName" : "Accounts Receivable",
                    "glAccountNumber" : "10-001-000-1234",
                    "type" : "Debit",
                    "amount" : 100.0,
                    "homeCurrencyAmount" : 100.0
                  }, {
                    "accountingCodeType" : "SalesRevenue",
                    "accountingCodeName" : "Sales Revenue",
                    "glAccountName" : "Sales Revenue",
                    "glAccountNumber" : "10-001-000-1000",
                    "type" : "Credit",
                    "amount" : 100.0,
                    "homeCurrencyAmount" : 100.0
                  } ]
                } ]
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/journal-entries/journal-runs/{jr-number}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/journal-entries/journal-runs/{jr-number}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/journal-entries/journal-runs/{jr-number}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/journal-entries/journal-runs/{jr-number}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/journal-entries/journal-runs/{jr-number}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/journal-entries/journal-runs/{jr-number}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/journal-entries/{je-number}" : {
      "get" : {
        "tags" : [ "Summary Journal Entries" ],
        "summary" : "Get summary journal entry",
        "description" : "This REST API reference describes how to get information about a summary journal entry by its journal entry number.\n",
        "operationId" : "GETJournalEntryDetail",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "je-number",
          "in" : "path",
          "description" : "",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GETJournalEntryDetailType"
            },
            "examples" : {
              "application/json" : {
                "number" : "JE-00000001",
                "status" : "Created",
                "journalEntryDate" : "2016-01-31",
                "currency" : "USD",
                "homeCurrency" : "USD",
                "aggregateCurrency" : true,
                "transactionType" : "Revenue Event Item",
                "accountingPeriodName" : "Jan'16",
                "timePeriodStart" : "2016-01-01",
                "timePeriodEnd" : "2016-01-31",
                "transferredToAccounting" : null,
                "transferredBy" : null,
                "transferDateTime" : null,
                "notes" : null,
                "segments" : [ {
                  "segmentName" : "Customer Code",
                  "segmentValue" : "A00000001"
                }, {
                  "segmentName" : "Charge Type",
                  "segmentValue" : "OneTime"
                } ],
                "journalEntryItems" : [ {
                  "accountingCodeType" : "DeferredRevenue",
                  "accountingCodeName" : "Deferred Revenue",
                  "glAccountName" : null,
                  "glAccountNumber" : null,
                  "type" : "Debit",
                  "homeCurrencyAmount" : 424.08,
                  "amount" : 424.08
                }, {
                  "accountingCodeType" : "SalesRevenue",
                  "accountingCodeName" : "Professional Services Revenue",
                  "glAccountName" : null,
                  "glAccountNumber" : null,
                  "type" : "Credit",
                  "homeCurrencyAmount" : 424.08,
                  "amount" : 424.08
                } ],
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/journal-entries/{je-number}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/journal-entries/{je-number}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/journal-entries/{je-number}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/journal-entries/{je-number}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/journal-entries/{je-number}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/journal-entries/{je-number}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Summary Journal Entries" ],
        "summary" : "Delete summary journal entry",
        "description" : "This reference describes how to delete a summary journal entry using the REST API.\n\nYou must have the \"Delete Cancelled Journal Entry\" user permission enabled to delete summary journal entries.\n\nA summary journal entry must be canceled before it can be deleted.\n",
        "operationId" : "DELETE_SummaryJournalEntry",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "je-number",
          "in" : "path",
          "description" : "Journal entry number in the format JE-00000001.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CommonResponseType"
            },
            "examples" : {
              "application/json" : {
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/journal-entries/{je-number}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/journal-entries/{je-number}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/journal-entries/{je-number}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/journal-entries/{je-number}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/journal-entries/{je-number}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/journal-entries/{je-number}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/journal-entries/{je-number}/basic-information" : {
      "put" : {
        "tags" : [ "Summary Journal Entries" ],
        "summary" : "Update basic information of a summary journal entry",
        "description" : "\nThis REST API reference describes how to update the basic information of a summary journal entry. Request and response field descriptions and sample code are provided.\n",
        "operationId" : "PUT_BasicSummaryJournalEntry",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "je-number",
          "in" : "path",
          "description" : "Journal entry number in the format JE-00000001.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PUT_BasicSummaryJournalEntryType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CommonResponseType"
            },
            "examples" : {
              "application/json" : {
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X PUT -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"cf_issueNumberc\": \"1000001\", \n    \"journalEntryItems\": [\n        {\n            \"accountingCodeName\": \"Accounts Receivable\", \n            \"cf_phasesc\": \"Phase 1\", \n            \"type\": \"Credit\"\n        }, \n        {\n            \"accountingCodeName\": \"\", \n            \"cf_phases__c\": \"Phase 1\", \n            \"type\": \"Debit\"\n        }\n    ], \n    \"notes\": \"Transfer to accounting system\", \n    \"transferredToAccounting\": \"Yes\"\n}' \"https://rest.zuora.com/v1/journal-entries/{je-number}/basic-information\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/journal-entries/{je-number}/basic-information');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"cf_issueNumberc\": \"1000001\", \n    \"journalEntryItems\": [\n        {\n            \"accountingCodeName\": \"Accounts Receivable\", \n            \"cf_phasesc\": \"Phase 1\", \n            \"type\": \"Credit\"\n        }, \n        {\n            \"accountingCodeName\": \"\", \n            \"cf_phases__c\": \"Phase 1\", \n            \"type\": \"Debit\"\n        }\n    ], \n    \"notes\": \"Transfer to accounting system\", \n    \"transferredToAccounting\": \"Yes\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"cf_issueNumberc\\\": \\\"1000001\\\", \\n    \\\"journalEntryItems\\\": [\\n        {\\n            \\\"accountingCodeName\\\": \\\"Accounts Receivable\\\", \\n            \\\"cf_phasesc\\\": \\\"Phase 1\\\", \\n            \\\"type\\\": \\\"Credit\\\"\\n        }, \\n        {\\n            \\\"accountingCodeName\\\": \\\"\\\", \\n            \\\"cf_phases__c\\\": \\\"Phase 1\\\", \\n            \\\"type\\\": \\\"Debit\\\"\\n        }\\n    ], \\n    \\\"notes\\\": \\\"Transfer to accounting system\\\", \\n    \\\"transferredToAccounting\\\": \\\"Yes\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/journal-entries/{je-number}/basic-information\")\n  .put(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"cf_issueNumberc\\\": \\\"1000001\\\", \\n    \\\"journalEntryItems\\\": [\\n        {\\n            \\\"accountingCodeName\\\": \\\"Accounts Receivable\\\", \\n            \\\"cf_phasesc\\\": \\\"Phase 1\\\", \\n            \\\"type\\\": \\\"Credit\\\"\\n        }, \\n        {\\n            \\\"accountingCodeName\\\": \\\"\\\", \\n            \\\"cf_phases__c\\\": \\\"Phase 1\\\", \\n            \\\"type\\\": \\\"Debit\\\"\\n        }\\n    ], \\n    \\\"notes\\\": \\\"Transfer to accounting system\\\", \\n    \\\"transferredToAccounting\\\": \\\"Yes\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"PUT\", \"/journal-entries/{je-number}/basic-information\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/journal-entries/{je-number}/basic-information\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"cf_issueNumberc\\\": \\\"1000001\\\", \\n    \\\"journalEntryItems\\\": [\\n        {\\n            \\\"accountingCodeName\\\": \\\"Accounts Receivable\\\", \\n            \\\"cf_phasesc\\\": \\\"Phase 1\\\", \\n            \\\"type\\\": \\\"Credit\\\"\\n        }, \\n        {\\n            \\\"accountingCodeName\\\": \\\"\\\", \\n            \\\"cf_phases__c\\\": \\\"Phase 1\\\", \\n            \\\"type\\\": \\\"Debit\\\"\\n        }\\n    ], \\n    \\\"notes\\\": \\\"Transfer to accounting system\\\", \\n    \\\"transferredToAccounting\\\": \\\"Yes\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/journal-entries/{je-number}/basic-information\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"cf_issueNumberc\\\": \\\"1000001\\\", \\n    \\\"journalEntryItems\\\": [\\n        {\\n            \\\"accountingCodeName\\\": \\\"Accounts Receivable\\\", \\n            \\\"cf_phasesc\\\": \\\"Phase 1\\\", \\n            \\\"type\\\": \\\"Credit\\\"\\n        }, \\n        {\\n            \\\"accountingCodeName\\\": \\\"\\\", \\n            \\\"cf_phases__c\\\": \\\"Phase 1\\\", \\n            \\\"type\\\": \\\"Debit\\\"\\n        }\\n    ], \\n    \\\"notes\\\": \\\"Transfer to accounting system\\\", \\n    \\\"transferredToAccounting\\\": \\\"Yes\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/journal-entries/{je-number}/cancel" : {
      "put" : {
        "tags" : [ "Summary Journal Entries" ],
        "summary" : "Cancel summary journal entry",
        "description" : "\nThis reference describes how to cancel a summary journal entry using the REST API.\n\nYou must have the \"Cancel Journal Entry\" user permission enabled to cancel summary journal entries.\n\nA summary journal entry cannot be canceled if its Transferred to Accounting status is \"Yes\" or \"Processing\".\n",
        "operationId" : "PUT_SummaryJournalEntry",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "je-number",
          "in" : "path",
          "description" : "Journal entry number in the format JE-00000001.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CommonResponseType"
            },
            "examples" : {
              "application/json" : {
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X PUT -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{}' \"https://rest.zuora.com/v1/journal-entries/{je-number}/cancel\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/journal-entries/{je-number}/cancel');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/journal-entries/{je-number}/cancel\")\n  .put(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"PUT\", \"/journal-entries/{je-number}/cancel\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/journal-entries/{je-number}/cancel\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/journal-entries/{je-number}/cancel\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/journal-runs" : {
      "post" : {
        "tags" : [ "Journal Runs" ],
        "summary" : "Create journal run",
        "description" : "This REST API reference describes how to create a journal run. Request and response field descriptions and sample code are provided.\n",
        "operationId" : "POST_JournalRun",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/POSTJournalRunType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/POSTJournalRunResponseType"
            },
            "examples" : {
              "application/json" : {
                "journalRunNumber" : "JR-00000008",
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"accountingPeriodName\": \"Nov-2014\", \n    \"journalEntryDate\": \"2014-11-04\", \n    \"transactionTypes\": [\n        {\n            \"type\": \"Invoice Item\"\n        }, \n        {\n            \"type\": \"Revenue Event Item\"\n        }\n    ]\n}' \"https://rest.zuora.com/v1/journal-runs\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/journal-runs');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"accountingPeriodName\": \"Nov-2014\", \n    \"journalEntryDate\": \"2014-11-04\", \n    \"transactionTypes\": [\n        {\n            \"type\": \"Invoice Item\"\n        }, \n        {\n            \"type\": \"Revenue Event Item\"\n        }\n    ]\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"accountingPeriodName\\\": \\\"Nov-2014\\\", \\n    \\\"journalEntryDate\\\": \\\"2014-11-04\\\", \\n    \\\"transactionTypes\\\": [\\n        {\\n            \\\"type\\\": \\\"Invoice Item\\\"\\n        }, \\n        {\\n            \\\"type\\\": \\\"Revenue Event Item\\\"\\n        }\\n    ]\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/journal-runs\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"accountingPeriodName\\\": \\\"Nov-2014\\\", \\n    \\\"journalEntryDate\\\": \\\"2014-11-04\\\", \\n    \\\"transactionTypes\\\": [\\n        {\\n            \\\"type\\\": \\\"Invoice Item\\\"\\n        }, \\n        {\\n            \\\"type\\\": \\\"Revenue Event Item\\\"\\n        }\\n    ]\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/journal-runs\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/journal-runs\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"accountingPeriodName\\\": \\\"Nov-2014\\\", \\n    \\\"journalEntryDate\\\": \\\"2014-11-04\\\", \\n    \\\"transactionTypes\\\": [\\n        {\\n            \\\"type\\\": \\\"Invoice Item\\\"\\n        }, \\n        {\\n            \\\"type\\\": \\\"Revenue Event Item\\\"\\n        }\\n    ]\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/journal-runs\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"accountingPeriodName\\\": \\\"Nov-2014\\\", \\n    \\\"journalEntryDate\\\": \\\"2014-11-04\\\", \\n    \\\"transactionTypes\\\": [\\n        {\\n            \\\"type\\\": \\\"Invoice Item\\\"\\n        }, \\n        {\\n            \\\"type\\\": \\\"Revenue Event Item\\\"\\n        }\\n    ]\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/journal-runs/{jr-number}" : {
      "get" : {
        "tags" : [ "Journal Runs" ],
        "summary" : "Get journal run",
        "description" : "This REST API reference describes how to get information about a journal run. Request and response field descriptions and sample code are provided.\n",
        "operationId" : "GET_JournalRun",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "jr-number",
          "in" : "path",
          "description" : "Journal run number. Must be a valid journal run number in the format `JR-00000001`.\n",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GETJournalRunType"
            },
            "examples" : {
              "application/json" : {
                "number" : "JR-00000002",
                "status" : "Completed",
                "executedOn" : "2014-11-15 22:05:12",
                "segmentationRuleName" : "s1",
                "totalJournalEntryCount" : 2,
                "targetStartDate" : "2016-03-01",
                "targetEndDate" : "2016-03-31",
                "journalEntryDate" : "2016-02-02",
                "transactionTypes" : [ {
                  "type" : "Invoice Item"
                } ],
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/journal-runs/{jr-number}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/journal-runs/{jr-number}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/journal-runs/{jr-number}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/journal-runs/{jr-number}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/journal-runs/{jr-number}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/journal-runs/{jr-number}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Journal Runs" ],
        "summary" : "Delete journal run",
        "description" : "This reference describes how to delete a journal run using the REST API.\n                      \n You can only delete journal runs that have already been canceled.\n                      \n You must have the \"Delete Cancelled Journal Run\" Zuora Finance user permission enabled to delete journal runs.\n",
        "operationId" : "DELETE_JournalRun",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "jr-number",
          "in" : "path",
          "description" : "Journal run number. Must be a valid journal run number in the format `JR-00000001`.\n",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CommonResponseType"
            },
            "examples" : {
              "application/json" : {
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/journal-runs/{jr-number}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/journal-runs/{jr-number}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/journal-runs/{jr-number}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/journal-runs/{jr-number}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/journal-runs/{jr-number}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/journal-runs/{jr-number}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/journal-runs/{jr-number}/cancel" : {
      "put" : {
        "tags" : [ "Journal Runs" ],
        "summary" : "Cancel journal run",
        "description" : "This reference describes how to cancel a journal run using the REST API.\n          \nThe summary journal entries in the journal run are canceled asynchronously. See the \"Example\" section below for details.\n          \nYou must have the \"Cancel Journal Run\" Zuora Finance user permission enabled to cancel journal runs.\n\n## Notes\nWhen you cancel a journal run, the summary journal entries associated with that journal run are canceled asynchronously. A response of `{ \"success\": true }` means only that the specified journal run has a status of \"Pending\", \"Error\", or \"Completed\" and therefore can be canceled, but does not mean that the whole journal run was successfully canceled.\n\nFor example, let's say you want to cancel journal run JR-00000075. The journal run status is \"Completed\" and it contains ten journal entries. One of the journal entries has its Transferred to Accounting status set to \"Yes\", meaning that the entry cannot be canceled. The workflow might go as follows:\n1. You make an API call to cancel the journal run.\n2. The journal run status is \"Completed\", so you receive a response of `{ \"success\": true }`.\n3. Zuora begins asynchronously canceling journal entries associated with the journal run. The journal entry whose Transferred to Accounting status is \"Yes\" fails to be canceled. The cancelation process continues, and the other journal entries are successfully canceled.\n4. The journal run status remains as \"Completed\". The status does not change to \"Canceled\" because the journal run still contains a journey entry that is not canceled.\n",
        "operationId" : "PUT_JournalRun",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "jr-number",
          "in" : "path",
          "description" : "Journal run number. Must be a valid journal run number in the format JR-00000001. \nYou can only cancel a journal run whose status is \"Pending\", \"Error\", or \"Completed\".\n",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CommonResponseType"
            },
            "examples" : {
              "application/json" : {
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X PUT -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{}' \"https://rest.zuora.com/v1/journal-runs/{jr-number}/cancel\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/journal-runs/{jr-number}/cancel');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/journal-runs/{jr-number}/cancel\")\n  .put(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"PUT\", \"/journal-runs/{jr-number}/cancel\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/journal-runs/{jr-number}/cancel\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/journal-runs/{jr-number}/cancel\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/notification-history/callout" : {
      "get" : {
        "tags" : [ "Notification History" ],
        "summary" : "Get callout notification histories",
        "description" : "This REST API reference describes how to get a notification history for callouts.\n",
        "operationId" : "GETCalloutHistoryVOs",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : "The final date and time of records to be returned. Defaults to now. Use format yyyy-MM-ddTHH:mm:ss.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "startTime",
          "in" : "query",
          "description" : "The initial date and time of records to be returned. Defaults to (end time - 1 day). Use format yyyy-MM-ddTHH:mm:ss.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "objectId",
          "in" : "query",
          "description" : "The ID of an object that triggered a callout notification.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "failedOnly",
          "in" : "query",
          "description" : "If `true`, only return failed records. If `false`, return all records in the given date range. The default value is `true`.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "eventCategory",
          "in" : "query",
          "description" : "Category of records to be returned by event category.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "includeResponseContent",
          "in" : "query",
          "description" : "",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GETCalloutHistoryVOsType"
            },
            "examples" : {
              "application/json" : {
                "calloutHistories" : [ {
                  "responseCode" : 405,
                  "requestUrl" : "https://www.google.com",
                  "requestMethod" : "POST",
                  "eventCategory" : 1210,
                  "notification" : "New Subscription Created",
                  "attemptedNum" : 3,
                  "createTime" : "2015-01-13T03:33:51",
                  "eventContext" : {
                    "<Account.Currency>" : "USD",
                    "<Subscription.SubscriptionDetailTable>" : {
                      "Charge Name" : "recurringcharge",
                      "Charge Type" : "Recurring",
                      "Effective Start Date" : "01 / 01 / 2016",
                      "Unit Price" : 50.0,
                      "QTY" : 5.0,
                      "Total" : 250.0
                    },
                    "<Account.CurrencySymbol>" : "$",
                    "<BillToContact.FirstName>" : "Mary",
                    "<Subscription.ServiceActivation>" : "01/01/2016",
                    "<Subscription.InitialTerm>" : "50",
                    "<Subscription.RenewalTerm>" : "0",
                    "<Subscription.CustomerAcceptance>" : "01/01/2016",
                    "<Account.Name>" : "test",
                    "<Subscription.SubscriptionName>" : "A-S00000003",
                    "<Account.ID>" : "402881e54ade80c8014ade884c48000b",
                    "<BillToContact.WorkEmail>" : "test@test.test",
                    "<Account.Number>" : "A00000001",
                    "<Subscription.TermStartDate>" : "01/01/2016",
                    "<Event.Timestamp>" : "2015-01-13T22:31:43.248+0800",
                    "<Subscription.AutoRenew>" : "No",
                    "<Notification>" : {
                      "id" : "402892fa47866fe701478674a5c100eb",
                      "EmailTemplate" : "New Subscription Created Default Email Template",
                      "Event" : "New Subscription Created",
                      "Profile" : "Default Profile",
                      "emailAction" : true,
                      "calloutAction" : true,
                      "updatedOn" : "01/12/2015 03:23:08",
                      "updatedBy" : "402892fa47866fe7014786749d9b0002"
                    },
                    "<BillToContact.LastName>" : "Smith",
                    "<Object.ID>" : "402881e54ae37f31014ae3b514e100fd",
                    "<Subscription.ContractEffective>" : "01/01/2016",
                    "<Subscription.TCV>" : "$12,500.00",
                    "<Contact.ID>" : "402881e54ade80c8014ade884c51000c",
                    "<Subscription.CMRR>" : "$250.00",
                    "<BillToContact.ID>" : "402881e54ade80c8014ade884c51000c",
                    "<Event.Category>" : "SubscriptionCreated",
                    "<Subscription.TermSetting>" : "termed",
                    "<BillingAccount.ID>" : "402881e54ade80c8014ade884c48000b",
                    "<Subscription.CreateDate>" : "01/13/2015",
                    "<Subscription.TermEndDate>" : "03/01/2020",
                    "<Subscription.ID>" : "402881e54ae37f31014ae3b514e100fd",
                    "<Event.ID>" : "402892fa47866fe701478674a4ff0093",
                    "<Subscription.CreatedBy>" : "da@da.com"
                  }
                } ],
                "nextPage" : "https://localhost:8080/apps/v1/notification-history/callout?page=2&pageSize=1&startTime=2015-01-12T00:00:00&endTime=2015-01-15T00:00:00&failedOnly=false&eventCategory=1000",
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/notification-history/callout\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/notification-history/callout');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/notification-history/callout\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/notification-history/callout\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/notification-history/callout\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/notification-history/callout\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/notification-history/email" : {
      "get" : {
        "tags" : [ "Notification History" ],
        "summary" : "Get email notification histories",
        "description" : "This REST API reference describes how to get a notification history for notification emails.\n\n\n## Notes\nRequest parameters and their values may be appended with a \"?\" following the HTTPS GET request.  Additional request parameter are separated by \"&\". \n\nFor example:\n\n`GET https://api.zuora.com/rest/v1/notification-history/email?startTime=2015-01-12T00:00:00&endTime=2015-01-15T00:00:00&failedOnly=false&eventCategory=1000&pageSize=1`\n",
        "operationId" : "GETEmailHistoryVOs",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "endTime",
          "in" : "query",
          "description" : "The end date and time of records to be returned. Defaults to now. Use format yyyy-MM-ddTHH:mm:ss. The maximum date range (endTime - startTime) is three days.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "startTime",
          "in" : "query",
          "description" : "The initial date and time of records to be returned. Defaults to (end time - 1 day). Use format yyyy-MM-ddTHH:mm:ss. The maximum date range (endTime - startTime) is three days.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "objectId",
          "in" : "query",
          "description" : "The Id of an object that triggered an email notification.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "failedOnly",
          "in" : "query",
          "description" : "If `true`, only returns failed records. When `false`, returns all records in the given date range. Defaults to `true` when not specified.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "eventCategory",
          "in" : "query",
          "description" : "Category of records to be returned by event category.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GETEmailHistoryVOsType"
            },
            "examples" : {
              "application/json" : {
                "emailHistories" : [ {
                  "result" : "OK",
                  "errorMessage" : null,
                  "eventCategory" : 1210,
                  "notification" : "New Subscription Created",
                  "subject" : "New subscription A-S00000003 was created and activated",
                  "toEmail" : "mary.smith@company.test",
                  "fromEmail" : "no-reply@sender.test",
                  "cc" : "bob@company.test,chris@company.test",
                  "bcc" : "ceo@company.test,cto@company.test",
                  "replyTo" : "support@sender.test",
                  "sendTime" : "2015-01-13T03:31:43"
                } ],
                "nextPage" : "https://localhost:8080/apps/v1/notification-history/email?page=2&pageSize=1&startTime=2015-01-12T00:00:00&endTime=2015-01-15T00:00:00&failedOnly=false&eventCategory=1000",
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/notification-history/email\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/notification-history/email');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/notification-history/email\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/notification-history/email\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/notification-history/email\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/notification-history/email\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/account" : {
      "post" : {
        "tags" : [ "Accounts" ],
        "summary" : "CRUD: Create Account",
        "description" : "",
        "operationId" : "ProxyPOSTAccount",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "CreateRequest",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProxyCreateAccount"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyCreateOrModifyResponse"
            },
            "examples" : {
              "application/json" : {
                "Success" : true,
                "Id" : "2c93808457d787030157e0321fdf4fab"
              }
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyBadRequestResponse"
            },
            "examples" : {
              "application/json" : {
                "Errors" : [ {
                  "Code" : "INVALID_VALUE",
                  "Message" : "The account number 123xProxy is invalid."
                } ],
                "Success" : false
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"AccountNumber\": \"AN_1476935163869\", \n    \"AutoPay\": false, \n    \"Batch\": \"Batch1\", \n    \"BillCycleDay\": 1, \n    \"CrmId\": \"crmid\", \n    \"Currency\": \"USD\", \n    \"InvoiceTemplateId\": \"2c93808457d787030157e03208864f97\", \n    \"Name\": \"AC_1476935163869\", \n    \"Notes\": \"this is notes\", \n    \"PaymentTerm\": \"Due Upon Receipt\", \n    \"Status\": \"Draft\"\n}' \"https://rest.zuora.com/v1/object/account\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/account');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"AccountNumber\": \"AN_1476935163869\", \n    \"AutoPay\": false, \n    \"Batch\": \"Batch1\", \n    \"BillCycleDay\": 1, \n    \"CrmId\": \"crmid\", \n    \"Currency\": \"USD\", \n    \"InvoiceTemplateId\": \"2c93808457d787030157e03208864f97\", \n    \"Name\": \"AC_1476935163869\", \n    \"Notes\": \"this is notes\", \n    \"PaymentTerm\": \"Due Upon Receipt\", \n    \"Status\": \"Draft\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"AccountNumber\\\": \\\"AN_1476935163869\\\", \\n    \\\"AutoPay\\\": false, \\n    \\\"Batch\\\": \\\"Batch1\\\", \\n    \\\"BillCycleDay\\\": 1, \\n    \\\"CrmId\\\": \\\"crmid\\\", \\n    \\\"Currency\\\": \\\"USD\\\", \\n    \\\"InvoiceTemplateId\\\": \\\"2c93808457d787030157e03208864f97\\\", \\n    \\\"Name\\\": \\\"AC_1476935163869\\\", \\n    \\\"Notes\\\": \\\"this is notes\\\", \\n    \\\"PaymentTerm\\\": \\\"Due Upon Receipt\\\", \\n    \\\"Status\\\": \\\"Draft\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/account\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"AccountNumber\\\": \\\"AN_1476935163869\\\", \\n    \\\"AutoPay\\\": false, \\n    \\\"Batch\\\": \\\"Batch1\\\", \\n    \\\"BillCycleDay\\\": 1, \\n    \\\"CrmId\\\": \\\"crmid\\\", \\n    \\\"Currency\\\": \\\"USD\\\", \\n    \\\"InvoiceTemplateId\\\": \\\"2c93808457d787030157e03208864f97\\\", \\n    \\\"Name\\\": \\\"AC_1476935163869\\\", \\n    \\\"Notes\\\": \\\"this is notes\\\", \\n    \\\"PaymentTerm\\\": \\\"Due Upon Receipt\\\", \\n    \\\"Status\\\": \\\"Draft\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/object/account\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/account\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"AccountNumber\\\": \\\"AN_1476935163869\\\", \\n    \\\"AutoPay\\\": false, \\n    \\\"Batch\\\": \\\"Batch1\\\", \\n    \\\"BillCycleDay\\\": 1, \\n    \\\"CrmId\\\": \\\"crmid\\\", \\n    \\\"Currency\\\": \\\"USD\\\", \\n    \\\"InvoiceTemplateId\\\": \\\"2c93808457d787030157e03208864f97\\\", \\n    \\\"Name\\\": \\\"AC_1476935163869\\\", \\n    \\\"Notes\\\": \\\"this is notes\\\", \\n    \\\"PaymentTerm\\\": \\\"Due Upon Receipt\\\", \\n    \\\"Status\\\": \\\"Draft\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/account\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"AccountNumber\\\": \\\"AN_1476935163869\\\", \\n    \\\"AutoPay\\\": false, \\n    \\\"Batch\\\": \\\"Batch1\\\", \\n    \\\"BillCycleDay\\\": 1, \\n    \\\"CrmId\\\": \\\"crmid\\\", \\n    \\\"Currency\\\": \\\"USD\\\", \\n    \\\"InvoiceTemplateId\\\": \\\"2c93808457d787030157e03208864f97\\\", \\n    \\\"Name\\\": \\\"AC_1476935163869\\\", \\n    \\\"Notes\\\": \\\"this is notes\\\", \\n    \\\"PaymentTerm\\\": \\\"Due Upon Receipt\\\", \\n    \\\"Status\\\": \\\"Draft\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/account/{id}" : {
      "get" : {
        "tags" : [ "Accounts" ],
        "summary" : "CRUD: Retrieve Account",
        "description" : "",
        "operationId" : "ProxyGETAccount",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Object fields to return",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyGetAccount"
            },
            "examples" : {
              "application/json" : {
                "AccountNumber" : "AN_1476935136687",
                "AllowInvoiceEdit" : false,
                "Id" : "2c93808457d787030157e031b5b74a9d",
                "AutoPay" : true,
                "InvoiceDeliveryPrefsPrint" : false,
                "UpdatedDate" : "2016-10-20T05:45:37.000+02:00",
                "CreditBalance" : 0,
                "BillCycleDay" : 1,
                "BcdSettingOption" : "ManualSet",
                "PaymentTerm" : "Due Upon Receipt",
                "Status" : "Draft",
                "TotalInvoiceBalance" : 0,
                "UpdatedById" : "2c93808457d787030157e0319d644922",
                "Batch" : "Batch1",
                "CreatedById" : "2c93808457d787030157e0319d644922",
                "InvoiceDeliveryPrefsEmail" : false,
                "Name" : "AC_1476935136687",
                "SoldToId" : "2c93808457d787030157e031b6444a9e",
                "Notes" : "this is notes",
                "Balance" : 0,
                "InvoiceTemplateId" : "2c93808457d787030157e031a33c4a94",
                "CrmId" : "crmid",
                "BillToId" : "2c93808457d787030157e031b6444a9e",
                "CreatedDate" : "2016-10-20T05:45:36.000+02:00",
                "DefaultPaymentMethodId" : "2c93808457d787030157e031b6d24a9f",
                "Currency" : "USD"
              }
            }
          },
          "404" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyNoDataResponse"
            },
            "examples" : {
              "application/json" : {
                "records" : { },
                "size" : 0,
                "done" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/account/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/account/{id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/account/{id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/object/account/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/account/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/account/{id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "put" : {
        "tags" : [ "Accounts" ],
        "summary" : "CRUD: Update Account",
        "description" : "",
        "operationId" : "ProxyPUTAccount",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "ModifyRequest",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProxyModifyAccount"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyCreateOrModifyResponse"
            },
            "examples" : {
              "application/json" : {
                "Success" : true,
                "Id" : "2c93808457d787030157e0321fdf4fab"
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X PUT -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"AccountNumber\": \"AN_1476935163869\", \n    \"AutoPay\": true, \n    \"Batch\": \"Batch1\", \n    \"BillCycleDay\": 1, \n    \"BillToId\": \"2c93808457d787030157e03220684fac\", \n    \"CrmId\": \"crmid\", \n    \"Currency\": \"USD\", \n    \"DefaultPaymentMethodId\": \"2c93808457d787030157e03220ec4fad\", \n    \"Id\": \"2c93808457d787030157e0321fdf4fab\", \n    \"InvoiceTemplateId\": \"2c93808457d787030157e03208864f97\", \n    \"Name\": \"AC_1476935163869\", \n    \"Notes\": \"this is notes\", \n    \"PaymentTerm\": \"Due Upon Receipt\", \n    \"SoldToId\": \"2c93808457d787030157e03220684fac\", \n    \"Status\": \"Active\"\n}' \"https://rest.zuora.com/v1/object/account/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/account/{id}');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"AccountNumber\": \"AN_1476935163869\", \n    \"AutoPay\": true, \n    \"Batch\": \"Batch1\", \n    \"BillCycleDay\": 1, \n    \"BillToId\": \"2c93808457d787030157e03220684fac\", \n    \"CrmId\": \"crmid\", \n    \"Currency\": \"USD\", \n    \"DefaultPaymentMethodId\": \"2c93808457d787030157e03220ec4fad\", \n    \"Id\": \"2c93808457d787030157e0321fdf4fab\", \n    \"InvoiceTemplateId\": \"2c93808457d787030157e03208864f97\", \n    \"Name\": \"AC_1476935163869\", \n    \"Notes\": \"this is notes\", \n    \"PaymentTerm\": \"Due Upon Receipt\", \n    \"SoldToId\": \"2c93808457d787030157e03220684fac\", \n    \"Status\": \"Active\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"AccountNumber\\\": \\\"AN_1476935163869\\\", \\n    \\\"AutoPay\\\": true, \\n    \\\"Batch\\\": \\\"Batch1\\\", \\n    \\\"BillCycleDay\\\": 1, \\n    \\\"BillToId\\\": \\\"2c93808457d787030157e03220684fac\\\", \\n    \\\"CrmId\\\": \\\"crmid\\\", \\n    \\\"Currency\\\": \\\"USD\\\", \\n    \\\"DefaultPaymentMethodId\\\": \\\"2c93808457d787030157e03220ec4fad\\\", \\n    \\\"Id\\\": \\\"2c93808457d787030157e0321fdf4fab\\\", \\n    \\\"InvoiceTemplateId\\\": \\\"2c93808457d787030157e03208864f97\\\", \\n    \\\"Name\\\": \\\"AC_1476935163869\\\", \\n    \\\"Notes\\\": \\\"this is notes\\\", \\n    \\\"PaymentTerm\\\": \\\"Due Upon Receipt\\\", \\n    \\\"SoldToId\\\": \\\"2c93808457d787030157e03220684fac\\\", \\n    \\\"Status\\\": \\\"Active\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/account/{id}\")\n  .put(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"AccountNumber\\\": \\\"AN_1476935163869\\\", \\n    \\\"AutoPay\\\": true, \\n    \\\"Batch\\\": \\\"Batch1\\\", \\n    \\\"BillCycleDay\\\": 1, \\n    \\\"BillToId\\\": \\\"2c93808457d787030157e03220684fac\\\", \\n    \\\"CrmId\\\": \\\"crmid\\\", \\n    \\\"Currency\\\": \\\"USD\\\", \\n    \\\"DefaultPaymentMethodId\\\": \\\"2c93808457d787030157e03220ec4fad\\\", \\n    \\\"Id\\\": \\\"2c93808457d787030157e0321fdf4fab\\\", \\n    \\\"InvoiceTemplateId\\\": \\\"2c93808457d787030157e03208864f97\\\", \\n    \\\"Name\\\": \\\"AC_1476935163869\\\", \\n    \\\"Notes\\\": \\\"this is notes\\\", \\n    \\\"PaymentTerm\\\": \\\"Due Upon Receipt\\\", \\n    \\\"SoldToId\\\": \\\"2c93808457d787030157e03220684fac\\\", \\n    \\\"Status\\\": \\\"Active\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"PUT\", \"/object/account/{id}\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/account/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"AccountNumber\\\": \\\"AN_1476935163869\\\", \\n    \\\"AutoPay\\\": true, \\n    \\\"Batch\\\": \\\"Batch1\\\", \\n    \\\"BillCycleDay\\\": 1, \\n    \\\"BillToId\\\": \\\"2c93808457d787030157e03220684fac\\\", \\n    \\\"CrmId\\\": \\\"crmid\\\", \\n    \\\"Currency\\\": \\\"USD\\\", \\n    \\\"DefaultPaymentMethodId\\\": \\\"2c93808457d787030157e03220ec4fad\\\", \\n    \\\"Id\\\": \\\"2c93808457d787030157e0321fdf4fab\\\", \\n    \\\"InvoiceTemplateId\\\": \\\"2c93808457d787030157e03208864f97\\\", \\n    \\\"Name\\\": \\\"AC_1476935163869\\\", \\n    \\\"Notes\\\": \\\"this is notes\\\", \\n    \\\"PaymentTerm\\\": \\\"Due Upon Receipt\\\", \\n    \\\"SoldToId\\\": \\\"2c93808457d787030157e03220684fac\\\", \\n    \\\"Status\\\": \\\"Active\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/account/{id}\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"AccountNumber\\\": \\\"AN_1476935163869\\\", \\n    \\\"AutoPay\\\": true, \\n    \\\"Batch\\\": \\\"Batch1\\\", \\n    \\\"BillCycleDay\\\": 1, \\n    \\\"BillToId\\\": \\\"2c93808457d787030157e03220684fac\\\", \\n    \\\"CrmId\\\": \\\"crmid\\\", \\n    \\\"Currency\\\": \\\"USD\\\", \\n    \\\"DefaultPaymentMethodId\\\": \\\"2c93808457d787030157e03220ec4fad\\\", \\n    \\\"Id\\\": \\\"2c93808457d787030157e0321fdf4fab\\\", \\n    \\\"InvoiceTemplateId\\\": \\\"2c93808457d787030157e03208864f97\\\", \\n    \\\"Name\\\": \\\"AC_1476935163869\\\", \\n    \\\"Notes\\\": \\\"this is notes\\\", \\n    \\\"PaymentTerm\\\": \\\"Due Upon Receipt\\\", \\n    \\\"SoldToId\\\": \\\"2c93808457d787030157e03220684fac\\\", \\n    \\\"Status\\\": \\\"Active\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Accounts" ],
        "summary" : "CRUD: Delete Account",
        "description" : "",
        "operationId" : "ProxyDELETEAccount",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyDeleteResponse"
            },
            "examples" : {
              "application/json" : {
                "success" : true,
                "id" : "2c93808457d787030157e031b1ea4a98"
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/account/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/account/{id}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/account/{id}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/object/account/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/account/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/account/{id}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/amendment" : {
      "post" : {
        "tags" : [ "Amendments" ],
        "summary" : "CRUD: Create Amendment",
        "description" : "",
        "operationId" : "ProxyPOSTAmendment",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "CreateRequest",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProxyCreateAmendment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyCreateOrModifyResponse"
            },
            "examples" : {
              "application/json" : {
                "Success" : true,
                "Id" : "2c93808457d787030157e02ec4b42599"
              }
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyBadRequestResponse"
            },
            "examples" : {
              "application/json" : {
                "Errors" : [ {
                  "Code" : "INVALID_VALUE",
                  "Message" : "The account number 123xProxy is invalid."
                } ],
                "Success" : false
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"ContractEffectiveDate\": \"2016-10-20\", \n    \"CustomerAcceptanceDate\": \"2016-10-20\", \n    \"Description\": \"AMpqvyqhhzpg\", \n    \"EffectiveDate\": \"2016-10-20\", \n    \"Name\": \"AMpqvyqhhzpg\", \n    \"RatePlanData\": {\n        \"RatePlan\": {\n            \"ProductRatePlanId\": \"2c93808457d787030157e02ec2202584\"\n        }, \n        \"RatePlanChargeData\": [\n            {\n                \"RatePlanCharge\": {\n                    \"ProductRatePlanChargeId\": \"2c93808457d787030157e02ec34d2587\"\n                }\n            }\n        ]\n    }, \n    \"ServiceActivationDate\": \"2016-10-20\", \n    \"SubscriptionId\": \"2c93808457d787030157e02ec3f9258e\", \n    \"Type\": \"NewProduct\"\n}' \"https://rest.zuora.com/v1/object/amendment\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/amendment');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"ContractEffectiveDate\": \"2016-10-20\", \n    \"CustomerAcceptanceDate\": \"2016-10-20\", \n    \"Description\": \"AMpqvyqhhzpg\", \n    \"EffectiveDate\": \"2016-10-20\", \n    \"Name\": \"AMpqvyqhhzpg\", \n    \"RatePlanData\": {\n        \"RatePlan\": {\n            \"ProductRatePlanId\": \"2c93808457d787030157e02ec2202584\"\n        }, \n        \"RatePlanChargeData\": [\n            {\n                \"RatePlanCharge\": {\n                    \"ProductRatePlanChargeId\": \"2c93808457d787030157e02ec34d2587\"\n                }\n            }\n        ]\n    }, \n    \"ServiceActivationDate\": \"2016-10-20\", \n    \"SubscriptionId\": \"2c93808457d787030157e02ec3f9258e\", \n    \"Type\": \"NewProduct\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"ContractEffectiveDate\\\": \\\"2016-10-20\\\", \\n    \\\"CustomerAcceptanceDate\\\": \\\"2016-10-20\\\", \\n    \\\"Description\\\": \\\"AMpqvyqhhzpg\\\", \\n    \\\"EffectiveDate\\\": \\\"2016-10-20\\\", \\n    \\\"Name\\\": \\\"AMpqvyqhhzpg\\\", \\n    \\\"RatePlanData\\\": {\\n        \\\"RatePlan\\\": {\\n            \\\"ProductRatePlanId\\\": \\\"2c93808457d787030157e02ec2202584\\\"\\n        }, \\n        \\\"RatePlanChargeData\\\": [\\n            {\\n                \\\"RatePlanCharge\\\": {\\n                    \\\"ProductRatePlanChargeId\\\": \\\"2c93808457d787030157e02ec34d2587\\\"\\n                }\\n            }\\n        ]\\n    }, \\n    \\\"ServiceActivationDate\\\": \\\"2016-10-20\\\", \\n    \\\"SubscriptionId\\\": \\\"2c93808457d787030157e02ec3f9258e\\\", \\n    \\\"Type\\\": \\\"NewProduct\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/amendment\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"ContractEffectiveDate\\\": \\\"2016-10-20\\\", \\n    \\\"CustomerAcceptanceDate\\\": \\\"2016-10-20\\\", \\n    \\\"Description\\\": \\\"AMpqvyqhhzpg\\\", \\n    \\\"EffectiveDate\\\": \\\"2016-10-20\\\", \\n    \\\"Name\\\": \\\"AMpqvyqhhzpg\\\", \\n    \\\"RatePlanData\\\": {\\n        \\\"RatePlan\\\": {\\n            \\\"ProductRatePlanId\\\": \\\"2c93808457d787030157e02ec2202584\\\"\\n        }, \\n        \\\"RatePlanChargeData\\\": [\\n            {\\n                \\\"RatePlanCharge\\\": {\\n                    \\\"ProductRatePlanChargeId\\\": \\\"2c93808457d787030157e02ec34d2587\\\"\\n                }\\n            }\\n        ]\\n    }, \\n    \\\"ServiceActivationDate\\\": \\\"2016-10-20\\\", \\n    \\\"SubscriptionId\\\": \\\"2c93808457d787030157e02ec3f9258e\\\", \\n    \\\"Type\\\": \\\"NewProduct\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/object/amendment\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/amendment\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"ContractEffectiveDate\\\": \\\"2016-10-20\\\", \\n    \\\"CustomerAcceptanceDate\\\": \\\"2016-10-20\\\", \\n    \\\"Description\\\": \\\"AMpqvyqhhzpg\\\", \\n    \\\"EffectiveDate\\\": \\\"2016-10-20\\\", \\n    \\\"Name\\\": \\\"AMpqvyqhhzpg\\\", \\n    \\\"RatePlanData\\\": {\\n        \\\"RatePlan\\\": {\\n            \\\"ProductRatePlanId\\\": \\\"2c93808457d787030157e02ec2202584\\\"\\n        }, \\n        \\\"RatePlanChargeData\\\": [\\n            {\\n                \\\"RatePlanCharge\\\": {\\n                    \\\"ProductRatePlanChargeId\\\": \\\"2c93808457d787030157e02ec34d2587\\\"\\n                }\\n            }\\n        ]\\n    }, \\n    \\\"ServiceActivationDate\\\": \\\"2016-10-20\\\", \\n    \\\"SubscriptionId\\\": \\\"2c93808457d787030157e02ec3f9258e\\\", \\n    \\\"Type\\\": \\\"NewProduct\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/amendment\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"ContractEffectiveDate\\\": \\\"2016-10-20\\\", \\n    \\\"CustomerAcceptanceDate\\\": \\\"2016-10-20\\\", \\n    \\\"Description\\\": \\\"AMpqvyqhhzpg\\\", \\n    \\\"EffectiveDate\\\": \\\"2016-10-20\\\", \\n    \\\"Name\\\": \\\"AMpqvyqhhzpg\\\", \\n    \\\"RatePlanData\\\": {\\n        \\\"RatePlan\\\": {\\n            \\\"ProductRatePlanId\\\": \\\"2c93808457d787030157e02ec2202584\\\"\\n        }, \\n        \\\"RatePlanChargeData\\\": [\\n            {\\n                \\\"RatePlanCharge\\\": {\\n                    \\\"ProductRatePlanChargeId\\\": \\\"2c93808457d787030157e02ec34d2587\\\"\\n                }\\n            }\\n        ]\\n    }, \\n    \\\"ServiceActivationDate\\\": \\\"2016-10-20\\\", \\n    \\\"SubscriptionId\\\": \\\"2c93808457d787030157e02ec3f9258e\\\", \\n    \\\"Type\\\": \\\"NewProduct\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/amendment/{id}" : {
      "get" : {
        "tags" : [ "Amendments" ],
        "summary" : "CRUD: Retrieve Amendment",
        "description" : "",
        "operationId" : "ProxyGETAmendment",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Object fields to return",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyGetAmendment"
            },
            "examples" : {
              "application/json" : {
                "RenewalSetting" : "RENEW_WITH_SPECIFIC_TERM",
                "Id" : "2c93808457d787030157e02e430c1f15",
                "UpdatedDate" : "2016-10-20T05:41:50.000+02:00",
                "SubscriptionId" : "2c93808457d787030157e02e3ef61f02",
                "ServiceActivationDate" : "2016-10-20",
                "CurrentTermPeriodType" : "Month",
                "Description" : "AMtssl1bnuq1",
                "ContractEffectiveDate" : "2016-10-20",
                "CreatedById" : "2c93808457d787030157e02e0bcf1d0c",
                "CreatedDate" : "2016-10-20T05:41:50.000+02:00",
                "Name" : "AMtssl1bnuq1_new",
                "CustomerAcceptanceDate" : "2016-10-20",
                "Code" : "A-AM00000004",
                "RenewalTermPeriodType" : "Month",
                "Type" : "NewProduct",
                "Status" : "Draft",
                "UpdatedById" : "2c93808457d787030157e02e0bcf1d0c",
                "EffectiveDate" : "2016-10-20"
              }
            }
          },
          "404" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyNoDataResponse"
            },
            "examples" : {
              "application/json" : {
                "records" : { },
                "size" : 0,
                "done" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/amendment/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/amendment/{id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/amendment/{id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/object/amendment/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/amendment/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/amendment/{id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "put" : {
        "tags" : [ "Amendments" ],
        "summary" : "CRUD: Update Amendment",
        "description" : "",
        "operationId" : "ProxyPUTAmendment",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "ModifyRequest",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProxyModifyAmendment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyCreateOrModifyResponse"
            },
            "examples" : {
              "application/json" : {
                "Success" : true,
                "Id" : "2c93808457d787030157e02e430c1f15"
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X PUT -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"Id\": \"2c93808457d787030157e02e430c1f15\", \n    \"Name\": \"AMtssl1bnuq1_new\"\n}' \"https://rest.zuora.com/v1/object/amendment/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/amendment/{id}');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"Id\": \"2c93808457d787030157e02e430c1f15\", \n    \"Name\": \"AMtssl1bnuq1_new\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"Id\\\": \\\"2c93808457d787030157e02e430c1f15\\\", \\n    \\\"Name\\\": \\\"AMtssl1bnuq1_new\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/amendment/{id}\")\n  .put(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"Id\\\": \\\"2c93808457d787030157e02e430c1f15\\\", \\n    \\\"Name\\\": \\\"AMtssl1bnuq1_new\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"PUT\", \"/object/amendment/{id}\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/amendment/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"Id\\\": \\\"2c93808457d787030157e02e430c1f15\\\", \\n    \\\"Name\\\": \\\"AMtssl1bnuq1_new\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/amendment/{id}\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"Id\\\": \\\"2c93808457d787030157e02e430c1f15\\\", \\n    \\\"Name\\\": \\\"AMtssl1bnuq1_new\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Amendments" ],
        "summary" : "CRUD: Delete Amendment",
        "description" : "",
        "operationId" : "ProxyDELETEAmendment",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyDeleteResponse"
            },
            "examples" : {
              "application/json" : {
                "success" : true,
                "id" : "2c93808457d787030157e02e3a541ef4"
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/amendment/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/amendment/{id}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/amendment/{id}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/object/amendment/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/amendment/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/amendment/{id}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/communication-profile/{id}" : {
      "get" : {
        "tags" : [ "Communication Profiles" ],
        "summary" : "CRUD: Retrieve CommunicationProfile",
        "description" : "",
        "operationId" : "ProxyGETCommunicationProfile",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Object fields to return",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyGetCommunicationProfile"
            }
          },
          "404" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyNoDataResponse"
            },
            "examples" : {
              "application/json" : {
                "records" : { },
                "size" : 0,
                "done" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/communication-profile/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/communication-profile/{id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/communication-profile/{id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/object/communication-profile/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/communication-profile/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/communication-profile/{id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Communication Profiles" ],
        "summary" : "CRUD: Delete CommunicationProfile",
        "description" : "",
        "operationId" : "ProxyDELETECommunicationProfile",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyDeleteResponse"
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/communication-profile/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/communication-profile/{id}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/communication-profile/{id}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/object/communication-profile/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/communication-profile/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/communication-profile/{id}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/contact" : {
      "post" : {
        "tags" : [ "Contacts" ],
        "summary" : "CRUD: Create Contact",
        "description" : "",
        "operationId" : "ProxyPOSTContact",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "CreateRequest",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProxyCreateContact"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyCreateOrModifyResponse"
            },
            "examples" : {
              "application/json" : {
                "Success" : true,
                "Id" : "2c93808457d787030157e03220684fac"
              }
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyBadRequestResponse"
            },
            "examples" : {
              "application/json" : {
                "Errors" : [ {
                  "Code" : "INVALID_VALUE",
                  "Message" : "The account number 123xProxy is invalid."
                } ],
                "Success" : false
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"AccountId\": \"2c93808457d787030157e0321fdf4fab\", \n    \"Address1\": \"312 2nd Ave W\", \n    \"City\": \"Seattle\", \n    \"Country\": \"United States\", \n    \"Description\": \"desc\", \n    \"Fax\": \"123456\", \n    \"FirstName\": \"FN1476935164020\", \n    \"HomePhone\": \"86123456789\", \n    \"LastName\": \"LN1476935164020\", \n    \"MobilePhone\": \"8613312345678\", \n    \"NickName\": \"this is nick name\", \n    \"OtherPhone\": \"11111111111111111\", \n    \"OtherPhoneType\": \"Work\", \n    \"PersonalEmail\": \"person@test.com\", \n    \"PostalCode\": \"98119\", \n    \"State\": \"Washington\", \n    \"TaxRegion\": \"CA\", \n    \"WorkEmail\": \"work@test.com\"\n}' \"https://rest.zuora.com/v1/object/contact\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/contact');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"AccountId\": \"2c93808457d787030157e0321fdf4fab\", \n    \"Address1\": \"312 2nd Ave W\", \n    \"City\": \"Seattle\", \n    \"Country\": \"United States\", \n    \"Description\": \"desc\", \n    \"Fax\": \"123456\", \n    \"FirstName\": \"FN1476935164020\", \n    \"HomePhone\": \"86123456789\", \n    \"LastName\": \"LN1476935164020\", \n    \"MobilePhone\": \"8613312345678\", \n    \"NickName\": \"this is nick name\", \n    \"OtherPhone\": \"11111111111111111\", \n    \"OtherPhoneType\": \"Work\", \n    \"PersonalEmail\": \"person@test.com\", \n    \"PostalCode\": \"98119\", \n    \"State\": \"Washington\", \n    \"TaxRegion\": \"CA\", \n    \"WorkEmail\": \"work@test.com\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"AccountId\\\": \\\"2c93808457d787030157e0321fdf4fab\\\", \\n    \\\"Address1\\\": \\\"312 2nd Ave W\\\", \\n    \\\"City\\\": \\\"Seattle\\\", \\n    \\\"Country\\\": \\\"United States\\\", \\n    \\\"Description\\\": \\\"desc\\\", \\n    \\\"Fax\\\": \\\"123456\\\", \\n    \\\"FirstName\\\": \\\"FN1476935164020\\\", \\n    \\\"HomePhone\\\": \\\"86123456789\\\", \\n    \\\"LastName\\\": \\\"LN1476935164020\\\", \\n    \\\"MobilePhone\\\": \\\"8613312345678\\\", \\n    \\\"NickName\\\": \\\"this is nick name\\\", \\n    \\\"OtherPhone\\\": \\\"11111111111111111\\\", \\n    \\\"OtherPhoneType\\\": \\\"Work\\\", \\n    \\\"PersonalEmail\\\": \\\"person@test.com\\\", \\n    \\\"PostalCode\\\": \\\"98119\\\", \\n    \\\"State\\\": \\\"Washington\\\", \\n    \\\"TaxRegion\\\": \\\"CA\\\", \\n    \\\"WorkEmail\\\": \\\"work@test.com\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/contact\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"AccountId\\\": \\\"2c93808457d787030157e0321fdf4fab\\\", \\n    \\\"Address1\\\": \\\"312 2nd Ave W\\\", \\n    \\\"City\\\": \\\"Seattle\\\", \\n    \\\"Country\\\": \\\"United States\\\", \\n    \\\"Description\\\": \\\"desc\\\", \\n    \\\"Fax\\\": \\\"123456\\\", \\n    \\\"FirstName\\\": \\\"FN1476935164020\\\", \\n    \\\"HomePhone\\\": \\\"86123456789\\\", \\n    \\\"LastName\\\": \\\"LN1476935164020\\\", \\n    \\\"MobilePhone\\\": \\\"8613312345678\\\", \\n    \\\"NickName\\\": \\\"this is nick name\\\", \\n    \\\"OtherPhone\\\": \\\"11111111111111111\\\", \\n    \\\"OtherPhoneType\\\": \\\"Work\\\", \\n    \\\"PersonalEmail\\\": \\\"person@test.com\\\", \\n    \\\"PostalCode\\\": \\\"98119\\\", \\n    \\\"State\\\": \\\"Washington\\\", \\n    \\\"TaxRegion\\\": \\\"CA\\\", \\n    \\\"WorkEmail\\\": \\\"work@test.com\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/object/contact\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/contact\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"AccountId\\\": \\\"2c93808457d787030157e0321fdf4fab\\\", \\n    \\\"Address1\\\": \\\"312 2nd Ave W\\\", \\n    \\\"City\\\": \\\"Seattle\\\", \\n    \\\"Country\\\": \\\"United States\\\", \\n    \\\"Description\\\": \\\"desc\\\", \\n    \\\"Fax\\\": \\\"123456\\\", \\n    \\\"FirstName\\\": \\\"FN1476935164020\\\", \\n    \\\"HomePhone\\\": \\\"86123456789\\\", \\n    \\\"LastName\\\": \\\"LN1476935164020\\\", \\n    \\\"MobilePhone\\\": \\\"8613312345678\\\", \\n    \\\"NickName\\\": \\\"this is nick name\\\", \\n    \\\"OtherPhone\\\": \\\"11111111111111111\\\", \\n    \\\"OtherPhoneType\\\": \\\"Work\\\", \\n    \\\"PersonalEmail\\\": \\\"person@test.com\\\", \\n    \\\"PostalCode\\\": \\\"98119\\\", \\n    \\\"State\\\": \\\"Washington\\\", \\n    \\\"TaxRegion\\\": \\\"CA\\\", \\n    \\\"WorkEmail\\\": \\\"work@test.com\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/contact\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"AccountId\\\": \\\"2c93808457d787030157e0321fdf4fab\\\", \\n    \\\"Address1\\\": \\\"312 2nd Ave W\\\", \\n    \\\"City\\\": \\\"Seattle\\\", \\n    \\\"Country\\\": \\\"United States\\\", \\n    \\\"Description\\\": \\\"desc\\\", \\n    \\\"Fax\\\": \\\"123456\\\", \\n    \\\"FirstName\\\": \\\"FN1476935164020\\\", \\n    \\\"HomePhone\\\": \\\"86123456789\\\", \\n    \\\"LastName\\\": \\\"LN1476935164020\\\", \\n    \\\"MobilePhone\\\": \\\"8613312345678\\\", \\n    \\\"NickName\\\": \\\"this is nick name\\\", \\n    \\\"OtherPhone\\\": \\\"11111111111111111\\\", \\n    \\\"OtherPhoneType\\\": \\\"Work\\\", \\n    \\\"PersonalEmail\\\": \\\"person@test.com\\\", \\n    \\\"PostalCode\\\": \\\"98119\\\", \\n    \\\"State\\\": \\\"Washington\\\", \\n    \\\"TaxRegion\\\": \\\"CA\\\", \\n    \\\"WorkEmail\\\": \\\"work@test.com\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/contact/{id}" : {
      "get" : {
        "tags" : [ "Contacts" ],
        "summary" : "CRUD: Retrieve Contact",
        "description" : "",
        "operationId" : "ProxyGETContact",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Object fields to return",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyGetContact"
            },
            "examples" : {
              "application/json" : {
                "OtherPhoneType" : "Work",
                "MobilePhone" : "8613312345678",
                "Id" : "2c93808457d787030157e02e606e2095",
                "FirstName" : "FN1476934918260_new",
                "NickName" : "this is nick name",
                "UpdatedDate" : "2016-10-20T05:41:58.000+02:00",
                "Country" : "United States",
                "WorkEmail" : "work@test.com",
                "HomePhone" : "86123456789",
                "AccountId" : "2c93808457d787030157e02e5fde2094",
                "Description" : "desc",
                "OtherPhone" : "11111111111111111",
                "Fax" : "123456",
                "CreatedById" : "2c93808457d787030157e02e45291f18",
                "CreatedDate" : "2016-10-20T05:41:58.000+02:00",
                "PostalCode" : "98119",
                "UpdatedById" : "2c93808457d787030157e02e45291f18",
                "City" : "Seattle",
                "TaxRegion" : "CA",
                "State" : "Washington",
                "PersonalEmail" : "person@test.com",
                "Address1" : "312 2nd Ave W",
                "LastName" : "LN1476934918260"
              }
            }
          },
          "404" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyNoDataResponse"
            },
            "examples" : {
              "application/json" : {
                "records" : { },
                "size" : 0,
                "done" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/contact/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/contact/{id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/contact/{id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/object/contact/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/contact/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/contact/{id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "put" : {
        "tags" : [ "Contacts" ],
        "summary" : "CRUD: Update Contact",
        "description" : "",
        "operationId" : "ProxyPUTContact",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "ModifyRequest",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProxyModifyContact"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyCreateOrModifyResponse"
            },
            "examples" : {
              "application/json" : {
                "Success" : true,
                "Id" : "2c93808457d787030157e02e606e2095"
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X PUT -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"FirstName\": \"FN1476934918260_new\", \n    \"Id\": \"2c93808457d787030157e02e606e2095\"\n}' \"https://rest.zuora.com/v1/object/contact/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/contact/{id}');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"FirstName\": \"FN1476934918260_new\", \n    \"Id\": \"2c93808457d787030157e02e606e2095\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"FirstName\\\": \\\"FN1476934918260_new\\\", \\n    \\\"Id\\\": \\\"2c93808457d787030157e02e606e2095\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/contact/{id}\")\n  .put(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"FirstName\\\": \\\"FN1476934918260_new\\\", \\n    \\\"Id\\\": \\\"2c93808457d787030157e02e606e2095\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"PUT\", \"/object/contact/{id}\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/contact/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"FirstName\\\": \\\"FN1476934918260_new\\\", \\n    \\\"Id\\\": \\\"2c93808457d787030157e02e606e2095\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/contact/{id}\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"FirstName\\\": \\\"FN1476934918260_new\\\", \\n    \\\"Id\\\": \\\"2c93808457d787030157e02e606e2095\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Contacts" ],
        "summary" : "CRUD: Delete Contact",
        "description" : "",
        "operationId" : "ProxyDELETEContact",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyDeleteResponse"
            },
            "examples" : {
              "application/json" : {
                "success" : true,
                "id" : "2c93808457d787030157e02e5b26208f"
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/contact/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/contact/{id}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/contact/{id}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/object/contact/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/contact/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/contact/{id}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/credit-balance-adjustment/{id}" : {
      "get" : {
        "tags" : [ "Credit Balance Adjustments" ],
        "summary" : "CRUD: Retrieve CreditBalanceAdjustment",
        "description" : "",
        "operationId" : "ProxyGETCreditBalanceAdjustment",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Object fields to return",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyGetCreditBalanceAdjustment"
            },
            "examples" : {
              "application/json" : {
                "Id" : "2c93808457d787030157e02f640b2c9f",
                "CancelledOn" : "2016-10-20T05:43:05.000+02:00",
                "Amount" : 30.8,
                "UpdatedById" : "2c93808457d787030157e02f409a2af9",
                "CreatedById" : "2c93808457d787030157e02f409a2af9",
                "CreatedDate" : "2016-10-20T05:43:04.000+02:00",
                "ReasonCode" : "Standard Adjustment",
                "SourceTransactionNumber" : "INV00000001",
                "Number" : "CBA-00000001",
                "AdjustmentDate" : "2016-10-20",
                "Type" : "Increase",
                "Status" : "Canceled",
                "AccountId" : "2c93808457d787030157e02f5fb82c76",
                "SourceTransactionId" : "2c93808457d787030157e02f60a42c87",
                "SourceTransactionType" : "Invoice",
                "UpdatedDate" : "2016-10-20T05:43:05.000+02:00"
              }
            }
          },
          "404" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyNoDataResponse"
            },
            "examples" : {
              "application/json" : {
                "records" : { },
                "size" : 0,
                "done" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/credit-balance-adjustment/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/credit-balance-adjustment/{id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/credit-balance-adjustment/{id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/object/credit-balance-adjustment/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/credit-balance-adjustment/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/credit-balance-adjustment/{id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Credit Balance Adjustments" ],
        "summary" : "CRUD: Delete CreditBalanceAdjustment",
        "description" : "",
        "operationId" : "ProxyDELETECreditBalanceAdjustment",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyDeleteResponse"
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/credit-balance-adjustment/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/credit-balance-adjustment/{id}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/credit-balance-adjustment/{id}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/object/credit-balance-adjustment/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/credit-balance-adjustment/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/credit-balance-adjustment/{id}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/export" : {
      "post" : {
        "tags" : [ "Exports" ],
        "summary" : "CRUD: Create Export",
        "description" : "",
        "operationId" : "ProxyPOSTExport",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "CreateRequest",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProxyCreateExport"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyCreateOrModifyResponse"
            },
            "examples" : {
              "application/json" : {
                "Success" : true,
                "Id" : "2c93808457d787030157e03222184fae"
              }
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyBadRequestResponse"
            },
            "examples" : {
              "application/json" : {
                "Errors" : [ {
                  "Code" : "INVALID_VALUE",
                  "Message" : "The account number 123xProxy is invalid."
                } ],
                "Success" : false
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"Format\": \"csv\", \n    \"Name\": \"test_Export_1476935164445\", \n    \"Query\": \"select * from account\", \n    \"Status\": \"Processing\", \n    \"Zip\": true\n}' \"https://rest.zuora.com/v1/object/export\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/export');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"Format\": \"csv\", \n    \"Name\": \"test_Export_1476935164445\", \n    \"Query\": \"select * from account\", \n    \"Status\": \"Processing\", \n    \"Zip\": true\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"Format\\\": \\\"csv\\\", \\n    \\\"Name\\\": \\\"test_Export_1476935164445\\\", \\n    \\\"Query\\\": \\\"select * from account\\\", \\n    \\\"Status\\\": \\\"Processing\\\", \\n    \\\"Zip\\\": true\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/export\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"Format\\\": \\\"csv\\\", \\n    \\\"Name\\\": \\\"test_Export_1476935164445\\\", \\n    \\\"Query\\\": \\\"select * from account\\\", \\n    \\\"Status\\\": \\\"Processing\\\", \\n    \\\"Zip\\\": true\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/object/export\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/export\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"Format\\\": \\\"csv\\\", \\n    \\\"Name\\\": \\\"test_Export_1476935164445\\\", \\n    \\\"Query\\\": \\\"select * from account\\\", \\n    \\\"Status\\\": \\\"Processing\\\", \\n    \\\"Zip\\\": true\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/export\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"Format\\\": \\\"csv\\\", \\n    \\\"Name\\\": \\\"test_Export_1476935164445\\\", \\n    \\\"Query\\\": \\\"select * from account\\\", \\n    \\\"Status\\\": \\\"Processing\\\", \\n    \\\"Zip\\\": true\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/export/{id}" : {
      "get" : {
        "tags" : [ "Exports" ],
        "summary" : "CRUD: Retrieve Export",
        "description" : "",
        "operationId" : "ProxyGETExport",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Object fields to return",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyGetExport"
            },
            "examples" : {
              "application/json" : {
                "Format" : "csv",
                "Query" : "select * from account",
                "Encrypted" : false,
                "CreatedById" : "2c93808457d787030157e03202294e25",
                "CreatedDate" : "2016-10-20T05:46:04.000+02:00",
                "Name" : "test_Export_1476935164445",
                "Zip" : true,
                "Size" : 5,
                "UpdatedDate" : "2016-10-20T05:46:04.000+02:00",
                "UpdatedById" : "2c93808457d787030157e03202294e25",
                "Status" : "Completed",
                "Id" : "2c93808457d787030157e03222184fae",
                "FileId" : "2c93808457d787030157e032228d4fb0"
              }
            }
          },
          "404" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyNoDataResponse"
            },
            "examples" : {
              "application/json" : {
                "records" : { },
                "size" : 0,
                "done" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/export/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/export/{id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/export/{id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/object/export/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/export/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/export/{id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Exports" ],
        "summary" : "CRUD: Delete Export",
        "description" : "",
        "operationId" : "ProxyDELETEExport",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyDeleteResponse"
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/export/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/export/{id}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/export/{id}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/object/export/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/export/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/export/{id}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/feature/{id}" : {
      "get" : {
        "tags" : [ "Features" ],
        "summary" : "CRUD: Retrieve Feature",
        "description" : "",
        "operationId" : "ProxyGETFeature",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Object fields to return",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyGetFeature"
            },
            "examples" : {
              "application/json" : {
                "Id" : "2c93808457d787030157e02f82872e25",
                "Status" : "Active",
                "CreatedDate" : "2016-10-20T05:43:12.000+02:00",
                "UpdatedDate" : "2016-10-20T05:43:12.000+02:00",
                "FeatureCode" : "feature_code_1476934992537",
                "CreatedById" : "2c93808457d787030157e02f68272cae",
                "UpdatedById" : "2c93808457d787030157e02f68272cae",
                "Name" : "name_1476934992537_new",
                "Description" : "this is desc"
              }
            }
          },
          "404" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyNoDataResponse"
            },
            "examples" : {
              "application/json" : {
                "records" : { },
                "size" : 0,
                "done" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/feature/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/feature/{id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/feature/{id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/object/feature/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/feature/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/feature/{id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Features" ],
        "summary" : "CRUD: Delete Feature",
        "description" : "",
        "operationId" : "ProxyDELETEFeature",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyDeleteResponse"
            },
            "examples" : {
              "application/json" : {
                "success" : true,
                "id" : "2c93808457d787030157e02f80e92e24"
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/feature/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/feature/{id}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/feature/{id}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/object/feature/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/feature/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/feature/{id}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/import/{id}" : {
      "get" : {
        "tags" : [ "Imports" ],
        "summary" : "CRUD: Retrieve Import",
        "description" : "",
        "operationId" : "ProxyGETImport",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Object fields to return",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyGetImport"
            }
          },
          "404" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyNoDataResponse"
            },
            "examples" : {
              "application/json" : {
                "records" : { },
                "size" : 0,
                "done" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/import/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/import/{id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/import/{id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/object/import/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/import/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/import/{id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Imports" ],
        "summary" : "CRUD: Delete Import",
        "description" : "",
        "operationId" : "ProxyDELETEImport",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyDeleteResponse"
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/import/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/import/{id}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/import/{id}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/object/import/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/import/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/import/{id}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/invoice" : {
      "post" : {
        "tags" : [ "Invoices" ],
        "summary" : "CRUD: Create Invoice",
        "description" : "",
        "operationId" : "ProxyPOSTInvoice",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "CreateRequest",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProxyCreateInvoice"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyCreateOrModifyResponse"
            },
            "examples" : {
              "application/json" : {
                "Success" : true,
                "Id" : "2c93808457d787030157e031d3914c40"
              }
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyBadRequestResponse"
            },
            "examples" : {
              "application/json" : {
                "Errors" : [ {
                  "Code" : "INVALID_VALUE",
                  "Message" : "The account number 123xProxy is invalid."
                } ],
                "Success" : false
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"AccountId\": \"2c93808457d787030157e031d2704c28\", \n    \"InvoiceDate\": \"2016-10-20\", \n    \"TargetDate\": \"2016-10-20\"\n}' \"https://rest.zuora.com/v1/object/invoice\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/invoice');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"AccountId\": \"2c93808457d787030157e031d2704c28\", \n    \"InvoiceDate\": \"2016-10-20\", \n    \"TargetDate\": \"2016-10-20\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"AccountId\\\": \\\"2c93808457d787030157e031d2704c28\\\", \\n    \\\"InvoiceDate\\\": \\\"2016-10-20\\\", \\n    \\\"TargetDate\\\": \\\"2016-10-20\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/invoice\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"AccountId\\\": \\\"2c93808457d787030157e031d2704c28\\\", \\n    \\\"InvoiceDate\\\": \\\"2016-10-20\\\", \\n    \\\"TargetDate\\\": \\\"2016-10-20\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/object/invoice\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/invoice\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"AccountId\\\": \\\"2c93808457d787030157e031d2704c28\\\", \\n    \\\"InvoiceDate\\\": \\\"2016-10-20\\\", \\n    \\\"TargetDate\\\": \\\"2016-10-20\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/invoice\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"AccountId\\\": \\\"2c93808457d787030157e031d2704c28\\\", \\n    \\\"InvoiceDate\\\": \\\"2016-10-20\\\", \\n    \\\"TargetDate\\\": \\\"2016-10-20\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/invoice-adjustment" : {
      "post" : {
        "tags" : [ "Invoice Adjustments" ],
        "summary" : "CRUD: Create InvoiceAdjustment",
        "description" : "",
        "operationId" : "ProxyPOSTInvoiceAdjustment",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "CreateRequest",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProxyCreateInvoiceAdjustment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyCreateOrModifyResponse"
            },
            "examples" : {
              "application/json" : {
                "Success" : true,
                "Id" : "2c93808457d787030157e030d3043f79"
              }
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyBadRequestResponse"
            },
            "examples" : {
              "application/json" : {
                "Errors" : [ {
                  "Code" : "INVALID_VALUE",
                  "Message" : "The account number 123xProxy is invalid."
                } ],
                "Success" : false
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"AccountingCode\": \"Accounts Receivable\", \n    \"AdjustmentDate\": \"2016-10-20\", \n    \"Amount\": 1.2, \n    \"Comments\": \"this is comments\", \n    \"InvoiceId\": \"2c93808457d787030157e030d10f3f64\", \n    \"InvoiceNumber\": \"INV00000001\", \n    \"ReferenceId\": \"refid-1476935078657\", \n    \"Type\": \"Credit\"\n}' \"https://rest.zuora.com/v1/object/invoice-adjustment\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/invoice-adjustment');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"AccountingCode\": \"Accounts Receivable\", \n    \"AdjustmentDate\": \"2016-10-20\", \n    \"Amount\": 1.2, \n    \"Comments\": \"this is comments\", \n    \"InvoiceId\": \"2c93808457d787030157e030d10f3f64\", \n    \"InvoiceNumber\": \"INV00000001\", \n    \"ReferenceId\": \"refid-1476935078657\", \n    \"Type\": \"Credit\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"AccountingCode\\\": \\\"Accounts Receivable\\\", \\n    \\\"AdjustmentDate\\\": \\\"2016-10-20\\\", \\n    \\\"Amount\\\": 1.2, \\n    \\\"Comments\\\": \\\"this is comments\\\", \\n    \\\"InvoiceId\\\": \\\"2c93808457d787030157e030d10f3f64\\\", \\n    \\\"InvoiceNumber\\\": \\\"INV00000001\\\", \\n    \\\"ReferenceId\\\": \\\"refid-1476935078657\\\", \\n    \\\"Type\\\": \\\"Credit\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/invoice-adjustment\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"AccountingCode\\\": \\\"Accounts Receivable\\\", \\n    \\\"AdjustmentDate\\\": \\\"2016-10-20\\\", \\n    \\\"Amount\\\": 1.2, \\n    \\\"Comments\\\": \\\"this is comments\\\", \\n    \\\"InvoiceId\\\": \\\"2c93808457d787030157e030d10f3f64\\\", \\n    \\\"InvoiceNumber\\\": \\\"INV00000001\\\", \\n    \\\"ReferenceId\\\": \\\"refid-1476935078657\\\", \\n    \\\"Type\\\": \\\"Credit\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/object/invoice-adjustment\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/invoice-adjustment\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"AccountingCode\\\": \\\"Accounts Receivable\\\", \\n    \\\"AdjustmentDate\\\": \\\"2016-10-20\\\", \\n    \\\"Amount\\\": 1.2, \\n    \\\"Comments\\\": \\\"this is comments\\\", \\n    \\\"InvoiceId\\\": \\\"2c93808457d787030157e030d10f3f64\\\", \\n    \\\"InvoiceNumber\\\": \\\"INV00000001\\\", \\n    \\\"ReferenceId\\\": \\\"refid-1476935078657\\\", \\n    \\\"Type\\\": \\\"Credit\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/invoice-adjustment\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"AccountingCode\\\": \\\"Accounts Receivable\\\", \\n    \\\"AdjustmentDate\\\": \\\"2016-10-20\\\", \\n    \\\"Amount\\\": 1.2, \\n    \\\"Comments\\\": \\\"this is comments\\\", \\n    \\\"InvoiceId\\\": \\\"2c93808457d787030157e030d10f3f64\\\", \\n    \\\"InvoiceNumber\\\": \\\"INV00000001\\\", \\n    \\\"ReferenceId\\\": \\\"refid-1476935078657\\\", \\n    \\\"Type\\\": \\\"Credit\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/invoice-adjustment/{id}" : {
      "get" : {
        "tags" : [ "Invoice Adjustments" ],
        "summary" : "CRUD: Retrieve InvoiceAdjustment",
        "description" : "",
        "operationId" : "ProxyGETInvoiceAdjustment",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Object fields to return",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyGetInvoiceAdjustment"
            },
            "examples" : {
              "application/json" : {
                "AdjustmentNumber" : "IA-00000001",
                "CustomerName" : "AC_1476935078064",
                "Id" : "2c93808457d787030157e030d3043f79",
                "AccountingCode" : "Accounts Receivable",
                "ReasonCode" : "Standard Adjustment",
                "AccountId" : "2c93808457d787030157e030d0a43f53",
                "CustomerNumber" : "AN_1476935078064",
                "InvoiceId" : "2c93808457d787030157e030d10f3f64",
                "ImpactAmount" : -1.2,
                "CreatedById" : "2c93808457d787030157e030b4fa3dd6",
                "CreatedDate" : "2016-10-20T05:44:38.000+02:00",
                "Type" : "Credit",
                "Amount" : 1.2,
                "AdjustmentDate" : "2016-10-20",
                "Comments" : "this is comments",
                "UpdatedDate" : "2016-10-20T05:44:38.000+02:00",
                "Status" : "Processed",
                "InvoiceNumber" : "INV00000001",
                "ReferenceId" : "refid-1476935078657",
                "UpdatedById" : "2c93808457d787030157e030b4fa3dd6"
              }
            }
          },
          "404" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyNoDataResponse"
            },
            "examples" : {
              "application/json" : {
                "records" : { },
                "size" : 0,
                "done" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/invoice-adjustment/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/invoice-adjustment/{id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/invoice-adjustment/{id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/object/invoice-adjustment/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/invoice-adjustment/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/invoice-adjustment/{id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "put" : {
        "tags" : [ "Invoice Adjustments" ],
        "summary" : "CRUD: Update InvoiceAdjustment",
        "description" : "",
        "operationId" : "ProxyPUTInvoiceAdjustment",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "ModifyRequest",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProxyModifyInvoiceAdjustment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyCreateOrModifyResponse"
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X PUT -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{}' \"https://rest.zuora.com/v1/object/invoice-adjustment/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/invoice-adjustment/{id}');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/invoice-adjustment/{id}\")\n  .put(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"PUT\", \"/object/invoice-adjustment/{id}\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/invoice-adjustment/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/invoice-adjustment/{id}\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Invoice Adjustments" ],
        "summary" : "CRUD: Delete InvoiceAdjustment",
        "description" : "",
        "operationId" : "ProxyDELETEInvoiceAdjustment",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyDeleteResponse"
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/invoice-adjustment/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/invoice-adjustment/{id}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/invoice-adjustment/{id}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/object/invoice-adjustment/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/invoice-adjustment/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/invoice-adjustment/{id}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/invoice-item-adjustment/{id}" : {
      "get" : {
        "tags" : [ "Invoice Item Adjustments" ],
        "summary" : "CRUD: Retrieve InvoiceItemAdjustment",
        "description" : "",
        "operationId" : "ProxyGETInvoiceItemAdjustment",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Object fields to return",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyGetInvoiceItemAdjustment"
            },
            "examples" : {
              "application/json" : {
                "AdjustmentNumber" : "IIA-00000001",
                "ServiceEndDate" : "2016-10-20",
                "Id" : "2c93808457d787030157e0324aea5158",
                "AccountingCode" : "Accounts Receivable",
                "UpdatedDate" : "2016-10-20T05:46:14.000+02:00",
                "AccountId" : "2c93808457d787030157e032485b5131",
                "Comment" : "this is comments",
                "InvoiceNumber" : "INV00000001",
                "InvoiceId" : "2c93808457d787030157e03248c75142",
                "ServiceStartDate" : "2016-10-20",
                "InvoiceItemName" : "OneTime_Flat Fee Pricing1476935174089",
                "CreatedDate" : "2016-10-20T05:46:14.000+02:00",
                "ReasonCode" : "Standard Adjustment",
                "UpdatedById" : "2c93808457d787030157e032283c4fb2",
                "Amount" : 1.2,
                "AdjustmentDate" : "2016-10-20",
                "Type" : "Credit",
                "Status" : "Processed",
                "SourceType" : "InvoiceDetail",
                "SourceId" : "2c93808457d787030157e03248c95144",
                "ReferenceId" : "refid-1476935174845",
                "CreatedById" : "2c93808457d787030157e032283c4fb2"
              }
            }
          },
          "404" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyNoDataResponse"
            },
            "examples" : {
              "application/json" : {
                "records" : { },
                "size" : 0,
                "done" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/invoice-item-adjustment/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/invoice-item-adjustment/{id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/invoice-item-adjustment/{id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/object/invoice-item-adjustment/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/invoice-item-adjustment/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/invoice-item-adjustment/{id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Invoice Item Adjustments" ],
        "summary" : "CRUD: Delete InvoiceItemAdjustment",
        "description" : "",
        "operationId" : "ProxyDELETEInvoiceItemAdjustment",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyDeleteResponse"
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/invoice-item-adjustment/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/invoice-item-adjustment/{id}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/invoice-item-adjustment/{id}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/object/invoice-item-adjustment/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/invoice-item-adjustment/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/invoice-item-adjustment/{id}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/invoice-item/{id}" : {
      "get" : {
        "tags" : [ "Invoice Items" ],
        "summary" : "CRUD: Retrieve InvoiceItem",
        "description" : "",
        "operationId" : "ProxyGETInvoiceItem",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Object fields to return",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyGetInvoiceItem"
            },
            "examples" : {
              "application/json" : {
                "ServiceEndDate" : "2016-10-20",
                "Id" : "2c93808457d787030157e03089c03c3b",
                "ChargeDate" : "2016-10-20T05:44:19.000+02:00",
                "AccountingCode" : "Accounts Receivable",
                "UnitPrice" : 10,
                "SubscriptionId" : "2c93808457d787030157e03088bf3c24",
                "ProcessingType" : 0,
                "Quantity" : 1,
                "PicklistCustom__c" : "2",
                "ChargeAmount" : 10,
                "ServiceStartDate" : "2016-10-20",
                "CreatedById" : "2c93808457d787030157e03071873a9a",
                "CreatedDate" : "2016-10-20T05:44:19.000+02:00",
                "TaxAmount" : 0,
                "ChargeName" : "OneTime_Flat Fee Pricing1476935059154",
                "SKU" : "API-SKU1476935058740",
                "UpdatedDate" : "2016-10-20T05:44:21.000+02:00",
                "UpdatedById" : "2c93808457d787030157e03071873a9a",
                "TaxExemptAmount" : 0,
                "InvoiceId" : "2c93808457d787030157e03089bb3c39",
                "ProductDescription" : "Create product via API",
                "RatePlanChargeId" : "2c93808457d787030157e03088ec3c2d"
              }
            }
          },
          "404" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyNoDataResponse"
            },
            "examples" : {
              "application/json" : {
                "records" : { },
                "size" : 0,
                "done" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/invoice-item/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/invoice-item/{id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/invoice-item/{id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/object/invoice-item/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/invoice-item/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/invoice-item/{id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Invoice Items" ],
        "summary" : "CRUD: Delete InvoiceItem",
        "description" : "",
        "operationId" : "ProxyDELETEInvoiceItem",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyDeleteResponse"
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/invoice-item/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/invoice-item/{id}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/invoice-item/{id}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/object/invoice-item/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/invoice-item/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/invoice-item/{id}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/invoice-payment" : {
      "post" : {
        "tags" : [ "Invoice Payments" ],
        "summary" : "CRUD: Create InvoicePayment",
        "description" : "",
        "operationId" : "ProxyPOSTInvoicePayment",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "CreateRequest",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProxyCreateInvoicePayment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyCreateOrModifyResponse"
            },
            "examples" : {
              "application/json" : {
                "Success" : true,
                "Id" : "2c93808457d787030157e02dee6e1b7a"
              }
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyBadRequestResponse"
            },
            "examples" : {
              "application/json" : {
                "Errors" : [ {
                  "Code" : "INVALID_VALUE",
                  "Message" : "The account number 123xProxy is invalid."
                } ],
                "Success" : false
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"Amount\": 10, \n    \"InvoiceId\": \"2c93808457d787030157e02deadb1b6d\", \n    \"PaymentId\": \"2c93808457d787030157e02de5fc1b57\"\n}' \"https://rest.zuora.com/v1/object/invoice-payment\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/invoice-payment');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"Amount\": 10, \n    \"InvoiceId\": \"2c93808457d787030157e02deadb1b6d\", \n    \"PaymentId\": \"2c93808457d787030157e02de5fc1b57\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"Amount\\\": 10, \\n    \\\"InvoiceId\\\": \\\"2c93808457d787030157e02deadb1b6d\\\", \\n    \\\"PaymentId\\\": \\\"2c93808457d787030157e02de5fc1b57\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/invoice-payment\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"Amount\\\": 10, \\n    \\\"InvoiceId\\\": \\\"2c93808457d787030157e02deadb1b6d\\\", \\n    \\\"PaymentId\\\": \\\"2c93808457d787030157e02de5fc1b57\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/object/invoice-payment\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/invoice-payment\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"Amount\\\": 10, \\n    \\\"InvoiceId\\\": \\\"2c93808457d787030157e02deadb1b6d\\\", \\n    \\\"PaymentId\\\": \\\"2c93808457d787030157e02de5fc1b57\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/invoice-payment\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"Amount\\\": 10, \\n    \\\"InvoiceId\\\": \\\"2c93808457d787030157e02deadb1b6d\\\", \\n    \\\"PaymentId\\\": \\\"2c93808457d787030157e02de5fc1b57\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/invoice-payment/{id}" : {
      "get" : {
        "tags" : [ "Invoice Payments" ],
        "summary" : "CRUD: Retrieve InvoicePayment",
        "description" : "",
        "operationId" : "ProxyGETInvoicePayment",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Object fields to return",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyGetInvoicePayment"
            },
            "examples" : {
              "application/json" : {
                "Id" : "2c93808457d787030157e02dee6e1b7a",
                "PaymentId" : "2c93808457d787030157e02de5fc1b57",
                "CreatedDate" : "2016-10-20T05:41:29.000+02:00",
                "UpdatedDate" : "2016-10-20T05:41:29.000+02:00",
                "Amount" : 10,
                "CreatedById" : "2c93808457d787030157e02dc3d919dc",
                "UpdatedById" : "2c93808457d787030157e02dc3d919dc",
                "RefundAmount" : 0,
                "InvoiceId" : "2c93808457d787030157e02deadb1b6d"
              }
            }
          },
          "404" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyNoDataResponse"
            },
            "examples" : {
              "application/json" : {
                "records" : { },
                "size" : 0,
                "done" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/invoice-payment/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/invoice-payment/{id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/invoice-payment/{id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/object/invoice-payment/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/invoice-payment/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/invoice-payment/{id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "put" : {
        "tags" : [ "Invoice Payments" ],
        "summary" : "CRUD: Update InvoicePayment",
        "description" : "",
        "operationId" : "ProxyPUTInvoicePayment",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "ModifyRequest",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProxyModifyInvoicePayment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyCreateOrModifyResponse"
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X PUT -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{}' \"https://rest.zuora.com/v1/object/invoice-payment/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/invoice-payment/{id}');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/invoice-payment/{id}\")\n  .put(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"PUT\", \"/object/invoice-payment/{id}\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/invoice-payment/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/invoice-payment/{id}\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Invoice Payments" ],
        "summary" : "CRUD: Delete InvoicePayment",
        "description" : "",
        "operationId" : "ProxyDELETEInvoicePayment",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyDeleteResponse"
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/invoice-payment/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/invoice-payment/{id}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/invoice-payment/{id}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/object/invoice-payment/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/invoice-payment/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/invoice-payment/{id}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/invoice-split-item/{id}" : {
      "get" : {
        "tags" : [ "Invoice Split Items" ],
        "summary" : "CRUD: Retrieve InvoiceSplitItem",
        "description" : "",
        "operationId" : "ProxyGETInvoiceSplitItem",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Object fields to return",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyGetInvoiceSplitItem"
            },
            "examples" : {
              "application/json" : {
                "InvoiceDate" : "2011-01-20",
                "UpdatedById" : "2c93808457d787030157e031bb3f4aa5",
                "CreatedById" : "2c93808457d787030157e031bb3f4aa5",
                "CreatedDate" : "2016-10-20T05:45:45.000+02:00",
                "UpdatedDate" : "2016-10-20T05:45:45.000+02:00",
                "SplitPercentage" : 50.9,
                "PaymentTerm" : "Due Upon Receipt",
                "Id" : "2c93808457d787030157e031d7214c55",
                "InvoiceSplitId" : "2c93808457d787030157e031d5844c53"
              }
            }
          },
          "404" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyNoDataResponse"
            },
            "examples" : {
              "application/json" : {
                "records" : { },
                "size" : 0,
                "done" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/invoice-split-item/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/invoice-split-item/{id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/invoice-split-item/{id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/object/invoice-split-item/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/invoice-split-item/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/invoice-split-item/{id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Invoice Split Items" ],
        "summary" : "CRUD: Delete InvoiceSplitItem",
        "description" : "",
        "operationId" : "ProxyDELETEInvoiceSplitItem",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyDeleteResponse"
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/invoice-split-item/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/invoice-split-item/{id}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/invoice-split-item/{id}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/object/invoice-split-item/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/invoice-split-item/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/invoice-split-item/{id}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/invoice-split/{id}" : {
      "get" : {
        "tags" : [ "Invoice Splits" ],
        "summary" : "CRUD: Retrieve InvoiceSplit",
        "description" : "",
        "operationId" : "ProxyGETInvoiceSplit",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Object fields to return",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyGetInvoiceSplit"
            },
            "examples" : {
              "application/json" : {
                "UpdatedById" : "2c93808457d787030157e03111d542ae",
                "Id" : "2c93808457d787030157e0312cb2445c",
                "CreatedById" : "2c93808457d787030157e03111d542ae",
                "CreatedDate" : "2016-10-20T05:45:01.000+02:00",
                "UpdatedDate" : "2016-10-20T05:45:01.000+02:00",
                "InvoiceId" : "2c93808457d787030157e0312aa34449"
              }
            }
          },
          "404" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyNoDataResponse"
            },
            "examples" : {
              "application/json" : {
                "records" : { },
                "size" : 0,
                "done" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/invoice-split/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/invoice-split/{id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/invoice-split/{id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/object/invoice-split/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/invoice-split/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/invoice-split/{id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Invoice Splits" ],
        "summary" : "CRUD: Delete InvoiceSplit",
        "description" : "",
        "operationId" : "ProxyDELETEInvoiceSplit",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyDeleteResponse"
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/invoice-split/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/invoice-split/{id}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/invoice-split/{id}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/object/invoice-split/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/invoice-split/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/invoice-split/{id}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/invoice/{id}" : {
      "get" : {
        "tags" : [ "Invoices" ],
        "summary" : "CRUD: Retrieve Invoice",
        "description" : "",
        "operationId" : "ProxyGETInvoice",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Object fields to return",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyGetInvoice"
            },
            "examples" : {
              "application/json" : {
                "InvoiceDate" : "2011-01-10",
                "TaxExemptAmount" : 0,
                "UpdatedDate" : "2016-10-20T05:45:45.000+02:00",
                "CreditBalanceAdjustmentAmount" : 0,
                "Status" : "Posted",
                "TargetDate" : "2016-10-20",
                "AccountId" : "2c93808457d787030157e031d2704c28",
                "IncludesOneTime" : true,
                "InvoiceNumber" : "INV00000002",
                "UpdatedById" : "2c93808457d787030157e031bb3f4aa5",
                "PaymentAmount" : 0,
                "Id" : "2c93808457d787030157e031d86c4c57",
                "TaxAmount" : 0,
                "IncludesUsage" : true,
                "CreatedById" : "2c93808457d787030157e031bb3f4aa5",
                "CreatedDate" : "2016-10-20T05:45:45.000+02:00",
                "Body" : "JVBERi0xLjUNCjQgMCBvYmoNCjw8L1R5cGUgL1BhZ2UvUGFyZW50IDMgMCBSL0NvbnRlbnRzIDUgMCBSL01lZGlhQm94IFswIDAgNjEyIDc5Ml0vUmVzb3VyY2VzPDwvRm9udDw8L0ZBQUFBSCA3IDAgUi9GQUFBQkQgMTMgMCBSL0ZBQUFCRiAxNSAwIFI+Pi9YT2JqZWN0PDwvWDEgMTAgMCBSL1gyIDExIDAgUj4+Pj4vR3JvdXAgPDwvVHlwZS9Hcm91cC9TL1RyYW5zcGFyZW5jeS9DUy9EZXZpY2VSR0I+Pi9Bbm5vdHNbOSAwIFIgXT4+DQplbmRvYmoNCjUgMCBvYmoNCjw8L0xlbmd0aCAxNyAwIFIvRmlsdGVyIC9GbGF0ZURlY29kZT4+c3RyZWFtDQp4nO1caW8bxxn+Kws0KNwiGs995FOVKE4MNL6kJM2ngJFom61IOhSVxP31fd7Za2a5B6kLTiElsLWzc7z3PO87sxYFx39HAn+4IIvzZfFrIWKbKIwupGSGGo/wOy+WhTEef1/Gvy1nRknOhUEDdcga3hc/Fqviy7Pi6bNj/HxbSFucva3mxnpS2EJqJpTmnDtfnC3R/q54Ugz9/O3s38URjTpSnElraZgpzk6KJ89f/PDy+VdfU4evz4rXOQdOWaaD4zxIP8SJCMxwhQlBY8lK3lLy8mucdFkI6ZgRzjhu4gxjz3Ee6aRwYfQN7zzXK+Zzk+CSbvkg8Pb0X6I4WUMCr7tS8IpxJUJw1uc6PjKMFAClFcIwG39VVR9oCf+DYcOZCvhRgRouswapBYN48TvXJDzRbWlYqalpFuTlMgEtTlKLLHnMG9KnyKMseaxN68uTImSWlQ5If28srM9QGqI6y/V3EtywoD3kaUY6CViehEhl7DRILy88UyaOCg2Rry7ns6s5UVrSqyTjFlYMf0GHs4viyWa+XGzbDtIyHwzm0Lbq8GH2cTlfJV20ZMHACIKtu2zXX4wKQ2DWwCWGeH84Dz+trzcJgQpeC5EFUS1+vl5+mK0+JvRpprSA/WlZdVnNlvNxApVjyhPX90Dg7OJiM7+6GidAO+aNDUFbdZ8EKMOMMYE8uHpZDmHeCpqzbj1fbD9+nkwJs5EY5kTd4Wo72yZ2JeH05PWqsYm/ti8D846M3Fev/rv4MC4MAx4VRYZ7EMaH9+tV6hCi5CxwVxvL9fKX+WacQOuZF4KcRN85gfPlbHEZ32jmYwQZV9Ve5uUCk97BvMqgPNDLB+asLgPyYC+QxKTGn7rulfYTOjQxPQbmJvp7mF4V9+Ovt434g0L3JFHac4XuE//z1W/rxXlqAgabWiWbUqTPFpfJe+GZcTARW4fMH+abq8V6NRHzODYAR2SMm4gQQC8iwHXUDak9gSeO0yI5IjY9aDdOi/SMe9CijbwhMX8ZpwTuphUv488YJQExI3Yztndb69mTLO1rTpuKkLP5Znk1TgyZG6eoH8Z3VhKLwO7bQ8jJdRoERYuO9lWNkdh44HJeyXGBwJw0xSnRS8er6835+2qnB1tSYgu3dURp4gYkKrWqWl9uLsowh9jtCD77iAWHB0yo1sbIBAqNmDB4+KeH2CUG9bByOrucX+WARMCdEZwqOl7B/aa8zynsIIiqiKzDkQyBopl6VPaGCdo0vex10ePz8/V1aowKIdCAwdCArBdxTxknOWgmA2EkOe6kCOU8kuB7LWGQGuFqe3i+erveLGfbPWKYxoYQkZ4eA6gGGwKBSjvhR46Tl5Ys9pDeEpMuBCTAfO+OAonVO0r89d52lN5tHJDNBmWEtkL5O9kKepfh4qngT+Er4k5CfO8ayHx5+SPvJHr3LtIbKoOpvfr7D+tV5vXK0XtXu9Cb+fl88WF7JwH9NoLuBOy9YuEDxKhelo5f/NxYqeY63En86V/pqwNW6oaVw5ZSQiZ2wmFHFB1MDYfl6iJ/zQmONrHv+LcU2QFleALTps4Uf2xfDpPfiXdDOS+2VUlr8/GdvZfJ0/lsu72cSlotg7nC5fkN0qQfZ1fvF6t329LrRhJTy6xDzFbuBmYRkCWFz/eRqXHYY8mt3A0S8O9Xi+08UbuSiFPkfrJW+ymlqxM5knXMUt1RubEcyQELAiPD0tVYJoWcwRNkMDew8N/Xm//8A+Ru2fl6OU4zcDK3CjSbkQ1a8sAMWaKSY3kdOYuwBHPGeilsZkHHdKVK/tKOHGjSIl0SHHGgO0tSJJROMsCBQK5blu84QgJ3XmNezryC6gwycla2IQXevMMTQDjHRr9EFCZ7oR1Vi9h0mTdhf1FUxaIi5GU5MG96X7z9eyTuCAsb+rOc1rdzHNXzJm1SppOUY/O2EYzBsl3p+NuCqokpPgoK81Gm6eB3kGIo9/PaLr769vjNN1+3Zm4CxAODrVOe0++/++74zU+9KIpn/FcSDwLpvqNKAgvaQBtASRC+jT+uI3JbioELoyqJpy2YXdf4oxV40tQvcBvaKSp5p00QbTJFI+5s2v3F3XE9xnuT3NPrX67ON4AaizVJkkrUsaBBResKyCGoxRODBLDAw8p54k5CpwkXSFAXbxdJKen1nkKHXG0qaUBdJNp1YaaUUtqSCzodPaCCWljoGomOC0VonenGkxaPGl3LruzvVh+KwfBJzr5PK2/yciNiDJAoFFFX7V5dzlZVpVIQ8vKu9oryxEd5qmuHWGfb0eOLtD68r5Zo+xWJTpbYdnRHS2lLrot09ISWSNV5ApRqKRbtGjVVT/epJ6OxuVIS5xRIYybIclwTpd7PNu+iOMEip7QHoDDVhWICGxEQW916Mt9WJc+DFKCAsDoKAFoWuQKSllzM6egJBZAWhxWAKNy6Sflwr+IH1STx/tg13/xWFejGstHQk43uLOSYljGOhN6C03yzWF8crjPow2Y60wBrudOkLR2dJaOndIaualhnPNUZv2+dSSaj/YTeYiY2nO06JrYC68WyZzC7QWp2uIcATHU8BDN2pZ205DJNR09Im1Q27CHaJBGqfLhPaXvGA4/C7gtPZ7M/Dpcjgf5Mjnvgz1SSyfgpSUIdI7HmYe2WTvtNaay9onx5dvzPRJg53tQwCV7VKct7AAcAv4B9M0Y5Zxqu8ra9ufryWeEbrpjSgVvjdcTb8EVTepvG3I4uaijd+mVb0ojOuTvelwRxPBrAF0/U2yifJ1kR5FaY60FEwekoR9UHi02Q36wvrs+3hL1eXfbLgHdF92S2mhAb3xGW0tKOVzchNEVnel72HDkejo/uQKYDRTTmRTnJSHEAdi7pweytnGQv3oVZuwMgLq8JoiGFzodWda+dEQq+EEj7YL4zgsDxF/2jDLYOX0HB/daxiFlUQYa+uiNeruZni+X852eXs+2Av1HhLdZ3hd9zPSQI0C3tBnqHsWfzAfEBnjIRqsO2/daBhi1zypYlX+r4arM4X6zeNb6gjFPjxXVQqumcZqRkrB3j5AZCuVuYzuvrGVLT7ccBrYIQaal2hccu9wPsayqByBKrdIZMVNOpzi8nSqkWqa4HmPNC3IJrKhIO6NsCn9H27PdVNyK/l2T4QnRHkN6H/EULJsh8udoZNihZO6iMzwRVt8ePQTUl1QhHI2cVXjPFwQsAz25sPTj1eZjdirl4Rw1JkE6Kls3JHB3j0EmOHQiPgEelG+mCrqsQOPcm1tmeHA34d7uiwa6veamRaODZarvHl4cmIg8iwQgyaYjrSiBK8DPYjehl52Ck/yDsxFrYCDuZo9wKbn+K2slxN1WWNB08meAegfcj8H4E3o/AexR4v5mfX282wKqj0NsBSUiACUCJPTGSpO84LIGdHbQzAr0R2+hIXvpdiHRj6O3UgEcExSS5kLRyZ5aB5YJpL2R0hxwNoAfBBTO+uuqx5zp0SULUx9G7HK438f7WY0bxmFHcaUbxmFJ8GimFEn+2lMK0Jxu9oBW7L3/MKf406olnI8U3cYHf42xEPY8XgLjGTFYRZaedjnQKQss0ByPLvGlieArSpWC+vrCyzN6kRwvjc2h4St0zn6NMkzQ2GKkmJqGuoe6azzLBToqQc3bSN+PsZD0zdtI3E+x0uybsZDSOs5OG7pyd9M04O1nPjJ30zQQ73a4JOxmNE+wkcbTDTvJmgp20Z85O8maKnU7XlJ2UxnF20jCas5O+GWcn65mxk76ZYKfbNWEno3GCnSSMdthJ3kywk/bM2UneTLHT6Zqyk9I4zs5RdZVO1iHRtsfHsm9AfYeu+Zh6uXPE3LwaGA2Wm09FOqPTVwOjiVfrGl6z4dm7IWZJIjJUEukwnb0rJ8jLWIZL5ujQ3Kqdi6R4C7ysKmrGL1Wiv2g/jUi+eKi/9W/vUsYbZc1F8ni6fdqDhZNrrEYpFkCk8+UV7PJj9/o2WHtD76i+DtY2UU6oYopQHtyLbku55++PnAX3ab2lfJIRLzX3Aqqng+6o8vyOKl1RpYwD+aIwyGopK/UtUP5ms75Kvt6i4lb+Ofnxkj5P6v/UZxwIIvNukVP5cOfsAV8KURXj+tj7LLImoXXZywGnr3adaW1BdC1BdOygYUF06P/UNI+I4ehbCkKNfaI5WVw1X54BYWq6zOl8/fHgp6pwQ/8gQojotF/hHZjfueMS2P+nrskNDBVRfK9Uyitrs8tPVauTbtz14FytTjN5kF6xM7ZbMWk3a9jVMYhs1rjrHeMhSueHVHT6LTaXGN9tu4X2naKiWIifKVIljhJpwdvzpbPZH3dluPfJRhaaetjoC039KVJ7Pb3BsZynljOG4Ntrug3S1aWDjiYgpkS6WUIR2NQwwztjSjcZH+QiPZ0UZZzBqTLFxHB+CJDPbprvAPHJITqU3OXwPfSrIB3o9O5V1djWn0+3YQZtoWK9w2H2rkbtr1OwXf3rX/8DsHL9QA0KZW5kc3RyZWFtDQplbmRvYmoNCjE3IDAgb2JqDQozMzQ3IA0KZW5kb2JqDQoxOCAwIG9iag0KPDwvVHlwZSAvUGFnZS9QYXJlbnQgMyAwIFIvQ29udGVudHMgMTkgMCBSL01lZGlhQm94IFswIDAgNjEyIDc5Ml0vUmVzb3VyY2VzPDwvRm9udDw8L0ZBQUFBSCA3IDAgUj4+L1hPYmplY3Q8PC9YMSAxMCAwIFI+Pj4+L0dyb3VwIDw8L1R5cGUvR3JvdXAvUy9UcmFuc3BhcmVuY3kvQ1MvRGV2aWNlUkdCPj4vQW5ub3RzWzIwIDAgUiBdPj4NCmVuZG9iag0KMTkgMCBvYmoNCjw8L0xlbmd0aCAyMSAwIFIvRmlsdGVyIC9GbGF0ZURlY29kZT4+c3RyZWFtDQp4nOVcW5MdtRH+K/PAg5OqFbpf8rbYDnEVmJg9TsjjYtZmU3sxazvAv0+3NJeWRqM55+wZQhED5kxr1CN93dM3SSM6Dv+cCfjLBdm9ue1+6kSkic7oTkpmkHgGv3l32xnj4f838f+WM6Mk58IAAW/ICD92/+zuui923ed/PYc/f+uk7XZve97wPClsJzUTSnPOne92t0B/1z3plv78affv7gx7nSnOpLXYzXS7Z92TFy//8c2Lp8/xhue77lU+A6cs08FxHqRfmokIzHAFDGGMaSo5Jc3lp8j0thPSMSOccdxEDq3ryEc6KVxotvDienhizhuBI7flnWBun38numf3gMCrEgWvGFciBGd9LuMzw1AAIDS4jC0gG/j3tlPSMKtDCCog4SYjwLBE7KY8IiYKQho+HYMCWfuQOscHnXEG4oO/DULK/Xh1M1wVz+Bz2ojSMNFpLkltifoJnqmf1cwYvNuDKCzoE+ot16Ma7u4/Xt78ZVQpOhWtZGMqwTA5ziRdbDoRbZgQkZWtTuQzqViQ1YlweCenUfwfCV+z4ALeG6qQvbj7z/31myvE7Ek0O1oxrx3ylnDH7ofuyReXN5d3b67+kAqSq4iRTMZHOXuAigjDFCIQrEwqkhPmKgJDLZ6Ez0mIZU9KuFGSBROJnEFE6Vk54STqWMyHz2mHSCjkAnIMmMCtBnhyxq3B3yoKiDkduMAngKSefnp4uLp78+uJtO60cyrtK0zEWWRkcVJagPMJbj6n1xfPCtXj3ZeR/c+5nHpNmCjWUilfFH0zNGJfSqF2r90X7rTDnTkPqq5tHnCnG+7MebTnYMAGIOBSa9FPIiO1e4MgUMqpD+pUz0aays34Pgk9TlmZccrYWwy9aVObCcxZm3HOGRPaVGOipzfbgt3tJ1jMgzYlJrk1ARvAB2xAUfNGL5mNSh5M2UjioeCZinPlJlk+GKCTBpQXYjHmuQpSYBDJvJVOGyG6h3cJ30lWwhDx3RRgghvSKMAYL8eOOenH7u2f4+CyN9lIP/E4G/gSGkiBMOm9ickZH/Bey+y9FoCK5YCetqoTAuL3qMuTO3l9cf7lc+I6Ayo7jIz73nVevP766/Nv/1WL1sdhCM20RcbeJgEVYQuBqZeMN9GoOPgZVPyj8aeRAUyPLyTjZFQkSFRULxhKkQL0E0cSVSvJJSPV5eLUxKIXCyVJSVn0UpE522M9CFiiqM/Bd6CzkSOENoNELj59/+HNw/X7j9f3CDoHCx/vgJGjZXZgm8A6x0zqbhIcZBaJTwx5MMv64eru4/Xb66uHzP3sAz3gICje4GSth/i7f7l6T0tJOeC0/4IoBtBAkDGyi4+ae0E7kxElbSkjcLnJ5UByqcBuy9RtENLTHy8f3pGQUwXwLhJVXPTvzbOrj5fXNx8OBl/YwDiF+hasgRxtbEKBUnKEs+4r4KMI/WAy5+h7PdnsHn1K2vQNgddYmuS4avD//erh+v6Hg7GVRo0er49Q0CZm0FJKjh/tvYIsymc5uDOBBHfpYkswYT7SJgtSMTfnNzf3P0NyhGCKwKxDqH2YG5urg+FGKG0Ot7El3ISSg0p7r8CNt6pFuCGjmhKEdLEl3OALQxyMraru6w9XhysuopQjqXmpuJRSIEl6ryEJt/5ukBRMarHoJ7+4vrm5/P4m6i28bTxWGMUp9BaRLNA2pkSbUHJMae8VtPHWZbSNJminiy3RxsgPTa6u6+23lx+PQNKYAsnVKDvHkvRfw9KYBpYQZ0xYpotNNVczmRylqYK5+2Z3/tViIs17rHinbXokRjuHJ5zt3jT0gnxDDxH6bdbS5pFFEDmTrKnNhXrLnAltafOgLiDnQVtWeBDjV/AgLW0e9JXOedCWFR5ElQsepKXN46zPn/YuKaTECYxaGJ+Wv5ikaelxmgTnxVNpU60AILDuuZDkw3+WT8o0b3WTdJbrA2JYLzu0LqAEBS9aLEo6ti6g5MRjMPKUtmldQHK0Ex4NnT2uLvDs+e78xVcX/8u6APjEoi5AKSCjoLCoFOtWsVtOWpCLmeWclAQSIixSz5z2CK+BRdjoNeA3WE8lcAljWmt9dowLxjilSObBy4kct4yUo0T7L+A3zlS3knnwB1PWky62BBPeJCuSTjeLLH3eA1YAjU+lyHJPqixnwjEleVLZdCdWclBGjyu5oABsISZfxpyUkosi674iJbxXN8SkSKSULrYUk2bcyJSc1lT+1adLgPTjr4cD6svIs517FniS3mtw+lbcKZygq1Ppaks8DXq3XkFrgFYLVwoMe1C9YX9x9/b+BAnqmtvMYaX9VwBvp6gYC0gCuN3azijLuEInpqp4v/5wmcENHlF4jGNGP3o1VHvv9kgIYO4eTY4PtXwAkSvyAUpqd9ZL6QBtabLILEuRDdCmNhO/FPzSliaL/eL4Jos8fFaS5qx7h89ZlLhH+GwcVuriiIqHkpZa8CwhPFP9XGbRsbS4f8JCm6vEztKjwYCuxrcW12QAUxm9YiCxGg+eoyUwXiuhXIzLUkA9C9X+kEE0BAAQWQB2rr64tjv/jrz6YDHjEoHfdmktpOV6ESXkvVS4g276mculHWTASysnefQXdUkIP/nSwfgSklSpcy8BNbA61upaeDl8b72FYiEC79yE/OUvE/ISRGNwNScMyL+8vC0j6XXYKiEFt8XCDKUMgNF+MxD3DCNSvwHYdHVqTJVi3CZn0cIUvBxHFyaM7dFM6g3qj9qthz1XlYLhOsYK8tJ8hUYLXWBMKQOetN8ixiicQ/e1nRhjIVNy8SiMnREFxr2eW2a0osHF7tf3h8tAC1PIYNV694jTnotSQPE1pAAZFpFCujq1FCTu8OlXa4+wHue395/uPi5uwdNucvXjFrx+JVdNNcB+ipQEY/HTfp0zURBWJ5yPRCpemJRxHM4Rc5IuTvvsI161YgB8TntUViStQderO0h44siCzXcPR1kb5rxKVbH5e2fs8N71CjLf1He4bm85bZCswx3+UtratD/jjPN9ViFcK3ZdyzpwayGGKC7uUTwu3G+PgCpbEe+Tlv15wJ02VHm050KlX9TtSUt7HMWdZBy0pT2O3zh5iQpC80XalTbVUR93D8IoQj+nYti0qZb/YFrnJLyhAoLvWYqjnGQKW31t8UB5x4LEd160EiDNFTNwm+By/wSoX5DHBexj0iDSfSEZGqeRNCM+aL6OrGgNqr/aODGyTBvgpKw5JjHaZm1hjwi/lFd752FRM5w6r1SwmtKqrFRvuubAfNoWXV+ormxGTDZ5qpNjKDvfjNhvS+9WNiOuy2S+GRHXrortcISSY097r0ilvRVRKLr3pb/atK4oNyjkrsMtIRgrtsjJMgGjlBxU2nsFbpTZgaHS1nCH/sxQDe4Dk9+jsKcb8nvsgyzXLAilKKHLpdWheSLcPFHzGy/UQTYX2YS6nm9RyUEQiw1eqtxiSykF0GGpZQ403NrYTicI0Oli06Uh5nXc01zfU5sBfYZHLmxsnxn6owo7WpVbb4FnCblbMuO09wrk7XNVlR2MW0IO1iLw6Acra9BzwDFegRB3tgSdl3lw9E4Q2ZAl6OMKPq60+Yct3tH+a9JxLatf2fG4aeyDNj+JZ/2FAKS9QBvvKrHPSkWILDX9TgtCtfOGpy0IHepytqyLBOawGhRcaFaDep/jWRBoCpVbqf60rb3QnNbw09WWswQTAa716PIPTVJu6eWj1qAtYI8rma56JHG/PanNAdC4sthMSlra68dyqY5DW/ZmYdy4OFsciW1iQbWpGAVpaY+C3piNgjS0R5Edrs1rWvTIbGsU1OYXLNyeEuEpLkiJ+d5lLVo/Ob64VazKk56zVflSA8bSVogr8BHisrRFmmqlLe3iFqxZ2Ur7kM72gmOfNRquGe7lF1LWWiWMEEbmnWvtlzXKTsMcSiipuAW5z3QqHJhZ7rxW5dryWhAB0f64uNz/PnKVH7+rMpnPwB69Odbjnh4wwDZGBiJGbjQn+fb85cX5092Lb15eTI6i8sGOOK2y/JSBpA0vo2BCkZkr4P2qb+YdaoBpMx1BGWNdcipFz51OTnvElwSUhSCeG9AuE79PIJRLOcfa5zrAso/LloMHroWx7+JcDlygzECj/RfgHONVwxthi6eF1XSxKbYAp0+HO0V06DJat30/DaLB5g+HNwedxL3v1uP7HEBQ0hhS1i4OYbty0zClHHsI208shpInIW15REeBA0ySreZmD5d3Hy7fDLvyTADgIZ5CNKaqzxnk7N5VtgxXNmqvIe3cbP+vE4VloJTixDXpvXbi2rV2/9a+drPlOSkR32u0tHtIYSguxz3yoXYg/uWn2+/nNeYV6IWThTmRYJKKCjOhFAeuSe+189Ygv2Vj8hsfUeP4TY29QRegYLICeK3esAI3GOSyEtT2gfkhbNJ77RA2OpZFuDEbmPDur7YEHNLagEGZdNVz2PV9wPsAeoQ7LA5ZLh0cPoE73NJ4gDcUGFyoqh6fv39/c53OWisIw+L2j3FjVLLfKjDBceZGz1V7paZjQbk4PtKTXT74oS1PMtX4oS1KgFDAeTyWYkIqquSEA4sqXpRLVv0YgkiPDuUDHvvEuQkbZz1M9sRPnH9KYZhjiNoWpxn6MOsEz80iTWVK17Aar5Mn0t55S+VQQ8s19FPtvXJtsnxOe8w36CAtV1gfsKoWZ84i+DPN8JsRwXsH3TFI4am6hu9R/+29E4fzZKJFON+C+ZhwfjuYaTiPmVL8gqld+dRfbYMWtUWHl+S8Y8ajdQQrWDuMPEEmQv8GjDuUSErR7gp3km+D0Zb24LM7NVPDnTmP9hRoyJuPg7a0x0ENX86DtrR50IAk50Fb2jyoocjxoC1tPI7bHybiLs3bWQ3HLfbQcvrgXbktTLa/hWfxXOA4tawrbarjM1hjj2asR6GYKG0aym6vSHA8fF35v9+nsLYNCmVuZHN0cmVhbQ0KZW5kb2JqDQoyMSAwIG9iag0KMzY5MyANCmVuZG9iag0KMjIgMCBvYmoNCjw8L1R5cGUgL1BhZ2UvUGFyZW50IDMgMCBSL0NvbnRlbnRzIDIzIDAgUi9NZWRpYUJveCBbMCAwIDYxMiA3OTJdL1Jlc291cmNlczw8L0ZvbnQ8PC9GQUFBQUggNyAwIFI+Pi9YT2JqZWN0PDwvWDEgMTAgMCBSPj4+Pi9Hcm91cCA8PC9UeXBlL0dyb3VwL1MvVHJhbnNwYXJlbmN5L0NTL0RldmljZVJHQj4+L0Fubm90c1syNCAwIFIgXT4+DQplbmRvYmoNCjIzIDAgb2JqDQo8PC9MZW5ndGggMjUgMCBSL0ZpbHRlciAvRmxhdGVEZWNvZGU+PnN0cmVhbQ0KeJx9UctOAzEM/JU5lsOmtrOON0egRfQCWikC7pUAVV1Q//+Ck/LaSq0jxfHEHmccBvnq2DfLgu2EA7hhDO0hErSCnZ8JE1QH9/vmEwWNQsTqQE2YAe94xgduCpZ31273kITy+s3t/YQTpA8ceyKyAWVy/A0LnLOrskNXq7pIQVKqZYqywmLz8PS4uV3XhHXBOFdgMYU+G1GW4ZwSzkEpOqG/8Shljhy1HBrpBBYLyqZG2hguxY1HTNjyxRs6iX86zrnr4P6lzYtc2/KFsfr0CYynUxhioMg5W2pDGP/+4fffvwClNmlZDQplbmRzdHJlYW0NCmVuZG9iag0KMjUgMCBvYmoNCjIzMSANCmVuZG9iag0KOSAwIG9iag0KPDwvVHlwZSAvQW5ub3QvU3VidHlwZSAvTGluay9SZWN0IFs1NCAzNS45OTk5OTIzNyAxODEuNTE4MDA1MzcgNTUuNTAyOTkwNzJdL0JTIDw8L1R5cGUvQm9yZGVyL1MvUy9XIDA+Pi9BPDwvVHlwZSAvQWN0aW9uL1MgL1VSSS9VUkkoaHR0cDovL3d3dy56dW9yYS5jb20pPj4+Pg0KZW5kb2JqDQoyMCAwIG9iag0KPDwvVHlwZSAvQW5ub3QvU3VidHlwZSAvTGluay9SZWN0IFs1NCAzNS45OTk5OTIzNyAxODEuNTE4MDA1MzcgNTUuNTAyOTkwNzJdL0JTIDw8L1R5cGUvQm9yZGVyL1MvUy9XIDA+Pi9BPDwvVHlwZSAvQWN0aW9uL1MgL1VSSS9VUkkoaHR0cDovL3d3dy56dW9yYS5jb20pPj4+Pg0KZW5kb2JqDQoyNCAwIG9iag0KPDwvVHlwZSAvQW5ub3QvU3VidHlwZSAvTGluay9SZWN0IFs1NCAzNS45OTk5OTIzNyAxODEuNTE4MDA1MzcgNTUuNTAyOTkwNzJdL0JTIDw8L1R5cGUvQm9yZGVyL1MvUy9XIDA+Pi9BPDwvVHlwZSAvQWN0aW9uL1MgL1VSSS9VUkkoaHR0cDovL3d3dy56dW9yYS5jb20pPj4+Pg0KZW5kb2JqDQoxIDAgb2JqDQo8PC9UaXRsZSj+/wAgKS9BdXRob3Io/v8ARgByAGEAbgBrACAARQByAG4AcwB0KS9DcmVhdG9yKP7/AE0AaQBjAHIAbwBzAG8AZgB0ACAATQBhAGMAaQBuAHQAbwBzAGgAIABXAG8AcgBkKS9Qcm9kdWNlcij+/wBBAHMAcABvAHMAZQAuAFcAbwByAGQAcwAgAGYAbwByACAASgBhAHYAYQAgADEANQAuADIALgAwAC4AMCkvQ3JlYXRpb25EYXRlKEQ6MjAxNDA2MTMwODMwMDBaKS9Nb2REYXRlKEQ6MjAxNTAyMDUwMjExMDBaKT4+DQplbmRvYmoNCjIgMCBvYmoNCjw8L1R5cGUgL0NhdGFsb2cvUGFnZXMgMyAwIFIvTGFuZyhlbi1VUyk+Pg0KZW5kb2JqDQozIDAgb2JqDQo8PC9UeXBlIC9QYWdlcy9Db3VudCAzL0tpZHNbNCAwIFIgMTggMCBSIDIyIDAgUiBdPj4NCmVuZG9iag0KNyAwIG9iag0KPDwvVHlwZSAvRm9udC9TdWJ0eXBlIC9UcnVlVHlwZS9CYXNlRm9udCAvRkFBQUFIK0RlamFWdVNhbnMtQm9sZC9FbmNvZGluZyAvV2luQW5zaUVuY29kaW5nL0ZpcnN0Q2hhciAzMi9MYXN0Q2hhciAxMjEvV2lkdGhzIFszNDggNDU2IDUyMCA4MzcgNjk1IDEwMDEgODcyIDMwNiA0NTcgNDU3IDUyMiA4MzcgMzc5IDQxNSAzNzkgMzY1IDY5NSA2OTUgNjk1IDY5NSA2OTUgNjk1IDY5NSA2OTUgNjk1IDY5NSAzOTkgMzk5IDgzNyA4MzcgODM3IDU4MCAxMDAwIDc3MyA3NjIgNzMzIDgzMCA2ODMgNjgzIDgyMCA4MzYgMzcyIDM3MiA3NzQgNjM3IDk5NSA4MzYgODUwIDczMiA4NTAgNzcwIDcyMCA2ODIgODEyIDc3MyAxMTAzIDc3MCA3MjQgNzI1IDQ1NyAzNjUgNDU3IDgzNyA1MDAgNTAwIDY3NCA3MTUgNTkyIDcxNSA2NzggNDM1IDcxNSA3MTEgMzQyIDM0MiA2NjUgMzQyIDEwNDEgNzExIDY4NyA3MTUgNzE1IDQ5MyA1OTUgNDc4IDcxMSA2NTEgOTIzIDY0NSA2NTEgXS9Gb250RGVzY3JpcHRvciA4IDAgUj4+DQplbmRvYmoNCjggMCBvYmoNCjw8L1R5cGUgL0ZvbnREZXNjcmlwdG9yL0ZvbnROYW1lIC9GQUFBQUgrRGVqYVZ1U2Fucy1Cb2xkL1N0ZW1WIDgwL0Rlc2NlbnQgLTIzNS9Bc2NlbnQgOTI4L0NhcEhlaWdodCAwL0ZsYWdzIDI2MjE3Ni9JdGFsaWNBbmdsZSAwL0ZvbnRCQm94IFstMTA2OSAtNDE1IDE5NzUgMTE3NF0vRm9udEZpbGUyIDYgMCBSPj4NCmVuZG9iag0KMTMgMCBvYmoNCjw8L1R5cGUgL0ZvbnQvU3VidHlwZSAvVHJ1ZVR5cGUvQmFzZUZvbnQgL0ZBQUFCRCtEZWphVnVTYW5zL0VuY29kaW5nIC9XaW5BbnNpRW5jb2RpbmcvRmlyc3RDaGFyIDMyL0xhc3RDaGFyIDEyMi9XaWR0aHMgWzMxNyA0MDAgNDU5IDgzNyA2MzYgOTUwIDc3OSAyNzQgMzkwIDM5MCA1MDAgODM3IDMxNyAzNjAgMzE3IDMzNiA2MzYgNjM2IDYzNiA2MzYgNjM2IDYzNiA2MzYgNjM2IDYzNiA2MzYgMzM2IDMzNiA4MzcgODM3IDgzNyA1MzAgMTAwMCA2ODQgNjg2IDY5OCA3NzAgNjMxIDU3NSA3NzQgNzUxIDI5NCAyOTQgNjU1IDU1NyA4NjIgNzQ4IDc4NyA2MDMgNzg3IDY5NCA2MzQgNjEwIDczMSA2ODQgOTg4IDY4NSA2MTAgNjg1IDM5MCAzMzYgMzkwIDgzNyA1MDAgNTAwIDYxMiA2MzQgNTQ5IDYzNCA2MTUgMzUyIDYzNCA2MzMgMjc3IDI3NyA1NzkgMjc3IDk3NCA2MzMgNjExIDYzNCA2MzQgNDExIDUyMCAzOTIgNjMzIDU5MSA4MTcgNTkxIDU5MSA1MjQgXS9Gb250RGVzY3JpcHRvciAxNCAwIFI+Pg0KZW5kb2JqDQoxNCAwIG9iag0KPDwvVHlwZSAvRm9udERlc2NyaXB0b3IvRm9udE5hbWUgL0ZBQUFCRCtEZWphVnVTYW5zL1N0ZW1WIDgwL0Rlc2NlbnQgLTIzNS9Bc2NlbnQgOTI4L0NhcEhlaWdodCAwL0ZsYWdzIDMyL0l0YWxpY0FuZ2xlIDAvRm9udEJCb3ggWy0xMDIwIC00MTUgMTY4MSAxMTY2XS9Gb250RmlsZTIgMTIgMCBSPj4NCmVuZG9iag0KMTUgMCBvYmoNCjw8L1R5cGUgL0ZvbnQvU3VidHlwZSAvVHJ1ZVR5cGUvQmFzZUZvbnQgL0ZBQUFCRitEZWphVnVTYW5zLEl0YWxpYy9FbmNvZGluZyAvV2luQW5zaUVuY29kaW5nL0ZpcnN0Q2hhciAzMi9MYXN0Q2hhciAxMjIvV2lkdGhzIFszMTcgNDAwIDQ1OSA4MzcgNjM2IDk1MCA3NzkgMjc0IDM5MCAzOTAgNTAwIDgzNyAzMTcgMzYwIDMxNyAzMzYgNjM2IDYzNiA2MzYgNjM2IDYzNiA2MzYgNjM2IDYzNiA2MzYgNjM2IDMzNiAzMzYgODM3IDgzNyA4MzcgNTMwIDEwMDAgNjg0IDY4NiA2OTggNzcwIDYzMSA1NzUgNzc0IDc1MSAyOTQgMjk0IDY1NSA1NTcgODYyIDc0OCA3ODcgNjAzIDc4NyA2OTQgNjM0IDYxMCA3MzEgNjg0IDk4OCA2ODUgNjEwIDY4NSAzOTAgMzM2IDM5MCA4MzcgNTAwIDUwMCA2MTIgNjM0IDU0OSA2MzQgNjE1IDM1MiA2MzQgNjMzIDI3NyAyNzcgNTc5IDI3NyA5NzQgNjMzIDYxMSA2MzQgNjM0IDQxMSA1MjAgMzkyIDYzMyA1OTEgODE3IDU5MSA1OTEgNTI0IF0vRm9udERlc2NyaXB0b3IgMTYgMCBSPj4NCmVuZG9iag0KMTYgMCBvYmoNCjw8L1R5cGUgL0ZvbnREZXNjcmlwdG9yL0ZvbnROYW1lIC9GQUFBQkYrRGVqYVZ1U2FucyxJdGFsaWMvU3RlbVYgODAvRGVzY2VudCAtMjM1L0FzY2VudCA5MjgvQ2FwSGVpZ2h0IDAvRmxhZ3MgMzIvSXRhbGljQW5nbGUgMC9Gb250QkJveCBbLTEwMjAgLTQxNSAxNjgxIDExNjZdL0ZvbnRGaWxlMiAxMiAwIFI+Pg0KZW5kb2JqDQoxMCAwIG9iag0KPDwvVHlwZSAvWE9iamVjdC9TdWJ0eXBlIC9JbWFnZS9XaWR0aCAxNzAvSGVpZ2h0IDI2L0NvbG9yU3BhY2UgWy9JbmRleGVkL0RldmljZVJHQiAyNTUgMjYgMCBSXS9CaXRzUGVyQ29tcG9uZW50IDgvU01hc2sgMjcgMCBSL0xlbmd0aCAyOCAwIFIvRmlsdGVyIC9GbGF0ZURlY29kZT4+c3RyZWFtDQp4nO2V53fURhDAR6teotxxvktszrhhY2xjY8BgU0PvARJqQgiBQID03juk99573fknM7Na6SRxL+/l5fiE573bndkZ3fw0s7sCmJd5uU5llSzKlv5ZKY9r56e0sE5p9755bIecWjP6vbL27pbyg4EvTg/unmTz1EPfDMuRE799eE1J6yXS17toqGrnTaTfQHNzYpl2L1q/nOwbSdu/j+01AEMn02cfOPg/YSzTKsz/SnpbG9LeXbmAY88mpIkshK83tXyNP1t/bCBiaDv/idRAozAXZG6BlkdUrvugDelR5RpfMKjmMznS4Y0zI0qZ+qSh5kdzWd1agHHnSFNpPsGJ/oY2pGPsufTLWoAr06zeoUkbv/4O8K6q7ErayYe6SRtZXMgaoAU1ITyHGhoBmIb6OaaoeNzjyCWL/C432xWikpG6tqAIzyUjKm2Fxznj6bPtSDfQeHtCMLBU7c2EdA8tDLHyQhL99CLS7y6T1tC3wzACDKCGFbDQA4EVO4wpIkRhehgHPr1QgL4ZZ6QoBPXDpHWwwwLoRs74LeNcRbq8h8YLemWGjdWKdDvbD/JbrNXOn8i4p0XqGh7xxJTIQhsqAoIQnRpaEVKpXIwMDGgb+4L9pkVvkeu+x28ZOfScg2Ye9CtOXb8fSqQrmHQJDXdlkS+SdaciPczmwnwZOXKqRUoiLGACxnERfBe9wCctFoLKl3ChL6h+poG10j6t0WCHjqprJt9x36pLoEz6DJM+ScOJLPRjsh5m0tmzbG7l6yL19fML5GvKM5UFIBZAlUSnUhEB9dQzSBxNarNhKeMqUiqub+dAV+6kDN1jkJHu1I7NTPp+oaZL05pegrSmW1LfUJE0ycrd5y5CSNX1kEpncPfB0hEhdR8cIjUTuOxZm4sZY/4aWP1XcqJbpHJAqXul2qd869+qvee70306rewJ0p5P/2i0HamHPp0Y0iu0+RxEh9Pbpo06wqRTFfgm+HTMMCMVplDNoKdboF3PcYJtqTnA1h9KXaFIYTuN57rUSi9/fPeps39z0o7kElYy1pMnjUSUKG4cqnumJggy4PR0S/nCTCM8EQo7okVfuPqZSFRiP1Aany0tvX38/0db5ON8gn+gXn4mE9LXeDpwsAlweD+rr+RIQT29i0o+M9ot86SdETpSma4KJ+v0lTpQJ3lb7UQ5XN+hP0P0jZpTSnXyopqfgjzphYSv56IO7yyphUGmfyRL8vLPRZtImy/l7L7+AinsaRTjO0rqGK2SLpMlmVPnWcnmMwkpwLaqXuq53AtFUlg3qH23TMx2vPs5OVcmbZxqvnNyvFH9ceuRxesp/WMq7MsjfYPDr04fOq+sN+j+3ZD9Rf97q6qycfytz2FSyk3XjHRe5uW6lX8AZnImQA0KZW5kc3RyZWFtDQplbmRvYmoNCjI4IDAgb2JqDQoxMDQwIA0KZW5kb2JqDQoyNiAwIG9iag0KPDwvTGVuZ3RoIDI5IDAgUi9GaWx0ZXIgL0ZsYXRlRGVjb2RlPj5zdHJlYW0NCnic5c4LM9oBAADwfazNHrfdXjbRxjGkVEhvRFJJVNKIvzV0eSxNdcuSKw3FtOwSV0jUqpOQPFbpashfpe177PcJftlsNhQK6XQ6u92eSCRMJhMIgk6n0+v1KhQKi8UilUojkYh+YVmtVvv8BwaD4VlJLZzIDAQCfy4u36AaciAITp8ER+t8CEU9eotmdH3MZDI3qdQDKJJA5yevwVQqnVdBDB6fXiWT9wuQr2HEwGFoWD5V39azueN5UYqVTeqeFFWXYmnP32FB8KamicPqHvLvB0lMQTh6fhaOIutYjwurAIk8c3u7YtsSjSpbOj9MqPW5Zfh7EERxDVWlNRAZXfKpb3S+KLcc/7QYQ+P15+RXzpssR8dnVZR2dAPbsxsowVAtNof0i9ZstcNJTIfLq9DMCsUyDJVTVN3YwO5ZXF5dXXdiabxyPN3m2FFOz9Wxumup3KaOvnQ6HYsnKgiM35HzUYXGt3fwshRXhmsJR2NQZP24SssFhueWLBA4yWxdX9vYFoo/UznA5ranmdu/sf2rsaP38ioJIzBQ9W2SCXVje2+rYOAwdPL959orGGHHszui0AyNq1xe/9HJmWxyhi8ao7CF07NLTMGAWr+4Hzxu5gLXIDimnBYMfILAycCwnPV+0Lu7r503xRMXxh8rbp+/EE1BkFvtW+7Tf8tYvKCyblCqMpqtNodLLPs6s2A+DUfdvr1JnTEfQeYBI3fz4BKJ5M5/7C8pFUqhDQplbmRzdHJlYW0NCmVuZG9iag0KMjkgMCBvYmoNCjU1NCANCmVuZG9iag0KMjcgMCBvYmoNCjw8L1R5cGUgL1hPYmplY3QvU3VidHlwZSAvSW1hZ2UvV2lkdGggMTcwL0hlaWdodCAyNi9Db2xvclNwYWNlIC9EZXZpY2VHcmF5L0JpdHNQZXJDb21wb25lbnQgOC9MZW5ndGggMzAgMCBSL0ZpbHRlciAvTFpXRGVjb2RlPj5zdHJlYW0NCoAAIFA4JBYNB4RCYVC4ZDYdD4hEYlE4pFYtF4xGY1G45HY9H5BIZFI5JJZNGH/KZVK5ZLX/B5ZBZdKZlM5pA5tJ51DptPZVMJXOJ9L4FPqLRp3FZ/BKXEKHPaBS6fN6NU4VLqTQqJWolU5pMYNYK9R69UIRWKyAKbZI1aLBNZ/M7JQZzapbc6DUbZMalRK/ebvb7vTLFW7XCbdebhf8VeJfaLtjcdZ6pOcZkcjcaHmcPWL7Dchb8JdcXcq1h7xlL5fr/nMLhcnmNHk9RYcHqdtpqjus5qpvubphsfw+DpLNncrxNro8lotPt+BkN7u63i8JQtdmuNdeRrOV1epv+f4clzOh0+jqprbMxxZxsrt4/h7L74uj9tjz+l+udzvkgx/wCgsAwJAQAQJA8EQTAsFoHAsEQfA0HQjCbwQHCiDwxCsIQfC8GQ6gkNQ3CUPQBBiBQVCUKQVFEOwi8ERRZE0QIRDEXpfG8WxdE8QxtF60pFGUPRvHciRBI0jx5EckQtICNSFHsmSlH8FyZHUSSXI0nI/KEsyRKsvy9HkaSHMMtp1Kc0zJMElTAhMiSrM85TnOk6ztO88TzPU9z5Ps/T+jqAgNCmVuZHN0cmVhbQ0KZW5kb2JqDQozMCAwIG9iag0KNDUxIA0KZW5kb2JqDQoxMSAwIG9iag0KPDwvVHlwZSAvWE9iamVjdC9TdWJ0eXBlIC9JbWFnZS9XaWR0aCA5Ni9IZWlnaHQgOTYvQ29sb3JTcGFjZSAvRGV2aWNlUkdCL0JpdHNQZXJDb21wb25lbnQgOC9MZW5ndGggMzEgMCBSL0ZpbHRlciAvRmxhdGVEZWNvZGU+PnN0cmVhbQ0KeJzdnb1r41r6x/+WLW85sMUGtlnDFtdwi2u4xQimGESKIFIEkSKINEGkMMKFES6McGGQC4NcBJTCIDcGpQjIhUEpDEqRQkUKFSlUpPDv+32OJDtvc+e+7f5Y86BR5KOjcz7neTtHkme7ffUpRXZ/5E/b4DYP12VSbtPnbb7dFiLlnnz/R5VXNWTlNsm34bpg/Xdl8vR+5c0l3r3QywaUzT8pWrvd+uvSXWbY35V5ruX3dmG/OOBEq9ybp+48cxe5u8z92zy6K5K8zNCd5w/7sn1zECVztPlxG98X0ToPbjNg8W8yd546s8SeJc4VrpIGqyy6y5MHqb/G9e5V9lFz/3lbPhV5nicbtDAPgH2ztRe5PgidWYza2KTyNYlf5VM+f4tUvAGcxL/J3UVmTVP7OnOuU+c6QUcAzVuk/jJFT8NVFt8V8V0uUsSbWu4KNDVc5yhAIDeZL+LdZGz/usT4ereFs8hRsxJWLoLressUhYMVTs+jDauCoEkgzC33i/CuYP1ow00SLinBDc/y77buemte563LoH3mecsMo5kXZaM8f/yTPZboEWr2V6WzLKzr3LkpXApw5c5cseKgewuqgRJAw5+NQN+8m9xbUveAAlWh5f5mi623Lp2b0prn5lUGsRYF/nRvC5R0Fpk9B67UgXZRdUVU/UtIJleRndvCuym4U8MM7grU791vrZutNs1bvfjgPIAWoSXQXiAqn8rfiWjvrOJ5i0FhB1ccX32SauNUn2bGLDMx0MvCuS3dFbojPQI0teVO6a0o6ltvvaXcUTCgOMteFBhWY5rp47QzTND+Vjdq9ePOqK6/ZuWstg6G5rZ0pFpeAqIqr/dRpyuVE/uax2FTqF+b5Z1pftBPPl3GB90IiLR+BGVL74visfgNfJ7f7Ig9wgOIhufeXYk2owsHPbkQ+tKL28OkM061SdUjiDUvTGjCvMAOemctSgj+NK4guT7LUVKbZJ1h2uonB92YtVG4/0nkoJuoP8GqPUgwHBoYznIlZlP/ohbZR/36Vc42TFN9nGjDuN1HVfEPF/HBMPuhm/7tPBZK0cFFaE2TaJVlDwX90AtEH3ugN3xQNGPMgpfIoQ/WIkdTD3oRe4H241q9RHoU8aKqO1CDwb6kLXDAts+dg376qctxpCgIOCL7n9R+T9VJwZ8Hqn4pD4bgKbUl3OknQEfhPjHiKgcKOBrD9nAcP/WTH1DbMP9hkP2tm36SS+Dbdjf0rpJ4leWPJX31834w+a5PKVEmvi8ZSjZbKHZnSAKfevEPaMMw/aGX/ABEfbmoYtWvofXiqqcUNCn9oZvsHZGDbGraFKj3q68OBumn16cIT5FKzXrJvtYpqlIMehKrluC6UB6Q+Rva0M9+UORR5jywhmEwT9L7PH8s6Ih+NYK9tERmDo9bCTH0xjBk6AabgesOcK30B7UVYWcHFaiDQTVMQkx9lUH2jqc11TfSeyuvKe2D2hc2TOTlkbqR0oamYVAh7TJwJlF0SyvD5zfxUekEIqmKC3Ck8DBKeRQKdcXXiFQLe40u7Xr9Q6Unu2+pJCJvKVXH3yPzEZyGz8GefNqp94sRZCXdqH0RmIhl8yS5y8RR/zY+SnkQYREaEEfaA/GiSj0a/Rko3ag1h98mlbPdb6rqQv/bkr6W3t6Jr7Zv5eOaPzWVi4Oq+cSt81DrBvY4Cpdp9pAjpdw+F9/jfyrluSuYYyBnuykQ05W74yUGe2Mhf1bSf+mZ+3RWDNncoSNtVQVSMvwVVn+N7F+3l7S6cfsiNHpw1HGyzpBwb5/yPUf9LT4IW/5thpQM6QSUB8lJEz6U5h/skakDCmhEiP7tXtTuRx0R7tfCfEAh6jes6mbv5CXwWj7UtF35d+up/mxGbVcA8RSILqLOJVUoWibZJi2LHZ83lrY7DuVB3o4sVBkXcgkYF7s/TPf5tBSZRlsk9To49Q/OfJi21guRhmGLBrTP/daZ/wnfdmNFEvGlPrFpdvpKWr9Z3q3nVb6hLqf4pweXVCGzH/hXUbJKisdMTOxDPuUu52H2jumDdZ11BsgumGC0az4H/TqrGajcQ6QbEsKx++nIaZ15MG29H+rdoHPutU/cgyMX9FQ+2WBpSYpYpUm/nc+L8sN01/dhLe/xqb9lLEMi2r4MtUvfGfrRIsrvoUIf8BG9KmQanj6WmNFQeW4r5VGZmNKfqnlVnlblhJ1RAoyti+CAKOzOqaNfeMalh23n1G0fOwfHTusyVMk2tshsUZ4G2A0rS2xyPKlZrlgdgagGqJFSPKsjqKdfNa9qZEN7uNOrF6J6McwO+lmrn7W7UefCN3uefxUmd2meZ992PpjbcnIt81Dk8NKdnbDmkQj+7NdKpY5gn9bkt48s7cjUj03r0tVP7c6x3TqyYXEdVQmwDGj1UKr2Mb61OoeGdmzqF742IGoy7IXtU6996rRQRvRNwylnHsq3T91ODzUkLHzK+vUTG5kM6m+d0q6BWkMNw2THdviuAE7e6qbtbtwRFbLHQbRKsofs25PWrEBYx/y6tJeYbeWdUfYhHw5o0sb+OKOMcAQOJ0CXtUNT/6pbp5Z+ZJLPidPphtoQk9AUcNqXfufE7RzaHZA8AUldP9S1Y1u78ElvFOtdvwMlPDJbACg91VHzmdM5NHEKugNEOsbiyMaJ+hddO3Fbx27rxIOjA1ug01TbGhRD9EJJ3RdqIGb00J+EOtz1zWHgL+NkkzFXfCr3V88qi5P9eFNyCeKmAB/MttD9V6L4YKejhqnhwzk4GhaiIzoQfdaNIxOgtFMHLogdlEEHwPaZ0z6y0SmMmt7z9UsXSNtfLULrhfooMsAHJx6ZUBilDMaQfLRDg3xokjGcm/AxtK+6duq2TgmnfRl0erhQrNrWYTsFy+g1HxmpvA0+Pag99Bkt8ZxpGN0mOQJ98ZpPtey23Ya3OXJmxYca8oZPIx2Rhk8bfEaJPoyMnm+gL18MKs+RpV+4YKKP6CjIpwszgU3huK8PY30cG6Owc+aSzzHUzMefZs/XcCKKHds6mceGYNekQg0EhjgSdU4cXILS9RkuqTn8ShuJP6yal+1JTaaSvN0nHyDtdAPtwrUGfrCIs01WIp0u3/CRCWnA9aWci2DzgnzG2Y7JuN6KNA2o+WSdcQIO5jCEZ6bmHLGDwKUPQi44jFK0XLt021CDr6Zx4aHvUDljknTgxmlu8CQe+OAUGilt04LiQTAR0JV9HVpMGwYxDlK7oKLHptEnfwjrF2nG7gWcekwrGSKvyzD958DBWi9cg146StZp8ZBvX697yJziofSXKSekcM5XOSGz15B0X9rqoGqDkCGfCYuRzyiCAnQEDhUAjcewotnjjIi6XkfsTvHRRtCfSDt32XGUR8gbhjqdGLUFhE0o5Ci2YHQsY7YPhRgUb0g+yiPxEuO4JrOnPOOqea97oQoM0Z6806f+gDkvfem6kyC6Qa6Ybd94afCJ1rm/5ISdq9ljrhOynvFb4eU0kY6QUcKFMumvIR1kuDl2qDzwHsgTxjlPhP85gW5YxpkLqzHHkdH3NYQ5ZV+9QENPEe6PXY1x0ILmGP3QUvoD5vA54MOrIH7Bj1miY6Kf4x2Z/Xa+Gl+utrEwTUyf5B046m5Ew7z0MUz2wA/ncbpOyzdLi+DDyF7zgX/jKt+oqVNwveWDMpN8j0+ClqNHEr4ZoAGHgztJO5Oiw/aE7NcXGfdLzxz4ZteFjZAPYjcc1DTj0t8J+cAMGffPJY8C7UPx2PAzQ+EDr3ViQyo+Ey5jsnkTJdK2l3xqOIkaen1WMOsAH5gYXNCZi0QogIndJuUjTOzFGn5Wbn1Z8WbafJVxFRTmMMnUdfelw4MVH001Q0STpWkDXggKcOodHJKPhix6kmhTtIckNewPQiaNX+3WodUGGbgjOCuUhBPARWc5uq8jEh2ST+sQ6ZMDVwxpSyoF7YLLggohSz9ADWcyBJPkVQs7rxq2L2O1rbuASAdEXWb7+qnjjYP4JpHparGvP+nTVhb/GdxNxWf8Ph9N8amlagZXlaGxqQGBK0COh2wNF4XnnPK4PskoU9ogshdkO9qFh6ihXzjGJXwjSqYdDOhVboxjcciuRkEZ5AAUlGeqAOWZpvTqvITP4DiOaz7ZB/Ki/dKYChSaxMSsC/2JwAepgjsKomWcI1HEdHXvEz9u1ZyLznkmfOor6nWd+ss26M3+VKS+OhHRVydQe66Wy4K5KcfREYhBNQNGulljGMKlG0SXt8FnmuFPZxTaoxBu2QSrcWxNE4g5iYHOkDop2Bkz/BlS52/l04wazAQJJ/kgkT517T5cUITpfPH4Yrkjeti6C8WHdwHAZyd7fPYO1rIrqVCg8ZnJ+wiZ6kjNJ6HpoS/T1ORX6irUBHOKLufatGhDJqklfKxxBceUAqZiUkGWUZDbJcb0TcN+RdJdU9UR8oHCx4qP1YULCtM1TCzb5xNuSt56u0VmmLMlaPwepbqn+0cyDLqxT0YVmKSG+rY5Pkv1umsGUYAVzuWdKUjdzVyfwrgKHLEmiS1klG5QGs6TtBkvOWu3/918akGreGlE6kwjn0SHFzr1zAvXnwbJKs5f8gnWBfmsGj7qfpNqfMXHkJtcunRHpOJgzNJadvSaZhhXEJoPKsS+ORNbQ6um5KPPGtS5dl1q17RuFKAGXtU1Ywd+SaRqUjN8MkbI1naN+UjUKTvhwLGbMLF+2vBBIuGN/eQWLijdljsX7YMP/PMKM9OCw/2yMS8lpyg+1ZEKjvpWl2/1RjeuUh3Z5tUWgp6Cjz1JLIw7SvKOHsnjTxiddlV0rkuEXTU0VS9ELTUV2lTlPCtv7hgazYV+XaoThZVqM/jk2iDV+6kOL3Tm6Se2O/LjZZTdJ6UKYRLi/RXvd3tr8jFqPt+4CkdZ+ZkXiFLzqi5TjTi/Qk8VH13xmaY2Sio+6p77jFXpsC/eBi2N61Ldb1V35DlSPE6RS+fVGM1425RtUPr2TSwvpWlwbtR8DESxM187tpyhF4HPBnzERQsfV26Surels0ADeDneHJeb4O/LLLWuq8ajGKjChdrzzLri8QrOdUE+cDg0sZrGtJJdU6+UKWWNPtBeZkQBboIuF/OsaCiYtY2rMnt8ruR0kf2dWrKaubooaQOOdhmb/VgnH9vuueE8BJ9iL8Srhwp4w2JZ8bGuRUk+4GPNEus6rQZ3Sph6PzQ4HQgQiCtu17yxCDjgxrOuQU8EHb+isMEYBZSZ51Ky0iUSuOYcEB23rmSkgPq6xEH8aUslTZfxp60GtGqtqqpR4IZPM7KKTyrGjkvkRj/RL2OrFxvgcyR8rsNU8aldtFc9dEE+VsPnIzhXlZ6wJUrNZmn7zOtg7nDiYFKpvlJ8sG8vRIuks1ZNgAICrCFTYolU3Z/L8auEAoWc5zqGgCOe0MPDz+MgL4HCiUhaNy9XrTJfa07eNF4NltSPzhYGnE83tqg/nnZo2V03AJ+7l3xui8rElnnVi7lq/AuxKhE+c0LgAxvXPIWzBiT8h5aF7G5enzKXwtepDZFneCD2Ff0PODjznCYpBaoy1/IVlBPH+fBPYl9jP7Wg1TB8eRYIR3AcB002gH86c3WuVHWVqUYqRO80ngUEzlz9mRsDOh/yOSUf69IJrgLy2UsRvVXN54YPcVGN5w2NtyItUXwW8sTUddYsgSL1deaqDfg2t8QpOQsASZj1wQYx07n0MaeApgFFhW7B56zsiUwuuj4m1MYgsIaBhTnskE+k8LmyeeaCxiTCcRgyJxdd3+z79iiQegR+haga3w9lXheAzwefnvDBNPCraV0In/ULPv6q5PNdRJTLI1vC5wOxZdzVA0jgox63009t7dDQj0201qU+SAPwLQrLw3joCA3wkKuplEMbU06951uTCPSQvdsTJPle58jGBP/gs8zxjzC1N3DE6AX2NHGvEnccWpeY8lNRMXtFPVyLO+ZKCJ9drPSzav83uiD6ST42/M8gUXy0Yxe1WZf2Wz7BuuIDR8Sn2ur6vyWLvCIAPldJxefIcIY+R3kuNSz4HBcrnEaYirY5VbeRw1tdHzPQ9pEFMfooHzuzyODqIoDIytiFa1165imXsnHE6vmA40PNer55YulfTePUwUHUY5xY2ldDO6Xfg6G51EN5Ku+bjbdkfO2aj0k+kXbkgI/91r6e9/jc5t/Fh15XdEn4AIhxygVziDPwvHmCdlYFrvnQoNHjymH7i2FeusE8CaEtgwCsWl8Mo+u5V5EzwfQZmmOgHkyig0XqA1rP1WU91gSfWeLhKie29kVnLwZBsMxQDO4U49ICMZS5Fj7zSj6ktHjBx+w3fGzhI/pzF+/zie638vxkBj58MBL1c9w/lmVuyzI1H0FcZNJyjLWmf9XBx5c7jHweVSwRtoO+66cwK8ObhsE89iZhuKRJEtqRCT72OMC3nUPDPLdBhg/1gc/Qw5H2saWB4Q0fauXS9InVObHcOVQ0wdadhaikc8oFJVmiobFzrrTkpT9qP6ZRio8D/9yLzW7kDOP2Z965s7t2eOVDf+SO/Lbi87CVR0zlQdMln+NVEL6JiI8GYesu+Gg0+mUcGxDk5+Qjw4di/HaZoUfasYmBBhnw8WdRuEiMc4d8oHLT0J2GAMgbi3CP8xgW5y0TZ+y3v+qtY1Mf+O5tbk4isjq1Ome2d5OSGCiBzzH5dE4cru/N04rPt8dX9W4u9gU+vcgeRO1fjIrPdc1nW/GJ822w4nPa/kq8tPBXOuC8t3VlJQ1wKLCgWaLTD+jGkUHrWKqnFkX4fG9q0KnydgO/nScQbxpBEyplmIl9HcMAdePU8q+i4Dbzb1Jn5FN/jkzEMii2PYvb9MzUKOgkYy60ZRqiBt63vfDUc+Z8iF1MgNtXstj1gsEaKoTkVozL6gXgYxybTg98Aplf7OanScEp/I7PsuLzkTAcy50gPnC7LLxFZp47qByuEvEFIdhWi1rjGCEbxoIwTStAdOh6wXUc3WYuotWZ0/pq6OeOt0igMPoZb0mAszMMHMSpgQ9fpG70GF0fnP2bHJx5I+OraY8jthOZzyhApKP/6Qd8gl2wcCIw51rxN9rPlA/JyTjFzAJ8zAu//bNunJhO34nmgcxPd/OL9IlvQPg3uwe5vW/ycWWluuGDVmHm2/ms6xJtuVx8Krd9EZov4Y4QmiNw4Br7oWmcMfRoJ07rC5fczWEQrKgtAKKLi8Y4whUgFYErNuRWmnHheddpgP6OQrjo9mdDO3aMC187deFUUV47cxHf6TwX+3yKqrVvQEF/hE9uDTF25IPkp/2LjojpDpxoEeSKT+1/0nIb3hXqyXNfOeoq3DPii+Sv5Vblk5zSuteZfsrgqB9ZGN/WV6t15Bwc2p++8BazO43CVYYIzltjx0xvVAoEjMh5+HqCmDbUDIpndrnIYF56DvLDM9tA/PpsgKe/zPxFBt1zkDGeu0yTjkAYLsvGn8409leFpziovoPSqqzmlW/aXzFEXg04kF7Y+WrzQueWN3LjmzB/SOWhu4pPJg9kBrc5+dxW3d+DU7ymtEjVc9HqIflws+X4wrFcw7fImwU3qIdPeEJ5orW8dnFLAu4sdsaRPYqYz9w0Hg96q4Ymg+8Kb3lWsEysrqMfG4hr9iT017g6X/HAcX+ZACzckYl6ZlHAdwry4K5UvW7IvOTzzhA7mO/DMw9jqxu2f4G6GtaF7U+8ZBVxfbXc8cnlsbFQGskXam6ld69kB43C8ZK3CaA/TL/naQi87J3SQBagTxNE3jIN1uw+3yJRBwlHLgQ+9MZQsFg/dyE2phVD3+y57S9a5wi5n+1cxf5aMAocVMUKNyXa4y/5dgx31sw01Ksu6hUDlw1u2v+i8ZyPI/5OU8XHvAxaP+lwnghe/tRP1zEfJ9t7zaeECuVFvM4qRKtix2e1Q+RTRMEgq6KetREFaYhtBivVmKpV/IqnQE+oJJ68tuM3x0Vdqbc3mT1GpLZav+iSCMEGoTk6nDZSI74fhFat1cDldRtUk2R/paSo5MXIKnMoVCOlC1DsbXC7JZxRYg8jGGn7Z43Jf9cJOblI+dDv3ofPJzwW8V0WrdJQ8VFXWZW1NPVLp1byUtK6rA6uq6+8Sh/yXTsFV3XWWp3Lsa5EzgpEfMzWR4HV8+yBb/Vcq+8548Cbx/DeId8Uo1f0m26qntb7crnqov4raZDWcPzb0r/ZevOt1SccZxh2vsDLaeaJ6Q7ciPd3srJ4/SxrXpR8p2xFG2d7qi6Ue6KURAHZI8PjVRvkfS6Ru6Kugfs11XyHZVXXr1RoJcK3w1K+uiUvcKmWhKoqFlMnlm+k2AF/JdLgYKc5ecPHmeT2MEFaCOd/8GMHyRucsz/2Y94fzOWlgxefoizThxy+9CM+u76/7KNqvOi/7NOUmiGTvt8JovU+kxryXVn/SfNRr7nxVbg7Sm1QWUV+s305XmhSGaiBeym7dq7UThmsdqwCIF1u7WEKPs4oQr5x8G/y4cxrGiR8Sqp45x3DcueCdqP2AR8Ei0pJ7kpVEttoI/srOVdenKz/RIAr61PKQO2L+OrIXVEjQlW1LskYKbbBXfmKTAMnqBv2ikwlq73WroqqPNzFdWEPwCcGH97o/0nTDnWnB+cTKufzBo+4IJjYnZhYzSd404x9RBzuu+rdRs4I1IuWN2n8UFIB1gV2fPVYyKLWgbtyX6rxJbFij0bR1LzP8yWTt+15KQ0f1sPC4brkSOFEBK9JJsaFzCdo/ax3kIhi5gjns6idz3uP0hdPZXpPE5N3PJVWVG0LK6mbvd6R4XaVu7KAY1y48LF821T8WLTJ8SePI9+bxeFKnSJyVzb94sGNiNq5F9lUF6p1AEdeNkPqiara3hfVBcHCnWizRRv8ee7AsgaxI5Gr9WMHkQuZjzf2eGcwz9+8N7czMbigeM2XXqO75rpl+IYPGh/d43Lcjzd8E9ke+q3PCM0mAlByn1dv6d4X+BMHW18MexiiL/GmxDbiG7tkq0ySkFEJaxPPsyFw7ETVweaiVQOiSjCUbC220T6WzUtKm4pPpPggpF6l0BxnELmjCHOu1k8dZKGYdknmk7z/3mW9kJg/wsSyRoXq66LmWprmbXbtTB5KBGW1gGN13fSBqQJcWfJQ4M+OPCyHmWl6z7ebMTmN5CsYsopW2JE+kidULn4o1BvKKIb95LEM5XXv+L6MxfwTqcefRdFNAuFw4MR75QOLCNa9oR9Da6E/0f2Wo7Ain3izDTAbmkB5Im8cG5gk/qjBuMxTTkvjmyi7l0d8335qYsrElArFOxTlG3nFp2j4OEOffFZZvEqxgz81WUZ2+l66yeHfGAVWmTsKuGL2RYdox6bZdf3rSHXfn2Mub5ldx+577jR0Rr5x7riTAN+CTDCPcdw8q5a7MYflHYdlUuMVxb5vNLzk9o4SAxQc+1UKs3KR9vQCTIFbKrJfYNrlqccS3kb2VyaG6IZeEJF6dX1T8Ylfwal34poPILQ/o7VuuIgpc26pP1/oAL2RTz6rNMLs6dJBvtqR1R70kQW+UvGQnaZ5iS3+1I4o5gWXONq/aM7ASyW8GmdcKDCEDKbb8KsMzX0vvEmhxgpRfC9YoG8PW9F5wklgXEikoTz9yB/H5qnb/klDM1CDRK5A3fN6G9nf8dJQcuj2i9f8y30hLvE/6ttU7Es6xSUgJZ2v6DUnNYoAO7jJ003mTwI++n5oBLMwe8iTdepCxzBPR5mhzxz+NoXD5OmfNevSBhCINwlg+Oa5rcsqkz8NcC5qsy9sKWx4V9GOD3YeqEXcsgtlAlBIe2apO4pdGNco0r+Y7X93dEkLvaErzySk5d4zGx+9aMBE6F74rDL16wQVn/sPBHzyEl3rCApd3r+oRB7hNk6oJMq+YLxOn6vuUAB36IXXUTiHtvv6sQXdgxokG1ofzz0xoTzxbQJiOAtOhnwuHFwFuKCZgTp34AEjEhh3HNIvqR9VAJ9c+NC4CsBJ7rfBPCOcUeyNYvvc6/yotX/sYE7hVHPS5NUzPx++iIHpfM5EqOLTaFED5GG3TSg7PtB8u+fC8yTwwKs0vk3tvkstOjJd2Bc9T0p1+qzBKLDT/rlD4+JNHOqA3fcThINlCoNCAWhLsskw68keOfcJl4kaAtBQNosTUVKn/ze9aQQyFaIHJaJFojzxXelNE3dIOG4/1H4xWv9saz9rtihPNIcmp+XTe575PT7l0zZ7oLGL7PgkSnjdrQj3caThA82HMiAIQvMhcGXKdqAb7iSsHYiFI1xnnoXBVYQwJIv2XJHGFDUr+IsNSv2gP8w3UBVcImNWxlXuYwvuOlgkPHEawsv5V6whgv/Z0BMmeUk499jZJo98qQRwgiWUJyKcYWQeu+1/adAf45AT9mDqwzOL5/mYz5vfB1CBniq0rqwMml/z4avxvLri81CmjzWfQxP6kz0W4moYquyeR48B/ZmGbD/sa+gpbxMuEmTsuFAmGRnqD28y8rlJ5aFoHQFOyOTcyk+R8C6kvEIFH5UX/G0QCr/NErFBHEVjxMqQGMgPxSB4Ye4/hVsOEdOdXtj+yWj/W9O/GNaZ5fZdeGa+X/lUCJ/v/YkAeOn8sYiWcSQeIFF8KEC0TRUcjBHgPJR5ua3s61D0pyihfhmOP27dIcNo54vhjgP2pYCeh8DIxeoTUaF5jCHAQfyJMqnoLSJX51A3Lx12GdqYM0ridAdZgXgq49yG/4nXabiMvVmAwt7MTx9z1E8VYqvoc7CNV2VwlYGMN4azCo1j++AfnQ7C1pFSnqDOmX/bz/8AZl4g0MOHMAdjsoc4fkc+cmliwehguGFcaDlcK5oNrcAO9KERp+d3PhvkM2R85xQPNCYBw7T4HICCVcKNQJAUSfaVqbyI/vmOxoX6wQ3XQhtQRkV88Vq4InyRpp0gfvkJItojLREtzHJEmW16t40WuTdkzPLHkXXudn7SW5itI2s6g+fxonmU3qXMCX/jb7mUz5illQAbrxIEC+hzxeeOfKA/hPNIOGgPfwNngbmwDwWAPlTdeQC3bXCduKMQnYJ35UGxCOzAuKByyHkQkpDgwSqhQrgEAd7n7th3xj4yRtpLzQcjUjzDDHPeQBxxDQ0ALaSRAxcqFK0T2jVLloSDFm620bLw6oDudH3tswE4UB6GLZmtJ6vkdyhPhWhbAmyySWllS/6gR4pQDke9Lio4j1sqM/jAnxfseK62T1tMJSB0ETkOQs8LupqiVP1V++I3ckITAjgLgn0WfuKbsBDUjCEQE1OICqmwOh3KBgeOKQEZPpVy+g5OfFv60xQOx5/EEO2LefCPtvaLriNQXtpcCrt5fynsNyAq6YUQlBEmgAjjSz6rPGHOQ+PKxMQAJ3+qt+JklHEpF8qON7607qnArE6pvi2EgNCGQ2MliucDtULVrFhVl3gslORP6s8dnAxu57ag2xmRDJTHPHWgOQf/agMO3fLA41LP77Ks14iemS5KPhYzhq5pZQj69IE5+XCsHwoZ6KIxB9U76ZEcERXaYZHjWV425qbKqD/5A2VQrarOCogcLCtuErNE62pBVeJzcoGTrOGTkZbTrMLrFHA+/b2F2QTcDlJTd+AGs6BSnt9lWS/4IJZx3SwjoqsoWqaJzMuqcHZfKD7wDEqF3hXpV6UA2KlMqdjumIjONEqiDDZ/lgJia+oq+/qTP9XCJGGrhHBWZXididsJvWFkd/32Tzr4aJ91uB3MR5AtAw7XwX73T2zt85HfEEK4Rz7sI5GbRdXsVVJrRabaVs1+QUkpvxp6UpLuKz5qp8JVVrgabuoUxXOnOUV1bq72FaViD856q+BAc2BZ7iBozEr7rJmnZjDz5fGe9Lf9vtavfZgOQefXGVQIkZpWtqmm+UqFVPsVBOnCjk/Vhe+WitJTpWYvpKi3Rdnsw6zgRXL6nDKYpf44UT7H6QGOBj7tn6p5qDvks83JGvP0d1bg/8iHKoT+IjlZJv405HtktymSQCK6ZWJf9U6N7KMwKfmqNEE9Ft8C8vTe9gNR7quoWRVqX+Ck0Bw45CHXLoJpYl96nZ+Z6rR+7Kh7W07fgfLEt7H8DsCfzIeTMkGUYtJxg5TGR46HiMY4vsnFb2dscFk3uDaEoqL054iqrdiDQ0GaAc2ZJN4gChDKxzHzwJ/1g3+2oTmAI0/1MFWm25EVwrL8EzzPu5RgtvBsyIjcoYcoyR+HuafdxTdMIDPmOTUTugVS4i97PP1JInAKgVPKTnpXxsscCgM4/pB87AsP06uDf7Q6vzBgEU63hrNJv2cF7I984POBCP4tWiB6+m7fo8deZykNLYuXpARXyR8ceFYDzRnon8VHVYX+AQ5CeboqwquUNgUy08RHnnPiAE7rn+3OT5xEVMs7kypgyY2tv0Zzmk/9A6dEdM3lKafn+nBHyzSDx0bqeJthq5JndqSsjeJdoUqU72zfKwwmkK3sZJiVz7NgmsKsIOEs8fqBcWS3/9WB5rR/pEM2xawIZ1m9MvmXas4eInY7f8jSdRIvY3/k25euN0Qz0hThbJXHNzC3DDEOaZu61aZA/VF5UmpTJrc5gPjIjUdJMCYizK30z2brH5025p6/aLrcknCVQ5aFU8L5A/OI34EIH/qiuyyaE5HTde1zJ7wGsSxd7Sild4Wa/30oz+/JGyxKUHN0jQiOK0bhNAmnqdePrFPv4O9t2FRb5p71DMINKrNKCxWtvuPnxf5EPjtE91lykwTT0O371pnt9jC1iWli0CWlSLdcKyseyxd9f65+NOYdMs/VGiZXEGBQsDjMGlZlPM+DEdUmGMOg0nAaO5ee9otxgLnDvxmq5HdjDPvc9oacXsmTGM3P9/1XPjWiDTwz2hwCDrTIPoe5BdE8TUmpwDZeJPDhjG6Ng33e275UJPrPp+oXVEqkf6siuspC2NE4jWZ5NMvAx730ja8mvE37X3DFmJWLwznh0+/eyAuvuXDBUF79POZ/80NECFL3QAGPjcQ1ACLzxK4oXSdiaym8U7RIGOBWWf4givG8k4ZS80uW+aaMFyn8jLKjcJJCebD1eqF17GjI/f7Zbv3joPNjW//CxUC1WIo4jsCa8sey6HD+8mj1nZ9nifs53VFymyLiwx0ZxxbEuUR0C5XfTpgAiMDoRGA4XPRVlEqZJtwjNkFhEgjgBEiGRyKwqUlCMnLrQUVwIYM4pTuXdjMrz3hfIP9T5p5/zqd+yJPB5QG2Bg5peI3pYeD2XD6je2RCnbxRCEeUbUpggVLB+vAnnG1yk2frEvEayQwyPTgW+N5oBmuCE46hPPE1DCq2Ttz2v6Eznda/2gjfYlBIjHX73HR7djD1ozl/pi9/yP/C9PgPfp6VrRVia1CkJJQEyTq3rVNb/2Ji6GF0UIysckpZPE+pTosMaV4wFVMSg6K2wKamidsLja/IajTE7lblbUjGPDasU8O+tPyxG82D5Ia/S/P/S22+8eEdRiaQQIT0A5S8ge92PfvMMY8sJCrGoeV2/XAWw8NAfyBQJJJRMiEW+8zTP1sgo2J3hzpDP0NXcypZMfzwlZCBt3moXfGf98Pyf8Vnl6Ai+j8VyMoY/VdJvIiDCRIAz75wrBMboUf/bEDMI+QDfjSDETFeIwc2j53OT0br7x0qzD+hMJ3OTxoD96EBnbHP4dAQvt0QrmbB3+rhrEElWP+PsXz0UeZGShskjfA5mCUFyLThvWFx5pGpfzG0X3TYnbI+mToRC5hgAg4s+hchw3U/hCfHG7lMiRGhViQDd8e06um/3c/f/ZEcktMp6FKeZ8riFhFG35e5raiTBQduHAorMCEWo8FinTGlcQeYRsGaOFlIbmWmiXlvUScJ/wsfybcJiRbHidtNjEQFEdnD3KTn2pcOIp15YkHgz6Et8DDEMvagMNECsQ9+hj9xmauZ1Muf4Puf+JTbRpfEL6WblK5pGUfXIUBhoo3UF1MDbP2pH1wRS3wTJWvOocQD5/VM6kVu+b/3Kem9JRNQ6nSHib+Y3k0MXMqIknWyw1IU/4+S4f/Yp5qQVqCAgubzkKt9bL4v0/svT6/+A5+K0lNZfSqv/m3b2f+Pib7vuab/lc/7/1nS8ytN2f1/UP8BPv8Hk0g1ug0KZW5kc3RyZWFtDQplbmRvYmoNCjMxIDAgb2JqDQoxMDUxMyANCmVuZG9iag0KNiAwIG9iag0KPDwvTGVuZ3RoMSAzMiAwIFIvTGVuZ3RoIDMzIDAgUi9GaWx0ZXIgL0ZsYXRlRGVjb2RlPj5zdHJlYW0NCnic7b0JfBRF2jBe1dXdM9Nz55jcSScwQCAkIRAwgDKBhBAISUxCAAXNJJkcmGRiZgJGQEDXe1n0RRAQl0MWUVmMyKogKmJ2V1EEV9D1WnSF1dV4vPuxHjF0vqeqezITDtdr3f3/f1+ap7u6uo7nfp6q7lGEEUJmtBwRVFpSnpFVVrnuXqh5G6CyptndamzI6UIIj0GIz6tZ6Jcv2TtKj5BwDUJcRV1rffPl3FWfI6R7CdrvrG/qqKvefyePkB6eD97W4HHXXp9XDOWR8fB8bANUWB7W/QbuK+B+cEOz/5q4guhfwD20QUebvDVuRJZAOX0a3B9rdl/TKnaIIxHKoP3lFnezpy3pnlNwPxGhi7NbvT6/cKmYglCTH57f1trmaV3i3voBQs1wq7sfYX4Ntx8JgO9oYT1QkaheyeuojgsDCox6QkSe4/gPUEvfn9A/+6TBVak8kk2ldfm1SEZyX58YoUTgDbpm/H4Vwn0IaGd/HPCLci4CrhKM3IV43An3DcgF8w2DvoNROspEWWg0ykHjUS6ajKagPJSPCtA0VIiK0ExUjEpQKboUlaFyVIFmoUo0B81FblSNalAt8qA6VA/jNaImIKcFeVErakM+5EftaCFahK5BHX19lCs/z0x9f0VCnwLHV3Cc7vu070DfJ31dfSf6noPzs337+t6C82N9j/e93Pde3xN9e/tegfPDUPtY3364dsKVHk/Ck519j8LxUN8Dfdv7tvZt6ruv756+XTDCrr7HGU9/nj8TE+Ny7W4M46QKHMBgDVIB0jVIA8jUgN5naTAcYLQGIwByNAC9BXmoMAwgVwNK42QNMgCmaKADyNNgEEC+BlTnCjQwAkzTwABQqAEBKNJgKMBMDSwAxRqAXYIeqCAClGqQCHCpBpSeMg1Ar0FfVKDcqtDACTBLAzNApQZgZ6BXKlBezNXACuDWIAGgWgM7QI0G4QC1GsQCeDSIA6jTgPqAeg3A5kFjVUgGaNQgEqBJgySkOoJmTa4tGsQAeDWIBmjVwAHQpkEEgE8D8BTIr0EUQLsGNoCFGlBdWaTBKIBrNBgC0KEB6A21WGa1CNfh0bgO7Ud/h/LFaCvqIUmgeRyqg1p63YkrUDc8r4aWK/gbcQVcm/ltiIPny/jDMASHRwMfr6YS4bfh/WgfOgW9V+CVwjThMtqazsPG+kJ4Dn8u5HA5aA7fzF/M7+ZX8LuhRTtfx69AnXDO4V7hN/KL+SP8YjSHYoaLKFA80AY8HQ9CG7gNOA/H4DzuMHqW4T8Jb8AThBeFF9FxdByXQsudaBEn4T/if+AMPAfvhl5foC9wEtxlc9n4U/wBYLwOvULmCBLagFbhMLjbjw4D3qfQP5CPh1HRKuE4N0I4jp5D76HXoR6hBZhaZAIZKRyH43O0Ay0AzryHOeG4GKFL5uu4r1A3voHbzn2FB2EOjjCcBNy8ghzmq/g/8rfCU+AO5shokkQmw3kebSEcxxsAi/fEOtwB7eixGObp5p7jngAan0bvAF0wOzePW8xtQO/gXXgfprpwI97FV+mq+Ti0QdzAz0GfUt6gV7jDwI9Sxo/b0e3iKPQFL6LPSRGu4ndQjiGn8CxGOFk3XQxDa/F03Q1ACSLj0GKmbS9gJDyrHtBKLyagtfxQ8mvAneOWBviGO9BhLodUo43sWI2fQKvRE1RLIRANeVwnCjzhMEqTbZ2cs7C203XpHPn5uckj0866lW06uROVdpo75Cf6+krn8HHC3E4hvpM49Z28c9B7F3r43si0GaVz5CfwsPw8bdj8qjyoLJ8DRXoH1VCfn8ee0Vk7BSf8K6zqlGsa5Ntstw0af5vNM34k1XRlLV8nbAPfpUNJ+yGAUmMR8ZDHsF64leNRRtex7lHIdqz7WHdmuD3Z7ky2J9fxqNdH4npPKWt1lq/+0SamqjoOvkocClqjg5LicqEEUdAliKIgJeglQRQMtMwl8AQD6BMIT6QEg8TzxCnxaJeeXylykkGvE3hgnkEkRtux3UkEz++KyhkFucbJY91hOZlAo86m/0RnEz7Rqf9oKVgzNwW7lkdLGVKlVCctQ8vwMv0yg1+6TdokPQPHEThOSLYwfbwhyeTUDzfIpkJ+qlCgn2aYQ+bylcJssYE0AkPqxSqTHy3G1/LtwmK933Arf5Nwk/5Ww3p+rbBGv8HwmH6v4UX0e/x77kXdQf1hwxvoNfwa94buuP5NQ8Z8NB8nk2TMDsJPPbP9SmUpl4pf5FKVpWd24PUvYZvyuXC8ZwTn5MqYIwILRNzFwDuC0h5Hz3LYgQhv653Raa2Y0WmruHzOXmjlumguyCKjOxM/ZhNcQqlA5oeDOPbjFcoyOpo2jvAFjGNAS1wJurHUEseKOtGp4wh6Vi+IWMeN4nWjEJFsvSBTew5jbndWjsZb/hMKc1N2W3UYzXeNkURkjBEvwgV4uliJ54qlxnrcIFYZ9+HHREsMF6u7hButK+RKOJduFneZro5r1BnnY8ALg7LQ0368i0vCzUrZmfeU1cLxXoiAPSNAgZBKd0BnRHSDayhJ4EH6CeBU6AVxImgiBCvRSZEHDQKzEniksx3bswoCC6epBiCv4h7QBFUbqCqkIc7GyVwnx+uwnkThaBLNRwlJellfgArwNDKNzxemi7PxHLJKbwexhScbqMwkfAP+Jb4d33DmdSVbOP7Nbr6YcpfqeF3f+2Id+D8jRKEsV7i4KwztMm0MWxdtGGkdR0ZGjogGvvZSkzl5utv2aabLiGKiwm0xGTGTYgQ8H6dwkRFho7PCssdwREZ2G0pmZ1LXefBg5yMHDz6CG/A6pUFZp6xX6vF6/g2lt/tjpRfzH3djHkcptcoaZa1SizfiBfgqvJHxEHAS5gFOMWiCK9ZkMyAHMdtiHLuIbZdhI1kXGz7ShMQRsbberqwAYkqX7ff2sBz4l7knI+7KOA7Pd1rwIBWjLEeUPR0P0lAdO06Yt+BvS5XblSK8B7cv/duCq476Xu7uftl39KqycRfhLdgDcWjLReOUFwvzlK8+/ED5Kq8woNP8eyBbI8p0RfAHxKe5A2il/oCEBYOOgIKbgFVZx7q6qAxPw5H5mM1cam41E8z0OnDs561n2rj6M+u5bd+8JRxX3lE+AnhQeSdU343oElc4d0D/NI9WSiIMLxhw/xTdWVTJT0+EKVyRVmLlrYJVtOqs+lJzFcy3ySydNSNewV1ErerM89SyzvyRywFb7Thzs6oD+2nqBnPqIRu62ZUVF8vFxyQ4ohzRCVFRDmeMQwpHuwziLtPKKMkRHk1s8TEi4s2AU5TNoHMYSYJKNxhfVI5d9W6nwRZzwnJCFFn4BB6BHUbHYzzflRQXHRcTGxsXFxs/NnKsIz8y31EZWekoTfREehxVidb5OGts9pghI3AMB/jLfGSEqEvEUeHJBATJnehobOzYqizjivBQHL7qjpKlrleUusfGXX0FmXRZfd0cZYXyxZkXheN/eO2up0eGLVuhzMG+1rJ+3eoB3UpAM1zOmFhHQL1i98b3K1h8YlzMKNNolBE+UhyRCMSdPtkLQrV1MROAQ1M1qm27r0wCepwiH9A1fqCu2QfZk4WeO5RDv2EKtx9fvwbbO5Z+ueRvX3/+zsT61I+5Od6pU5nSNeJfU6UrmKr0ffaJolhtOIUmKRitBpxHAs5D0f2u4ZCXRUTbJWNiEh+Jn+Mjn4veZed3OTfa1w1LlIxJcToUF2OJ0MWkDLO93Q3BrguwzKFeUbWTU7ZTIAcNeVdFayrOSchJzEnKkacnTk+aLs+R5ifMS7wi6Qr5suQF8d4Eb6I3qUH2yi3JfqPf5DcvSVoiL0lea7zbdE/ihqSN8obk7cbtpu3mBxMeTHww6UH5weRh4C4x44EYGeFIwok4MoJPThk81O7gRzOpZuB0nD1mMPCKf3HxRw23/WJu+7av/6S8pbz6K+Wvq1Zh45Lrbrr8ljXvHsEytizGvLBd6Rp3UVHpxCnRyVkv7f/yf8dm4/yimRXFU4sSkzP/tPvE507VPoFPz4Ee29FoV5TdqIdwLxywrDOglWF6h5RD7Ses35tlne4GRmQ+5gpvDd8UrppohIMiCBajujEwm45bb+sAwzmo7FOeVA6Cu1+xd9OmvWRZ7wrlOeUQHgtZNrNZXQ7Ma0Ivu0aTsTq9joNApacXwhkkAx4rSQanREOWHhy/UTDoqeeXxFG8BJHLrEauKC1ydVG0zuv/d1sJtZ06A2fVWw1JXKQuSZ9kiJRGcJO4aRCyinRF0mxurm6u1MB5dV5pDXeH/g7DA1ynrlOK5TFPkMWBY4jNMhw7yXicTUqwixToK/VzDaWWBlxPPPoFhirLjfrbDHfrowPhA9gBGTB1Ih/BeqES/125S9lxWtnBot97JAmiX17vW8T5DbAB93WD/zrBfMka17CB8Y9weqSn8U/P4p/I6fjxggON1xlsx2Z0GiAxMFdcTjMEmh3oWHbQCznSd4qITsGpz+RcXClXBdFRkpAA1hFLnHg4ycbjSaZUInklI5BEWEQEmiLwb4CcCrz9zB+ZT+zmIno3n7mda1fj+GbQJZGvYjEozkoQNr0VcTRqnQ0/GiZyKNxqthdwZmSLpd6hO8vO0ASdOkkzEIhBVXHLaQyCDDMyAlyBIyoRa6qVnA1xKWXIZtzAWeyOgvTW5bhO2XDp75oPvoj3cDtbL1c+Sb95UdygITvXc6nfbN5aPf9T6qN3Aj5XiBEQF+LRRa44cYvpqBVtiVxnPRR3X/TRGDI5zBVtMphjbcwZg3JTfLqpyf/t08w9JYlViTQkMvNTDZNcAhhRlwXIDI0EvAjydXT4fIsXL56+p/0IlpQvjrTvma5swHUf7Ni8eccDmzY9wB2vnq88rpyB4/H51VvFCJVXC/re56thnTMUve1ymU2cxTg2MSlREHV6g8BLY5OSEp2qv0Iv4WN8xEuRx6I32flNzkNBn1UeVwZOqzRl5jBAH7zWyYFe65+f2v75aVjALiw0lGgXsAq9kVrFFQYDmJrRaDKaDVZhUKwp1hxribam6dMN6VK6Md2Ubk6Vc/QTDBOkCcbxpvHmGYbp0nTjdNM08yLTIvM+/T7DPmmfcZ9pn9lpES06i95isEhm4zjzpNQrUw00Bw5xaryDObUhQ+2qYANObezoLAcf5XvtyrqaGe5JOPxp5Sulx/vJ0qve8zcuKGye9NmB0701b/IXK59nZo7OHpFuNAza/NCjewYNwrYxY8bnZGaY9Ylbf7N7ZyLl6xzgazbwNQaNc8Uy3lleMh+Tttj5LVHAu1jdZDOKmDAwDzpNOZW558q4ZVT/giizWBSSEfHZhatL1t5//9qKu10Vv52tvKI8CLadMechwO3trMyH77334axRyltJSXgcjoRjXJIq652wuuwGnOyAk8NuMYg6RA4Y77IcMjyqk0Qz0tvCaJofXgE2rO87cNHcLpasnKQh1M6CDlZRoqYQSXXQEUW6M+Zn3LaGqlr+o0vDhg8jGY7IR35zppeveqLFQwSm/3AKEyPYui7VZRHfQY/y93ECNvPIprf1TmSz0JzLZSg1VBlaDcsNfDAJ2kltjAJf9c1mMUJ5m+U9O5VK4QqgxQY2NcGVELUFHbXYtwhH9Ycs6/BfyKMJsZONkOghMxdiVbaTJ4GYbtvJELPqp0Wzp/AAy0EvuDA6c4hJbQMT84GpbT2zR5S2hRgUGUdtjNoa8DkO+LxN+DUKR82uWIugt5ItdvyofguS9EYDZwCkbGGWioiQJdWMTjs9hTH3aaHuc2JX78SurjC2JOrqPg08AueUiV3Rk9CkcLqFQ6w2q72UKyWlkVVcFVGVnDIswjEBCilDsiF9GW3nRuOrlVWXzHtCOXzskd27hV8rB/uQ4iwe14ceOYbfwghfwvgJ+ioMBX7StcRIWEtsCUNbTIfoWmKytYhMjpxw1lrisXHhk2IKaOzFIQwLXUZwzy5aunRR+5Il7eC08yEEn1D+ouzFBWTxQ1u2PEQBI+V5pRuO5/FFOAKOi/r1VAgDXKJQtisalARLb4UdjTxke9SCwW8X2M1mq42io3rKiSeDnjtmeQyznORs+5ghQ89WViFMWWe2RU4Dv03leuljLQdf4B48U+nF99zZEjto6G/Xn3mDr9rGvDblyTzgiQX01qb67aCOrbMcwvcRpl0u0LMJCWokYWp8toLh/rhBmQJYkFBHvh3D8mr67vYjyhdYOuJ/dCv1420dHWQ/N+fr7q0183AhJnAUzu99gWoX07CAvCSe7hTFoSmuZBT5Z2x4SX9M2GTCr0dvCjtkWhcfF8npI80ojzNbJ8QzDLtYrKMSPMm8zad0xZUwKYGiGZnMvGGIo5GRwPDUCVLvk+aNv7z6k6XLlGXKUeVhPAPSWz2+WLljUVXD9TZudN11103JU7ozR+FsHIXD8Hjl4Oq6pe0tqjyHgj2sBD6Go0td8TYBm/RbRLwJ3WcRH5W4cB3SGQSzOd9qjLC9TfOIGZ0WZgdGZgfdQTs4mdULqpcVxgxBWK5brucAb8AwAau+AhSeunGy8g9FE3GW8rKyYfful14TIz4el1fch3o3kyqMih9/WOMf/3vgn4Sc6F7XcIOIYpKM6E9RR8RNlqN2+aWkF+M3DQJHbUKDoki02WA2XpxEzBEThtAYR2Vtz1FxOt3L4vQXn+ZoeXlRxtCL5YuTJw2dKc9Mni/PT26BBPw6+brk1qG/lH+ZfK98b/Jv5d8mPyU/lRyZlZiZNCXRlVSeWJpUk1iVdGPi8qTViXckbU3cnLQ7sTPJNj/Evi7GzkAGQjPw0aoW6eyg2zLPbW29+vJLPbfhRuXuaXtW7HoDW3HKqzf9yveHWb4P/TgDm/FXRdPzZt7ZnHrzmRXb6+a/uPX3T8TPKklPx/b4hM8Ca0nhVsj/JJDUKJfDtEtn3IVWGsLNOqy3jeSNekjCI9RFrF2N8Bl0rZi5G0Vi6q/pUo9PHkS3WlR3MGg/twwn4FHKEeV9RVmGVxxvvfbaVkjYPvr4zJke/mnlyuba2qaAzWsxIvFxdB+HIT/jbb3qFhOEBaFKaBWWC1pYYCFBjPi6W9WvByGH3wOydKJGV2pcZJiB1yFZ1EVb35KPDiKHEh+NByWLCDPpzeK0CHPYtKQ4c4JtiOp+Qc8SqJ71TqTuLUdNBieCT5l4krpcO10Ug7ZZk4ZmDi0d2jp0+dA7hj48VDcfM49CncslOCCIZLtq10GPw+/Le7L12UPKOoynFtd5OWWdq6y+FW4bJj9U799Ntjc0f/r+mUpumjk+dtFVOzadeZObtu+qB+5lfujKqtYQfwi8Odsf3nd+f9j9r/2h/V/4w/WrA/5QjDizQ3WI4A+VqYKF7wBvOAxW4EPiIbWOfMlxLGZTWAKktIZD5kcHbQl7Ex0lQ0zIbHFFypPFCakBe6G2clL1jpAS0hQRXOTwquHabk8Kyh5DvWNUNlvBBbMzEhpetoOrPKycxqbD7bung+t8SNnf2FVzxZ7LO7d1e5dc42tdsuTp6nl4Ss83OHdezfZeu/IP5X05GUeNzd6wjYjb1m7YtG3N2m3avkkOW+tEoXRXJDpgWIkPOPScA5YfI23pyGEgasQLaDrNT3aXxmDKTk27MWh8lCMMVgk6kU/F3MW3dX/91Sdn/onXwtpk5qLGurrGa5ROOBbwu3uv/ujEXz7Eg9x+j/LV/Q8oX3r8bipbSM2EGFiriOjVs/ccyYA9xxMD9hw3fbc9xyX0bY+NrbLoCquSq+OWc3dwm2GdpR4H4DgKx7vs+ByOGAGB9REJMv5wHE9i+SFoMB5BUvmxaAzOITl8pn4qmooLSSFfpb9GvBnfQm4WbhHXorV4PVnPrxE2iDvIY3gvGRzcw0zCdRAWHLheKVAW8VW9PUT8ZnP/nquwgO3Tj4bMkG7K8fgi4kAXCXq6spT6o4GgLSqZ08nKxLtdhmCOKAlVih1ik41uyX1TzO9GAd5KwFsj7nBNlRKMyGhI0BsQvUiQ/Ir6BB0ILoEyNoEjIr3w9C0+SAAjp0EkiOfxCUnHSljQYaMpgJNVS9dmdEYEY1XXsa7+nYDz7wOcT0ZvQipnsJEkg0wyDKPJRMMUUmQoI/MM1aTJ4CPXGlaQ5WSlYZXhbnQHuYPcLW40bDJsJg8bOgk9njHQ4wA5QI4YjhiOkqPkhOGE4V3yLvnM8JnhS/Q5+VLsM2QRzsSb9EQK5+L5eH24lGQezI3gR+gHS2O4CfwE/Rgp05zHzeBn6PMkr/kmtJxbxd8qrtIvl+5Ga7gN/Hpxg36tdL/YyT3DP6PvlA5wR/gj+gPS6+god4L/s3hCf1T6AL3LfcZ/KH6mf1f6Gn0hjgcNAPnHYaoFRlCEPypNePGpD/FiuO5Qbuz9WrmRu5gbpOzBRWdOnHkWVyu/Dt2rFVCUy6iqhIMgIsJiSV0aZ4b3b42ybdhvipV3QNNPgZMqBnnTdUa8y8LtgHXGDlHAHI/CB6wzAmpzikZLCnyVslTZriylOknQZuVVQQR/OwgNR6OQzzUpXhKdcdH2qIjBxoQRfLRoSBvECWvFNWlRa6PXxK0Oi0hbjTjjMJyQgSBhHDbYbiBYNyIunKAMMUrOsh3r6j0WNbE3auKx3i51+45l9VANuQM4QxpmwgI7eyy9GUTSMfWAUfahbGk6CY+OhLtIWhtFd+VEHYFMDTxjuBqASNxWvPQjr+/jjuTPXvjn+3hr7fMe+Ccrh09/ubVgVvHns2eXKq/ikUJ6KhYnTOLxOHH4ngcefcHwwfv6lDhleIagvCcOe/LxJ35vIZPBy+RnT5iiPKJ8hCdPzpsCMtkKMjkhfI6i0e2uVET9FBh0dAI4KqcQjSx3WI07wzby6GEuOlJAFr0jEsdZSIya0IF9ELac7GWJg111WqfVVz4DtgVUixjCRQ13DI8iBFmihOioqKjoFJQSlRKdjbKjsqMno+nC1Kip0Vb2aovucAUjMEuFKHO4Yu7Ob57jkgunrmy/7LVrr1euxSacet0hHKecwnH4vcnX5TUun1mEp40Y2f3qta8+wvzFrZATfgo0DkNFrhEocme4Ya30iHmnKK9NeiR+Z3jnoI3iulRHeAysCGIcQ2wOkhSRJBsSIcSd7KLbgEx8aoJ9slfb+oAUO7CLGrLhMAJnjw4sA4JYk31336vsVPb5Pri66Xj9+vvuv2/D1jt/ddt185++ou3dJgzx5jbiHPrsmr984HTi1LHjFtTUNX51+fzKK4an4lhZfubADfczOl4BO8jBN4Am2x9HOzjMofD+XIqq/it00YFvAHXn6P6PYBE+BbkORuNcSbqYnRJ48jX8ToeUtNO20bHOGe/UxYZHoZRY82AnDea9vSfVNURXgMBxKl3jAmFcXf8BwThkqXN43o6ynQfseRsuO6V8gHOwDg/GLuU2ZV/jAbzMU1fnAUjGESNGPLM/Kwsb3/xfnKIsVNYpv1LmJnGf3nDD9b/4xfU33MDykGrAOUN77zXIFW7YaSU7Izda10UjhylKdIRFnLVWxTaKg91GswgcWJ7CmexqXLJkwYIlixfgFcoB5U3lDeUAduGheAh2cd04+tQp5UPl1Icf4mhlpdKMV2Mf9uPVSjP1EYFcWY/sSEalLmcY2mt9Wtwbu9KwN1pEOhKWaLIaouN4HXEkmhyRNp0jhiSryTPbMLYHtEV93wQLBwNKsaVkpJSmQJYbeIViDw8UVC1KxdobFRJ2+RVXXH78r/52f/tfuWlLblHeVl47s4KbjMfhqDqyurR45qVK1xlfdY3brXRwMYMPrvzzMeH4/iPN65mOxEAuFwa+0orHuqZYE5BV4I0mM7FQiz47DbFCK0hDrE6LxNkEJG3Sv0nQozarxWjQ05zEwCNbIDCGxET2kpilKOqOPV0gXTAqgvXrmfFvC6YsdEvYw/m5myBpuYulLXtC0pZjWtoSzWMDEQSI4jpB78CRQqQYqRssDBYH68BhQDIxVhyry7HkWPNRPp5OpvP5Qr5Yz3nEm7ibhJvEW8y3WO7m1oI7X29eb9nBPUge5B+wPGD9Hd5PnuA7DZ3SM8a95r2W57kXzS9aXrC+xp3icvpTGwtWTXkSjoEcZyRGsDJJLXjqniOtl5dHQe5xRs999c3YJ9d8PH5GEuP7NFirJADfTfh613QxQafXCcBtvV4njTFKwHbDGGC6cQxHOGmMQSKEowIwQXMQgMkpCZCnQC5o1JuMkkGvft1h1CFzgP1Gyn5TkP0vBfKR75GQ/C1SkqVsLlvIlAokFxxXSk3SMolxXoADYv8B4RXpqATcFz6TohxcBIngwwSbaINhwgwRksM4BEN6IaSKw/UjDIONTlOGhcoCUg1hvDheN05/kWmSpYArJFP5afSLB9NcUslX6i83VBjnmq601HFVfLVQJVbpqvS1UpWxnWvlfUKr2Kpr1fulViMkneIv9LcabjLeblpluUt/j+kOy3buAbKdf0D4jf4Bw3bjgyZIQcXH9HtNf8Bd5BD/gnice4O8zr8pnNL/3fA340emy5kM41h6wrKTaXje/qfwCIB54Ag6ntqvdECq2kv4MzzX+81mwvUq7BuV4+yduxXFoWpXrNmxC9l26TaidZZ4i4TN4TEjpXHhI/kR8YHFA4122ttHsPE0vQklxJhsCUNRRkKlqdxcZ6pie9itZrPONNc41zw3Yk70AmOj+RqTHhb/Qv9ejB1WGYApfTnp0N7Zr0pUVil1eD2ux1fhNa8fwiOVO5X3Ow8+veeRgwfj8DrcRF/LKw3Knb3KXfOUTpFXers/71Pf36v7MiLH3ld/7soPzYMvlCsH82MtPZZ0z4L10ZLOiHXCwPTYHszbu94+JzMO+VRmgD4G9XCOnliJaECGJGIzZJAhBtkwkYw2XElKDavIcsMzpNNgN3AiL+oNUhwXwUfo46QRaATn5AeLTv0IaTyXzWfrx0ulZg9aIHrNe7nf8b/T75Ni1bS0/x/p5UTFq9wHCWAzlCz4f3ABnorv4nrOiFhROK6He0tJwu8h9UtNbra0LOng/CutE/+JktTPf1+e88/+65dtvbushw0eaKvXerCzrlkBE7Ylf9n2dZb18DnftY7hD6M6cRSSuBdgih60X9wNAPci1AsnABZpdakAd8L9c2i1uAzt132B9gsv9nULu9FmYR/ayT+HFvBPoznkH2gn9zTaSevIqyhOWIbmQBt6P09ohueL0VChDureQftpO30lejDwXNwGY45DSUI7koRUuMag/WQ0OiXcCXPcibYC3Eok9ApcFwBUizGsfYyuFk2j+Ioj2Den9K8IiL9Fg6Pq97UkE6AL8sl5AAcgjo4BPZQBjgGXehHS+xEyQDsJfKX0Z1BBuDe9hJC5CgDuLWkAz0M8WgL8BB7b7kDIDnV2eBbWhFA49A2HcSIuQigyGgCWmg6od5xGKAoguhShWOgX6wIAvOI2IhQPfRJgvgSYK3EYwE6EkqCPfBKhlG0IDWql368zqY0hxWgEugaZwBvYkItKWfiES4Yr/Z42Fl/SL9t1OKtf/kb8vlbmYC35tVYmCOKcVoYgypVrZQGZuOu0sois3ENaGbIN7oRWNtIvILWyOezeYTdrZQsaM2GVVrYh44S3tbId8RP+Qb9S58GscSabnZYxcuAXtTKH9PgzrUyQjBWtzCOZG6WVBRTN1WplESVyt2tlPUrhntTKRjSe+1+tbHaOJzO0sgU1THBqZRtyTOjSynakn/AhmsK+NO9AbaiRfX/uh8xqGKpBqXDNQplwjIZSNbSQ0WRo42ffpLchD3KjZpQGtYWoBdqnQykXNcEho7L+sXzszgNXD/RZCOdaaCl9h1nH9s9aATMthLkWQJ8WaE3xcEOf7zdjHpQWQL9K1A4taqCtm43mYT3cjCIZRmmBcyu0qYZxG6GdDP29MLubPZMQmuJt7WhrrG/wy8NqUuWszMzRcnWHPLnR7/O3edzNaXJhS026nNvUJJfRVj65zOPztC301KZL53QdS7tWuBc2L/C21MuT3Q0X6JjnWeCubJdrGtwt9R6f7G7zyI0tcmt7dVNjjVzrbXY3tkjoLBLLGYE+qFY7l7tbfPRzdy8QVgsFb1PthbrIwWYhneUf3KWSycIHHPQy/maBREbTr/0rPW2+Rm+LnJU+eszAkQPjjjx7XDrsyPNhUscGVxXAr6lnAJc6bwvw0w/iQUxJ/CDi8SgDjlptjIUwRjr09cK1DcTuYeO1MQVJh3E99MPzBr+/dXxGRi0MurA93edtb6vx1Hnb6j3pLR54PDUEg4BCBZT6XNOhz6iSepiie4BGL1oEbala/zTKSkcqgCcd0KaB9WyEZ62MLj8zDMq1NtaDmhIddeFZnDybjqAxtg8wxgtRI8FxPtpVlXBDKZRr57oFCTTghx/Sd3I1P72DO7+8gzQ3whOJlfyshmphM+P1VVDnBQn8K1woZaVsvGY2WtC4GhlODeyZR6Orns3Sokk9TZO7Ki11NlXHVH1PY3h5mfRbWP9WzYDVGbwwql/TsUZNC9xsDJXTkjamn2Fxtj7VsHZUD9XRAyP42Y+faBtVlz3M/lXdSwnRkhQmOdq3ll19DK8a6OPW6JOYFdSAhjazUfzsSYA/dewnVqolDevHMTgD9WkUfz/or6r9dMYgT2hNK7OaWpihhvUOYFPLKPAzXauGp372VJ1D+pYZ0jRrrgHM2tkoKk8WMR1oYF7Jr3GmmdWFUhSgoW2AVqrYtjMepoVIh5abmTxVWUshHsQHvdMuQEdaP50ZzIPIbGTVHtSxGzWuDpT+t1Md4JyKbWu/RvsZXkGtC1K0iPGj+TvNELCGOubVWzQKPSEz1rIznSONXSknFkCLGjae2iYgvzoWiVTPFpBQDZu7lmHcqGE6nllnhYYd/YGfl3mGoAxCfVGQA+d6AvozQL9mDb4BbQO2EuRYqA8I7Sczmt0Mc4n55oG6pnJDjSXub5Gnl0VBWZN9M7sG/cd3kYWfRSIaWd0aRekDOPVtfSlPOrTYos5OeV7HcKzVNKmJ6Wlbf42KKeVpbYjMQ7UuEEHdLCI2Mp/RxO6kfopqGaZUXi0h3KgfEFfVmQI+1M20R9XdwBxn88f3L2kKYClpFAQ1zM1k9N0xGDjP2fw4H25pmrybWL/GC3hzqV86bczPuplfCY4bqPH1a2TAXs6OHh7Nz3kYFYGZFjGqaln/lPPEw5R+us/uIcGzQLRNCdEy1WaKzoov1czevSG4tmt2ENCThfC08Twc88CS1K/FGNq6FQ41ermZR/X09wiVu4pzoEY6r6U0MA8vs6tPw9HDNOlCehLwdefz3bUsErQwuYfy63xclUI4FyrDH2qrPi1/lzVKAtYWsCSaOTT15x5tWo+BI7Yyjb4KzvWaxNR4SLVK6veq/05PdWGqqjUb8WvxsK6fU9NQPpunBBXDHZ2nBO4q0GzII8vYs0KokyGPK4MnlXBHfzCex+SSy57Q5ynMGmdDmY5YgmaxsdQxyuBMx54LNXRsmd3TuxnQvhjGon3z0Rw2Rz6MVg6YlUCZjj0Taovgmq+1oz2mQM0suKflAkSzUHU++uP1CmY7tB/FRcW0AuqDsw7EqpDNGMBsJtyVwfjTtKf0J/KFbDyKfxrLj2i5WMNT5VwZG53yiI5Mx5wCGBWxO1o7C66l0K6c8TOX0axiW8xomArPVVryGQaqJFSMprAf5M9lLejP9CsYF+hMFVrLNCZHSk8e609nncFaqZiVaFKm5eAo6RovVTwo/yv7Zy5n9BfBITP6K9h/DIDKJhfGD4wb0J0CNgLFW2LcmMXoy2V8KGEzTGbtKBcpP4v6Na4sRCpTGL+o3CjmeWymXMaR8vNSEhgtVDrn0w6pf4YCRl8+41QRa10OfMyH9oX9Nao+FjJap2i8VsdU9V7ViaIQ7k5hNFLJXgqz5ms6lct4N5AKKqfZDP8gFaoEcrXzlBCeBaVfrEk3gE8Fm7niPFyZzWwxn7XKZbIu77eRqcx+Z2qYz+rXsKAPmKXpZ0k/ZgP5G7CjQLvv4jvUsQJzD5RgHtOnIg3D8n5uqC2kbxlX9V35ENdq2DrH3++3B0bu0KwxmI2G5p1pIb42NBNQvXABa9t8VrtgrbpaUmNWcK0Tmrudb4UdWB2ruXwg6w1mH6rvVtdEoVlvLcvP1RzQ15+VeFke6O3PTBaxp8GY3qrtnXgHrPPozG4W+9P65wrEouBYal7pZtkCnc13Hm5eOEJJ56wMW1m8V2dZxMp+LTOh9LVrbWn9tWethgP7P+fKQD6vDAK0nC9zCOV/G5N3q7aWamQcpvlkujZuGwqsy4I8oRxQ992az5J6UPvoaOPR2bsKlAf1IZjXMl5LSN3Do3NKzF8F9rj+87tOP/UG93/TfpA0YD/o7Mzr37cfJJ13P0j+mfeDpO+0HzQwk68JwSm41xFo+d12UM+3wyL9x/aV5HP2laT/t68Usq8U3GH4/+a+kjQgwv7n9pWk86zW/hv2laTz7isFKfp59pWkb9kv+Hn2lST0ffeVgm+dfsp9paC9DdxXulD0vfDukro+VzOJ/7bdJQkN3F06/+7Gz7O7JH0Ld+UQDv537zJJTMfOzWZ+/l0m6b94l0k6a5cpuNb9OXeZpH+5yyT/bLtM0vfYZZL/bbtMEuNBJYw6nWGrcjsXnv98e0fSeWX+n9o7ks7ZO5L/Y3tH0gX3joJ7QP/+vSPpe+wdfdu4/969o4BnvXBEOXfHR/oBOz6huzQ/5Y6P9KN2fM5ds/2wHR8pZMfn2/YdfoodGv8547tQcKdBYvPQu3SEprIPtOh3bfTLuP6P6eRhPo9HrvY0eRelpsvf4Su4dLmgqaO1wSc3Nrd62/yeWrmuzdss57Z5FmofgQXmYF/dtatf3YVOI0nB2Ss9bW5ZRa3/0z1p5Lf+Sed+5Pedvw+Uz5q50Se5ZX+bu9bT7G67SvbWnT2KJJV62pobfewbukaf3OBp88Bc9W3uFiA9DWgHsqAbcKyt3pMm+72yu6VDbvW0+aCDt9oPHGsEFrjlGkBagpb+Bk+ATzU13uZWaE4b+BtgdOCyp8UH3EthLElJhcFqZbfP561pdMN8Uq23pr3Z0+J3+yk+dY1NIKRhdETWQS731vkXAftTUhkmbZ7WNm9te42HDVPbCIQ1Vrf7PRQHaUCHNBBzTVN7LcVkUaO/wdvuB2SaG7WJ6AxtKith2HYftKfkpMnNHkq1xBTE15AWMkcanTPD2yb7PCAHaN0IqGrknzU1RQ6GbaWM9ksq69hEixpAsc7pQMVQ197WAhN6WMdar+zzpsm+9uoFnho/raH01XmbQNkoQTXeltpGSodvvCRVwHDuau9CD6NA1SKGQL8StHj9IAafWkul0hrUAPWZ7GtwNzVJ1R6Na4AGWIl7AJ3eFtCLNrnZ2+Y5L9myv6PVU+eGidJVpAY+bXZ3gLVA99rGukaqaO4mP6geFGBQd20to1xlHTVQdxvg1d7kbpPoRLUeX2N9C0OjXrVV6EQ11F0Dg/hojwA+vrNnokNKMAFjmLvp/ANofQJ4BEcD9FqaOuTGEDWXKDltHvrfNGdtacFHGUnlEjAPD+icp411WuRtq/XJKf12mELnDjyQUqjZpjCWgWSKNHup9oAl0VHbQQaUJwu9jf2Iea7xg8XI7tZWMC93dZOHPlBph5FpQQoKpcHtlxvcPhjR0zKAJ1TrgtpdK7e31GoIB1GVGHIqhd8mVZ+3iVo1ExsVkltuot4DbCXQsNVdc5W7HggDO2zxSlRVv59SDZgKHBag6Gmqo0hNy5enlhRXyOUlUytm55bly4XlcmlZSWVhXn6enJJbDvcpafLswoppJbMqZGhRlltcMVcumSrnFs+VZxQW56XJ+XNKy/LLy6WSMrlwZmlRYT7UFRZPKZqVV1hcIE+GfsUlFXJR4czCChi0ooR11YYqzC+ng83ML5syDW5zJxcWFVbMTZOmFlYUw5iAXJmcK5fmllUUTplVlFsml84qKy0pz4cx8mDY4sLiqWUwS/7MfCACBppSUjq3rLBgWkUadKqAyjSpoiw3L39mbtmMNBkGKwGSy2TWJB2whDHk/ErauXxablGRPLmworyiLD93Jm1LuVNQXDIzX5paMqs4L7eisKRYnpwPpOROLspXcQNSphTlFs5Mk/NyZ+YWUHICk9BmKjlBdki0Q0F+cX5ZblGaXF6aP6WQFoCPhWX5UypYS+A9cKKIoTulpLg8/9JZUAHtAlOkSbOn5bMpgIBc+DeFYcbILwZy6TgVJWUV/ajMLizPT5NzywrLqUSmlpUAulSeJVOZBswCflLhFWv4UhnRunO1A1rR3hqBefm5RTBgOUUDKqQBbUG78q+p8bT6qW5rxq26RuZGVd+ZxrRWdQKgwgUtYLhqHStCWALLYlFH9W7BgE3DcZrqepn7AO2GSKS63tqFHvCAPupKvG2SlzqTRY0+ZukQApu9asyTfe4mmAx6UStircBXupugm68fzQEGJQWCYWtbI3RZ1NboB2ciu9uhtq3xWi0Mt2lhilEgBymgswSdg4p/m8fXClGqcaGnqSMd2rbRWMYwaWyp87Y1a6Qz9tX4xwdSBb9czwav9folb1t9uixJLOP60anTd/19xE+TB0lqHiT/kDxICuZB8g/Mg6Rz8yDNydewkXyBmHGeBDWYsEg/JleSA7mS9N+RK0mqHP5tuZKkGuyPypWknzBXkoK5kvwDcyVpQF7wA3Il6UK5kvzdcyUpJFcKNd8B6RLEc3ASP1W6JGnpkvyj0iVpALps3fhTp0xSi1f+0SmT9JOmTJKWMsk/PGWSzk6Z5B+SMknnTZnk75MySRW5lTOnl1C0c6f9oOxIClL+Y7IjKZAdyT8mO5JCsyP5B2VH0nmzI/nHZEdUWQcYSn/iI10w8ZG/R+IjfXviI3+HxEdiic/A3OFfJzT+QHsXSxqkdLik/5jfDGawfburADLY3lkte6uXzt6vtkLdwLeF3/4Lw4xFjVc1ZjSCs7omvbWhNUPzmD/oh59I/T8swV/fdegydL4/+n9jGkz/fxRoFMpBWWgIGoZGoGw0HI1FF6FMNBHNYS8dprJXJeVoNipDl2r/v6s8NJq99piBpqOhaC4ahy4HYhOQDkUiB7KjeBSOnGgezDwGTUAo9xfccjwEKYhgJzwleDBOBmYLeDDqgbtB0IfgFK0uhbWjZYJl9jwJPQnnRKCO4AT2NB7FwDkOJcI5ltXEsHM0O0exs4OdI3EEssCokeyOlgkOZ+UwdrZiC1oKz63sjpYJNmMT+iXUmVmdGR1APDZhI9ApsCcEzsuhzogl4JrAnhA4u6CO1hBsYD317KxDJnamPcTdd6cLueFYZHQJ7MyzVoRRxLEazM7I1beU9F1CFIX0fpMm9CrkmzTSo5CvvyoQvl5KviogX/aQLxTyT4WcVsj/eZL8QyH/q5DPFfJZIvlUIZ90S8InCumWSLeL//gjSfg4i3wkkb/3kA/vdAgfKuSDHvK3HnIKbk4p5KRC3lfIXxXynkLeVcgJhfylh7zzdrTwTi15O5q8tTlReKuWvPmGU3izh7zhJH9+xSn8uYe8/lqE8LqDvHbcJrwWQY7byLFXjcIxmbxqJH+CFn/qIa/A+K84ydG7TMLRQeTIyxHCkSHk5cNhwssR5HAYeQkev5RAXowgh154UjikkBeeny+88CR5YTn/vKvvj07h+fnkeRf/Ryf5g0J+X0u67rAJXQp5Lp4cVMizCjnwzHjhQA955rdxwjPjydNPxQpPZ5Gn9tuFp2LJ/ietwn47eXKfSXjSSvaZyF6YbK9CnlDI45HksTDyO4XsUcijCtkdRR6JIZ0O8jCM83AP2QWXXT3kt9D+t3FkJ1x2LiUPKeTBIeQBhexQyP0K2a6Q30hkm0Lu22oR7lPIVgvZ6uK3AKO29JDN0GVzItkEl0095NdA/K/jyb0K2XjPk8JGhdyzYb5wz5PknuX8hlVOYcN8ssHFr1fIOtCOdQq5O52shY5rE119ZA10XSOTu0xkNVStnkH+By7/o5A7gQ93OsgdNrLKSX6lkJUK+aVCblfIbQq5VSG33OwUblHIzU5yk0JuVMgvssgNa8n1ClmhkOUxZJlErlPIUoUsUcjiHnJtD+lQyKKF24VFClm4nbT744T2HuKPI74e0raUXK2QVm+a4E0jLT2kuYc09ZCrFLJAIY0KaagxCQ1ZpF4hdVnEUysJHoXUSqTWxddUS0KNiVRLxF0VKbjXkipsF6oiyZUSuUIh8xUyD+7nKeTyy+KEyxVyGdxdFkfmKmROD5mtkEq4d/VVKmSWQioSSXkEKbs0RijrIZfCg0tjSGlJjFDaQ0qK7UJJDCm2k5mJpGhGhFAUSWZMtwszIsj0Qosw3U4KLWRaDymYGiEURJKpESS/h+RNsQh5VjLFQibnOoXJPSQXxsx1Etckq+BSyKRLLMIkK7nEQi6eaBYudpCJZjKhloxXSE4EuUgh48LJ2OxYYayTZI+JELJjSfYBfoxkFsZEkDHL+dFZJmF0BBnt4rNMZFTmdmGUQjJh/MztJMNE0sPJyLTxwsgekhbpFNLGkxG1ZHgtSVXIsEgyNMouDE0kQ2TiTCSDBwEDRgxOJIPsJAWZhZQekmwlyS5ejiBJEklMJAnxMUKCk8Rbw4X4GBL/BPiMO/k4M4mNmSHELiUxMGnMDBKtkCg7ccBsjh4SCXWRThJRS8LtJEwhdri3K8RWS6wWm2ANJ9YDvMVGLMt5Mzwx9xBTFjECaUYHMS7nJTORXLxBIXqF6BQiCpIgKkSQiODi+R5CagkHvTgFvJdZwHaCzAQ/gWtvXIlH/P/jD/2nEfg3/iWg/wstMnflDQplbmRzdHJlYW0NCmVuZG9iag0KMzMgMCBvYmoNCjE0MDYwIA0KZW5kb2JqDQozMiAwIG9iag0KMjk4NjQgDQplbmRvYmoNCjEyIDAgb2JqDQo8PC9MZW5ndGgxIDM0IDAgUi9MZW5ndGggMzUgMCBSL0ZpbHRlciAvRmxhdGVEZWNvZGU+PnN0cmVhbQ0KeJztfQl8FFW29711q6q7q5d0d7qzL5WNEAhJTNgCKJ1AgEBIQjYIiqZJOiSYpGM6YYsMIEMCiqJigiJCVHAUGUSGwaDo6BhFRWYTfONTn6Pg9oZRxo8ZHUgq37m3qrMAOo46y/f7fTSnu5a7nHPuWf73VDcgjBAyo7WIoMKC4tT08jHLxsCVd4DKKuvdjZagrDkI4bEI8V9VLmuWUW1kJkJiMlxTqhuX1N80dtlShPRwjh5fUrey+tjb5Ndw/nuEkv9Q43FXvTXpAS9C47rh/vgauGDqFu+A83NwHl9T37xiBIk6DbcccH6+zlvpRkKoFaEJejj/qt69opHfK96E0EQ4RXKDu94TXTe3C85lhK7WN3p9zcJr4g0ItYyE+zsamzyNk3V/hsOWHoSEGoR5C74TCXCcIdwHHEepn+S/UDVnR4gzioToeY7jP0YN/b9Dff1SfEUSj2RTYXVOFXIhub9fdCgOvF1Xj09XINz/Xj9S/3CgL6o5B3xKcGpCPP4KzldBLwFNQjKKQ/FoBEpGY1AKSkVp6CqUjjLQWDQOjUcTQKBMaOVCWWgamo5moFyUjwpQIZqHilAxKkGlqAzNR+XoBuRGi1ElqkIeVI2WoBpUi25EdageNSAvakRNyIeaUQtahpajlWhVP+Xv3zZ3/wf9vSi4/1z/pygAGeG8r/880Jf9X/T/FegcnJ3rf7P/q/7n4fO/4ei3/af6f9f/s/5PQbG/7n+9/+3+Y/3v9nf3v9G/p/+p/gPw6up/rv9X8Pkg3L23fwecd8F7Z/89/dv6H4BWv4CjB9hK/Lv+mJg5nNXOrkZU/ypxQHEaRQPFazQZaIRGQUDJGjmBxmg0BShFI/A3WEWV6HmaRrTdVRolAKVrRNtlaDQKaKxGdL5xGo0GGq8R9Z0JGiUi1dkmajxlapQENEkj8E+wHpVouyyN6CpM04jOPV2jKKAZGkUA5WoUBpSvEdVRgUYxQIUaEaB5GtG5izSiMhdrFAtUohHVe6lGVEdlGkUCzdeI6qJcIxvQDRpR3bk1EoEWaxQKVKlRIFCVRjRmeTSCGAM+ohJd4yUaUV3XaBQCVKsRxAzwJZWo3us04oHqNTIANWhkAfJqFADUqBG1viaNaMz0aaQDatbICNSiEUQ98FeVwoGWa0TtYKVGZkTjmErBCNGYwuIKwuNQNzoOrxfQXrQDPwJnVN6b4EoXdxBtgBm60Yv4ON7EjYFrj6Bz6A1o2Y6Ok708wrPBKo5D+7cEDp3HJegQjJGJHThTJ/KIz+cP8UV8N/8xfwJN4H38Cb6C9+EM8pBQJjwClElegpj9KnhSN34PZHyafEoyyFF+Om9B75ETZC/6EGah+juOtqDdqBV4cWAvWsO1ckVw5ZhwAm2Hlxfun8A78RvA3dN4PTqF7iU8NwvtxKdAruPor2g9KeHWgOllcNXA/zEY6wT03458PBJOYQkp3Gi4Btwz+6DvkWSMcIq9zqE1MHMJ2i12iw5dHMxCNfYIfhGfFbeiLvQGuY7cRN7GG/g4/lF+FtqiaoBUoC0w9nbaR6zGK0F2+mqlo3PL+Qq8F33KV+gWw9gvUYlgzkNcEUhUjY4CLRetINNkvIFsAk5bmb2f0M3mU6E/jKBbrdoOGYeWwlEr2o8OojGkE22BkZi84gThr9BzB/8+yLwF3879FZ0g08Hrq/nPqD2BqXci9JROFHjCYZQsWw9wCblVB1zzFsivlMeMSb7kVLbq5AOo8IB5pdzd31+4gA8Xyg8IEQdIgv4AnxD3/tfdfH9M8pzCBfKBvpzp2qg5FdPhWvECOKRncBmu50xn9+ikB4QE+JtbcUCurJFvtd4aN+lWq2fSGBp9q5VOvlrYDTFEh8JcJv4iEi9ivbCG41Fqz8mzVyHrybMnz6YF2mJsCTG2mGoe9fpIeO+HSqfO8tUXTWISjGGlOEI4BUcS+qUrC9kw4gWeswkCj20SkZANkACRdDaBF+lFg41IenojGxFdBybrDIJBD/ZNtWYQJKP1ZE9w5lUodcqZk2ftmWkgmM4q/EkHf/0fevXQqh6Xxx6UTRgvcmUH4AAuQBegD0ALwHsb0WZk0GE9JxIDH4RDuTK8gCs0LcE13Aq8jLuZNPHLdSv07Xgjt9Z0L3cf6eSDF6FFBhyDM3AciSFx3FHlMy5Baf2Qy/zdxr4bNp4SLH2hZP+F0XiNsg5R/b0K4eh2kF0PUW+SKwR3WFGHYZ3dKulBg0KoeaoNRRh4h7X3bHrvWRsT6zxVqMsY4Ix2TnXe4HzCKeBF2JaRPn7c2BFxCTHpvNPBj8a2OLxVuX379tuVifiVixgr/ReV14TUvl/f3d529yOn3373g75HIZu8ABFnpUgRVuxTaBuH9WgGD5PBNDCH2Sq4hEKhQmgUzgkiXhSYYYt7oRuc7m9nKe839Z/m14D/OCDKNbrikRMb2vQbBedjWDhiws+EHLF3mzZHhDs5vVOP5nD2gJwIGPr82R6bHeSwnjl/9oz1M3id/wwupLmSpkY2RnZF/ibyXKQwFU3FU7mpzqnhQrIuVZ9qSJa8yIu9nNfpDTcsugkkdsZEYRB6gtOC42Rks6KMdKRLwXGxoo5f03vQdOKppccWV/7mRuW8cgwn9X6Add3cno3bj1i46xc+d2zs2P2jkvFELOFAPE15t2fbof07qUytINMYkEmCbH/UlRgabQw2WNBjweIRi01ui3464khct21zsAkFkxCzQW+MJnpHzggQ6/WTZ9PTbZl0gXrOnO89f9b6Mshmy7RlUtka0iLTotKi0+S0mLTYqYmuSFeUK9olu2JcsYWRhVGF0YVyYUxhbGFiY+KGyPao9uh2uT1mQ+ydiV2J5xKj/F39nfwdKqIqoivkipjGqMboRrkxZm3U2ui18tqYkEWgn1jR6QgCBV2NJ9jixoGSYkeMGzs+I4ZaCeho3DWgvSDuuff2rfPed6S7e+rRjfuO913E3E+2VRwu8Ty38P+c4zKqWxf73jqUlNe3bm+1+4WHnn3evua2lJS9iYm9FIl4+0+TY6CrRPSxa4rZxFmMxdFRegOnk4qjo6OyJWNUNO9EbXgT72hzbgo5YuOPJIDyRkZJxuhwHSoK11t0ekdszkhrbw/Y9BmwgsxMzTKsyl8+s/7lM3uw5r+WP4Hx69g7uCtKpO5aHyFFGCNMKWAcycZk02TDZGmycbLJKCMZx3MjpZHGUYGpjlTnqKCRUSOjk+SkmPjENqnN2GZqM9McjTlOlEQjMREzsZAAYiWhJIyEkwg+0pCYmjQ16YakNUlrk+5M6ko6lxQCnn0TdjIDA8VG4yjsdIig1MRxzA5Brak4BVMVpweR2/IfXbhp0+J7pvbs+fL3C1+sq37Zfctmz+Oux+/9w6+qD/FT948cWVLiyo2xjLpv047DcXHPjRtXPm9OYUJAfMctO/dFMSCAnob8OBv0a0NpLodo1CGbkbRbug1HdZKoR/oZdqq3dDA40FfPydepEx0qDNwVyMHqq3za4mwZTrbQwWR2dG7yjp8cOTLp6Q2BKRHkkN12/Lm+g3zF/upKQfDPp4uE+WLRQtcI0W4ICUBipM5pao+USXf40VArcBCg14uFNn1AYUSIPmxGHItLvRCZ7CzgTjlzfgqwZKPL5gpMiy+Mb4y/M74LXr+Ify++P94AnDF2KGfMDocdaLzySTnP3/LEc0eaWrY8cqRp+e2PHDky9cDKVY+TTTcv+8sHfddxOx/c8dzuvnZu50P3/+LhvnaQYcnimxGLp4PxTIdGuyzic/yT6CgnYD2PZuitvVNUffXSAGo1uAyFhgpDo0FQQxvMT8NbdzdfcbFLdHxKdQK4kftC2AnReaIr1CLoA8hjkJ+O6tslI1g6j/RWu2UGhOcpPfA3nbn/WVUHmZlpB59wYhqbY5wxNkfQZOykPgjOmGHDy3GrsmGO79lnTz3U3i7sVH65pa9rU/72Xb/jKrbga1RZnlbK+N2wHlZA9Ne4wsOOIIvjiKDvtmzGz5KjkTa7cWYwcMDNiKTLkH6eZtszZ86c7zlr7fkszWWoiFob1RX1hygeL0oY0C5ESg7YwKrSWYTAPrCKJ1tfBwT6euuT3MSf3H33Tyg92rdflPZWuZWjylfwOurGfzz+8cfHgVT7vBr4W8NXoAB8m2uaTs8ZbChAshkBdgdYbAEowGwzAcyFD4tZMkomm9EoZZuNBisyCu3kWYvxqNViNkkGkSB9AB9gtFpPzjkglcw5oC+5dsERQNSuieVzDjhK6HH/8xPLe3pY/rOeAUm1uOpP7Syh6wcSOuT44PTyWOw6JyJBLxqIOUgKNlvNceZx5lypQMo3LzQslJZK7ea15q1mu4SACaNgMlqMAcHYyVl5qxAsOYwOU5glLCARxUM0kXlZSNKPNCRI8cZ4U6J5lGVUgGybgMbhcVwanyZMlMYbx5smmjMtmQFptizkwi7ORVy8S3CJLp1Ln23IkWaacy25AS5bCZqH53GlpJAvFMrEUl2Zfr5hvlRqLDWVW8oDCm3VuJqrkWottQEVtlb9CsuKgE3oVsMG4wbTJvMmy6aA+wwdxg7Tdsv2gN3G3abHLY8HHLD92vaerd/mgSAlWPBoPA6WdSrGGQacwW3Nv+fmrXV5JRkxyuQX8fX4+hdrXlm1fVZbCZ/few+pG4g1fBXYWiAa7wolBkQsWGy32LpNRyXM6VE+zXUzGAyhZgbQCqyMufmhCuevnTTiXMmRq7pvvrlj35Ej2T9reeFlbjd13V07qeuCy3qqPtcwRAvMa4Rd0GxXoHjEjo6Yuu2bQwz2gHnE7swJYZBBSwpg1XFTQ1tRq7hGt0a/xrBGWmNsNa0xr7GsCVhjXWNrtXeFngu1Dcl+EJYTqc2juFj6zvnu2fd4x9Z9+7aew3bls3N/Vj7HNvLex6+++vEnrxz7dIfyinJW+RMAhkzABQ48kfnhOVDQi3wciykREFPW84+g9RBTCI9CBmIKMJk2AQIIDSLn3oA/isLHKVS3/ZAs+Y8ZxrvHNZLYGLbFnEA/COhWj2GDrM/mCHpC5HRgMRHIpTNYT57pPcOi6tn0Kxo6TYMSTYNTBM7BgRVyaUKafgYHdie49PO4ecI8vYf7MbeVswbhMBItjcBJZAKeSFwSIFiygjRKuyQzGAyhVkKXj38Ltmz3v9V37rhwqm87V937RV8md0yNRfthnRYw+3Cgya6IQQvZLOGjjm4T2IfDmA/SzHDSBctU4yy4qt9MvM7nqZkE2jJs6sLAgQZL8H5qJj/t7p72ZMsLr+Bf46e5R/rcu3Y9t5trvdi1r7ryHHmU2ijYCvkYeAhFU13hgCs28pY280aJ4opgwBVhOrsZzXLkhFl7z6T7LUY5T2EEhcvh1vC14XeGd4VTuDyQx/0IkllHDGTuj/MfKPzZyy//rPCB/Ll7FvUpb+IxWCx9iB+3b/To0ydOnB49em98PCQxC7bjSXHIj4MXQs6hcRqyhD9Ob7Z0422EReiZEKtzIpklpzNj8Qfpw2qMJgzBa/rgGJYNwn77BUbJQ93dk568+Xg/6j9+85N9xyA6P/ooRGhymLv+b2cfrXLj6VgPr+luxekP0Rjt7LfjF5GCBBTqMpGdaL1IeByKQkRg5OTroKBeZrIkLvDcG7vXFSn7lOexC+RZ139aUGCXbUBp+ISr04wtpjab3WZsk4x2u83QhgzOIKcOi/q2oCBYU4LbIqMiUZsBRUVFytFcTJRNCpSCg5wkxGELlCAxiAZbYKDEYTBx9RYX4oQ7Dno12240EBFJUWSk0yKOTBQ7QkZ3JN4Tf1fIZkuglGK0GFCK3ZloiSIp9sQYyCuBMcQebr0KmO85eZKibMgFABxt9K+N+svLZ/76Ed1WvAyXIWPYgoduASmKtA77GH6N+paKNf0ffo/zY8+AdOp0B3VGIdaQFIEicDQXbByFRuER9klorH268XpUjhdKpfaFYQujy9OWRLWi+9F2fB+3Td9h3OrsCOqIvW9MtMFoMOltpkTTyBAu3BBqDDWF2iIcEc6gyOj0RIC3SYY4+6jAUY6RztT0yYax9szAqemzDXmOOc4ZoQXpZXihodxUai8PvC76hvSlplpbRXoLXmlaZduKtuJtXIewQ7dDv0u/3XC/cbvpzvSu9APpmeDqYLWazRvAhCdkQLzBcYnM/AG4TvDD1+AB98BfXFt6suuGR3KVVtw7OVt82lSzCAf3bqk5s/7Pyq/a2tLS/6e7eE/p/J3Ta9dPJnHzHlxw9y+nurgtfV+VH2/6saL8SDm9tXw+Dvyvte9XTl095aGX4uMPp17lXZCxBOxzAeDbtwE/GNADrjC9jSMcsen0umz9Y+goeUzQE4x4LErWd+YcMAIsMDFYIFIoMOdAIIUFIoUIPek9Ng13nR2MkzQ+Yle2wAVxI7iZXK5OMOoDjCEkXD9aLxvHk0x9mpHm6ByWo6fp55Ny/Q3GClzBVZMKvkJYrF9jXGt8whgOWguMcWKAcONwzE1kaV8ed6h3NXeoz8NXPNr79tZHScJA/oQYEIjGDs+f266cP8/6A+PBChUjDs2etr+TPUVH306aPilGhNizG+Y1qrGHHDEFGI6EODcHdIdvC0V2+8wQkwhAfRAharHn5WGxZygYHAISE2k6Ix/68WDfHYMocdKRI1yqFmq4oiEYsepR4AbTugbeCjmPoJSn0BMcjkA8b+2dc8BK1w3RdVNrDNhlTtOKDFuEXYLIgPirr70mnLowmmFM0CvFmCK66Eq8NHeKSKS5U6S58xeCKBAOCzzSqTjSPw+FkHMOOJnxIIYjg78xq2LXHbO4pVwrt4Zr49Zyd3G7OT2dyEAMsJt1QioN40cgmkyTeFk/DhDgJDKJh8yLZuBcksvPEGaJLn0ZKsPlpJwv1FejalxLavklQo1YoW9BzbiVtPItwipxA9qAN5FN/CahTexEneC328m9/L3CNvFR4SfiAf3z+vf0/fprqAWyFB13tQrflOsu8BW9JWTfxS6G3WgNKQ50bUBJLrvYwXMdaB3/U72AdQTULtGlP9mjOgggqIMBRjC4QLonoRT3KlnY18gV9h0Ane9VZu3tm0DH9NfkRPSUK5G3UeWCg4r0g6dP5WAVMMqGfPIEooU3JMBs/rrb1wOWQj2NnYsRGUVm8jOFhWQ1WU90ItJxet4gOrGDC+PDhFGg3RFcEp8kJIiyfiLKABA7hZ8iTBBnoRycw+XyucJMsRyVidVcLV8rrELL8DJuJb9SaBHX6u9F28Qk0FkMQ7+Ym9338hv4Lfzfv+s7Jpy6GMx/CobF6m7CAYbJbCjF5aRFN9xh1XNWiVbd0mnRzc7ytU2tSbDocrAikPlqBqs3xSTEsM8kjLeex+NwtPK+clzJxrvwQdyp1CiFiltIvbgch8BmPBkHP6JsU9ZCQOxkmGEnmG2w8Bz4RzSqcF0VbkTtOj7SAHNz7cGBAU5bdFREeBgkUUeg3Ub3SbTCqRaGw6QQUbb2vq7WOE9OmdI7hb73pIOHp7lsRmzkjCaj2cGH2cLsjmg9cBxDYow4JjCDwIozigtkNC6GER+svFuCE6bX4PjariV4ovJgEb5Gub+ma4ny9pIHa5SXcEWJ8hyurSYblIOkXXHjXYp7u3LwPmUx3knpPpy/He+iWPcC2OKnoFcdoHmLyCwRu8AMXYKeIVpWv0xPw8xDnwX1u8CYAAODY9omTCx3BSJDNLJiKxeto/vzRsMug2ERYYZqixH5z/s+O973GRjqhVPCaKpHH2CVtwCr0P1DHOwfOuyow3QX3T+EBmSQUKeV7h96B/cPOFYrFcJ7orqM7J0kvqP0YfLOO7RS+g6ehFcoG5WXlZeUdrxSyFO6lQ+Vj5RuPAuH4XA8a7dyrbJT2aVci3fjxfDaw/ywHWLxQ8BLIvqRVg/jorSCGDdYEMPI+aDjnpAOG9+B7km4a7AeFhseahmjC3XEjrS+0wM8D62HnQHe/0ohzfB62CAoASNcdDg6KTWpIIksurRMxcdcXqaKpxlmlu/1G/b8bPkjqz74L+Vd5eOln69tPdv006Pt21s/eA0H/6X2v4XdL00Yv3ZZpSc6dPRbh9/6Q1rqb3JmbPxRw83RIWOef/zlMyO0+CNksPiz0hWlg/CMOZuoE7N1dEujF0Ss4yL48TotFvWeVdM1bJsyNWH4P1ECMaJpaHKljecm6mZxM3W1XLVuLaeD2AuxIUyE+CrOxwtED64VV4ob8K1iB94u7jJaWY6mABre4l4F4+nsUc71Le0Bf4/m378wmn//YjTwmQoG8xXL0eWuCMGKTfrHRNyOtlnEoxIXqEM6g6A3BxjzHDRRsQSi1SAsAzUIVubpsTMBzqT3wqqkw0kaPuxyFjq7nFT1oPhIrBps3LgMCqi4rw5UzsWpym+PHDiw/1nRcV9hTeWW3lTy2y35zzwOfL0PPrMQ9Cchl8uZTbp4rktYp0NdBn20GAEBAhtpRgugTGCWOXvUAn06exIAGoSkdSiABPDcogkxNmFcQgaN7AqerdyHPa/h2b279/K+Wd2zLpzay2JPFcy3mz1vMaN1rkhsJmZEiDkbEaOuS6DPU7BJQhGinjdZ/ODLzPKniergpFreoho4CYvoL8Pwr0KQf5Xmz1FGNArNQuWoFi1HtyJdEB4NEX00GY/zcYGpwFyGq3ELXkU2YLP6uIRk0F0z9fBxRFQ4rIxTTp16te96IaH3NDnRm/Go0oUrXmQ+BhtBXs1Lla4QQcWMAAqyhS60jggE8xiJOgiOGia8DBLOORBE446OxR1Ycn/csS/gsEjChExhlrCEHEAHRJ2G/OJwzKPk+b4P3sBKH1h52YV1NPJQPW4Bf+9ksSceLXDFB4rI3GZCXUFiV0TQHmuXaVPsXRGbE0yxhojQqMAIEhMdngD2D4nkjOrTverjD/Xph+M4Oo5PcCfICf64cFzU7Y46GMUtGl7JUP2aIwyiOR1Ife4Bu1Zu98ZduzYCYUPe/XmvvBEw+eCN72NBOfeB0qd8hgtxeN79ZPLTDz34zDMPPvQ0t7I7foTyhfL5/EXK53/8SPlffDteSaNYlCoX7P/4dpArhMkVp4sOxW0otEvaw3ehTUHRXda7gjYn6CIiYgKjUGxshJmJBeHVH2U/orV7VaqgntBfhj0f/nzE85G/jOqJ1u21H7V/agc3WTSBxSN7oLb5QFpOjR2B/ZteEPv9vB1zQJpJB+v+oFzE1g9gr2lTnlQ+zNuBr9EkjgZZsBnby67DAX/8CAcpPqWNRuYobptfXmo3O0AmH8g0EjW6UpAzUGozRLfJgV1Oc5dhqxjRJW+Nu0vc7Hw4KSgiEBFHaMQI2RpBHNEGMYlGg6ASCiOpCxjUUuRJCg2CWXQ+y8Iz23JqYmOXoSrKHe2Wq2J42HRdHoLVAt3QJzG80yGSqXc9rPxG+eT6Y0tLXql/7tiRPfsPd+x8+N7i55p8r5Z/hE13kITonjvf/SIh4cWr0ju3/LjjkeWNvtb4EYdk+bcHb34csT3/ab4K/CMSXe+K48N0tjZrZFiXztFl3WTmwEfMm8GygiOwBDlZsopR1l48VDqrurtiscbKdlcnaZ2CFZbPMyGVHlVGBiD9hjhMOCrTuyS0ryt5QfIFHK+cVD6//sWahc/f+NPXXvvpvAdLKMy8OyBA+ex//6z8RZaPX5V2eMeOw/H0mzME3Qb838Z8Kg7i9TRXQgh4VKLYFTWmy35X1ObEh9NCTPGjIpzxEQGGCGd4FIkIiAlPow9C6K6GPXHT1oSd0dg8xIES/JkPtK1jyxIXGw8hOnBIrYW77c49e+6885E9yp5b7kL9//Oecte6ux9WvvzyS+XL3bPuWn/L1q23rL+Le2l7e/v2+9vat5fJB9f+7De/+dnag3Lsy1ve+uSTt7a8jN3Nt9zSDMT8ieKCLUMwSpcddakYJSIABHCGX1LjxLQEZAfngF3YsOLlbTseeAD+PvDARWxQvrx4UfkSG4RC5YTyOtAJALsZeCzO6GIu0K74mFuvwrezbw31Z3MH2X5sjMuBwmiODiOIZHO7AKFxCJPUHqa4ywImbDs4/d6+r/YKp/5Wr9aKAcHys0GeCLTTlRgaFk5CImyw76KP5rOtD9ruMXc57uJRF4esEoeliGArESOpEzlLqKld67c1wjzp5Nnnn7dpdc7zQ7fwwp/wgQgrgzfYlV7KlwllulX8KmFZeHuojkd8KB/GhwsRzWiZ2BLmC2+OuAW1hd4Sdkv4LRGPokfDbRC+E+iufTyacA2+1NVgz4E3cS/05oGSMtxzf9J2wxsrVp1c8Al25Fwbqpzfu3fvcnzXpPptucs7s6e9flX6J7+8bk9jpPJHJv9BwJxJoEsb5OsgPWczIqHDstmA1tn1EdJE2Opm2Qe3ulRIDYCma7sJgAvRgVsCdwUSutsdqIaqUPTg8f0v/nL/ceU9wJsfKu8Jp3pbzr3xxjlyW+91yjvKm3gUjte+NyCAJwGWiUBPusbB7oBIoo3wRLDxPMkWeeQkvLPD4OgwrzPygkhsBhQRZBGk0FDeNtUhRZh4VhMAx6E1MnWPM4UCCnumfdijFUGDmK4o9hWJVYFYQAIWOJHo2H7YwQWRYD4BJeAEbgRJFEfoRuhHGOSo8Xg8NwPP4GqEFtjtLg/cKG7U3Sveq4texEJicGAcScH0ewq2GJn648BXGMjtWa3XnHjrF7NvW/HOa/gVjHrX921S7u7ouJs7GnTnj5QavKZzcd8m4dSbv7/9aa6g77P29es30L3HWSWSdyj7wMYDfo4egz0qb+2BfS9gJAx2wDsu/l7Zt2WLasN035AINhyKxrvCzA9a9ksdNvwg2s93BN9FS8mhZpTmsIZRFWmOeZ5B8LRDAeHR4ZxWQtby75AvIUAyFhKrP76lHynnsBWjWz6uXvqnHys/VVbhNlzc9idh8akbrleOKb9X3lKOXX/DG7NmwX5xCa7Bu2YyvqYjpHsE1tWEW125QpgoGCQDHyYZSJhklDjwW6MR1lmn18E6C3q9jpZBTNDahpApWxJgiw6Y26g3GSWDXt0vGnXIbD2p7RZhixj89Y/NBr8eQx8uWOh6fyFyosBJgE0luzRSiJdk6RruGmGslCblcXOFbMkllXNLuRuFJVKFRGsmNwtrhLVSJ9chROqQgdMTxItgMAh2ATzs83QGZOAlyYQsYcTJO/WhJqtF5mMEWZR1sj7OEC8lGGWLbJnCTSLj+AwhTT/ekGmcakqz0PrKbM7F5wguIRs2F9l6l95lmC7NNbksLssCrkxfbiq0VHNLiJtfLFSIFboKfZWhSqoyLkfLcCu3giznm4WV4krdcn2jfoVpjWmNpY1rJxv5TcIGw63GLZZt/C7LE5Zr/fUWVnIx4Ljpr8N2MPM0fTuhbFJgT/hLBXYWdv4zShdGC9YL59TnAEoZv5A9yxoJu9+4UFOkwd4WGHQkgBwZEdedeNRwJODZsMgRoUhvmina7XJOEstb6iOBnjNqYU45RdNrZtrhilFrR3WNuqQ6F2zlBnPt1Vh7XGCnNdtxGeShPR337NlzT8eebkW54N43b97Oop8fyjx48696e39188HMbu7qV95555Vj77zzR+UD5dPIqJ8lj3r2F9dWLgbRKHKetLhyL7XBMoTEcXwFWNUfwQZLVRssBRsspTZY+q1s8BdXsEH16a6NZgA7fQukb0a1MEexBqY1XrbVoMFzoF73D5sudvXTum+QECuNk3K5XGEGWOm13LVCqVQoNXANQrW0Eix1JVhqO3cfd69wj3SUOyr8ijtGfi1ECpyBiLxRkPRGA3yYnFwoCeLDhHB9uMFhdJpopIvjEkkMnyDEirG6BH0iWG2MMc6UScbz4/WZ1Fa5WWQG74Jtifr0dzrY6XQjtVNaFyzjCvl5QpFYpCvUFxtKpFJjJarCHm4p8fBLhaXiUl2DwW1cYvJaWlALXsmtJiv41cIqcY24SrdGt0K/0rDG0CotM642tXMbBbBbtA3fw20lO/j7BRph79O7UjtNuyyPoEfwbm43eZx/XHhMfEz3uH636QnLz7knybP8M0K34ReWHu5F8jr/mrCS2Xw4pn9xnBHHlXV/9OFbH33Yrbz91p+/eIuv6O0kSyld7CKdvUu1evcO2EtL6KgrSU/rgzqbWh3UvrmXrQdDIEfRNoMoYF7U02+WGdVSpE1dzzPBQ7b//m/jsTKAlX0b7waek/RBXCKXJIzWl3Hg2Xoft1y4hdsk3KHfynUK2/QPc3aDYBA5I5F0I0kiP1IYLY7WuUw1pMK0iWwAz75d3KLbTrbp9pKfCId1L+ne1H1JzpEv+XN82KKbqNA26uhxkIaePsIl/LFvP3fjub5jR0RHby0+3Xe+bx8X1/cuxXDKDt1NwkPg23mow5UeYiKGx0Kd4eSxvICxGQH70h6b4NwX/9iEaXMzxkaFoZF2McQ0Mmx01Mhc++hRI3OTr55rfQdQgBW2Y1NeZgCagq2TPfTSn06+bH3ps3SA2fQ7I2jOAYP6sIM5geYlFDE9i+b2Pw+qnwsvl7prNQTkR+en5k/N5yFMDMGweODrXiww2BgAShwRTzGQyDkd9uAgnj4FChYpAE4cwY0ba58wHoAxHwyo2IoE7sIdN7fefueqlVu4mCn3L9n3X79/fMmOyVvu3jPVVaOcOtD6QcUDT/rqa7HjgXV/q1m4Wnnr3iNK99q1bRt/tA4XPXsS39g6pwDC5Cdc6JaHd9+xec9uZdbc3L+98sqFOXnr++Sg95688Wjh+tuyXNXKz1/Ypfzv0pr6+fO87iXrV6/Guc8exrNXr2nf37X4o1blb8pvRBqT3oa3/UiB3G57Cq3n6GPMge8p0sfub9MH7rQeqHyl1QMjUZFrFCDoAGwymyzYbDZlB0SZWIEwBMC3OcocHgCrGBrOyoRR/soUNU5rDwPil8AghkSHlA8D1Udng0VEblgRcSqWzr8bE2dVa4h4Mq0p/vbyUuKFXyvvfs5xeA920y04Kyz2KnfQvdBe5Q2+HnwsBvJJKnrWVRrLQQBOxCNG0ggciaMiuNSk1HAuKSk1O9BmjZXCk/hg0TAqRuCC24LENsEWF3Zr0CYrGnWrsIkbow+SonRJYXaCDLFWA8GA08yCmEahqoFCVUHd+9EQzAwvgIVggUbmKWfPB0/pDZ4CG11a9jnbc/LM2fQebbtLn78G02ewg948/Akq9WlM0R7NW8E29pRxwrgMJ5wAiEq0sW/S6YiNPZwMVo2VO1SFa3+3tPq33ndf/e/XqxbtLy5+4rrTb55+s6p51U3vr1nXqryBx3BjxhxyZWH8Svy+zoePWv74CR8d/sSoFF4pjTu047EXAwjC281LF5RVnFIKbA0LF9So2K8Kvwfhfz21pcNoB8djxFvfeZ19VZlta6u48L4PufW71V9bcPOl31ts+TcETPkLiqZf/0foVwv+YvR/fvlm735zk6FU+22A+isZeNfVK5EImT/48s0L88xNl/165mr+BKoWViIrdxtE0jfQq1wmeoE/i27iP0at/GjkJbPR07rj6Gl6ncShCYIDPc0fRVcLdvj8EN3EHUTn+NP9vXC+n69GN8H9m2CsneLVsKHLQAtoO9qHuw69Svvx29GrdD4xCb0qHkI7oe8FMQ/5oE270Avz/xalCsHofaAqoEeBtgCtA9oBtBPoNqB2mBfBZ6fwNjoobIGxUf9ZoRP5dJ+i6ZQH8TZUxj+EngZltAM/b7M5gtFe7jT7PQf9AxgXuzR6HqgXlPwbMHj4FK4Deh3wx51AfwAtwrkOrhteQUiC9tIZhIywATJ+AlijDvTLA+0AOomQdQpCNpjWthYhewhQBUKBPwb6PUKOboScExEKsgLB/WATggACtA+hUOAn9BBCYY1AMFc4jAVbSBQJPEQVIhQN80XDefR5hGSgmBUIxW4GgjHj4H4CjJUAfRK/Qmgk8DUKzGwU9B0NvCcfor/RY6t/NSlBo1ENMrFvvN9HrYV3ckHwSX9PEYavGbCRe3H6gB0Z8WntmEM8/pt2TJAReqrHPBxP0o4FZOIqtGMRSWDj6rEe2WDd1GOIjMRvp2b7AyMXascWNHbyYu3YioyTn9CObYif/BL9JR5vgG5pbHZ6jFEQPq4dc0iPP9eOCVxXtGMeBXGx2rGAQrgZ2rGIHFy9dqxHsdwd2rERTeJ6tGNzwiQSpR1bUM2kr7RjKwqavE07tiH95GfQNPZLuZWoCdWyX9A1IxkiZiVKgs90lAavDDhaDC1klA1tmtlv6pqQB7lRPUqGq7moAdqnwFEWqoOXjIoGxvKxMw98eqDPMnivgpbSt5h1/MCsJTDTMpiL/jKkAVpTPtzQ5x+bcTocLYV+ZagFWlRCWzcbzcN6uJlEMozSAO+N0GYxjFsL7WTo74XZ3eyehNA0b+PKptolNc3yyMokOT0tLUNevFLOrm32NTd53PXJcm5DZYqcVVcnF9FWPrnI4/M0LfNUpUiXdR1Pu5a4l9Uv9TYskbPdNV/TcbpnqbusRa6scTcs8fhkd5NHrm2QG1sW19VWylXeendtg4QuEbGYCeiDy2rnYncDnGSDMF76o65sr/fGb9fl27QpY9r2gY68TIPpoHP6e05U5mny1Xob5PSUjLHDh7pkoCvNVc1GU9e0WbM4/7zV3gZQUTNoHLF1b4ZVmwSZPpX9GnQps5kW4MIHY7QAb5XsN6JeOKJrngLjeuhvz2qamxsnpaZWwaDLWlJ83pamSk+1t2mJJ6XB00x/ETjIgd9G/HZ6uTfQe9TuPMx2PWBBXrQc2lJL/WHsj440E+6shDY1rGct3GtkcjUzW6daa2I9qHfQUZddoslL5Rj0r5Zh/vV10tB6xpVkV23ADUdDtXa5p0tozPd4Sd8qevzwMevK6z0ocy3ckdhRM7tCrbCe6fpGuOaFFfh7vFDJCtl49Wy0QW+qZTzVsHseTa4lbJYGbdWTtXVXV0udTbUx1d6TGV9etvoNrH+j5rHqDF4YtVmzsVrNCtxsDFXTkjZmM+PiUnuqZO2oHaqj+0doZr/Ipm1UW/Ywh1dtL3aIlcSylaN9q9inj/FVCX3cmnwS84JKsNB6Nkozu+PXTzUc1WmeNHKAx8EZaNSi/DeD/arWT2cc1Am90si8pgpmqGS9/dxUMQmama0thrvN7K46h/QNMyRr3lwJnLWwUVSdLGc2UMOiUrOmmXp2bahEfhmahlmlym0L02HykNWhx/VsPdW1loZEEB/0Tv4aOZIH5ExlEURmI6v+oI5dq2l1+Op/s9R+zancNg5YdDPja9DqBiVazvRR/61m8HtDNYvqDZqEniEzVrF3Okcy+6SaWAotKtl4ahv/+lE7rtMim3+FKtncVYzjWo3TScw7SzTu6L864GWRYXANhsaiQQ1cHgnov0zQrHmDb1hbv68MamxoDBjaT2YyuxnnEovNw21N1YaaS9zfsJ5elgVlbe3r2edg/Pg2a9HMMhHNrG5NopRhmvqmvlQnK7Xcos5OdV7NeKzSLKmO2WnTwBWVU6rTqiFrPtTq/BnUzTJiLYsZdexMGpCoinFK16thiDaWDMur6kz+GOpm1qParn+OS/Xj+7sy+bmUNAkGLczN1ujbczB8nkv1cSXekrX1rmP9ar8mmksDq9PE4qybxZXBcf1XfAMW6feXS7OHR4tzHiaFf6blTKoq1j/2CvkwdkDuS3tIcM+fbWOHWJnqM3mX5JfFzN+9Q3ht0fzAbyfL4G7tFTTmQSuYnhs0T26El5q93CyiegZ6DF13lWf/FemKnlLDIrzMPn0ajx5mSV9nJ/5Yd6XYXcUyQQNb96H6upJWpSGaG7qG39VXfSxq+nP1oLf5PYkih7oB7NGk9Rg+YiOz6BvhfYm2Ymo+pFYlDUTVf2ak+nqpFms+0qzlw+oBTc1COWyeApQPZ3SeAjgrQfMBRxaxe7lwTQYcVwR3yuBsOlydztYli92h92OZN86HYzpiASplY6ljFME7HbscrtCxZXZOz+awfwdnOuubgxawOXJgtGLgrACO6dhz4WoefOZo7WiPaXClFM7p8UxEUag6H/03dUqY79B+lBeV0xK4PjjrcK5y2Yx+zubCWRGMP0u7mwVj57LxKP/JDB/R43yNT1VzRWx0qiM6Mh1zGnCUx87o1VL4LIR2xUyfWUxmldt8JsMMuK/KksM4UFdC5Wga+3eCylmLmcBXCdMCnalEa5nM1pHKM531p7POYa1Uzgq0VabHg6OkaLpU+aD6LxuYuZjJnwcvmclfwv6NIro2WTC+f1y/7cxkI1C+JaaNUiZfFtNDAZshm7WjWqT6zBuwuKIhqzKN6YuuG+V8Opspi2mk+IqS+EcbujpXsg5pYIaZTL4cpqk81roY9JgD7XMHrqj2mMtknabpWh1TtXvVJvKGaHcak5Gu7DyYNUezqSymu+FS0HWaz/gflEJdgSztfdoQnQ2ufr62un5+StjMJVfQynzmizmsVRZb6+IBH5nB/HeuxnnpgIUNxoBSzT4LBjgbrl+/H/nbfZvYoY7ln3v4Ck5n9pSncVg8oA21hfQN46qxKwfyWiXb5zQPxO3hmXsoahxEo0NxZ/KQWDsUCahReCZrW39Ju8Gr6m5JzVmDe52h2O1KO2z/7ljF8n7UO4g+1Nit7omGot4qhs9VDOgbQCVehgO9A8hkObs7mNMbtdqJd9g+j87sZrk/eWAufy4aHEvFlW6GFuhsvito8+szlHTZzrCR5Xt1luXsuFlDJlS+Fq0tvb7qkt2wv/5z+RrIV1wDvyxXQg5D9d/E1rtR20vVMg1TPJmijduE/PuyQZ1QDah1t/pLVn3Q+uhok9ClVQWqgyVDOK9iupaQWsOjc0osXvlrXP/+qtMPXbP+T6oHScPqQZcir39ePUi6Yj1I/hfXg6RvVQ8ajuQrh/A0WOvwt/x2FdQrVVikf1tdSb6sriT9/7rSkLrSYIXh/826kjQsw/776krSFXZr/wl1JemKdaVBif41dSXpG+oF/5q6koT+0brS4FOnH7KuNOhvw+tKX5d9v766pO7PVSTxn1ZdktDw6tKVqxv/muqS9A3alYdo8D+7yiQxG7sczfzrq0zSf3CVSbqkyjS41/1XVpmkv1tlkv9lVSbpH6gyyf+0KpPEdFAGo85m3KrazoL7/7rakXTFNf931Y6ky2pH8r+tdiR9be1osAb0z68dSf9A7eibxv3n1o78kfXrM8rlFR/pO1R8hlZpfsiKj/S9Kj6X79m+W8VHGlLx+aa6ww9RoWm+bHwXGqw0SGweepaC0Az2BS36VTX6ZbeB78fJI30ej7zYU+ddnpQif4svtqXIM+tWNtb45Nr6Rm9Ts6dKrm7y1stZTZ5l2pfA/HOwL9K1qF+kGzqNJA3OXuZpcssqawPfxpPGfOMf6fLv7X3rr/zJl8xc65PccnOTu8pT7266UfZWXzqKJBV6muprfexLc7U+ucbT5IG5ljS5G0D0ZJAdxIJuoLGmJZ5kudkruxtWyo2eJh908C5uBo3VggrcciUwLUHL5hqPX0+Vld76RmhOGzTXwOigZU+DD7QXy1QSmwSDVclun89bWeuG+aQqb2VLvaeh2d1M+amurYNFGklHZB3kYm9183JQf2wS46TJ09jkrWqp9LBhqmpBsNrFLc0eyoM0rEMyLHNlXUsV5WR5bXONt6UZmKmv1SaiMzSpqoRhW3zQnoqTLNd7qNQSMxBfTfKQOZLpnKneJtnngXWA1rXAqib+JVNT5mDYRqroZklVHZtoeQ0Y1mUd6DJUtzQ1wIQe1rHKK/u8ybKvZfFST2UzvULlq/bWgbFRgSq9DVW1VA7fJEkqgeHci73LPEwC1YoYAwNG0OBthmXwqVfpqjQOWoB6T/bVuOvqpMUeTWvABniJe5ic3gawiya53tvkuaLYcvPKRk+1GyZKUZkafrfevRK8BbpX1VbXUkNz1zWD6cEBDOquqmKSq6qjDupuAr5a6txNEp2oyuOrXdLA2Fii+ip0ohbqroRBfLSHnx/fpTPRISWYgCnMXXflAbQ+fj4GRwP2GupWyrVDzFyi4jR56H/FwtrSAx9VJF0Xv3t4wOY8TazTcm9TlU+OHfDDWDq3/4YUS902lqkMViZP85fFHvAkOmoLrAHVyTJv7QBjnhXN4DGyu7ER3Mu9uM5Db6iyw8j0QBpclBp3s1zj9sGInoZhOqFWN2jdVXJLQ5XG8CCrEmNOlfCbVtXnraNezZaNLpJbrqPRA3zF37DRXXmjewkIBn7Y4JWoqf5jRjVsKghYwKKnrpoyNStHnlGQXyIXF8womZ9VlCPnFsuFRQVludNzpsuxWcVwHpssz88tmVVQWiJDi6Ks/JJyuWCGnJVfLs/JzZ+eLOcsKCzKKS6WCork3LmFebk5cC03f1pe6fTc/JlyNvTLLyiR83Ln5pbAoCUFrKs2VG5OMR1sbk7RtFlwmpWdm5dbUp4szcgtyYcxgbkiOUsuzCoqyZ1WmpdVJBeWFhUWFOfAGNNh2Pzc/BlFMEvO3BwQAgaaVlBYXpQ7c1ZJMnQqgYvJUklR1vScuVlFc5JlGKwARC6SWZMU4BLGkHPKaOfiWVl5eXJ2bklxSVFO1lzalmpnZn7B3BxpRkFp/vSsktyCfDk7B0TJys7LUXkDUablZeXOTZanZ83NmknF8U9Cm6niDKpDoh1m5uTnFGXlJcvFhTnTcukB6DG3KGdaCWsJugdN5DF2pxXkF+fMK4UL0M4/RbI0f1YOmwIEyIK/0xhnTPx8EJeOU1JQVDLAyvzc4pxkOasot5iuyIyiAmCXrmfBDGYBpaBPunj5Gr90jei1y60DWtHemoDTc7LyYMBiygZckIa1BevKWVHpaWymtq05txoaWRhVY2cys1o1CIAJz2wAx1WvsUNIS+BZLOuo0W0wYdN0nKyGXhY+wLohE6mht2qZByKgj4YSb5PkpcFkea2PeTqkwHqvmvNkn7sOJoNe1ItYK4iV7jro5htgc5hDSf5k2NhUC12WN9U2QzCR3S1wtal2lZaGm7Q0xSSQByWgswwGB5X/Jo+vEbJU7TJP3coUaNtEcxnjpLah2ttUr4nO1FfZPMkPFZrlJWzwKm+z5G1akiJLEkNc3xs6fdufPPwwOEhScZD8XXCQNIiD5O+Ig6TLcZAW5CvZSD5/zrgCQB0ELNL3wUqyHytJ/xlYSVLX4Z+GlSTVYb8XVpJ+QKwkDWIl+TtiJWkYLvgOWEn6Oqwkf3usJA3BSkPddxhcgnwOQeKHgkuSBpfk7wWXpGHssn3jDw2ZpAav/L0hk/SDQiZJg0zyd4dM0qWQSf4ukEm6ImSS/xHIJJVklc2dXUDZzpr1ndCRNCj590FHkh8dyd8HHUlD0ZH8ndCRdEV0JH8fdESNdZijDAAf6WuBj/wPAB/pm4GP/C2Aj8SAz3Ds8PcBTbO/vYuBBikFPlK+z28GU1nd7kagVFY7q2JP9VLY89VGuDb8aeE3/8IwdXntjbWptRCsVqQ01jSmahHzO/2Wk1N/AN3/I7QQXekP/Z8f4xFBGagAzYIJylApe44zH4a/jv3fmpFoClqAZqCZKAAZ0CI0h1W4y1ESykSJSEQTUDoaj65CuciBglEYCkURKAiFoHAUiOzIiSaiccDUCNDpbOAhH8UhGxqLdMjaza119V9UyAUH+VsC+SqdfNlJ/mohf1HIeYX8nwTyhYX8uZOcSyCf35olfK6QzzrJnzrJ2QvkjxfI/yrk00nkk2zysUI+SicfnikWPuwkZ6DhmWJy+oNU4fQF8kEqeV8hf1DIe+nkfxzk3U7yjkLetpP/Xk3eeob8XiFvQvM3V5NTJ2cKp1aTkzPJG78LF95QyO/CyW8V8huF/Fohv1LIiU7y+vEo4XWFHI8ir6WTVxXy8gab8HIEeSmI9CjkRYX8UiEvKOR5hfxCIc8p5FmFHFXIMwp52kaOtCUIRxTS/dQzQrdCnjq8SHjqGfLUWv7wzxOEw4tc/eSwi/95AjmkkJ91koMKeVIhBxTyhEL2V5GfWsi+xxOEfVXk8b124fEEstdOHgOmH7tAHlXITxTyiEL22MluhTz8kEV4OJ08ZCEPVpEuaNLVSXYpZOcDJmGnQh4wkR33hwo7qsj9263C/aFku5XcJ5F7FbKt0yxsU0inmXRAp45Ocs9Wi3DPSLLVQu6+QO668xnhLoXcuWWRcOcz5M61/JY7EoQti8gWF39HArldIZtvSxE2K+S2FHIriHlrFtm00ShscpCNRtIOF9qrSBtoqi2BbLCRHytk/S02Yb1CbrGRdQpZq5A1CnH1/2j1auFHClm9mtxcRVpLnEJrAlmlkJUKWWEhy01kmURaFNJ8gfgukKYL5KYLpFEhXoU0KKQuhtyokKW2bGFpMalVSM1qsgROqhXiUUiVQioVslgh7kmk4gK53kQWKeRahSxUSPkCSSi/QBZIZH5QqDA/nZQppBRmLs0mJU5SjK1CcQgpcpB5swOFeQopNJICheTPtQr5CplrJXkKmQN35ihkdq5VmB1IciPNQq6VzDKTmQqZ0UlyOsl0hUzjxgjTLpDsZ0jWHOJSyFSFXHO1XbjGQa6eEiBcbSdTJpuFKa7+ADLZTCYpJFMhEyc4hIkXyITxVmGCg4wfZxTGW8k4IxkbRTLMJP0qo5CukKuMJC3VKKSZSaqRpIwxCClWMsZAktPJ6FEJwugqMirJLoxKIEl2MjIxQRiZRRITyIgEozAigCQYSbxC4hQSG0BiQM4YO5GrSPQFEgUiRFWRSDOJAA1GKCT8AgnLJqFwEqqQkCoSDJoKVkgQdAoKJU6FOBQSqBA7NLArxAay2rKJdTUJqCIWhZhNQYJZISZobQoiRoVIVmJQiB6a6RWicxCxivBwkwcLcBK4ShTCwTk3hmArQQrB3bhqw+149P8Lf9C/m4Fv/BP5fwEUe5UFDQplbmRzdHJlYW0NCmVuZG9iag0KMzUgMCBvYmoNCjE1NjMzIA0KZW5kb2JqDQozNCAwIG9iag0KMzE1MzIgDQplbmRvYmoNCnhyZWYNCjAgMzYNCjAwMDAwMDAwMDAgNjU1MzUgZg0KMDAwMDAwODc4MyAwMDAwMCBuDQowMDAwMDA5MDQzIDAwMDAwIG4NCjAwMDAwMDkxMDQgMDAwMDAgbg0KMDAwMDAwMDAxMCAwMDAwMCBuDQowMDAwMDAwMjU2IDAwMDAwIG4NCjAwMDAwMjQ2MjQgMDAwMDAgbg0KMDAwMDAwOTE3NCAwMDAwMCBuDQowMDAwMDA5NzA2IDAwMDAwIG4NCjAwMDAwMDgyNTMgMDAwMDAgbg0KMDAwMDAxMTM1NyAwMDAwMCBuDQowMDAwMDEzOTE5IDAwMDAwIG4NCjAwMDAwMzg4MjcgMDAwMDAgbg0KMDAwMDAwOTkwMyAwMDAwMCBuDQowMDAwMDEwNDMzIDAwMDAwIG4NCjAwMDAwMTA2MjMgMDAwMDAgbg0KMDAwMDAxMTE2MCAwMDAwMCBuDQowMDAwMDAzNjc5IDAwMDAwIG4NCjAwMDAwMDM3MDQgMDAwMDAgbg0KMDAwMDAwMzkxNSAwMDAwMCBuDQowMDAwMDA4NDI5IDAwMDAwIG4NCjAwMDAwMDc2ODUgMDAwMDAgbg0KMDAwMDAwNzcxMCAwMDAwMCBuDQowMDAwMDA3OTIxIDAwMDAwIG4NCjAwMDAwMDg2MDYgMDAwMDAgbg0KMDAwMDAwODIyOSAwMDAwMCBuDQowMDAwMDEyNjIzIDAwMDAwIG4NCjAwMDAwMTMyNzggMDAwMDAgbg0KMDAwMDAxMjU5OCAwMDAwMCBuDQowMDAwMDEzMjU0IDAwMDAwIG4NCjAwMDAwMTM4OTUgMDAwMDAgbg0KMDAwMDAyNDU5OCAwMDAwMCBuDQowMDAwMDM4ODAxIDAwMDAwIG4NCjAwMDAwMzg3NzUgMDAwMDAgbg0KMDAwMDA1NDU3OCAwMDAwMCBuDQowMDAwMDU0NTUyIDAwMDAwIG4NCnRyYWlsZXINCjw8L1NpemUgMzYvSW5mbyAxIDAgUi9Sb290IDIgMCBSPj4NCnN0YXJ0eHJlZg0KNTQ2MDQNCiUlRU9GDQo=",
                "PostedDate" : "2016-10-20T05:45:45.000+02:00",
                "Amount" : 23.92,
                "Balance" : 23.92,
                "RefundAmount" : 0,
                "AmountWithoutTax" : 23.92,
                "AdjustmentAmount" : 0,
                "PostedBy" : "2c93808457d787030157e031bb3f4aa5",
                "DueDate" : "2011-01-10",
                "IncludesRecurring" : true
              }
            }
          },
          "404" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyNoDataResponse"
            },
            "examples" : {
              "application/json" : {
                "records" : { },
                "size" : 0,
                "done" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/invoice/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/invoice/{id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/invoice/{id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/object/invoice/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/invoice/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/invoice/{id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "put" : {
        "tags" : [ "Invoices" ],
        "summary" : "CRUD: Update Invoice",
        "description" : "",
        "operationId" : "ProxyPUTInvoice",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "ModifyRequest",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProxyModifyInvoice"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyCreateOrModifyResponse"
            },
            "examples" : {
              "application/json" : {
                "Success" : true,
                "Id" : "2c93808457d787030157e031d86c4c57"
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X PUT -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"Id\": \"2c93808457d787030157e031d86c4c57\", \n    \"Status\": \"Posted\"\n}' \"https://rest.zuora.com/v1/object/invoice/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/invoice/{id}');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"Id\": \"2c93808457d787030157e031d86c4c57\", \n    \"Status\": \"Posted\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"Id\\\": \\\"2c93808457d787030157e031d86c4c57\\\", \\n    \\\"Status\\\": \\\"Posted\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/invoice/{id}\")\n  .put(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"Id\\\": \\\"2c93808457d787030157e031d86c4c57\\\", \\n    \\\"Status\\\": \\\"Posted\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"PUT\", \"/object/invoice/{id}\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/invoice/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"Id\\\": \\\"2c93808457d787030157e031d86c4c57\\\", \\n    \\\"Status\\\": \\\"Posted\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/invoice/{id}\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"Id\\\": \\\"2c93808457d787030157e031d86c4c57\\\", \\n    \\\"Status\\\": \\\"Posted\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Invoices" ],
        "summary" : "CRUD: Delete Invoice",
        "description" : "",
        "operationId" : "ProxyDELETEInvoice",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyDeleteResponse"
            },
            "examples" : {
              "application/json" : {
                "success" : true,
                "id" : "2c93808457d787030157e02f149f2922"
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/invoice/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/invoice/{id}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/invoice/{id}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/object/invoice/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/invoice/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/invoice/{id}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/payment" : {
      "post" : {
        "tags" : [ "Payments" ],
        "summary" : "CRUD: Create Payment",
        "description" : "",
        "operationId" : "ProxyPOSTPayment",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "CreateRequest",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProxyCreatePayment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyCreateOrModifyResponse"
            },
            "examples" : {
              "application/json" : {
                "Success" : true,
                "Id" : "2c93808457d787030157e03197714910"
              }
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyBadRequestResponse"
            },
            "examples" : {
              "application/json" : {
                "Errors" : [ {
                  "Code" : "INVALID_VALUE",
                  "Message" : "The account number 123xProxy is invalid."
                } ],
                "Success" : false
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"AccountId\": \"2c93808457d787030157e03190e748ea\", \n    \"Amount\": 2, \n    \"AppliedCreditBalanceAmount\": 0, \n    \"AppliedInvoiceAmount\": 2, \n    \"EffectiveDate\": \"2016-10-20\", \n    \"InvoiceId\": \"2c93808457d787030157e03195604902\", \n    \"PaymentMethodId\": \"2c93808457d787030157e03196d1490e\", \n    \"Status\": \"Processed\", \n    \"Type\": \"Electronic\"\n}' \"https://rest.zuora.com/v1/object/payment\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/payment');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"AccountId\": \"2c93808457d787030157e03190e748ea\", \n    \"Amount\": 2, \n    \"AppliedCreditBalanceAmount\": 0, \n    \"AppliedInvoiceAmount\": 2, \n    \"EffectiveDate\": \"2016-10-20\", \n    \"InvoiceId\": \"2c93808457d787030157e03195604902\", \n    \"PaymentMethodId\": \"2c93808457d787030157e03196d1490e\", \n    \"Status\": \"Processed\", \n    \"Type\": \"Electronic\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"AccountId\\\": \\\"2c93808457d787030157e03190e748ea\\\", \\n    \\\"Amount\\\": 2, \\n    \\\"AppliedCreditBalanceAmount\\\": 0, \\n    \\\"AppliedInvoiceAmount\\\": 2, \\n    \\\"EffectiveDate\\\": \\\"2016-10-20\\\", \\n    \\\"InvoiceId\\\": \\\"2c93808457d787030157e03195604902\\\", \\n    \\\"PaymentMethodId\\\": \\\"2c93808457d787030157e03196d1490e\\\", \\n    \\\"Status\\\": \\\"Processed\\\", \\n    \\\"Type\\\": \\\"Electronic\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/payment\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"AccountId\\\": \\\"2c93808457d787030157e03190e748ea\\\", \\n    \\\"Amount\\\": 2, \\n    \\\"AppliedCreditBalanceAmount\\\": 0, \\n    \\\"AppliedInvoiceAmount\\\": 2, \\n    \\\"EffectiveDate\\\": \\\"2016-10-20\\\", \\n    \\\"InvoiceId\\\": \\\"2c93808457d787030157e03195604902\\\", \\n    \\\"PaymentMethodId\\\": \\\"2c93808457d787030157e03196d1490e\\\", \\n    \\\"Status\\\": \\\"Processed\\\", \\n    \\\"Type\\\": \\\"Electronic\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/object/payment\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/payment\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"AccountId\\\": \\\"2c93808457d787030157e03190e748ea\\\", \\n    \\\"Amount\\\": 2, \\n    \\\"AppliedCreditBalanceAmount\\\": 0, \\n    \\\"AppliedInvoiceAmount\\\": 2, \\n    \\\"EffectiveDate\\\": \\\"2016-10-20\\\", \\n    \\\"InvoiceId\\\": \\\"2c93808457d787030157e03195604902\\\", \\n    \\\"PaymentMethodId\\\": \\\"2c93808457d787030157e03196d1490e\\\", \\n    \\\"Status\\\": \\\"Processed\\\", \\n    \\\"Type\\\": \\\"Electronic\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/payment\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"AccountId\\\": \\\"2c93808457d787030157e03190e748ea\\\", \\n    \\\"Amount\\\": 2, \\n    \\\"AppliedCreditBalanceAmount\\\": 0, \\n    \\\"AppliedInvoiceAmount\\\": 2, \\n    \\\"EffectiveDate\\\": \\\"2016-10-20\\\", \\n    \\\"InvoiceId\\\": \\\"2c93808457d787030157e03195604902\\\", \\n    \\\"PaymentMethodId\\\": \\\"2c93808457d787030157e03196d1490e\\\", \\n    \\\"Status\\\": \\\"Processed\\\", \\n    \\\"Type\\\": \\\"Electronic\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/payment-method" : {
      "post" : {
        "tags" : [ "Payment Methods" ],
        "summary" : "CRUD: Create PaymentMethod",
        "description" : "",
        "operationId" : "ProxyPOSTPaymentMethod",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "CreateRequest",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProxyCreatePaymentMethod"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyCreateOrModifyResponse"
            },
            "examples" : {
              "application/json" : {
                "Success" : true,
                "Id" : "2c93808457d787030157e03220ec4fad"
              }
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyBadRequestResponse"
            },
            "examples" : {
              "application/json" : {
                "Errors" : [ {
                  "Code" : "INVALID_VALUE",
                  "Message" : "The account number 123xProxy is invalid."
                } ],
                "Success" : false
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"AccountId\": \"2c93808457d787030157e0321fdf4fab\", \n    \"CreditCardAddress1\": \"312 2nd Ave W\", \n    \"CreditCardCity\": \"Seattle\", \n    \"CreditCardCountry\": \"United States\", \n    \"CreditCardExpirationMonth\": 12, \n    \"CreditCardExpirationYear\": 2020, \n    \"CreditCardHolderName\": \"Somebody\", \n    \"CreditCardNumber\": \"4111111111111111\", \n    \"CreditCardPostalCode\": \"98119\", \n    \"CreditCardState\": \"Washington\", \n    \"CreditCardType\": \"Visa\", \n    \"MaxConsecutivePaymentFailures\": 10, \n    \"PaymentRetryWindow\": 3, \n    \"Type\": \"CreditCard\"\n}' \"https://rest.zuora.com/v1/object/payment-method\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/payment-method');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"AccountId\": \"2c93808457d787030157e0321fdf4fab\", \n    \"CreditCardAddress1\": \"312 2nd Ave W\", \n    \"CreditCardCity\": \"Seattle\", \n    \"CreditCardCountry\": \"United States\", \n    \"CreditCardExpirationMonth\": 12, \n    \"CreditCardExpirationYear\": 2020, \n    \"CreditCardHolderName\": \"Somebody\", \n    \"CreditCardNumber\": \"4111111111111111\", \n    \"CreditCardPostalCode\": \"98119\", \n    \"CreditCardState\": \"Washington\", \n    \"CreditCardType\": \"Visa\", \n    \"MaxConsecutivePaymentFailures\": 10, \n    \"PaymentRetryWindow\": 3, \n    \"Type\": \"CreditCard\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"AccountId\\\": \\\"2c93808457d787030157e0321fdf4fab\\\", \\n    \\\"CreditCardAddress1\\\": \\\"312 2nd Ave W\\\", \\n    \\\"CreditCardCity\\\": \\\"Seattle\\\", \\n    \\\"CreditCardCountry\\\": \\\"United States\\\", \\n    \\\"CreditCardExpirationMonth\\\": 12, \\n    \\\"CreditCardExpirationYear\\\": 2020, \\n    \\\"CreditCardHolderName\\\": \\\"Somebody\\\", \\n    \\\"CreditCardNumber\\\": \\\"4111111111111111\\\", \\n    \\\"CreditCardPostalCode\\\": \\\"98119\\\", \\n    \\\"CreditCardState\\\": \\\"Washington\\\", \\n    \\\"CreditCardType\\\": \\\"Visa\\\", \\n    \\\"MaxConsecutivePaymentFailures\\\": 10, \\n    \\\"PaymentRetryWindow\\\": 3, \\n    \\\"Type\\\": \\\"CreditCard\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/payment-method\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"AccountId\\\": \\\"2c93808457d787030157e0321fdf4fab\\\", \\n    \\\"CreditCardAddress1\\\": \\\"312 2nd Ave W\\\", \\n    \\\"CreditCardCity\\\": \\\"Seattle\\\", \\n    \\\"CreditCardCountry\\\": \\\"United States\\\", \\n    \\\"CreditCardExpirationMonth\\\": 12, \\n    \\\"CreditCardExpirationYear\\\": 2020, \\n    \\\"CreditCardHolderName\\\": \\\"Somebody\\\", \\n    \\\"CreditCardNumber\\\": \\\"4111111111111111\\\", \\n    \\\"CreditCardPostalCode\\\": \\\"98119\\\", \\n    \\\"CreditCardState\\\": \\\"Washington\\\", \\n    \\\"CreditCardType\\\": \\\"Visa\\\", \\n    \\\"MaxConsecutivePaymentFailures\\\": 10, \\n    \\\"PaymentRetryWindow\\\": 3, \\n    \\\"Type\\\": \\\"CreditCard\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/object/payment-method\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/payment-method\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"AccountId\\\": \\\"2c93808457d787030157e0321fdf4fab\\\", \\n    \\\"CreditCardAddress1\\\": \\\"312 2nd Ave W\\\", \\n    \\\"CreditCardCity\\\": \\\"Seattle\\\", \\n    \\\"CreditCardCountry\\\": \\\"United States\\\", \\n    \\\"CreditCardExpirationMonth\\\": 12, \\n    \\\"CreditCardExpirationYear\\\": 2020, \\n    \\\"CreditCardHolderName\\\": \\\"Somebody\\\", \\n    \\\"CreditCardNumber\\\": \\\"4111111111111111\\\", \\n    \\\"CreditCardPostalCode\\\": \\\"98119\\\", \\n    \\\"CreditCardState\\\": \\\"Washington\\\", \\n    \\\"CreditCardType\\\": \\\"Visa\\\", \\n    \\\"MaxConsecutivePaymentFailures\\\": 10, \\n    \\\"PaymentRetryWindow\\\": 3, \\n    \\\"Type\\\": \\\"CreditCard\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/payment-method\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"AccountId\\\": \\\"2c93808457d787030157e0321fdf4fab\\\", \\n    \\\"CreditCardAddress1\\\": \\\"312 2nd Ave W\\\", \\n    \\\"CreditCardCity\\\": \\\"Seattle\\\", \\n    \\\"CreditCardCountry\\\": \\\"United States\\\", \\n    \\\"CreditCardExpirationMonth\\\": 12, \\n    \\\"CreditCardExpirationYear\\\": 2020, \\n    \\\"CreditCardHolderName\\\": \\\"Somebody\\\", \\n    \\\"CreditCardNumber\\\": \\\"4111111111111111\\\", \\n    \\\"CreditCardPostalCode\\\": \\\"98119\\\", \\n    \\\"CreditCardState\\\": \\\"Washington\\\", \\n    \\\"CreditCardType\\\": \\\"Visa\\\", \\n    \\\"MaxConsecutivePaymentFailures\\\": 10, \\n    \\\"PaymentRetryWindow\\\": 3, \\n    \\\"Type\\\": \\\"CreditCard\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/payment-method-snapshot/{id}" : {
      "get" : {
        "tags" : [ "Payment Method Snapshots" ],
        "summary" : "CRUD: Retrieve PaymentMethodSnapshot",
        "description" : "",
        "operationId" : "ProxyGETPaymentMethodSnapshot",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Object fields to return",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyGetPaymentMethodSnapshot"
            },
            "examples" : {
              "application/json" : {
                "CreditCardExpirationMonth" : 12,
                "CreditCardAddress1" : "312 2nd Ave W",
                "Id" : "2c93808457d787030157e0314f2245d8",
                "CreditCardExpirationYear" : 2020,
                "CreditCardCity" : "Seattle",
                "CreditCardState" : "Washington",
                "AccountId" : "2c93808457d787030157e0314c0945d4",
                "NumConsecutiveFailures" : 0,
                "CreditCardType" : "Visa",
                "BankIdentificationNumber" : "411111",
                "TotalNumberOfProcessedPayments" : 0,
                "CreditCardPostalCode" : "98119",
                "CreditCardCountry" : "United States",
                "PaymentMethodId" : "2c93808457d787030157e0314e8145d7",
                "CreditCardMaskNumber" : "************1111",
                "CreditCardHolderName" : "Somebody",
                "TotalNumberOfErrorPayments" : 0,
                "UseDefaultRetryRule" : true,
                "Type" : "CreditCard",
                "PaymentMethodStatus" : "Active"
              }
            }
          },
          "404" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyNoDataResponse"
            },
            "examples" : {
              "application/json" : {
                "records" : { },
                "size" : 0,
                "done" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/payment-method-snapshot/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/payment-method-snapshot/{id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/payment-method-snapshot/{id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/object/payment-method-snapshot/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/payment-method-snapshot/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/payment-method-snapshot/{id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Payment Method Snapshots" ],
        "summary" : "CRUD: Delete PaymentMethodSnapshot",
        "description" : "",
        "operationId" : "ProxyDELETEPaymentMethodSnapshot",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyDeleteResponse"
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/payment-method-snapshot/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/payment-method-snapshot/{id}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/payment-method-snapshot/{id}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/object/payment-method-snapshot/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/payment-method-snapshot/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/payment-method-snapshot/{id}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/payment-method-transaction-log/{id}" : {
      "get" : {
        "tags" : [ "Payment Method Transaction Logs" ],
        "summary" : "CRUD: Retrieve PaymentMethodTransactionLog",
        "description" : "",
        "operationId" : "ProxyGETPaymentMethodTransactionLog",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Object fields to return",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyGetPaymentMethodTransactionLog"
            }
          },
          "404" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyNoDataResponse"
            },
            "examples" : {
              "application/json" : {
                "records" : { },
                "size" : 0,
                "done" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/payment-method-transaction-log/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/payment-method-transaction-log/{id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/payment-method-transaction-log/{id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/object/payment-method-transaction-log/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/payment-method-transaction-log/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/payment-method-transaction-log/{id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Payment Method Transaction Logs" ],
        "summary" : "CRUD: Delete PaymentMethodTransactionLog",
        "description" : "",
        "operationId" : "ProxyDELETEPaymentMethodTransactionLog",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyDeleteResponse"
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/payment-method-transaction-log/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/payment-method-transaction-log/{id}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/payment-method-transaction-log/{id}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/object/payment-method-transaction-log/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/payment-method-transaction-log/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/payment-method-transaction-log/{id}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/payment-method/{id}" : {
      "get" : {
        "tags" : [ "Payment Methods" ],
        "summary" : "CRUD: Retrieve PaymentMethod",
        "description" : "",
        "operationId" : "ProxyGETPaymentMethod",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Object fields to return",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyGetPaymentMethod"
            },
            "examples" : {
              "application/json" : {
                "CreditCardExpirationMonth" : 12,
                "CreditCardAddress1" : "312 2nd Ave W",
                "Id" : "2c93808457d787030157e0314e8145d7",
                "CreditCardExpirationYear" : 2020,
                "UpdatedDate" : "2016-10-20T05:45:10.000+02:00",
                "CreditCardCity" : "Seattle",
                "CreditCardState" : "Washington",
                "AccountId" : "2c93808457d787030157e0314c0945d4",
                "Type" : "CreditCard",
                "UpdatedById" : "2c93808457d787030157e0312ef1445e",
                "CreditCardCountry" : "United States",
                "AchAddress1" : "312 2nd Ave W",
                "CreditCardType" : "Visa",
                "CreatedById" : "2c93808457d787030157e0312ef1445e",
                "CreditCardPostalCode" : "98119",
                "CreditCardHolderName" : "Somebody",
                "CreatedDate" : "2016-10-20T05:45:10.000+02:00",
                "TotalNumberOfProcessedPayments" : 1,
                "PaymentMethodStatus" : "Active",
                "NumConsecutiveFailures" : 0,
                "TotalNumberOfErrorPayments" : 0,
                "CreditCardMaskNumber" : "************1111",
                "LastTransactionStatus" : "Approved",
                "LastTransactionDateTime" : "2016-10-20T05:45:10.000+02:00",
                "UseDefaultRetryRule" : true,
                "BankIdentificationNumber" : "411111",
                "Active" : false
              }
            }
          },
          "404" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyNoDataResponse"
            },
            "examples" : {
              "application/json" : {
                "records" : { },
                "size" : 0,
                "done" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/payment-method/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/payment-method/{id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/payment-method/{id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/object/payment-method/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/payment-method/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/payment-method/{id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "put" : {
        "tags" : [ "Payment Methods" ],
        "summary" : "CRUD: Update PaymentMethod",
        "description" : "",
        "operationId" : "ProxyPUTPaymentMethod",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "ModifyRequest",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProxyModifyPaymentMethod"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyCreateOrModifyResponse"
            },
            "examples" : {
              "application/json" : {
                "Success" : true,
                "Id" : "2c93808457d787030157e02fced332a2"
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X PUT -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"CreditCardAddress1\": \"312 2nd Ave W_new\", \n    \"Id\": \"2c93808457d787030157e02fced332a2\"\n}' \"https://rest.zuora.com/v1/object/payment-method/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/payment-method/{id}');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"CreditCardAddress1\": \"312 2nd Ave W_new\", \n    \"Id\": \"2c93808457d787030157e02fced332a2\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"CreditCardAddress1\\\": \\\"312 2nd Ave W_new\\\", \\n    \\\"Id\\\": \\\"2c93808457d787030157e02fced332a2\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/payment-method/{id}\")\n  .put(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"CreditCardAddress1\\\": \\\"312 2nd Ave W_new\\\", \\n    \\\"Id\\\": \\\"2c93808457d787030157e02fced332a2\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"PUT\", \"/object/payment-method/{id}\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/payment-method/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"CreditCardAddress1\\\": \\\"312 2nd Ave W_new\\\", \\n    \\\"Id\\\": \\\"2c93808457d787030157e02fced332a2\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/payment-method/{id}\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"CreditCardAddress1\\\": \\\"312 2nd Ave W_new\\\", \\n    \\\"Id\\\": \\\"2c93808457d787030157e02fced332a2\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Payment Methods" ],
        "summary" : "CRUD: Delete PaymentMethod",
        "description" : "",
        "operationId" : "ProxyDELETEPaymentMethod",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyDeleteResponse"
            },
            "examples" : {
              "application/json" : {
                "success" : true,
                "id" : "2c93808457d787030157e02fcc8e329f"
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/payment-method/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/payment-method/{id}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/payment-method/{id}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/object/payment-method/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/payment-method/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/payment-method/{id}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/payment-transaction-log/{id}" : {
      "get" : {
        "tags" : [ "Payment Transaction Logs" ],
        "summary" : "CRUD: Retrieve PaymentTransactionLog",
        "description" : "",
        "operationId" : "ProxyGETPaymentTransactionLog",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Object fields to return",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyGetPaymentTransactionLog"
            },
            "examples" : {
              "application/json" : {
                "GatewayReasonCodeDescription" : "This transaction has been approved by Test gateway.",
                "Id" : "2c93808457d787030157e030b2703dcd",
                "PaymentId" : "2c93808457d787030157e030b2673dcc",
                "TransactionId" : "874200.071357285",
                "GatewayState" : "Submitted",
                "TransactionDate" : "2016-10-20T05:44:30.000+02:00",
                "Gateway" : "TEST gateway name1476935063101",
                "GatewayReasonCode" : "approve",
                "GatewayTransactionType" : "Sale"
              }
            }
          },
          "404" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyNoDataResponse"
            },
            "examples" : {
              "application/json" : {
                "records" : { },
                "size" : 0,
                "done" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/payment-transaction-log/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/payment-transaction-log/{id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/payment-transaction-log/{id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/object/payment-transaction-log/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/payment-transaction-log/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/payment-transaction-log/{id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Payment Transaction Logs" ],
        "summary" : "CRUD: Delete PaymentTransactionLog",
        "description" : "",
        "operationId" : "ProxyDELETEPaymentTransactionLog",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyDeleteResponse"
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/payment-transaction-log/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/payment-transaction-log/{id}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/payment-transaction-log/{id}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/object/payment-transaction-log/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/payment-transaction-log/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/payment-transaction-log/{id}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/payment/{id}" : {
      "get" : {
        "tags" : [ "Payments" ],
        "summary" : "CRUD: Retrieve Payment",
        "description" : "",
        "operationId" : "ProxyGETPayment",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Object fields to return",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyGetPayment"
            },
            "examples" : {
              "application/json" : {
                "PaymentNumber" : "P-00000001",
                "SubmittedOn" : "2016-10-20T05:45:28.000+02:00",
                "Id" : "2c93808457d787030157e03197714910",
                "UpdatedDate" : "2016-10-20T05:45:28.000+02:00",
                "GatewayState" : "Submitted",
                "Source" : "API",
                "AccountId" : "2c93808457d787030157e03190e748ea",
                "BankIdentificationNumber" : "411111",
                "PaymentMethodSnapshotId" : "2c93808457d787030157e0319770490f",
                "GatewayResponseCode" : "approve",
                "UpdatedById" : "2c93808457d787030157e0316e624772",
                "Type" : "Electronic",
                "CreatedDate" : "2016-10-20T05:45:28.000+02:00",
                "RefundAmount" : 0,
                "AppliedCreditBalanceAmount" : 0,
                "Amount" : 2,
                "PaymentMethodId" : "2c93808457d787030157e03196d1490e",
                "Status" : "Processed",
                "CreatedById" : "2c93808457d787030157e0316e624772",
                "GatewayResponse" : "This transaction has been approved by Test gateway.",
                "Gateway" : "TEST gateway name1476935120035",
                "ReferenceId" : "1478427.2733506497",
                "EffectiveDate" : "2016-10-20"
              }
            }
          },
          "404" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyNoDataResponse"
            },
            "examples" : {
              "application/json" : {
                "records" : { },
                "size" : 0,
                "done" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/payment/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/payment/{id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/payment/{id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/object/payment/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/payment/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/payment/{id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "put" : {
        "tags" : [ "Payments" ],
        "summary" : "CRUD: Update Payment",
        "description" : "",
        "operationId" : "ProxyPUTPayment",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "ModifyRequest",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProxyModifyPayment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyCreateOrModifyResponse"
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X PUT -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{}' \"https://rest.zuora.com/v1/object/payment/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/payment/{id}');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/payment/{id}\")\n  .put(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"PUT\", \"/object/payment/{id}\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/payment/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/payment/{id}\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Payments" ],
        "summary" : "CRUD: Delete Payment",
        "description" : "",
        "operationId" : "ProxyDELETEPayment",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyDeleteResponse"
            }
          }
        }
      }
    },
    "/object/product" : {
      "post" : {
        "tags" : [ "Products" ],
        "summary" : "CRUD: Create Product",
        "description" : "",
        "operationId" : "ProxyPOSTProduct",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "CreateRequest",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProxyCreateProduct"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyCreateOrModifyResponse"
            },
            "examples" : {
              "application/json" : {
                "Success" : true,
                "Id" : "2c93808457d787030157e03246ae5129"
              }
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyBadRequestResponse"
            },
            "examples" : {
              "application/json" : {
                "Errors" : [ {
                  "Code" : "INVALID_VALUE",
                  "Message" : "The account number 123xProxy is invalid."
                } ],
                "Success" : false
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"Description\": \"Create product via API\", \n    \"EffectiveEndDate\": \"2066-10-20\", \n    \"EffectiveStartDate\": \"1966-10-20\", \n    \"Name\": \"P_1476935173677\", \n    \"SKU\": \"API-SKU1476935173677\"\n}' \"https://rest.zuora.com/v1/object/product\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/product');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"Description\": \"Create product via API\", \n    \"EffectiveEndDate\": \"2066-10-20\", \n    \"EffectiveStartDate\": \"1966-10-20\", \n    \"Name\": \"P_1476935173677\", \n    \"SKU\": \"API-SKU1476935173677\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"Description\\\": \\\"Create product via API\\\", \\n    \\\"EffectiveEndDate\\\": \\\"2066-10-20\\\", \\n    \\\"EffectiveStartDate\\\": \\\"1966-10-20\\\", \\n    \\\"Name\\\": \\\"P_1476935173677\\\", \\n    \\\"SKU\\\": \\\"API-SKU1476935173677\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/product\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"Description\\\": \\\"Create product via API\\\", \\n    \\\"EffectiveEndDate\\\": \\\"2066-10-20\\\", \\n    \\\"EffectiveStartDate\\\": \\\"1966-10-20\\\", \\n    \\\"Name\\\": \\\"P_1476935173677\\\", \\n    \\\"SKU\\\": \\\"API-SKU1476935173677\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/object/product\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/product\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"Description\\\": \\\"Create product via API\\\", \\n    \\\"EffectiveEndDate\\\": \\\"2066-10-20\\\", \\n    \\\"EffectiveStartDate\\\": \\\"1966-10-20\\\", \\n    \\\"Name\\\": \\\"P_1476935173677\\\", \\n    \\\"SKU\\\": \\\"API-SKU1476935173677\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/product\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"Description\\\": \\\"Create product via API\\\", \\n    \\\"EffectiveEndDate\\\": \\\"2066-10-20\\\", \\n    \\\"EffectiveStartDate\\\": \\\"1966-10-20\\\", \\n    \\\"Name\\\": \\\"P_1476935173677\\\", \\n    \\\"SKU\\\": \\\"API-SKU1476935173677\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/product-feature/{id}" : {
      "get" : {
        "tags" : [ "Product Features" ],
        "summary" : "CRUD: Retrieve ProductFeature",
        "description" : "",
        "operationId" : "ProxyGETProductFeature",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Object fields to return",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyGetProductFeature"
            },
            "examples" : {
              "application/json" : null
            }
          },
          "404" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyNoDataResponse"
            },
            "examples" : {
              "application/json" : {
                "records" : { },
                "size" : 0,
                "done" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/product-feature/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/product-feature/{id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/product-feature/{id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/object/product-feature/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/product-feature/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/product-feature/{id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Product Features" ],
        "summary" : "CRUD: Delete ProductFeature",
        "description" : "",
        "operationId" : "ProxyDELETEProductFeature",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyDeleteResponse"
            },
            "examples" : {
              "application/json" : {
                "success" : true,
                "id" : "2c93808457d787030157e02d820f16d3"
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/product-feature/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/product-feature/{id}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/product-feature/{id}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/object/product-feature/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/product-feature/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/product-feature/{id}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/product-rate-plan" : {
      "post" : {
        "tags" : [ "Product Rate Plans" ],
        "summary" : "CRUD: Create ProductRatePlan",
        "description" : "",
        "operationId" : "ProxyPOSTProductRatePlan",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "CreateRequest",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProxyCreateProductRatePlan"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyCreateOrModifyResponse"
            },
            "examples" : {
              "application/json" : {
                "Success" : true,
                "Id" : "2c93808457d787030157e0324735512b"
              }
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyBadRequestResponse"
            },
            "examples" : {
              "application/json" : {
                "Errors" : [ {
                  "Code" : "INVALID_VALUE",
                  "Message" : "The account number 123xProxy is invalid."
                } ],
                "Success" : false
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"Description\": \"Test create product rateplan via API\", \n    \"EffectiveEndDate\": \"2066-10-20\", \n    \"EffectiveStartDate\": \"1966-10-20\", \n    \"Name\": \"ProductRatePlan1476935173957\", \n    \"ProductId\": \"2c93808457d787030157e03246ae5129\"\n}' \"https://rest.zuora.com/v1/object/product-rate-plan\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/product-rate-plan');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"Description\": \"Test create product rateplan via API\", \n    \"EffectiveEndDate\": \"2066-10-20\", \n    \"EffectiveStartDate\": \"1966-10-20\", \n    \"Name\": \"ProductRatePlan1476935173957\", \n    \"ProductId\": \"2c93808457d787030157e03246ae5129\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"Description\\\": \\\"Test create product rateplan via API\\\", \\n    \\\"EffectiveEndDate\\\": \\\"2066-10-20\\\", \\n    \\\"EffectiveStartDate\\\": \\\"1966-10-20\\\", \\n    \\\"Name\\\": \\\"ProductRatePlan1476935173957\\\", \\n    \\\"ProductId\\\": \\\"2c93808457d787030157e03246ae5129\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/product-rate-plan\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"Description\\\": \\\"Test create product rateplan via API\\\", \\n    \\\"EffectiveEndDate\\\": \\\"2066-10-20\\\", \\n    \\\"EffectiveStartDate\\\": \\\"1966-10-20\\\", \\n    \\\"Name\\\": \\\"ProductRatePlan1476935173957\\\", \\n    \\\"ProductId\\\": \\\"2c93808457d787030157e03246ae5129\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/object/product-rate-plan\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/product-rate-plan\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"Description\\\": \\\"Test create product rateplan via API\\\", \\n    \\\"EffectiveEndDate\\\": \\\"2066-10-20\\\", \\n    \\\"EffectiveStartDate\\\": \\\"1966-10-20\\\", \\n    \\\"Name\\\": \\\"ProductRatePlan1476935173957\\\", \\n    \\\"ProductId\\\": \\\"2c93808457d787030157e03246ae5129\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/product-rate-plan\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"Description\\\": \\\"Test create product rateplan via API\\\", \\n    \\\"EffectiveEndDate\\\": \\\"2066-10-20\\\", \\n    \\\"EffectiveStartDate\\\": \\\"1966-10-20\\\", \\n    \\\"Name\\\": \\\"ProductRatePlan1476935173957\\\", \\n    \\\"ProductId\\\": \\\"2c93808457d787030157e03246ae5129\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/product-rate-plan-charge-tier/{id}" : {
      "get" : {
        "tags" : [ "Product Rate Plan Charge Tiers" ],
        "summary" : "CRUD: Retrieve ProductRatePlanChargeTier",
        "description" : "",
        "operationId" : "ProxyGETProductRatePlanChargeTier",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Object fields to return",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyGetProductRatePlanChargeTier"
            },
            "examples" : {
              "application/json" : {
                "UpdatedById" : "2c93808457d787030157e02fd0f132a4",
                "CreatedById" : "2c93808457d787030157e02fd0f132a4",
                "CreatedDate" : "2016-10-20T05:43:38.000+02:00",
                "UpdatedDate" : "2016-10-20T05:43:38.000+02:00",
                "StartingUnit" : 0,
                "Currency" : "USD",
                "EndingUnit" : 0,
                "Id" : "2c93808457d787030157e02fe725341f",
                "PriceFormat" : "Flat Fee",
                "Tier" : 1,
                "Price" : 30
              }
            }
          },
          "404" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyNoDataResponse"
            },
            "examples" : {
              "application/json" : {
                "records" : { },
                "size" : 0,
                "done" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/product-rate-plan-charge-tier/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/product-rate-plan-charge-tier/{id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/product-rate-plan-charge-tier/{id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/object/product-rate-plan-charge-tier/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/product-rate-plan-charge-tier/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/product-rate-plan-charge-tier/{id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Product Rate Plan Charge Tiers" ],
        "summary" : "CRUD: Delete ProductRatePlanChargeTier",
        "description" : "",
        "operationId" : "ProxyDELETEProductRatePlanChargeTier",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyDeleteResponse"
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/product-rate-plan-charge-tier/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/product-rate-plan-charge-tier/{id}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/product-rate-plan-charge-tier/{id}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/object/product-rate-plan-charge-tier/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/product-rate-plan-charge-tier/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/product-rate-plan-charge-tier/{id}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/product-rate-plan-charge/{id}" : {
      "get" : {
        "tags" : [ "Product Rate Plan Charges" ],
        "summary" : "CRUD: Retrieve ProductRatePlanCharge",
        "description" : "",
        "operationId" : "ProxyGETProductRatePlanCharge",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Object fields to return",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyGetProductRatePlanCharge"
            },
            "examples" : {
              "application/json" : {
                "PriceChangeOption" : "NoChange",
                "IncludedUnits" : 0,
                "OverageCalculationOption" : "EndOfSmoothingPeriod",
                "Id" : "2c93808457d787030157e032002b4e21",
                "AccountingCode" : "name_1476935155610",
                "BillCycleDay" : 1,
                "BillingPeriod" : "Month",
                "OverageUnusedUnitsCreditOption" : "NoCredit",
                "CreatedById" : "2c93808457d787030157e031dd264c85",
                "RecognizedRevenueAccount" : "name_1476935155610",
                "ChargeType" : "Recurring",
                "BillCycleType" : "DefaultFromCustomer",
                "DefaultQuantity" : 1,
                "UpToPeriodsType" : "Billing Periods",
                "ProductRatePlanId" : "2c93808457d787030157e031ff054e1e",
                "Taxable" : false,
                "Description" : "Recurring Flat Fee Pricing",
                "LegacyRevenueReporting" : false,
                "ChargeModel" : "Flat Fee Pricing",
                "NumberOfPeriod" : 1,
                "BillingTiming" : "In Advance",
                "PriceIncreasePercentage" : 0,
                "CreatedDate" : "2016-10-20T05:45:55.000+02:00",
                "DeferredRevenueAccount" : "name_1476935155610",
                "UpdatedById" : "2c93808457d787030157e031dd264c85",
                "Name" : "Recurring_Flat Fee Pricing1476935155610",
                "ListPriceBase" : "Per Billing Period",
                "EndDateCondition" : "SubscriptionEnd",
                "TriggerEvent" : "ContractEffective",
                "BillingPeriodAlignment" : "AlignToCharge",
                "RevenueRecognitionRuleName" : "Recognize upon invoicing",
                "UseTenantDefaultForPriceChange" : true,
                "UpdatedDate" : "2016-10-20T05:45:55.000+02:00"
              }
            }
          },
          "404" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyNoDataResponse"
            },
            "examples" : {
              "application/json" : {
                "records" : { },
                "size" : 0,
                "done" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/product-rate-plan-charge/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/product-rate-plan-charge/{id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/product-rate-plan-charge/{id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/object/product-rate-plan-charge/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/product-rate-plan-charge/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/product-rate-plan-charge/{id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Product Rate Plan Charges" ],
        "summary" : "CRUD: Delete ProductRatePlanCharge",
        "description" : "",
        "operationId" : "ProxyDELETEProductRatePlanCharge",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyDeleteResponse"
            },
            "examples" : {
              "application/json" : {
                "success" : true,
                "id" : "2c93808457d787030157e031fcd34e19"
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/product-rate-plan-charge/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/product-rate-plan-charge/{id}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/product-rate-plan-charge/{id}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/object/product-rate-plan-charge/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/product-rate-plan-charge/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/product-rate-plan-charge/{id}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/product-rate-plan/{id}" : {
      "get" : {
        "tags" : [ "Product Rate Plans" ],
        "summary" : "CRUD: Retrieve ProductRatePlan",
        "description" : "",
        "operationId" : "ProxyGETProductRatePlan",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Object fields to return",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyGetProductRatePlan"
            },
            "examples" : {
              "application/json" : {
                "ProductId" : "2c93808457d787030157e02da0231850",
                "Id" : "2c93808457d787030157e02da0d91852",
                "CreatedById" : "2c93808457d787030157e02d84c116d5",
                "CreatedDate" : "2016-10-20T05:41:09.000+02:00",
                "UpdatedDate" : "2016-10-20T05:41:09.000+02:00",
                "EffectiveStartDate" : "1966-10-20",
                "UpdatedById" : "2c93808457d787030157e02d84c116d5",
                "Name" : "ProductRatePlan1476934869186_new",
                "EffectiveEndDate" : "2066-10-20",
                "Description" : "Test create product rateplan via API"
              }
            }
          },
          "404" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyNoDataResponse"
            },
            "examples" : {
              "application/json" : {
                "records" : { },
                "size" : 0,
                "done" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/product-rate-plan/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/product-rate-plan/{id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/product-rate-plan/{id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/object/product-rate-plan/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/product-rate-plan/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/product-rate-plan/{id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "put" : {
        "tags" : [ "Product Rate Plans" ],
        "summary" : "CRUD: Update ProductRatePlan",
        "description" : "",
        "operationId" : "ProxyPUTProductRatePlan",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "ModifyRequest",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProxyModifyProductRatePlan"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyCreateOrModifyResponse"
            },
            "examples" : {
              "application/json" : {
                "Success" : true,
                "Id" : "2c93808457d787030157e02da0d91852"
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X PUT -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"Id\": \"2c93808457d787030157e02da0d91852\", \n    \"Name\": \"ProductRatePlan1476934869186_new\"\n}' \"https://rest.zuora.com/v1/object/product-rate-plan/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/product-rate-plan/{id}');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"Id\": \"2c93808457d787030157e02da0d91852\", \n    \"Name\": \"ProductRatePlan1476934869186_new\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"Id\\\": \\\"2c93808457d787030157e02da0d91852\\\", \\n    \\\"Name\\\": \\\"ProductRatePlan1476934869186_new\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/product-rate-plan/{id}\")\n  .put(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"Id\\\": \\\"2c93808457d787030157e02da0d91852\\\", \\n    \\\"Name\\\": \\\"ProductRatePlan1476934869186_new\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"PUT\", \"/object/product-rate-plan/{id}\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/product-rate-plan/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"Id\\\": \\\"2c93808457d787030157e02da0d91852\\\", \\n    \\\"Name\\\": \\\"ProductRatePlan1476934869186_new\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/product-rate-plan/{id}\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"Id\\\": \\\"2c93808457d787030157e02da0d91852\\\", \\n    \\\"Name\\\": \\\"ProductRatePlan1476934869186_new\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Product Rate Plans" ],
        "summary" : "CRUD: Delete ProductRatePlan",
        "description" : "",
        "operationId" : "ProxyDELETEProductRatePlan",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyDeleteResponse"
            },
            "examples" : {
              "application/json" : {
                "success" : true,
                "id" : "2c93808457d787030157e02d9dde184f"
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/product-rate-plan/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/product-rate-plan/{id}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/product-rate-plan/{id}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/object/product-rate-plan/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/product-rate-plan/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/product-rate-plan/{id}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/product/{id}" : {
      "get" : {
        "tags" : [ "Products" ],
        "summary" : "CRUD: Retrieve Product",
        "description" : "",
        "operationId" : "ProxyGETProduct",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Object fields to return",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyGetProduct"
            },
            "examples" : {
              "application/json" : {
                "Id" : "2c93808457d787030157e02e7be22210",
                "CreatedById" : "2c93808457d787030157e02e62af2097",
                "CreatedDate" : "2016-10-20T05:42:05.000+02:00",
                "UpdatedDate" : "2016-10-20T05:42:05.000+02:00",
                "SKU" : "API-SKU1476934925293",
                "EffectiveStartDate" : "1966-10-20",
                "UpdatedById" : "2c93808457d787030157e02e62af2097",
                "Name" : "P_1476934925293_new",
                "EffectiveEndDate" : "2066-10-20",
                "Description" : "Create product via API_new"
              }
            }
          },
          "404" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyNoDataResponse"
            },
            "examples" : {
              "application/json" : {
                "records" : { },
                "size" : 0,
                "done" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/product/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/product/{id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/product/{id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/object/product/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/product/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/product/{id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "put" : {
        "tags" : [ "Products" ],
        "summary" : "CRUD: Update Product",
        "description" : "",
        "operationId" : "ProxyPUTProduct",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "ModifyRequest",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProxyModifyProduct"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyCreateOrModifyResponse"
            },
            "examples" : {
              "application/json" : {
                "Success" : true,
                "Id" : "2c93808457d787030157e02e7be22210"
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X PUT -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"Description\": \"Create product via API_new\", \n    \"EffectiveEndDate\": \"2066-10-20\", \n    \"EffectiveStartDate\": \"1966-10-20\", \n    \"Id\": \"2c93808457d787030157e02e7be22210\", \n    \"Name\": \"P_1476934925293_new\", \n    \"SKU\": \"API-SKU1476934925293\"\n}' \"https://rest.zuora.com/v1/object/product/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/product/{id}');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"Description\": \"Create product via API_new\", \n    \"EffectiveEndDate\": \"2066-10-20\", \n    \"EffectiveStartDate\": \"1966-10-20\", \n    \"Id\": \"2c93808457d787030157e02e7be22210\", \n    \"Name\": \"P_1476934925293_new\", \n    \"SKU\": \"API-SKU1476934925293\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"Description\\\": \\\"Create product via API_new\\\", \\n    \\\"EffectiveEndDate\\\": \\\"2066-10-20\\\", \\n    \\\"EffectiveStartDate\\\": \\\"1966-10-20\\\", \\n    \\\"Id\\\": \\\"2c93808457d787030157e02e7be22210\\\", \\n    \\\"Name\\\": \\\"P_1476934925293_new\\\", \\n    \\\"SKU\\\": \\\"API-SKU1476934925293\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/product/{id}\")\n  .put(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"Description\\\": \\\"Create product via API_new\\\", \\n    \\\"EffectiveEndDate\\\": \\\"2066-10-20\\\", \\n    \\\"EffectiveStartDate\\\": \\\"1966-10-20\\\", \\n    \\\"Id\\\": \\\"2c93808457d787030157e02e7be22210\\\", \\n    \\\"Name\\\": \\\"P_1476934925293_new\\\", \\n    \\\"SKU\\\": \\\"API-SKU1476934925293\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"PUT\", \"/object/product/{id}\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/product/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"Description\\\": \\\"Create product via API_new\\\", \\n    \\\"EffectiveEndDate\\\": \\\"2066-10-20\\\", \\n    \\\"EffectiveStartDate\\\": \\\"1966-10-20\\\", \\n    \\\"Id\\\": \\\"2c93808457d787030157e02e7be22210\\\", \\n    \\\"Name\\\": \\\"P_1476934925293_new\\\", \\n    \\\"SKU\\\": \\\"API-SKU1476934925293\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/product/{id}\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"Description\\\": \\\"Create product via API_new\\\", \\n    \\\"EffectiveEndDate\\\": \\\"2066-10-20\\\", \\n    \\\"EffectiveStartDate\\\": \\\"1966-10-20\\\", \\n    \\\"Id\\\": \\\"2c93808457d787030157e02e7be22210\\\", \\n    \\\"Name\\\": \\\"P_1476934925293_new\\\", \\n    \\\"SKU\\\": \\\"API-SKU1476934925293\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Products" ],
        "summary" : "CRUD: Delete Product",
        "description" : "",
        "operationId" : "ProxyDELETEProduct",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyDeleteResponse"
            },
            "examples" : {
              "application/json" : {
                "success" : true,
                "id" : "2c93808457d787030157e02e7a22220e"
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/product/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/product/{id}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/product/{id}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/object/product/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/product/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/product/{id}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/rate-plan-charge-tier/{id}" : {
      "get" : {
        "tags" : [ "Rate Plan Charge Tiers" ],
        "summary" : "CRUD: Retrieve RatePlanChargeTier",
        "description" : "",
        "operationId" : "ProxyGETRatePlanChargeTier",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Object fields to return",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyGetRatePlanChargeTier"
            },
            "examples" : {
              "application/json" : {
                "UpdatedById" : "2c93808457d787030157e02da3161854",
                "CreatedById" : "2c93808457d787030157e02da3161854",
                "Price" : 30,
                "UpdatedDate" : "2016-10-20T05:41:16.000+02:00",
                "StartingUnit" : 0,
                "EndingUnit" : 0,
                "Id" : "2c93808457d787030157e02dbecc19d8",
                "CreatedDate" : "2016-10-20T05:41:16.000+02:00",
                "PriceFormat" : "Flat Fee",
                "Tier" : 1,
                "RatePlanChargeId" : "2c93808457d787030157e02dbee919da"
              }
            }
          },
          "404" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyNoDataResponse"
            },
            "examples" : {
              "application/json" : {
                "records" : { },
                "size" : 0,
                "done" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/rate-plan-charge-tier/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/rate-plan-charge-tier/{id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/rate-plan-charge-tier/{id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/object/rate-plan-charge-tier/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/rate-plan-charge-tier/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/rate-plan-charge-tier/{id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Rate Plan Charge Tiers" ],
        "summary" : "CRUD: Delete RatePlanChargeTier",
        "description" : "",
        "operationId" : "ProxyDELETERatePlanChargeTier",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyDeleteResponse"
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/rate-plan-charge-tier/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/rate-plan-charge-tier/{id}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/rate-plan-charge-tier/{id}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/object/rate-plan-charge-tier/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/rate-plan-charge-tier/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/rate-plan-charge-tier/{id}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/rate-plan-charge/{id}" : {
      "get" : {
        "tags" : [ "Rate Plan Charges" ],
        "summary" : "CRUD: Retrieve RatePlanCharge",
        "description" : "",
        "operationId" : "ProxyGETRatePlanCharge",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Object fields to return",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyGetRatePlanCharge"
            },
            "examples" : {
              "application/json" : {
                "PriceChangeOption" : "NoChange",
                "OverageCalculationOption" : "EndOfSmoothingPeriod",
                "Id" : "2c93808457d787030157e02f9b802fad",
                "ChargeNumber" : "C-00000001",
                "BillingPeriodAlignment" : "AlignToCharge",
                "UpdatedDate" : "2016-10-20T05:43:19.000+02:00",
                "Version" : 1,
                "BillCycleDay" : 1,
                "BillingPeriod" : "Month",
                "IsLastSegment" : true,
                "UpToPeriodsType" : "Billing Periods",
                "UpdatedById" : "2c93808457d787030157e02f84852e27",
                "Quantity" : 1,
                "EndDateCondition" : "SubscriptionEnd",
                "Segment" : 1,
                "RatePlanId" : "2c93808457d787030157e02f9b762fac",
                "ChargeModel" : "Flat Fee Pricing",
                "TriggerEvent" : "ContractEffective",
                "BillingTiming" : "In Arrears",
                "CreatedById" : "2c93808457d787030157e02f84852e27",
                "CreatedDate" : "2016-10-20T05:43:18.000+02:00",
                "Name" : "Recurring_Flat Fee Pricing1476934998566",
                "ChargeType" : "Recurring",
                "OverageUnusedUnitsCreditOption" : "NoCredit",
                "OriginalId" : "2c93808457d787030157e02f9b802fad",
                "ListPriceBase" : "Per Billing Period",
                "PriceIncreasePercentage" : 0,
                "NumberOfPeriods" : 1,
                "BillCycleType" : "DefaultFromCustomer",
                "Description" : "Recurring Flat Fee Pricing",
                "AccountingCode" : "name_1476934998566"
              }
            }
          },
          "404" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyNoDataResponse"
            },
            "examples" : {
              "application/json" : {
                "records" : { },
                "size" : 0,
                "done" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/rate-plan-charge/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/rate-plan-charge/{id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/rate-plan-charge/{id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/object/rate-plan-charge/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/rate-plan-charge/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/rate-plan-charge/{id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Rate Plan Charges" ],
        "summary" : "CRUD: Delete RatePlanCharge",
        "description" : "",
        "operationId" : "ProxyDELETERatePlanCharge",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyDeleteResponse"
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/rate-plan-charge/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/rate-plan-charge/{id}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/rate-plan-charge/{id}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/object/rate-plan-charge/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/rate-plan-charge/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/rate-plan-charge/{id}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/rate-plan/{id}" : {
      "get" : {
        "tags" : [ "Rate Plans" ],
        "summary" : "CRUD: Retrieve RatePlan",
        "description" : "",
        "operationId" : "ProxyGETRatePlan",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Object fields to return",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyGetRatePlan"
            },
            "examples" : {
              "application/json" : {
                "UpdatedById" : "2c93808457d787030157e02ea77723ef",
                "UpdatedDate" : "2016-10-20T05:42:24.000+02:00",
                "Id" : "2c93808457d787030157e02ec54f259e",
                "CreatedById" : "2c93808457d787030157e02ea77723ef",
                "CreatedDate" : "2016-10-20T05:42:24.000+02:00",
                "Name" : "ProductRatePlan1476934943281",
                "AmendmentId" : "2c93808457d787030157e02ec4b42599"
              }
            }
          },
          "404" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyNoDataResponse"
            },
            "examples" : {
              "application/json" : {
                "records" : { },
                "size" : 0,
                "done" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/rate-plan/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/rate-plan/{id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/rate-plan/{id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/object/rate-plan/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/rate-plan/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/rate-plan/{id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Rate Plans" ],
        "summary" : "CRUD: Delete RatePlan",
        "description" : "",
        "operationId" : "ProxyDELETERatePlan",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyDeleteResponse"
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/rate-plan/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/rate-plan/{id}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/rate-plan/{id}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/object/rate-plan/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/rate-plan/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/rate-plan/{id}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/refund" : {
      "post" : {
        "tags" : [ "Refunds" ],
        "summary" : "CRUD: Create Refund",
        "description" : "",
        "operationId" : "ProxyPOSTRefund",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "CreateRequest",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProxyCreateRefund"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyCreateOrModifyResponse"
            },
            "examples" : {
              "application/json" : {
                "Success" : true,
                "Id" : "2c93808457d787030157e03198c84918"
              }
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyBadRequestResponse"
            },
            "examples" : {
              "application/json" : {
                "Errors" : [ {
                  "Code" : "INVALID_VALUE",
                  "Message" : "The account number 123xProxy is invalid."
                } ],
                "Success" : false
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"AccountId\": \"2c93808457d787030157e03190e748ea\", \n    \"Amount\": 1.1, \n    \"Comment\": \"this is comments\", \n    \"PaymentId\": \"2c93808457d787030157e03197714910\", \n    \"ReasonCode\": \"Standard Refund\", \n    \"RefundInvoicePaymentData\": {\n        \"RefundInvoicePayment\": [\n            {\n                \"InvoiceId\": \"2c93808457d787030157e03195604902\", \n                \"RefundAmount\": 1.1\n            }\n        ]\n    }, \n    \"SoftDescriptor\": \"thisSD\", \n    \"SoftDescriptorPhone\": \"a@a.com\", \n    \"SourceType\": \"Payment\", \n    \"Type\": \"Electronic\"\n}' \"https://rest.zuora.com/v1/object/refund\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/refund');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"AccountId\": \"2c93808457d787030157e03190e748ea\", \n    \"Amount\": 1.1, \n    \"Comment\": \"this is comments\", \n    \"PaymentId\": \"2c93808457d787030157e03197714910\", \n    \"ReasonCode\": \"Standard Refund\", \n    \"RefundInvoicePaymentData\": {\n        \"RefundInvoicePayment\": [\n            {\n                \"InvoiceId\": \"2c93808457d787030157e03195604902\", \n                \"RefundAmount\": 1.1\n            }\n        ]\n    }, \n    \"SoftDescriptor\": \"thisSD\", \n    \"SoftDescriptorPhone\": \"a@a.com\", \n    \"SourceType\": \"Payment\", \n    \"Type\": \"Electronic\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"AccountId\\\": \\\"2c93808457d787030157e03190e748ea\\\", \\n    \\\"Amount\\\": 1.1, \\n    \\\"Comment\\\": \\\"this is comments\\\", \\n    \\\"PaymentId\\\": \\\"2c93808457d787030157e03197714910\\\", \\n    \\\"ReasonCode\\\": \\\"Standard Refund\\\", \\n    \\\"RefundInvoicePaymentData\\\": {\\n        \\\"RefundInvoicePayment\\\": [\\n            {\\n                \\\"InvoiceId\\\": \\\"2c93808457d787030157e03195604902\\\", \\n                \\\"RefundAmount\\\": 1.1\\n            }\\n        ]\\n    }, \\n    \\\"SoftDescriptor\\\": \\\"thisSD\\\", \\n    \\\"SoftDescriptorPhone\\\": \\\"a@a.com\\\", \\n    \\\"SourceType\\\": \\\"Payment\\\", \\n    \\\"Type\\\": \\\"Electronic\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/refund\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"AccountId\\\": \\\"2c93808457d787030157e03190e748ea\\\", \\n    \\\"Amount\\\": 1.1, \\n    \\\"Comment\\\": \\\"this is comments\\\", \\n    \\\"PaymentId\\\": \\\"2c93808457d787030157e03197714910\\\", \\n    \\\"ReasonCode\\\": \\\"Standard Refund\\\", \\n    \\\"RefundInvoicePaymentData\\\": {\\n        \\\"RefundInvoicePayment\\\": [\\n            {\\n                \\\"InvoiceId\\\": \\\"2c93808457d787030157e03195604902\\\", \\n                \\\"RefundAmount\\\": 1.1\\n            }\\n        ]\\n    }, \\n    \\\"SoftDescriptor\\\": \\\"thisSD\\\", \\n    \\\"SoftDescriptorPhone\\\": \\\"a@a.com\\\", \\n    \\\"SourceType\\\": \\\"Payment\\\", \\n    \\\"Type\\\": \\\"Electronic\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/object/refund\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/refund\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"AccountId\\\": \\\"2c93808457d787030157e03190e748ea\\\", \\n    \\\"Amount\\\": 1.1, \\n    \\\"Comment\\\": \\\"this is comments\\\", \\n    \\\"PaymentId\\\": \\\"2c93808457d787030157e03197714910\\\", \\n    \\\"ReasonCode\\\": \\\"Standard Refund\\\", \\n    \\\"RefundInvoicePaymentData\\\": {\\n        \\\"RefundInvoicePayment\\\": [\\n            {\\n                \\\"InvoiceId\\\": \\\"2c93808457d787030157e03195604902\\\", \\n                \\\"RefundAmount\\\": 1.1\\n            }\\n        ]\\n    }, \\n    \\\"SoftDescriptor\\\": \\\"thisSD\\\", \\n    \\\"SoftDescriptorPhone\\\": \\\"a@a.com\\\", \\n    \\\"SourceType\\\": \\\"Payment\\\", \\n    \\\"Type\\\": \\\"Electronic\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/refund\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"AccountId\\\": \\\"2c93808457d787030157e03190e748ea\\\", \\n    \\\"Amount\\\": 1.1, \\n    \\\"Comment\\\": \\\"this is comments\\\", \\n    \\\"PaymentId\\\": \\\"2c93808457d787030157e03197714910\\\", \\n    \\\"ReasonCode\\\": \\\"Standard Refund\\\", \\n    \\\"RefundInvoicePaymentData\\\": {\\n        \\\"RefundInvoicePayment\\\": [\\n            {\\n                \\\"InvoiceId\\\": \\\"2c93808457d787030157e03195604902\\\", \\n                \\\"RefundAmount\\\": 1.1\\n            }\\n        ]\\n    }, \\n    \\\"SoftDescriptor\\\": \\\"thisSD\\\", \\n    \\\"SoftDescriptorPhone\\\": \\\"a@a.com\\\", \\n    \\\"SourceType\\\": \\\"Payment\\\", \\n    \\\"Type\\\": \\\"Electronic\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/refund-invoice-payment/{id}" : {
      "get" : {
        "tags" : [ "Refund Invoice Payments" ],
        "summary" : "CRUD: Retrieve RefundInvoicePayment",
        "description" : "",
        "operationId" : "ProxyGETRefundInvoicePayment",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Object fields to return",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyGetRefundInvoicePayment"
            }
          },
          "404" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyNoDataResponse"
            },
            "examples" : {
              "application/json" : {
                "records" : { },
                "size" : 0,
                "done" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/refund-invoice-payment/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/refund-invoice-payment/{id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/refund-invoice-payment/{id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/object/refund-invoice-payment/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/refund-invoice-payment/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/refund-invoice-payment/{id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Refund Invoice Payments" ],
        "summary" : "CRUD: Delete RefundInvoicePayment",
        "description" : "",
        "operationId" : "ProxyDELETERefundInvoicePayment",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyDeleteResponse"
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/refund-invoice-payment/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/refund-invoice-payment/{id}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/refund-invoice-payment/{id}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/object/refund-invoice-payment/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/refund-invoice-payment/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/refund-invoice-payment/{id}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/refund-transaction-log/{id}" : {
      "get" : {
        "tags" : [ "Refund Transaction Logs" ],
        "summary" : "CRUD: Retrieve RefundTransactionLog",
        "description" : "",
        "operationId" : "ProxyGETRefundTransactionLog",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Object fields to return",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyGetRefundTransactionLog"
            },
            "examples" : {
              "application/json" : {
                "GatewayReasonCodeDescription" : "This transaction has been approved by Test gateway.",
                "Id" : "2c93808457d787030157e0304c0538f2",
                "TransactionId" : "9036150.175338026",
                "GatewayState" : "Submitted",
                "GatewayReasonCode" : "approve",
                "TransactionDate" : "2016-10-20T05:44:04.000+02:00",
                "Gateway" : "TEST gateway name1476935035677",
                "RefundId" : "2c93808457d787030157e0304bf638f0",
                "GatewayTransactionType" : "Refund"
              }
            }
          },
          "404" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyNoDataResponse"
            },
            "examples" : {
              "application/json" : {
                "records" : { },
                "size" : 0,
                "done" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/refund-transaction-log/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/refund-transaction-log/{id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/refund-transaction-log/{id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/object/refund-transaction-log/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/refund-transaction-log/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/refund-transaction-log/{id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Refund Transaction Logs" ],
        "summary" : "CRUD: Delete RefundTransactionLog",
        "description" : "",
        "operationId" : "ProxyDELETERefundTransactionLog",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyDeleteResponse"
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/refund-transaction-log/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/refund-transaction-log/{id}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/refund-transaction-log/{id}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/object/refund-transaction-log/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/refund-transaction-log/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/refund-transaction-log/{id}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/refund/{id}" : {
      "get" : {
        "tags" : [ "Refunds" ],
        "summary" : "CRUD: Retrieve Refund",
        "description" : "",
        "operationId" : "ProxyGETRefund",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Object fields to return",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyGetRefund"
            },
            "examples" : {
              "application/json" : null
            }
          },
          "404" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyNoDataResponse"
            },
            "examples" : {
              "application/json" : {
                "records" : { },
                "size" : 0,
                "done" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/refund/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/refund/{id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/refund/{id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/object/refund/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/refund/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/refund/{id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "put" : {
        "tags" : [ "Refunds" ],
        "summary" : "CRUD: Update Refund",
        "description" : "",
        "operationId" : "ProxyPUTRefund",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "ModifyRequest",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProxyModifyRefund"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyCreateOrModifyResponse"
            },
            "examples" : {
              "application/json" : {
                "Success" : true,
                "Id" : "2c93808457d787030157e03198c84918"
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X PUT -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"Id\": \"2c93808457d787030157e03198c84918\", \n    \"Status\": \"Canceled\"\n}' \"https://rest.zuora.com/v1/object/refund/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/refund/{id}');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"Id\": \"2c93808457d787030157e03198c84918\", \n    \"Status\": \"Canceled\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"Id\\\": \\\"2c93808457d787030157e03198c84918\\\", \\n    \\\"Status\\\": \\\"Canceled\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/refund/{id}\")\n  .put(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"Id\\\": \\\"2c93808457d787030157e03198c84918\\\", \\n    \\\"Status\\\": \\\"Canceled\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"PUT\", \"/object/refund/{id}\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/refund/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"Id\\\": \\\"2c93808457d787030157e03198c84918\\\", \\n    \\\"Status\\\": \\\"Canceled\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/refund/{id}\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"Id\\\": \\\"2c93808457d787030157e03198c84918\\\", \\n    \\\"Status\\\": \\\"Canceled\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Refunds" ],
        "summary" : "CRUD: Delete Refund",
        "description" : "",
        "operationId" : "ProxyDELETERefund",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyDeleteResponse"
            },
            "examples" : {
              "application/json" : {
                "success" : true,
                "id" : "2c93808457d787030157e03198c84918"
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/refund/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/refund/{id}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/refund/{id}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/object/refund/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/refund/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/refund/{id}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/subscription-product-feature/{id}" : {
      "get" : {
        "tags" : [ "Subscription Product Features" ],
        "summary" : "CRUD: Retrieve SubscriptionProductFeature",
        "description" : "",
        "operationId" : "ProxyGETSubscriptionProductFeature",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Object fields to return",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyGetSubscriptionProductFeature"
            },
            "examples" : {
              "application/json" : {
                "RatePlanId" : "2c93808457d787030157e0316ae64769",
                "Id" : "2c93808457d787030157e0316ae7476a",
                "CreatedById" : "2c93808457d787030157e03151e845e3",
                "CreatedDate" : "2016-10-20T05:45:17.000+02:00",
                "Name" : "name_1476935116658",
                "FeatureCode" : "feature_code_1476935116658",
                "FeatureId" : "2c93808457d787030157e03167fe4758",
                "UpdatedDate" : "2016-10-20T05:45:18.000+02:00",
                "UpdatedById" : "2c93808457d787030157e03151e845e3",
                "Description" : "update description"
              }
            }
          },
          "404" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyNoDataResponse"
            },
            "examples" : {
              "application/json" : {
                "records" : { },
                "size" : 0,
                "done" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/subscription-product-feature/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/subscription-product-feature/{id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/subscription-product-feature/{id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/object/subscription-product-feature/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/subscription-product-feature/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/subscription-product-feature/{id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Subscription Product Features" ],
        "summary" : "CRUD: Delete SubscriptionProductFeature",
        "description" : "",
        "operationId" : "ProxyDELETESubscriptionProductFeature",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyDeleteResponse"
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/subscription-product-feature/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/subscription-product-feature/{id}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/subscription-product-feature/{id}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/object/subscription-product-feature/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/subscription-product-feature/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/subscription-product-feature/{id}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/subscription/{id}" : {
      "get" : {
        "tags" : [ "Subscriptions" ],
        "summary" : "CRUD: Retrieve Subscription",
        "description" : "",
        "operationId" : "ProxyGETSubscription",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Object fields to return",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyGetSubscription"
            },
            "examples" : {
              "application/json" : null
            }
          },
          "404" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyNoDataResponse"
            },
            "examples" : {
              "application/json" : {
                "records" : { },
                "size" : 0,
                "done" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/subscription/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/subscription/{id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/subscription/{id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/object/subscription/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/subscription/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/subscription/{id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "put" : {
        "tags" : [ "Subscriptions" ],
        "summary" : "CRUD: Update Subscription",
        "description" : "",
        "operationId" : "ProxyPUTSubscription",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "ModifyRequest",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProxyModifySubscription"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyCreateOrModifyResponse"
            },
            "examples" : {
              "application/json" : {
                "Success" : true,
                "Id" : "2c93808457d787030157e02ea04123cf"
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X PUT -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"Id\": \"2c93808457d787030157e02ea04123cf\", \n    \"Name\": \"S_1476934934547_name\", \n    \"Notes\": \"this is notes_new\"\n}' \"https://rest.zuora.com/v1/object/subscription/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/subscription/{id}');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"Id\": \"2c93808457d787030157e02ea04123cf\", \n    \"Name\": \"S_1476934934547_name\", \n    \"Notes\": \"this is notes_new\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"Id\\\": \\\"2c93808457d787030157e02ea04123cf\\\", \\n    \\\"Name\\\": \\\"S_1476934934547_name\\\", \\n    \\\"Notes\\\": \\\"this is notes_new\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/subscription/{id}\")\n  .put(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"Id\\\": \\\"2c93808457d787030157e02ea04123cf\\\", \\n    \\\"Name\\\": \\\"S_1476934934547_name\\\", \\n    \\\"Notes\\\": \\\"this is notes_new\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"PUT\", \"/object/subscription/{id}\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/subscription/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"Id\\\": \\\"2c93808457d787030157e02ea04123cf\\\", \\n    \\\"Name\\\": \\\"S_1476934934547_name\\\", \\n    \\\"Notes\\\": \\\"this is notes_new\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/subscription/{id}\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"Id\\\": \\\"2c93808457d787030157e02ea04123cf\\\", \\n    \\\"Name\\\": \\\"S_1476934934547_name\\\", \\n    \\\"Notes\\\": \\\"this is notes_new\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Subscriptions" ],
        "summary" : "CRUD: Delete Subscription",
        "description" : "",
        "operationId" : "ProxyDELETESubscription",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyDeleteResponse"
            },
            "examples" : {
              "application/json" : {
                "success" : true,
                "id" : "2c93808457d787030157e02ea04123cf"
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/subscription/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/subscription/{id}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/subscription/{id}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/object/subscription/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/subscription/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/subscription/{id}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/taxation-item" : {
      "post" : {
        "tags" : [ "Taxation Items" ],
        "summary" : "CRUD: Create TaxationItem",
        "description" : "",
        "operationId" : "ProxyPOSTTaxationItem",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "CreateRequest",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProxyCreateTaxationItem"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyCreateOrModifyResponse"
            },
            "examples" : {
              "application/json" : {
                "Success" : true,
                "Id" : "2c93808457d787030157e0306f413a96"
              }
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyBadRequestResponse"
            },
            "examples" : {
              "application/json" : {
                "Errors" : [ {
                  "Code" : "INVALID_VALUE",
                  "Message" : "The account number 123xProxy is invalid."
                } ],
                "Success" : false
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"AccountingCode\": \"Usage Revenue\", \n    \"ExemptAmount\": 50, \n    \"InvoiceItemId\": \"2c93808457d787030157e0306cd43a88\", \n    \"Jurisdiction\": \"test\", \n    \"LocationCode\": \"code - 001\", \n    \"Name\": \"test\", \n    \"TaxAmount\": 3, \n    \"TaxCode\": \"taxcode\", \n    \"TaxCodeDescription\": \"description\", \n    \"TaxDate\": \"2016-10-20\", \n    \"TaxMode\": \"TaxExclusive\", \n    \"TaxRate\": 3, \n    \"TaxRateDescription\": \"test\", \n    \"TaxRateType\": \"FlatFee\"\n}' \"https://rest.zuora.com/v1/object/taxation-item\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/taxation-item');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"AccountingCode\": \"Usage Revenue\", \n    \"ExemptAmount\": 50, \n    \"InvoiceItemId\": \"2c93808457d787030157e0306cd43a88\", \n    \"Jurisdiction\": \"test\", \n    \"LocationCode\": \"code - 001\", \n    \"Name\": \"test\", \n    \"TaxAmount\": 3, \n    \"TaxCode\": \"taxcode\", \n    \"TaxCodeDescription\": \"description\", \n    \"TaxDate\": \"2016-10-20\", \n    \"TaxMode\": \"TaxExclusive\", \n    \"TaxRate\": 3, \n    \"TaxRateDescription\": \"test\", \n    \"TaxRateType\": \"FlatFee\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"AccountingCode\\\": \\\"Usage Revenue\\\", \\n    \\\"ExemptAmount\\\": 50, \\n    \\\"InvoiceItemId\\\": \\\"2c93808457d787030157e0306cd43a88\\\", \\n    \\\"Jurisdiction\\\": \\\"test\\\", \\n    \\\"LocationCode\\\": \\\"code - 001\\\", \\n    \\\"Name\\\": \\\"test\\\", \\n    \\\"TaxAmount\\\": 3, \\n    \\\"TaxCode\\\": \\\"taxcode\\\", \\n    \\\"TaxCodeDescription\\\": \\\"description\\\", \\n    \\\"TaxDate\\\": \\\"2016-10-20\\\", \\n    \\\"TaxMode\\\": \\\"TaxExclusive\\\", \\n    \\\"TaxRate\\\": 3, \\n    \\\"TaxRateDescription\\\": \\\"test\\\", \\n    \\\"TaxRateType\\\": \\\"FlatFee\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/taxation-item\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"AccountingCode\\\": \\\"Usage Revenue\\\", \\n    \\\"ExemptAmount\\\": 50, \\n    \\\"InvoiceItemId\\\": \\\"2c93808457d787030157e0306cd43a88\\\", \\n    \\\"Jurisdiction\\\": \\\"test\\\", \\n    \\\"LocationCode\\\": \\\"code - 001\\\", \\n    \\\"Name\\\": \\\"test\\\", \\n    \\\"TaxAmount\\\": 3, \\n    \\\"TaxCode\\\": \\\"taxcode\\\", \\n    \\\"TaxCodeDescription\\\": \\\"description\\\", \\n    \\\"TaxDate\\\": \\\"2016-10-20\\\", \\n    \\\"TaxMode\\\": \\\"TaxExclusive\\\", \\n    \\\"TaxRate\\\": 3, \\n    \\\"TaxRateDescription\\\": \\\"test\\\", \\n    \\\"TaxRateType\\\": \\\"FlatFee\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/object/taxation-item\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/taxation-item\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"AccountingCode\\\": \\\"Usage Revenue\\\", \\n    \\\"ExemptAmount\\\": 50, \\n    \\\"InvoiceItemId\\\": \\\"2c93808457d787030157e0306cd43a88\\\", \\n    \\\"Jurisdiction\\\": \\\"test\\\", \\n    \\\"LocationCode\\\": \\\"code - 001\\\", \\n    \\\"Name\\\": \\\"test\\\", \\n    \\\"TaxAmount\\\": 3, \\n    \\\"TaxCode\\\": \\\"taxcode\\\", \\n    \\\"TaxCodeDescription\\\": \\\"description\\\", \\n    \\\"TaxDate\\\": \\\"2016-10-20\\\", \\n    \\\"TaxMode\\\": \\\"TaxExclusive\\\", \\n    \\\"TaxRate\\\": 3, \\n    \\\"TaxRateDescription\\\": \\\"test\\\", \\n    \\\"TaxRateType\\\": \\\"FlatFee\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/taxation-item\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"AccountingCode\\\": \\\"Usage Revenue\\\", \\n    \\\"ExemptAmount\\\": 50, \\n    \\\"InvoiceItemId\\\": \\\"2c93808457d787030157e0306cd43a88\\\", \\n    \\\"Jurisdiction\\\": \\\"test\\\", \\n    \\\"LocationCode\\\": \\\"code - 001\\\", \\n    \\\"Name\\\": \\\"test\\\", \\n    \\\"TaxAmount\\\": 3, \\n    \\\"TaxCode\\\": \\\"taxcode\\\", \\n    \\\"TaxCodeDescription\\\": \\\"description\\\", \\n    \\\"TaxDate\\\": \\\"2016-10-20\\\", \\n    \\\"TaxMode\\\": \\\"TaxExclusive\\\", \\n    \\\"TaxRate\\\": 3, \\n    \\\"TaxRateDescription\\\": \\\"test\\\", \\n    \\\"TaxRateType\\\": \\\"FlatFee\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/taxation-item/{id}" : {
      "get" : {
        "tags" : [ "Taxation Items" ],
        "summary" : "CRUD: Retrieve TaxationItem",
        "description" : "",
        "operationId" : "ProxyGETTaxationItem",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Object fields to return",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyGetTaxationItem"
            },
            "examples" : {
              "application/json" : {
                "Jurisdiction" : "test",
                "InvoiceItemId" : "2c93808457d787030157e0306cd43a88",
                "Id" : "2c93808457d787030157e0306f413a96",
                "AccountingCode" : "Usage Revenue",
                "UpdatedDate" : "2016-10-20T05:44:13.000+02:00",
                "TaxCode" : "taxcode",
                "LocationCode" : "code - 001",
                "CreatedById" : "2c93808457d787030157e0304e2f38f8",
                "CreatedDate" : "2016-10-20T05:44:13.000+02:00",
                "Name" : "test",
                "TaxCodeDescription" : "description",
                "TaxRateDescription" : "test",
                "TaxAmount" : 3,
                "UpdatedById" : "2c93808457d787030157e0304e2f38f8",
                "ExemptAmount" : 50,
                "TaxRate" : 3,
                "TaxRateType" : "FlatFee",
                "TaxDate" : "2016-10-20"
              }
            }
          },
          "404" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyNoDataResponse"
            },
            "examples" : {
              "application/json" : {
                "records" : { },
                "size" : 0,
                "done" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/taxation-item/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/taxation-item/{id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/taxation-item/{id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/object/taxation-item/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/taxation-item/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/taxation-item/{id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "put" : {
        "tags" : [ "Taxation Items" ],
        "summary" : "CRUD: Update TaxationItem",
        "description" : "",
        "operationId" : "ProxyPUTTaxationItem",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "ModifyRequest",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProxyModifyTaxationItem"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyCreateOrModifyResponse"
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X PUT -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{}' \"https://rest.zuora.com/v1/object/taxation-item/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/taxation-item/{id}');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/taxation-item/{id}\")\n  .put(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"PUT\", \"/object/taxation-item/{id}\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/taxation-item/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/taxation-item/{id}\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Taxation Items" ],
        "summary" : "CRUD: Delete TaxationItem",
        "description" : "",
        "operationId" : "ProxyDELETETaxationItem",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyDeleteResponse"
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/taxation-item/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/taxation-item/{id}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/taxation-item/{id}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/object/taxation-item/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/taxation-item/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/taxation-item/{id}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/unit-of-measure" : {
      "post" : {
        "tags" : [ "Unit Of Measure" ],
        "summary" : "CRUD: Create UnitOfMeasure",
        "description" : "",
        "operationId" : "ProxyPOSTUnitOfMeasure",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "CreateRequest",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProxyCreateUnitOfMeasure"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyCreateOrModifyResponse"
            },
            "examples" : {
              "application/json" : {
                "Success" : true,
                "Id" : "2c93808457d787030157e030232f3748"
              }
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyBadRequestResponse"
            },
            "examples" : {
              "application/json" : {
                "Errors" : [ {
                  "Code" : "INVALID_VALUE",
                  "Message" : "The account number 123xProxy is invalid."
                } ],
                "Success" : false
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"Active\": true, \n    \"DecimalPlaces\": 9, \n    \"DisplayedAs\": \"name_display_name_1476935033519\", \n    \"RoundingMode\": \"UP\", \n    \"UomName\": \"name_1476935033519\"\n}' \"https://rest.zuora.com/v1/object/unit-of-measure\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/unit-of-measure');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"Active\": true, \n    \"DecimalPlaces\": 9, \n    \"DisplayedAs\": \"name_display_name_1476935033519\", \n    \"RoundingMode\": \"UP\", \n    \"UomName\": \"name_1476935033519\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"Active\\\": true, \\n    \\\"DecimalPlaces\\\": 9, \\n    \\\"DisplayedAs\\\": \\\"name_display_name_1476935033519\\\", \\n    \\\"RoundingMode\\\": \\\"UP\\\", \\n    \\\"UomName\\\": \\\"name_1476935033519\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/unit-of-measure\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"Active\\\": true, \\n    \\\"DecimalPlaces\\\": 9, \\n    \\\"DisplayedAs\\\": \\\"name_display_name_1476935033519\\\", \\n    \\\"RoundingMode\\\": \\\"UP\\\", \\n    \\\"UomName\\\": \\\"name_1476935033519\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/object/unit-of-measure\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/unit-of-measure\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"Active\\\": true, \\n    \\\"DecimalPlaces\\\": 9, \\n    \\\"DisplayedAs\\\": \\\"name_display_name_1476935033519\\\", \\n    \\\"RoundingMode\\\": \\\"UP\\\", \\n    \\\"UomName\\\": \\\"name_1476935033519\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/unit-of-measure\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"Active\\\": true, \\n    \\\"DecimalPlaces\\\": 9, \\n    \\\"DisplayedAs\\\": \\\"name_display_name_1476935033519\\\", \\n    \\\"RoundingMode\\\": \\\"UP\\\", \\n    \\\"UomName\\\": \\\"name_1476935033519\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/unit-of-measure/{id}" : {
      "get" : {
        "tags" : [ "Unit Of Measure" ],
        "summary" : "CRUD: Retrieve UnitOfMeasure",
        "description" : "",
        "operationId" : "ProxyGETUnitOfMeasure",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Object fields to return",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyGetUnitOfMeasure"
            },
            "examples" : {
              "application/json" : {
                "Active" : true,
                "Id" : "2c93808457d787030157e030232f3748",
                "CreatedById" : "2c93808457d787030157e0300f6735d3",
                "CreatedDate" : "2016-10-20T05:43:53.000+02:00",
                "UpdatedDate" : "2016-10-20T05:43:53.000+02:00",
                "DisplayedAs" : "name_display_name_1476935033519",
                "UomName" : "name_1476935033519",
                "RoundingMode" : "UP",
                "UpdatedById" : "2c93808457d787030157e0300f6735d3",
                "DecimalPlaces" : 9
              }
            }
          },
          "404" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyNoDataResponse"
            },
            "examples" : {
              "application/json" : {
                "records" : { },
                "size" : 0,
                "done" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/unit-of-measure/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/unit-of-measure/{id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/unit-of-measure/{id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/object/unit-of-measure/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/unit-of-measure/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/unit-of-measure/{id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "put" : {
        "tags" : [ "Unit Of Measure" ],
        "summary" : "CRUD: Update UnitOfMeasure",
        "description" : "",
        "operationId" : "ProxyPUTUnitOfMeasure",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "ModifyRequest",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProxyModifyUnitOfMeasure"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyCreateOrModifyResponse"
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X PUT -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{}' \"https://rest.zuora.com/v1/object/unit-of-measure/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/unit-of-measure/{id}');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/unit-of-measure/{id}\")\n  .put(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"PUT\", \"/object/unit-of-measure/{id}\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/unit-of-measure/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/unit-of-measure/{id}\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Unit Of Measure" ],
        "summary" : "CRUD: Delete UnitOfMeasure",
        "description" : "",
        "operationId" : "ProxyDELETEUnitOfMeasure",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyDeleteResponse"
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/unit-of-measure/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/unit-of-measure/{id}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/unit-of-measure/{id}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/object/unit-of-measure/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/unit-of-measure/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/unit-of-measure/{id}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/usage" : {
      "post" : {
        "tags" : [ "Usage" ],
        "summary" : "CRUD: Create Usage",
        "description" : "",
        "operationId" : "ProxyPOSTUsage",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "CreateRequest",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProxyCreateUsage"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyCreateOrModifyResponse"
            },
            "examples" : {
              "application/json" : {
                "Success" : true,
                "Id" : "2c93808457d787030157e02e0a301d0a"
              }
            }
          },
          "400" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyBadRequestResponse"
            },
            "examples" : {
              "application/json" : {
                "Errors" : [ {
                  "Code" : "INVALID_VALUE",
                  "Message" : "The account number 123xProxy is invalid."
                } ],
                "Success" : false
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"AccountId\": \"2c93808457d787030157e02e07991cfc\", \n    \"AccountNumber\": \"AN_1476934895501\", \n    \"ChargeId\": \"2c93808457d787030157e02e07cc1d04\", \n    \"ChargeNumber\": \"C-00000001\", \n    \"Description\": \"this is desc\", \n    \"EndDateTime\": \"2016-11-20T04:41:36.000+01:00\", \n    \"Quantity\": 9.9, \n    \"StartDateTime\": \"2016-10-20T05:41:36.000+02:00\", \n    \"SubscriptionId\": \"2c93808457d787030157e02e07b11cff\", \n    \"SubscriptionNumber\": \"S_1476934895501\", \n    \"UOM\": \"Each\"\n}' \"https://rest.zuora.com/v1/object/usage\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/usage');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"AccountId\": \"2c93808457d787030157e02e07991cfc\", \n    \"AccountNumber\": \"AN_1476934895501\", \n    \"ChargeId\": \"2c93808457d787030157e02e07cc1d04\", \n    \"ChargeNumber\": \"C-00000001\", \n    \"Description\": \"this is desc\", \n    \"EndDateTime\": \"2016-11-20T04:41:36.000+01:00\", \n    \"Quantity\": 9.9, \n    \"StartDateTime\": \"2016-10-20T05:41:36.000+02:00\", \n    \"SubscriptionId\": \"2c93808457d787030157e02e07b11cff\", \n    \"SubscriptionNumber\": \"S_1476934895501\", \n    \"UOM\": \"Each\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"AccountId\\\": \\\"2c93808457d787030157e02e07991cfc\\\", \\n    \\\"AccountNumber\\\": \\\"AN_1476934895501\\\", \\n    \\\"ChargeId\\\": \\\"2c93808457d787030157e02e07cc1d04\\\", \\n    \\\"ChargeNumber\\\": \\\"C-00000001\\\", \\n    \\\"Description\\\": \\\"this is desc\\\", \\n    \\\"EndDateTime\\\": \\\"2016-11-20T04:41:36.000+01:00\\\", \\n    \\\"Quantity\\\": 9.9, \\n    \\\"StartDateTime\\\": \\\"2016-10-20T05:41:36.000+02:00\\\", \\n    \\\"SubscriptionId\\\": \\\"2c93808457d787030157e02e07b11cff\\\", \\n    \\\"SubscriptionNumber\\\": \\\"S_1476934895501\\\", \\n    \\\"UOM\\\": \\\"Each\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/usage\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"AccountId\\\": \\\"2c93808457d787030157e02e07991cfc\\\", \\n    \\\"AccountNumber\\\": \\\"AN_1476934895501\\\", \\n    \\\"ChargeId\\\": \\\"2c93808457d787030157e02e07cc1d04\\\", \\n    \\\"ChargeNumber\\\": \\\"C-00000001\\\", \\n    \\\"Description\\\": \\\"this is desc\\\", \\n    \\\"EndDateTime\\\": \\\"2016-11-20T04:41:36.000+01:00\\\", \\n    \\\"Quantity\\\": 9.9, \\n    \\\"StartDateTime\\\": \\\"2016-10-20T05:41:36.000+02:00\\\", \\n    \\\"SubscriptionId\\\": \\\"2c93808457d787030157e02e07b11cff\\\", \\n    \\\"SubscriptionNumber\\\": \\\"S_1476934895501\\\", \\n    \\\"UOM\\\": \\\"Each\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/object/usage\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/usage\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"AccountId\\\": \\\"2c93808457d787030157e02e07991cfc\\\", \\n    \\\"AccountNumber\\\": \\\"AN_1476934895501\\\", \\n    \\\"ChargeId\\\": \\\"2c93808457d787030157e02e07cc1d04\\\", \\n    \\\"ChargeNumber\\\": \\\"C-00000001\\\", \\n    \\\"Description\\\": \\\"this is desc\\\", \\n    \\\"EndDateTime\\\": \\\"2016-11-20T04:41:36.000+01:00\\\", \\n    \\\"Quantity\\\": 9.9, \\n    \\\"StartDateTime\\\": \\\"2016-10-20T05:41:36.000+02:00\\\", \\n    \\\"SubscriptionId\\\": \\\"2c93808457d787030157e02e07b11cff\\\", \\n    \\\"SubscriptionNumber\\\": \\\"S_1476934895501\\\", \\n    \\\"UOM\\\": \\\"Each\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/usage\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"AccountId\\\": \\\"2c93808457d787030157e02e07991cfc\\\", \\n    \\\"AccountNumber\\\": \\\"AN_1476934895501\\\", \\n    \\\"ChargeId\\\": \\\"2c93808457d787030157e02e07cc1d04\\\", \\n    \\\"ChargeNumber\\\": \\\"C-00000001\\\", \\n    \\\"Description\\\": \\\"this is desc\\\", \\n    \\\"EndDateTime\\\": \\\"2016-11-20T04:41:36.000+01:00\\\", \\n    \\\"Quantity\\\": 9.9, \\n    \\\"StartDateTime\\\": \\\"2016-10-20T05:41:36.000+02:00\\\", \\n    \\\"SubscriptionId\\\": \\\"2c93808457d787030157e02e07b11cff\\\", \\n    \\\"SubscriptionNumber\\\": \\\"S_1476934895501\\\", \\n    \\\"UOM\\\": \\\"Each\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/object/usage/{id}" : {
      "get" : {
        "tags" : [ "Usage" ],
        "summary" : "CRUD: Retrieve Usage",
        "description" : "",
        "operationId" : "ProxyGETUsage",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "Object fields to return",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyGetUsage"
            },
            "examples" : {
              "application/json" : {
                "AccountNumber" : "AN_1476934895501",
                "UpdatedDate" : "2016-10-20T05:41:36.000+02:00",
                "UpdatedById" : "2c93808457d787030157e02df0221b7c",
                "Id" : "2c93808457d787030157e02e0a301d0a",
                "CreatedById" : "2c93808457d787030157e02df0221b7c",
                "SourceType" : "API",
                "SubmissionDateTime" : "2016-10-20T05:41:36.000+02:00",
                "CreatedDate" : "2016-10-20T05:41:36.000+02:00",
                "SubscriptionId" : "2c93808457d787030157e02e07b11cff",
                "UOM" : "Each",
                "RbeStatus" : "Pending",
                "ChargeId" : "2c93808457d787030157e02e07cc1d04",
                "AccountId" : "2c93808457d787030157e02e07991cfc",
                "Quantity" : 9.9,
                "StartDateTime" : "2016-10-20T05:41:36.000+02:00",
                "EndDateTime" : "2016-11-20T04:41:36.000+01:00"
              }
            }
          },
          "404" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyNoDataResponse"
            },
            "examples" : {
              "application/json" : {
                "records" : { },
                "size" : 0,
                "done" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/usage/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/usage/{id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/usage/{id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/object/usage/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/usage/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/usage/{id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "put" : {
        "tags" : [ "Usage" ],
        "summary" : "CRUD: Update Usage",
        "description" : "",
        "operationId" : "ProxyPUTUsage",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "ModifyRequest",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProxyModifyUsage"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyCreateOrModifyResponse"
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X PUT -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{}' \"https://rest.zuora.com/v1/object/usage/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/usage/{id}');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/usage/{id}\")\n  .put(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"PUT\", \"/object/usage/{id}\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/usage/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/usage/{id}\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Usage" ],
        "summary" : "CRUD: Delete Usage",
        "description" : "",
        "operationId" : "ProxyDELETEUsage",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "Object id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/ProxyDeleteResponse"
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/object/usage/{id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/object/usage/{id}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/object/usage/{id}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/object/usage/{id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/object/usage/{id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/object/usage/{id}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/operations/invoice-collect" : {
      "post" : {
        "tags" : [ "Operations" ],
        "summary" : "Invoice and collect",
        "description" : "Generates invoices and collects payments for a specified account.\n\nThis method can generate invoices and collect payments on the invoices\ngenerated, or else simply collect payment on a specified existing\ninvoice. The customer's default payment method is used, and the full\namount due is collected. The operation depends on the parameters you\nspecify\n\n- To generate one or more new invoices for that customer and collect\npayment on the generated invoice(s), leave the **invoiceId** field empty. \n\n- To collect payment on an existing invoice, specify the invoice ID. \n\n\nThe operation is atomic; if any part is unsuccessful, the entire\noperation is rolled back.\n\n\n## Notes\n\nTimeouts may occur when using this method on an account that\nhas an extremely high number of subscriptions.\n",
        "operationId" : "POST_TransactionInvoicePayment",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "description" : "Customer account ID or account number.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/POSTInvoiceCollectType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/POSTInvoiceCollectResponseType"
            },
            "examples" : {
              "application/json" : {
                "invoices" : [ {
                  "invoiceId" : "4028925a4cb74ec9014cb7540988002e",
                  "invoiceNumber" : "INV00000091",
                  "invoiceAmount" : 801.73
                } ],
                "paymentId" : "402892053e100406013e1024ab7c00e3",
                "amountCollected" : 801.73,
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"accountKey\": \"4028925a4cb74ec9014cb7520fc00005\", \n    \"invoiceId\": \"4028925a4cb74ec9014cb7540988002e\", \n    \"paymentGateway\": \"TestGateway\"\n}' \"https://rest.zuora.com/v1/operations/invoice-collect\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/operations/invoice-collect');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"accountKey\": \"4028925a4cb74ec9014cb7520fc00005\", \n    \"invoiceId\": \"4028925a4cb74ec9014cb7540988002e\", \n    \"paymentGateway\": \"TestGateway\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"accountKey\\\": \\\"4028925a4cb74ec9014cb7520fc00005\\\", \\n    \\\"invoiceId\\\": \\\"4028925a4cb74ec9014cb7540988002e\\\", \\n    \\\"paymentGateway\\\": \\\"TestGateway\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/operations/invoice-collect\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"accountKey\\\": \\\"4028925a4cb74ec9014cb7520fc00005\\\", \\n    \\\"invoiceId\\\": \\\"4028925a4cb74ec9014cb7540988002e\\\", \\n    \\\"paymentGateway\\\": \\\"TestGateway\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/operations/invoice-collect\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/operations/invoice-collect\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"accountKey\\\": \\\"4028925a4cb74ec9014cb7520fc00005\\\", \\n    \\\"invoiceId\\\": \\\"4028925a4cb74ec9014cb7540988002e\\\", \\n    \\\"paymentGateway\\\": \\\"TestGateway\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/operations/invoice-collect\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"accountKey\\\": \\\"4028925a4cb74ec9014cb7520fc00005\\\", \\n    \\\"invoiceId\\\": \\\"4028925a4cb74ec9014cb7540988002e\\\", \\n    \\\"paymentGateway\\\": \\\"TestGateway\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/payment-methods/credit-cards" : {
      "post" : {
        "tags" : [ "Payment Methods" ],
        "summary" : "Create payment method",
        "description" : "This REST API reference describes how to create a new credit card\npayment method for a customer account.\n\n## Notes\n\nThis API call is CORS Enabled. Use client-side JavaScript to invoke the call. \n",
        "operationId" : "POSTPaymentMethod",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/POSTPaymentMethodType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/POSTPaymentMethodResponseType"
            },
            "examples" : {
              "application/json" : {
                "paymentMethodId" : "2c92c8f83dcbd8b1013dcce1d6a60",
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"accountKey\": \"A00001115\", \n    \"cardHolderInfo\": {\n        \"addressLine1\": \"77 Fallon Glen\", \n        \"addressLine2\": \"\", \n        \"cardHolderName\": \"Bill Thiebault\", \n        \"city\": \"Fremont\", \n        \"country\": \"USA\", \n        \"email\": \"bill@testaddress.com\", \n        \"phone\": \"4155551234\", \n        \"state\": \"California\", \n        \"zipCode\": \"94020\"\n    }, \n    \"creditCardNumber\": \"1111222233334444\", \n    \"creditCardType\": \"Discover\", \n    \"defaultPaymentMethod\": false, \n    \"expirationMonth\": \"10\", \n    \"expirationYear\": \"2015\", \n    \"securityCode\": \"123\"\n}' \"https://rest.zuora.com/v1/payment-methods/credit-cards\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/payment-methods/credit-cards');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"accountKey\": \"A00001115\", \n    \"cardHolderInfo\": {\n        \"addressLine1\": \"77 Fallon Glen\", \n        \"addressLine2\": \"\", \n        \"cardHolderName\": \"Bill Thiebault\", \n        \"city\": \"Fremont\", \n        \"country\": \"USA\", \n        \"email\": \"bill@testaddress.com\", \n        \"phone\": \"4155551234\", \n        \"state\": \"California\", \n        \"zipCode\": \"94020\"\n    }, \n    \"creditCardNumber\": \"1111222233334444\", \n    \"creditCardType\": \"Discover\", \n    \"defaultPaymentMethod\": false, \n    \"expirationMonth\": \"10\", \n    \"expirationYear\": \"2015\", \n    \"securityCode\": \"123\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"accountKey\\\": \\\"A00001115\\\", \\n    \\\"cardHolderInfo\\\": {\\n        \\\"addressLine1\\\": \\\"77 Fallon Glen\\\", \\n        \\\"addressLine2\\\": \\\"\\\", \\n        \\\"cardHolderName\\\": \\\"Bill Thiebault\\\", \\n        \\\"city\\\": \\\"Fremont\\\", \\n        \\\"country\\\": \\\"USA\\\", \\n        \\\"email\\\": \\\"bill@testaddress.com\\\", \\n        \\\"phone\\\": \\\"4155551234\\\", \\n        \\\"state\\\": \\\"California\\\", \\n        \\\"zipCode\\\": \\\"94020\\\"\\n    }, \\n    \\\"creditCardNumber\\\": \\\"1111222233334444\\\", \\n    \\\"creditCardType\\\": \\\"Discover\\\", \\n    \\\"defaultPaymentMethod\\\": false, \\n    \\\"expirationMonth\\\": \\\"10\\\", \\n    \\\"expirationYear\\\": \\\"2015\\\", \\n    \\\"securityCode\\\": \\\"123\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/payment-methods/credit-cards\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"accountKey\\\": \\\"A00001115\\\", \\n    \\\"cardHolderInfo\\\": {\\n        \\\"addressLine1\\\": \\\"77 Fallon Glen\\\", \\n        \\\"addressLine2\\\": \\\"\\\", \\n        \\\"cardHolderName\\\": \\\"Bill Thiebault\\\", \\n        \\\"city\\\": \\\"Fremont\\\", \\n        \\\"country\\\": \\\"USA\\\", \\n        \\\"email\\\": \\\"bill@testaddress.com\\\", \\n        \\\"phone\\\": \\\"4155551234\\\", \\n        \\\"state\\\": \\\"California\\\", \\n        \\\"zipCode\\\": \\\"94020\\\"\\n    }, \\n    \\\"creditCardNumber\\\": \\\"1111222233334444\\\", \\n    \\\"creditCardType\\\": \\\"Discover\\\", \\n    \\\"defaultPaymentMethod\\\": false, \\n    \\\"expirationMonth\\\": \\\"10\\\", \\n    \\\"expirationYear\\\": \\\"2015\\\", \\n    \\\"securityCode\\\": \\\"123\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/payment-methods/credit-cards\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/payment-methods/credit-cards\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"accountKey\\\": \\\"A00001115\\\", \\n    \\\"cardHolderInfo\\\": {\\n        \\\"addressLine1\\\": \\\"77 Fallon Glen\\\", \\n        \\\"addressLine2\\\": \\\"\\\", \\n        \\\"cardHolderName\\\": \\\"Bill Thiebault\\\", \\n        \\\"city\\\": \\\"Fremont\\\", \\n        \\\"country\\\": \\\"USA\\\", \\n        \\\"email\\\": \\\"bill@testaddress.com\\\", \\n        \\\"phone\\\": \\\"4155551234\\\", \\n        \\\"state\\\": \\\"California\\\", \\n        \\\"zipCode\\\": \\\"94020\\\"\\n    }, \\n    \\\"creditCardNumber\\\": \\\"1111222233334444\\\", \\n    \\\"creditCardType\\\": \\\"Discover\\\", \\n    \\\"defaultPaymentMethod\\\": false, \\n    \\\"expirationMonth\\\": \\\"10\\\", \\n    \\\"expirationYear\\\": \\\"2015\\\", \\n    \\\"securityCode\\\": \\\"123\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/payment-methods/credit-cards\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"accountKey\\\": \\\"A00001115\\\", \\n    \\\"cardHolderInfo\\\": {\\n        \\\"addressLine1\\\": \\\"77 Fallon Glen\\\", \\n        \\\"addressLine2\\\": \\\"\\\", \\n        \\\"cardHolderName\\\": \\\"Bill Thiebault\\\", \\n        \\\"city\\\": \\\"Fremont\\\", \\n        \\\"country\\\": \\\"USA\\\", \\n        \\\"email\\\": \\\"bill@testaddress.com\\\", \\n        \\\"phone\\\": \\\"4155551234\\\", \\n        \\\"state\\\": \\\"California\\\", \\n        \\\"zipCode\\\": \\\"94020\\\"\\n    }, \\n    \\\"creditCardNumber\\\": \\\"1111222233334444\\\", \\n    \\\"creditCardType\\\": \\\"Discover\\\", \\n    \\\"defaultPaymentMethod\\\": false, \\n    \\\"expirationMonth\\\": \\\"10\\\", \\n    \\\"expirationYear\\\": \\\"2015\\\", \\n    \\\"securityCode\\\": \\\"123\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/payment-methods/credit-cards/accounts/{account-key}" : {
      "get" : {
        "tags" : [ "Payment Methods" ],
        "summary" : "Get payment methods",
        "description" : "This REST API reference describes how to retrieve all credit card\ninformation for the specified customer account. \n\n## Notes\nThe response includes details credit or debit cards for the specified customer account. Card numbers are masked, e.g., \"************1234\". Cards are returned in reverse chronological order of last update.\n\nYou can send requests for bank transfer payment methods types. The response will not include bank transfer details.\n\nThe response only includes payment details on payment methods that are credit or debit cards.\n",
        "operationId" : "GET_PaymentMethods",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "account-key",
          "in" : "path",
          "description" : "Account number or account ID.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GETPaymentMethodsType"
            },
            "examples" : {
              "application/json" : {
                "nextPage" : "https://api.zuora.com/rest/v1/payment-methods/credit-cards/accounts/A00001115?page=2&pageSize=2",
                "creditCards" : [ {
                  "cardHolderInfo" : {
                    "zipCode" : null,
                    "addressLine2" : null,
                    "addressLine1" : null,
                    "phone" : "4082021111",
                    "state" : null,
                    "country" : null,
                    "city" : null,
                    "cardHolderName" : "Leo",
                    "email" : "test@zuora.com"
                  },
                  "defaultPaymentMethod" : true,
                  "id" : "2c92c8f83dabf9cf013daef12dd303b0",
                  "expirationMonth" : 10,
                  "cardNumber" : "************1111",
                  "expirationYear" : 2020,
                  "cardType" : "Visa"
                }, {
                  "cardHolderInfo" : {
                    "zipCode" : "95135",
                    "addressLine2" : null,
                    "addressLine1" : "1400 Bridge Pkwy",
                    "phone" : null,
                    "state" : "California",
                    "country" : "United States",
                    "city" : "San Jose",
                    "cardHolderName" : "foo CC name",
                    "email" : null
                  },
                  "defaultPaymentMethod" : false,
                  "id" : "2c92a0f9391832b10139183e279e0044",
                  "expirationMonth" : 10,
                  "cardNumber" : "*****foo CC #",
                  "expirationYear" : 2012,
                  "cardType" : "Visa"
                } ],
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/payment-methods/credit-cards/accounts/{account-key}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/payment-methods/credit-cards/accounts/{account-key}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/payment-methods/credit-cards/accounts/{account-key}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/payment-methods/credit-cards/accounts/{account-key}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/payment-methods/credit-cards/accounts/{account-key}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/payment-methods/credit-cards/accounts/{account-key}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/payment-methods/credit-cards/{payment-method-id}" : {
      "put" : {
        "tags" : [ "Payment Methods" ],
        "summary" : "Update payment method",
        "description" : "Updates an existing credit card payment method for the specified\ncustomer account.\n",
        "operationId" : "PUT_PaymentMethods",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "payment-method-id",
          "in" : "path",
          "description" : "Unique ID of the payment method to update.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PUTPaymentMethodType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/PUTPaymentMethodResponseType"
            },
            "examples" : {
              "application/json" : {
                "paymentMethodId" : "2c92c8f83dcbd8b1013dcce1d6a600ce",
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X PUT -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"cardHolderName\": \"Leo\", \n    \"expirationMonth\": 8, \n    \"expirationYear\": 2015, \n    \"securityCode\": \"111\"\n}' \"https://rest.zuora.com/v1/payment-methods/credit-cards/{payment-method-id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/payment-methods/credit-cards/{payment-method-id}');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"cardHolderName\": \"Leo\", \n    \"expirationMonth\": 8, \n    \"expirationYear\": 2015, \n    \"securityCode\": \"111\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"cardHolderName\\\": \\\"Leo\\\", \\n    \\\"expirationMonth\\\": 8, \\n    \\\"expirationYear\\\": 2015, \\n    \\\"securityCode\\\": \\\"111\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/payment-methods/credit-cards/{payment-method-id}\")\n  .put(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"cardHolderName\\\": \\\"Leo\\\", \\n    \\\"expirationMonth\\\": 8, \\n    \\\"expirationYear\\\": 2015, \\n    \\\"securityCode\\\": \\\"111\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"PUT\", \"/payment-methods/credit-cards/{payment-method-id}\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/payment-methods/credit-cards/{payment-method-id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"cardHolderName\\\": \\\"Leo\\\", \\n    \\\"expirationMonth\\\": 8, \\n    \\\"expirationYear\\\": 2015, \\n    \\\"securityCode\\\": \\\"111\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/payment-methods/credit-cards/{payment-method-id}\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"cardHolderName\\\": \\\"Leo\\\", \\n    \\\"expirationMonth\\\": 8, \\n    \\\"expirationYear\\\": 2015, \\n    \\\"securityCode\\\": \\\"111\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/payment-methods/{payment-method-id}" : {
      "delete" : {
        "tags" : [ "Payment Methods" ],
        "summary" : "Delete payment method",
        "description" : "Deletes a credit card payment method from the specified customer\naccount.\n\nIf the specified payment method is the account's default payment\nmethod, the request will fail.  In that case, you must first designate a\ndifferent payment method for that customer to be the default.\n",
        "operationId" : "DELETE_PaymentMethods",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "payment-method-id",
          "in" : "path",
          "description" : "Unique identifier of a payment method. (Since this ID is unique, and linked to a customer account in the system, no customer identifier is needed.)",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CommonResponseType"
            },
            "examples" : {
              "application/json" : {
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/payment-methods/{payment-method-id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/payment-methods/{payment-method-id}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/payment-methods/{payment-method-id}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/payment-methods/{payment-method-id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/payment-methods/{payment-method-id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/payment-methods/{payment-method-id}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/quotes/document" : {
      "post" : {
        "tags" : [ "Quotes Document" ],
        "summary" : "Generate quotes document",
        "description" : "The `document` call generates a quote document and returns the generated document URL. You can directly access the generated quote file through the returned URL.\n\nThe `document` call should be only used from Zuora Quotes. \n\n## File Size Limitation \nThe maximum export file size is 2047MB. If you have large data requests that go over this limit, you will get the following 403 HTTP response code from Zuora:\n`security:max-object-size>2047MB</security:max-object-size>`\n\nSubmit a request at [Zuora Global Support](http://support.zuora.com/) if you require additional assistance.\n\nWe can work with you to determine if large file optimization is an option for you.\n",
        "operationId" : "POSTQuoteDoc",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/POSTQuoteDocType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/POSTQuoteDocResponseType"
            },
            "examples" : {
              "application/json" : {
                "success" : true,
                "file" : "https://api.zuora.com/rest/v1/file/2c92c09447f1ca410147f7bfed8c5a87"
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"apiuser\": \"superadmin@zuora.com\", \n    \"documentType\": \"pdf\", \n    \"locale\": \"en_US\", \n    \"quoteId\": \"a0Bi000000A71rp\", \n    \"serverUrl\": \"https://c.na10.visual.force.com/services/Soap/u/10.0/00DF00000008VnX\", \n    \"sessionId\": \"we764buuM03bkE0fmmc5zGMYp\", \n    \"templateId\": \"4028925648fdb7830148fdc1246c0003\", \n    \"useSFDCLocale\": \"1\", \n    \"zquotesMajorVersion\": \"7\", \n    \"zquotesMinorVersion\": \"0\"\n}' \"https://rest.zuora.com/v1/quotes/document\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/quotes/document');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"apiuser\": \"superadmin@zuora.com\", \n    \"documentType\": \"pdf\", \n    \"locale\": \"en_US\", \n    \"quoteId\": \"a0Bi000000A71rp\", \n    \"serverUrl\": \"https://c.na10.visual.force.com/services/Soap/u/10.0/00DF00000008VnX\", \n    \"sessionId\": \"we764buuM03bkE0fmmc5zGMYp\", \n    \"templateId\": \"4028925648fdb7830148fdc1246c0003\", \n    \"useSFDCLocale\": \"1\", \n    \"zquotesMajorVersion\": \"7\", \n    \"zquotesMinorVersion\": \"0\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"apiuser\\\": \\\"superadmin@zuora.com\\\", \\n    \\\"documentType\\\": \\\"pdf\\\", \\n    \\\"locale\\\": \\\"en_US\\\", \\n    \\\"quoteId\\\": \\\"a0Bi000000A71rp\\\", \\n    \\\"serverUrl\\\": \\\"https://c.na10.visual.force.com/services/Soap/u/10.0/00DF00000008VnX\\\", \\n    \\\"sessionId\\\": \\\"we764buuM03bkE0fmmc5zGMYp\\\", \\n    \\\"templateId\\\": \\\"4028925648fdb7830148fdc1246c0003\\\", \\n    \\\"useSFDCLocale\\\": \\\"1\\\", \\n    \\\"zquotesMajorVersion\\\": \\\"7\\\", \\n    \\\"zquotesMinorVersion\\\": \\\"0\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/quotes/document\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"apiuser\\\": \\\"superadmin@zuora.com\\\", \\n    \\\"documentType\\\": \\\"pdf\\\", \\n    \\\"locale\\\": \\\"en_US\\\", \\n    \\\"quoteId\\\": \\\"a0Bi000000A71rp\\\", \\n    \\\"serverUrl\\\": \\\"https://c.na10.visual.force.com/services/Soap/u/10.0/00DF00000008VnX\\\", \\n    \\\"sessionId\\\": \\\"we764buuM03bkE0fmmc5zGMYp\\\", \\n    \\\"templateId\\\": \\\"4028925648fdb7830148fdc1246c0003\\\", \\n    \\\"useSFDCLocale\\\": \\\"1\\\", \\n    \\\"zquotesMajorVersion\\\": \\\"7\\\", \\n    \\\"zquotesMinorVersion\\\": \\\"0\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/quotes/document\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/quotes/document\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"apiuser\\\": \\\"superadmin@zuora.com\\\", \\n    \\\"documentType\\\": \\\"pdf\\\", \\n    \\\"locale\\\": \\\"en_US\\\", \\n    \\\"quoteId\\\": \\\"a0Bi000000A71rp\\\", \\n    \\\"serverUrl\\\": \\\"https://c.na10.visual.force.com/services/Soap/u/10.0/00DF00000008VnX\\\", \\n    \\\"sessionId\\\": \\\"we764buuM03bkE0fmmc5zGMYp\\\", \\n    \\\"templateId\\\": \\\"4028925648fdb7830148fdc1246c0003\\\", \\n    \\\"useSFDCLocale\\\": \\\"1\\\", \\n    \\\"zquotesMajorVersion\\\": \\\"7\\\", \\n    \\\"zquotesMinorVersion\\\": \\\"0\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/quotes/document\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"apiuser\\\": \\\"superadmin@zuora.com\\\", \\n    \\\"documentType\\\": \\\"pdf\\\", \\n    \\\"locale\\\": \\\"en_US\\\", \\n    \\\"quoteId\\\": \\\"a0Bi000000A71rp\\\", \\n    \\\"serverUrl\\\": \\\"https://c.na10.visual.force.com/services/Soap/u/10.0/00DF00000008VnX\\\", \\n    \\\"sessionId\\\": \\\"we764buuM03bkE0fmmc5zGMYp\\\", \\n    \\\"templateId\\\": \\\"4028925648fdb7830148fdc1246c0003\\\", \\n    \\\"useSFDCLocale\\\": \\\"1\\\", \\n    \\\"zquotesMajorVersion\\\": \\\"7\\\", \\n    \\\"zquotesMinorVersion\\\": \\\"0\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/revenue-events/revenue-schedules/{rs-number}" : {
      "get" : {
        "tags" : [ "Revenue Events" ],
        "summary" : "Get revenue events for a revenue schedule",
        "description" : "\nThis REST API reference describes how to get all revenue events in a revenue schedule by specifying the revenue schedule number. Request and response field descriptions and sample code are provided.\n",
        "operationId" : "GETRevenueEventDetails",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "rs-number",
          "in" : "path",
          "description" : "Revenue schedule number. The revenue schedule number is always prefixed with \"RS\", for example, \"RS-00000001\".",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GETRevenueEventDetailsType"
            },
            "examples" : {
              "application/json" : {
                "revenueEventDetails" : [ {
                  "number" : "RE-00000001",
                  "currency" : "USD",
                  "notes" : "Phase 1 Test",
                  "accountId" : "2c92c0f8439770960143b2111f5a584e",
                  "subscriptionId" : "2c92c0f943977b4f0143b23487999327",
                  "subscriptionChargeId" : "2c92c0f943977b4f0143b22287ed432e",
                  "createdOn" : "2014-01-21 11:35:42",
                  "eventType" : "Revenue Distributed",
                  "recognitionStart" : null,
                  "recognitionEnd" : null,
                  "cf_phases__c" : "Phase 1",
                  "cf_project__c" : "project A",
                  "revenueItems" : [ {
                    "accountingPeriodName" : "Oct'2013",
                    "isAccountingPeriodClosed" : false,
                    "amount" : 10,
                    "currency" : "USD",
                    "accountingPeriodStartDate" : "2013-10-01",
                    "accountingPeriodEndDate" : "2013-10-31"
                  }, {
                    "accountingPeriodName" : "Open-Ended",
                    "isAccountingPeriodClosed" : false,
                    "amount" : -10,
                    "currency" : "USD",
                    "accountingPeriodStartDate" : "2013-11-12",
                    "accountingPeriodEndDate" : null
                  } ]
                }, {
                  "number" : "RE-00000002",
                  "currency" : "USD",
                  "notes" : null,
                  "accountId" : "2c92c0f8439770960143b2111f5a584e",
                  "subscriptionId" : "2c92c0f943977b4f0143b22287994327",
                  "subscriptionChargeId" : "2c92c0f943977b4f0143b99987ed432e",
                  "createdOn" : "2014-01-20 16:36:45",
                  "eventType" : "Invoice Posted",
                  "recognitionStart" : "2013-10-10",
                  "recognitionEnd" : "2013-10-10",
                  "cf_phases__c" : "Phase 1",
                  "cf_project__c" : "project A",
                  "revenueItems" : [ {
                    "accountingPeriodName" : "Oct'2013",
                    "isAccountingPeriodClosed" : false,
                    "amount" : 50,
                    "currency" : "USD",
                    "accountingPeriodStartDate" : "2013-10-01",
                    "accountingPeriodEndDate" : "2013-10-31"
                  } ]
                } ],
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/revenue-events/revenue-schedules/{rs-number}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/revenue-events/revenue-schedules/{rs-number}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/revenue-events/revenue-schedules/{rs-number}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/revenue-events/revenue-schedules/{rs-number}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/revenue-events/revenue-schedules/{rs-number}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/revenue-events/revenue-schedules/{rs-number}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/revenue-events/{event-number}" : {
      "get" : {
        "tags" : [ "Revenue Events" ],
        "summary" : "Get revenue event details",
        "description" : "\nThis REST API reference describes how to get revenue event details by specifying the revenue event number. Request and response field descriptions and sample code are provided.\n",
        "operationId" : "GET_RevenueEventDetails",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "event-number",
          "in" : "path",
          "description" : "The number associated with the revenue event.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GETRevenueEventDetailType"
            },
            "examples" : {
              "application/json" : {
                "number" : "RE-00000001",
                "currency" : "USD",
                "notes" : null,
                "accountId" : "2c92c0f8439770960143b2141f5a584e",
                "subscriptionId" : "2c92c0f943977b4f0143b23487994327",
                "subscriptionChargeId" : "2c92c0f943977b4f0143b23487ed432e",
                "createdOn" : "2014-01-20 16:36:45",
                "eventType" : "Invoice Posted",
                "recognitionStart" : "2013-10-10",
                "recognitionEnd" : "2013-10-10",
                "cf_phases__c" : "Scoping Phase",
                "cf_project__c" : "Security",
                "revenueItems" : [ {
                  "accountingPeriodName" : "Oct'2013",
                  "isAccountingPeriodClosed" : false,
                  "amount" : 50,
                  "currency" : "USD",
                  "accountingPeriodStartDate" : "2013-10-01",
                  "accountingPeriodEndDate" : "2013-10-31"
                } ],
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/revenue-events/{event-number}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/revenue-events/{event-number}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/revenue-events/{event-number}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/revenue-events/{event-number}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/revenue-events/{event-number}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/revenue-events/{event-number}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/revenue-items/charge-revenue-summaries/{crs-number}" : {
      "get" : {
        "tags" : [ "Revenue Items" ],
        "summary" : "Get revenue items by charge revenue summary number",
        "description" : "This REST API reference describes how to get the details for each revenue item in a charge revenue summary by specifying the charge revenue summary number. Request and response field descriptions and sample code are provided.\n",
        "operationId" : "GET_RevenueItemsByChargeRevenueSummaryNumber",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "crs-number",
          "in" : "path",
          "description" : "The charge revenue summary number.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GETRevenueItemsType"
            },
            "examples" : {
              "application/json" : {
                "revenueItems" : [ {
                  "accountingPeriodName" : "Sep'2013",
                  "isAccountingPeriodClosed" : false,
                  "amount" : 35,
                  "currency" : "USD",
                  "accountingPeriodStartDate" : "2013-09-01",
                  "accountingPeriodEndDate" : "2013-09-30"
                }, {
                  "accountingPeriodName" : "Oct'2013",
                  "isAccountingPeriodClosed" : false,
                  "amount" : 50,
                  "currency" : "USD",
                  "accountingPeriodStartDate" : "2013-10-01",
                  "accountingPeriodEndDate" : "2013-10-31"
                }, {
                  "accountingPeriodName" : "Open-Ended",
                  "isAccountingPeriodClosed" : false,
                  "amount" : 150,
                  "currency" : "USD",
                  "accountingPeriodStartDate" : "2013-12-11",
                  "accountingPeriodEndDate" : null
                } ],
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/revenue-items/charge-revenue-summaries/{crs-number}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/revenue-items/charge-revenue-summaries/{crs-number}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/revenue-items/charge-revenue-summaries/{crs-number}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/revenue-items/charge-revenue-summaries/{crs-number}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/revenue-items/charge-revenue-summaries/{crs-number}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/revenue-items/charge-revenue-summaries/{crs-number}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/revenue-items/revenue-events/{event-number}" : {
      "get" : {
        "tags" : [ "Revenue Items" ],
        "summary" : "Get revenue items by revenue event number",
        "description" : "This REST API reference describes how to get the details of each revenue item in a revenue event by specifying the revenue event number. Request and response field descriptions and sample code are provided.\n",
        "operationId" : "GET_RevenueItemsByChargeRevenueEventNumber",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "event-number",
          "in" : "path",
          "description" : "The number associated with the revenue event.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GETRevenueItemsType"
            },
            "examples" : {
              "application/json" : {
                "revenueItems" : [ {
                  "accountingPeriodName" : "Oct'2013",
                  "isAccountingPeriodClosed" : false,
                  "amount" : 50,
                  "currency" : "USD",
                  "accountingPeriodStartDate" : "2013-10-01",
                  "accountingPeriodEndDate" : "2013-10-31"
                } ],
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/revenue-items/revenue-events/{event-number}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/revenue-items/revenue-events/{event-number}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/revenue-items/revenue-events/{event-number}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/revenue-items/revenue-events/{event-number}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/revenue-items/revenue-events/{event-number}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/revenue-items/revenue-events/{event-number}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "put" : {
        "tags" : [ "Revenue Items" ],
        "summary" : "Update custom fields on revenue items by revenue event number",
        "description" : "This REST API reference describes how to update custom fields on revenue items by specifying the revenue event number. Request and response field descriptions and sample code are provided.\n",
        "operationId" : "PUT_CustomFieldsonRevenueItemsByRevenueEvent",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "event-number",
          "in" : "path",
          "description" : "The number associated with the revenue event.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PUTEventRIDetailType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CommonResponseType"
            },
            "examples" : {
              "application/json" : {
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X PUT -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"revenueItems\": [\n        {\n            \"accountingPeriodName\": \"Oct'2014\", \n            \"cf_phases__c\": \"Scoping Phase\", \n            \"cf_project__c\": \"Security\"\n        }, \n        {\n            \"accountingPeriodName\": \"Nov'2014\", \n            \"cf_phases__c\": \"Design Phase\", \n            \"cf_project__c\": \"Security\"\n        }\n    ]\n}' \"https://rest.zuora.com/v1/revenue-items/revenue-events/{event-number}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/revenue-items/revenue-events/{event-number}');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"revenueItems\": [\n        {\n            \"accountingPeriodName\": \"Oct'2014\", \n            \"cf_phases__c\": \"Scoping Phase\", \n            \"cf_project__c\": \"Security\"\n        }, \n        {\n            \"accountingPeriodName\": \"Nov'2014\", \n            \"cf_phases__c\": \"Design Phase\", \n            \"cf_project__c\": \"Security\"\n        }\n    ]\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"revenueItems\\\": [\\n        {\\n            \\\"accountingPeriodName\\\": \\\"Oct'2014\\\", \\n            \\\"cf_phases__c\\\": \\\"Scoping Phase\\\", \\n            \\\"cf_project__c\\\": \\\"Security\\\"\\n        }, \\n        {\\n            \\\"accountingPeriodName\\\": \\\"Nov'2014\\\", \\n            \\\"cf_phases__c\\\": \\\"Design Phase\\\", \\n            \\\"cf_project__c\\\": \\\"Security\\\"\\n        }\\n    ]\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/revenue-items/revenue-events/{event-number}\")\n  .put(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"revenueItems\\\": [\\n        {\\n            \\\"accountingPeriodName\\\": \\\"Oct'2014\\\", \\n            \\\"cf_phases__c\\\": \\\"Scoping Phase\\\", \\n            \\\"cf_project__c\\\": \\\"Security\\\"\\n        }, \\n        {\\n            \\\"accountingPeriodName\\\": \\\"Nov'2014\\\", \\n            \\\"cf_phases__c\\\": \\\"Design Phase\\\", \\n            \\\"cf_project__c\\\": \\\"Security\\\"\\n        }\\n    ]\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"PUT\", \"/revenue-items/revenue-events/{event-number}\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/revenue-items/revenue-events/{event-number}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"revenueItems\\\": [\\n        {\\n            \\\"accountingPeriodName\\\": \\\"Oct'2014\\\", \\n            \\\"cf_phases__c\\\": \\\"Scoping Phase\\\", \\n            \\\"cf_project__c\\\": \\\"Security\\\"\\n        }, \\n        {\\n            \\\"accountingPeriodName\\\": \\\"Nov'2014\\\", \\n            \\\"cf_phases__c\\\": \\\"Design Phase\\\", \\n            \\\"cf_project__c\\\": \\\"Security\\\"\\n        }\\n    ]\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/revenue-items/revenue-events/{event-number}\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"revenueItems\\\": [\\n        {\\n            \\\"accountingPeriodName\\\": \\\"Oct'2014\\\", \\n            \\\"cf_phases__c\\\": \\\"Scoping Phase\\\", \\n            \\\"cf_project__c\\\": \\\"Security\\\"\\n        }, \\n        {\\n            \\\"accountingPeriodName\\\": \\\"Nov'2014\\\", \\n            \\\"cf_phases__c\\\": \\\"Design Phase\\\", \\n            \\\"cf_project__c\\\": \\\"Security\\\"\\n        }\\n    ]\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/revenue-items/revenue-schedules/{rs-number}" : {
      "get" : {
        "tags" : [ "Revenue Items" ],
        "summary" : "Get revenue items by revenue schedule",
        "description" : "This REST API reference describes how to get the details for each revenue items in a revenue schedule by specifying the revenue schedule number. Request and response field descriptions and sample code are provided.\n",
        "operationId" : "GET_RevenueItemsByRevenueSchedule",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "rs-number",
          "in" : "path",
          "description" : "Revenue schedule number. The revenue schedule number is always prefixed with \"RS\", for example, \"RS-00000001\".",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GETRsRevenueItemsType"
            },
            "examples" : {
              "application/json" : {
                "revenueItems" : [ {
                  "accountingPeriodName" : "Oct'2013",
                  "isAccountingPeriodClosed" : false,
                  "amount" : 50,
                  "currency" : "USD",
                  "accountingPeriodStartDate" : "2013-10-01",
                  "accountingPeriodEndDate" : "2013-10-31",
                  "recognizedRevenueAccountingCodeType" : null,
                  "recognizedRevenueAccountingCode" : null,
                  "deferredRevenueAccountingCodeType" : null,
                  "deferredRevenueAccountingCode" : null
                } ],
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/revenue-items/revenue-schedules/{rs-number}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/revenue-items/revenue-schedules/{rs-number}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/revenue-items/revenue-schedules/{rs-number}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/revenue-items/revenue-schedules/{rs-number}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/revenue-items/revenue-schedules/{rs-number}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/revenue-items/revenue-schedules/{rs-number}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "put" : {
        "tags" : [ "Revenue Items" ],
        "summary" : "Update custom fields on revenue items by revenue schedule number",
        "description" : "This REST API reference describes how to update custom fields on revenue Items by specifying the revenue schedule number. Request and response field descriptions and sample code are provided.\n",
        "operationId" : "PUT_CustomFieldsonRevenueItemsByRevenueSchedule",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "rs-number",
          "in" : "path",
          "description" : "Revenue schedule number. The revenue schedule number is always prefixed with \"RS\", for example, \"RS-00000001\".",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PUTScheduleRIDetailType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CommonResponseType"
            },
            "examples" : {
              "application/json" : {
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X PUT -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"revenueItems\": [\n        {\n            \"accountingPeriodName\": \"Oct'2014\", \n            \"cf_phases__c\": \"Scoping Phase\", \n            \"cf_project__c\": \"Security\"\n        }, \n        {\n            \"accountingPeriodName\": \"Nov'2014\", \n            \"cf_phases__c\": \"Design Phase\", \n            \"cf_project__c\": \"Security\"\n        }\n    ]\n}' \"https://rest.zuora.com/v1/revenue-items/revenue-schedules/{rs-number}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/revenue-items/revenue-schedules/{rs-number}');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"revenueItems\": [\n        {\n            \"accountingPeriodName\": \"Oct'2014\", \n            \"cf_phases__c\": \"Scoping Phase\", \n            \"cf_project__c\": \"Security\"\n        }, \n        {\n            \"accountingPeriodName\": \"Nov'2014\", \n            \"cf_phases__c\": \"Design Phase\", \n            \"cf_project__c\": \"Security\"\n        }\n    ]\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"revenueItems\\\": [\\n        {\\n            \\\"accountingPeriodName\\\": \\\"Oct'2014\\\", \\n            \\\"cf_phases__c\\\": \\\"Scoping Phase\\\", \\n            \\\"cf_project__c\\\": \\\"Security\\\"\\n        }, \\n        {\\n            \\\"accountingPeriodName\\\": \\\"Nov'2014\\\", \\n            \\\"cf_phases__c\\\": \\\"Design Phase\\\", \\n            \\\"cf_project__c\\\": \\\"Security\\\"\\n        }\\n    ]\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/revenue-items/revenue-schedules/{rs-number}\")\n  .put(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"revenueItems\\\": [\\n        {\\n            \\\"accountingPeriodName\\\": \\\"Oct'2014\\\", \\n            \\\"cf_phases__c\\\": \\\"Scoping Phase\\\", \\n            \\\"cf_project__c\\\": \\\"Security\\\"\\n        }, \\n        {\\n            \\\"accountingPeriodName\\\": \\\"Nov'2014\\\", \\n            \\\"cf_phases__c\\\": \\\"Design Phase\\\", \\n            \\\"cf_project__c\\\": \\\"Security\\\"\\n        }\\n    ]\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"PUT\", \"/revenue-items/revenue-schedules/{rs-number}\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/revenue-items/revenue-schedules/{rs-number}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"revenueItems\\\": [\\n        {\\n            \\\"accountingPeriodName\\\": \\\"Oct'2014\\\", \\n            \\\"cf_phases__c\\\": \\\"Scoping Phase\\\", \\n            \\\"cf_project__c\\\": \\\"Security\\\"\\n        }, \\n        {\\n            \\\"accountingPeriodName\\\": \\\"Nov'2014\\\", \\n            \\\"cf_phases__c\\\": \\\"Design Phase\\\", \\n            \\\"cf_project__c\\\": \\\"Security\\\"\\n        }\\n    ]\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/revenue-items/revenue-schedules/{rs-number}\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"revenueItems\\\": [\\n        {\\n            \\\"accountingPeriodName\\\": \\\"Oct'2014\\\", \\n            \\\"cf_phases__c\\\": \\\"Scoping Phase\\\", \\n            \\\"cf_project__c\\\": \\\"Security\\\"\\n        }, \\n        {\\n            \\\"accountingPeriodName\\\": \\\"Nov'2014\\\", \\n            \\\"cf_phases__c\\\": \\\"Design Phase\\\", \\n            \\\"cf_project__c\\\": \\\"Security\\\"\\n        }\\n    ]\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/revenue-recognition-rules/subscription-charges/{charge-key}" : {
      "get" : {
        "tags" : [ "Revenue Rules" ],
        "summary" : "Get the rule associated with a charge",
        "description" : "This REST API reference describes how to get the revenue recognition rule associated with a subscription charge by specifying the charge ID. Request and response field descriptions and sample code are provided.\n",
        "operationId" : "GETRevenueRecognitionRuleAssociation",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "charge-key",
          "in" : "path",
          "description" : "ID of the subscription rate plan charge; for example, 402892793e173340013e173b81000012.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GETRevenueRecognitionRuleAssociationType"
            },
            "examples" : {
              "application/json" : {
                "revenueRecognitionRuleName" : "Recognize upon invoicing",
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/revenue-recognition-rules/subscription-charges/{charge-key}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/revenue-recognition-rules/subscription-charges/{charge-key}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/revenue-recognition-rules/subscription-charges/{charge-key}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/revenue-recognition-rules/subscription-charges/{charge-key}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/revenue-recognition-rules/subscription-charges/{charge-key}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/revenue-recognition-rules/subscription-charges/{charge-key}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/revenue-schedules/invoice-item-adjustments/{invoice-item-adj-id}/" : {
      "get" : {
        "tags" : [ "Revenue Schedules" ],
        "summary" : "Get a revenue schedule by invoice item adjustment",
        "description" : "This REST API reference describes how to get the details of a revenue schedule by specifying a valid invoice item adjustment identifier. Request and response field descriptions and sample code are provided.\n",
        "operationId" : "GET_RSbyInvoiceItemAdjustment",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "invoice-item-adj-id",
          "in" : "path",
          "description" : "ID or number of the Invoice Item Adjustment, for example, e20b07fd416dcfcf0141c81164fd0a72.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GETRSDetailType"
            },
            "examples" : {
              "application/json" : {
                "number" : "RS-00000273",
                "recognitionRuleName" : "Recognize upon invoicing",
                "amount" : -25,
                "undistributedUnrecognizedRevenue" : -25,
                "recognizedRevenue" : 0,
                "unrecognizedRevenue" : -25,
                "currency" : "USD",
                "notes" : null,
                "createdOn" : "2014-01-21 13:52:38",
                "updatedOn" : "2014-01-21 13:52:38",
                "accountId" : "2c92c0f8439770960143b2141f5a584e",
                "subscriptionId" : "2c92c0f943977b4f0143b23487994327",
                "subscriptionChargeId" : "2c92c0f943977b4f0143b23487ed432e",
                "linkedTransactionId" : "2c92c0f8439770a40143b6ca76df205a",
                "linkedTransactionNumber" : "IIA-00000070",
                "linkedTransactionType" : "InvoiceItemAdjustment",
                "referenceId" : null,
                "revenueScheduleDate" : "2014-01-21",
                "cf_phases__c" : "Phase 1",
                "cf_project__c" : "project A",
                "revenueItems" : [ {
                  "accountingPeriodName" : "Open-Ended",
                  "isAccountingPeriodClosed" : false,
                  "amount" : -25,
                  "currency" : "USD",
                  "accountingPeriodStartDate" : "2013-12-11",
                  "accountingPeriodEndDate" : null,
                  "recognizedRevenueAccountingCodeType" : null,
                  "recognizedRevenueAccountingCode" : null,
                  "deferredRevenueAccountingCodeType" : null,
                  "deferredRevenueAccountingCode" : null
                } ],
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/revenue-schedules/invoice-item-adjustments/{invoice-item-adj-id}/\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/revenue-schedules/invoice-item-adjustments/{invoice-item-adj-id}/');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/revenue-schedules/invoice-item-adjustments/{invoice-item-adj-id}/\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/revenue-schedules/invoice-item-adjustments/{invoice-item-adj-id}/\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/revenue-schedules/invoice-item-adjustments/{invoice-item-adj-id}/\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/revenue-schedules/invoice-item-adjustments/{invoice-item-adj-id}/\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/revenue-schedules/invoice-item-adjustments/{invoice-item-adj-key}" : {
      "post" : {
        "tags" : [ "Revenue Schedules" ],
        "summary" : "Create a revenue schedule for an Invoice Item Adjustment (manual distribution)",
        "description" : "This REST API reference describes how to create a revenue schedule for an Invoice Item Adjustment and manually distribute the revenue.",
        "operationId" : "POST_RSforInvoiceItemAdjustment_ManualDistribution",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "invoice-item-adj-key",
          "in" : "path",
          "description" : "ID or number of the Invoice Item Adjustment, for example, e20b07fd416dcfcf0141c81164fd0a72.\nIf the specified Invoice Item Adjustment is already associated with a revenue schedule, the call will fail.\n",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/POSTRevenueScheduleByTransactionType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/POSTRevenueScheduleByTransactionResponseType"
            },
            "examples" : {
              "application/json" : {
                "revenueScheduleNumber" : "rs-00000002",
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"revenueDistributions\": [\n        {\n            \"accountingPeriodName\": \"Jan '16\", \n            \"newAmount\": \"20\"\n        }, \n        {\n            \"accountingPeriodName\": \"Open-Ended\", \n            \"newAmount\": \"30\"\n        }\n    ], \n    \"revenueEvent\": {\n        \"eventType\": \"Revenue Distributed\", \n        \"eventTypeSystemId\": \"RevenueDistributed__z\", \n        \"notes\": \"My notes\"\n    }\n}' \"https://rest.zuora.com/v1/revenue-schedules/invoice-item-adjustments/{invoice-item-adj-key}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/revenue-schedules/invoice-item-adjustments/{invoice-item-adj-key}');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"revenueDistributions\": [\n        {\n            \"accountingPeriodName\": \"Jan '16\", \n            \"newAmount\": \"20\"\n        }, \n        {\n            \"accountingPeriodName\": \"Open-Ended\", \n            \"newAmount\": \"30\"\n        }\n    ], \n    \"revenueEvent\": {\n        \"eventType\": \"Revenue Distributed\", \n        \"eventTypeSystemId\": \"RevenueDistributed__z\", \n        \"notes\": \"My notes\"\n    }\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"revenueDistributions\\\": [\\n        {\\n            \\\"accountingPeriodName\\\": \\\"Jan '16\\\", \\n            \\\"newAmount\\\": \\\"20\\\"\\n        }, \\n        {\\n            \\\"accountingPeriodName\\\": \\\"Open-Ended\\\", \\n            \\\"newAmount\\\": \\\"30\\\"\\n        }\\n    ], \\n    \\\"revenueEvent\\\": {\\n        \\\"eventType\\\": \\\"Revenue Distributed\\\", \\n        \\\"eventTypeSystemId\\\": \\\"RevenueDistributed__z\\\", \\n        \\\"notes\\\": \\\"My notes\\\"\\n    }\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/revenue-schedules/invoice-item-adjustments/{invoice-item-adj-key}\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"revenueDistributions\\\": [\\n        {\\n            \\\"accountingPeriodName\\\": \\\"Jan '16\\\", \\n            \\\"newAmount\\\": \\\"20\\\"\\n        }, \\n        {\\n            \\\"accountingPeriodName\\\": \\\"Open-Ended\\\", \\n            \\\"newAmount\\\": \\\"30\\\"\\n        }\\n    ], \\n    \\\"revenueEvent\\\": {\\n        \\\"eventType\\\": \\\"Revenue Distributed\\\", \\n        \\\"eventTypeSystemId\\\": \\\"RevenueDistributed__z\\\", \\n        \\\"notes\\\": \\\"My notes\\\"\\n    }\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/revenue-schedules/invoice-item-adjustments/{invoice-item-adj-key}\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/revenue-schedules/invoice-item-adjustments/{invoice-item-adj-key}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"revenueDistributions\\\": [\\n        {\\n            \\\"accountingPeriodName\\\": \\\"Jan '16\\\", \\n            \\\"newAmount\\\": \\\"20\\\"\\n        }, \\n        {\\n            \\\"accountingPeriodName\\\": \\\"Open-Ended\\\", \\n            \\\"newAmount\\\": \\\"30\\\"\\n        }\\n    ], \\n    \\\"revenueEvent\\\": {\\n        \\\"eventType\\\": \\\"Revenue Distributed\\\", \\n        \\\"eventTypeSystemId\\\": \\\"RevenueDistributed__z\\\", \\n        \\\"notes\\\": \\\"My notes\\\"\\n    }\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/revenue-schedules/invoice-item-adjustments/{invoice-item-adj-key}\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"revenueDistributions\\\": [\\n        {\\n            \\\"accountingPeriodName\\\": \\\"Jan '16\\\", \\n            \\\"newAmount\\\": \\\"20\\\"\\n        }, \\n        {\\n            \\\"accountingPeriodName\\\": \\\"Open-Ended\\\", \\n            \\\"newAmount\\\": \\\"30\\\"\\n        }\\n    ], \\n    \\\"revenueEvent\\\": {\\n        \\\"eventType\\\": \\\"Revenue Distributed\\\", \\n        \\\"eventTypeSystemId\\\": \\\"RevenueDistributed__z\\\", \\n        \\\"notes\\\": \\\"My notes\\\"\\n    }\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/revenue-schedules/invoice-item-adjustments/{invoice-item-adj-key}/distribute-revenue-with-date-range" : {
      "post" : {
        "tags" : [ "Revenue Schedules" ],
        "summary" : "Create a revenue schedule for an Invoice Item Adjustment (distribute by date range)",
        "description" : "This REST API reference describes how to create a revenue schedule for an Invoice Item Adjustment and distribute the revenue by specifying the recognition start and end dates.",
        "operationId" : "POST_RSforInvoiceItemAdjustment_DistributeByDateRange",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "invoice-item-adj-key",
          "in" : "path",
          "description" : "ID or number of the Invoice Item Adjustment, for example, e20b07fd416dcfcf0141c81164fd0a72.\nIf the specified Invoice Item Adjustment is already associated with a revenue schedule, the call will fail.\n",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/POSTRevenueScheduleByDateRangeType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/POSTRevenueScheduleByTransactionResponseType"
            },
            "examples" : {
              "application/json" : {
                "revenueScheduleNumber" : "RS-00000003",
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"customField__c\": null, \n    \"distributionType\": \"Daily distribution\", \n    \"notes\": \"Manually distribute revenue by usage\", \n    \"recognitionEnd\": \"2016-12-31\", \n    \"recognitionStart\": \"2016-12-1\", \n    \"revenueEvent\": {\n        \"customField__c\": null, \n        \"eventType\": \"Revenue Distributed\", \n        \"eventTypeSystemId\": \"RevenueDistributed__z\", \n        \"notes\": \"\"\n    }\n}' \"https://rest.zuora.com/v1/revenue-schedules/invoice-item-adjustments/{invoice-item-adj-key}/distribute-revenue-with-date-range\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/revenue-schedules/invoice-item-adjustments/{invoice-item-adj-key}/distribute-revenue-with-date-range');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"customField__c\": null, \n    \"distributionType\": \"Daily distribution\", \n    \"notes\": \"Manually distribute revenue by usage\", \n    \"recognitionEnd\": \"2016-12-31\", \n    \"recognitionStart\": \"2016-12-1\", \n    \"revenueEvent\": {\n        \"customField__c\": null, \n        \"eventType\": \"Revenue Distributed\", \n        \"eventTypeSystemId\": \"RevenueDistributed__z\", \n        \"notes\": \"\"\n    }\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"customField__c\\\": null, \\n    \\\"distributionType\\\": \\\"Daily distribution\\\", \\n    \\\"notes\\\": \\\"Manually distribute revenue by usage\\\", \\n    \\\"recognitionEnd\\\": \\\"2016-12-31\\\", \\n    \\\"recognitionStart\\\": \\\"2016-12-1\\\", \\n    \\\"revenueEvent\\\": {\\n        \\\"customField__c\\\": null, \\n        \\\"eventType\\\": \\\"Revenue Distributed\\\", \\n        \\\"eventTypeSystemId\\\": \\\"RevenueDistributed__z\\\", \\n        \\\"notes\\\": \\\"\\\"\\n    }\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/revenue-schedules/invoice-item-adjustments/{invoice-item-adj-key}/distribute-revenue-with-date-range\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"customField__c\\\": null, \\n    \\\"distributionType\\\": \\\"Daily distribution\\\", \\n    \\\"notes\\\": \\\"Manually distribute revenue by usage\\\", \\n    \\\"recognitionEnd\\\": \\\"2016-12-31\\\", \\n    \\\"recognitionStart\\\": \\\"2016-12-1\\\", \\n    \\\"revenueEvent\\\": {\\n        \\\"customField__c\\\": null, \\n        \\\"eventType\\\": \\\"Revenue Distributed\\\", \\n        \\\"eventTypeSystemId\\\": \\\"RevenueDistributed__z\\\", \\n        \\\"notes\\\": \\\"\\\"\\n    }\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/revenue-schedules/invoice-item-adjustments/{invoice-item-adj-key}/distribute-revenue-with-date-range\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/revenue-schedules/invoice-item-adjustments/{invoice-item-adj-key}/distribute-revenue-with-date-range\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"customField__c\\\": null, \\n    \\\"distributionType\\\": \\\"Daily distribution\\\", \\n    \\\"notes\\\": \\\"Manually distribute revenue by usage\\\", \\n    \\\"recognitionEnd\\\": \\\"2016-12-31\\\", \\n    \\\"recognitionStart\\\": \\\"2016-12-1\\\", \\n    \\\"revenueEvent\\\": {\\n        \\\"customField__c\\\": null, \\n        \\\"eventType\\\": \\\"Revenue Distributed\\\", \\n        \\\"eventTypeSystemId\\\": \\\"RevenueDistributed__z\\\", \\n        \\\"notes\\\": \\\"\\\"\\n    }\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/revenue-schedules/invoice-item-adjustments/{invoice-item-adj-key}/distribute-revenue-with-date-range\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"customField__c\\\": null, \\n    \\\"distributionType\\\": \\\"Daily distribution\\\", \\n    \\\"notes\\\": \\\"Manually distribute revenue by usage\\\", \\n    \\\"recognitionEnd\\\": \\\"2016-12-31\\\", \\n    \\\"recognitionStart\\\": \\\"2016-12-1\\\", \\n    \\\"revenueEvent\\\": {\\n        \\\"customField__c\\\": null, \\n        \\\"eventType\\\": \\\"Revenue Distributed\\\", \\n        \\\"eventTypeSystemId\\\": \\\"RevenueDistributed__z\\\", \\n        \\\"notes\\\": \\\"\\\"\\n    }\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/revenue-schedules/invoice-items/{invoice-item-id}" : {
      "get" : {
        "tags" : [ "Revenue Schedules" ],
        "summary" : "Get a revenue schedule by invoice item ID",
        "description" : "This REST API reference describes how to get the details of a revenue schedule by specifying the invoice item ID.",
        "operationId" : "GET_RSbyInvoiceItem",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "invoice-item-id",
          "in" : "path",
          "description" : "A valid Invoice Item ID.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GETRSDetailType"
            },
            "examples" : {
              "application/json" : {
                "number" : "RS-00000290",
                "recognitionRuleName" : "Recognize upon invoicing",
                "amount" : 50,
                "undistributedUnrecognizedRevenue" : 50,
                "recognizedRevenue" : 0,
                "unrecognizedRevenue" : 50,
                "currency" : "USD",
                "notes" : null,
                "createdOn" : "2014-01-21 13:59:25",
                "updatedOn" : "2014-01-21 13:59:25",
                "accountId" : "2c92c0f8439770960143b2141f5a584e",
                "subscriptionId" : "2c92c0f943977b4f0143b23487994327",
                "subscriptionChargeId" : "2c92c0f943977b4f0143b23487ed432e",
                "linkedTransactionId" : "2c92c094439782460143b62c2ee60f59",
                "linkedTransactionType" : "InvoiceItem",
                "referenceId" : null,
                "revenueScheduleDate" : "2014-01-21",
                "cf_phases__c" : "Phase 1",
                "cf_project__c" : "project A",
                "revenueItems" : [ {
                  "accountingPeriodName" : "Open-Ended",
                  "isAccountingPeriodClosed" : false,
                  "amount" : 50,
                  "currency" : "USD",
                  "accountingPeriodStartDate" : "2013-12-11",
                  "accountingPeriodEndDate" : null,
                  "recognizedRevenueAccountingCodeType" : "Revenue: Sales",
                  "recognizedRevenueAccountingCode" : "Recurring Monthly Revenue",
                  "deferredRevenueAccountingCodeType" : null,
                  "deferredRevenueAccountingCode" : null
                } ],
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/revenue-schedules/invoice-items/{invoice-item-id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/revenue-schedules/invoice-items/{invoice-item-id}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/revenue-schedules/invoice-items/{invoice-item-id}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/revenue-schedules/invoice-items/{invoice-item-id}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/revenue-schedules/invoice-items/{invoice-item-id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/revenue-schedules/invoice-items/{invoice-item-id}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "post" : {
        "tags" : [ "Revenue Schedules" ],
        "summary" : "Create a revenue schedule for an Invoice Item (manual distribution)",
        "description" : "This REST API reference describes how to create a revenue schedule for an Invoice Item and manually distribute the revenue.",
        "operationId" : "POST_RSforInvoiceItem_ManualDistribution",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "invoice-item-id",
          "in" : "path",
          "description" : "ID of the Invoice Item, for example, e20b07fd416dcfcf0141c81164fd0a75.\nIf the specified Invoice Item is already associated with a revenue schedule, the call will fail.\n",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/POSTRevenueScheduleByTransactionType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/POSTRevenueScheduleByTransactionResponseType"
            },
            "examples" : {
              "application/json" : {
                "revenueScheduleNumber" : "RS-00000002",
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"revenueDistributions\": [\n        {\n            \"accountingPeriodName\": \"Jan '16\", \n            \"newAmount\": \"20\"\n        }, \n        {\n            \"accountingPeriodName\": \"Open-Ended\", \n            \"newAmount\": \"30\"\n        }\n    ], \n    \"revenueEvent\": {\n        \"eventType\": \"Revenue Distributed\", \n        \"eventTypeSystemId\": \"RevenueDistributed__z\", \n        \"notes\": \"My notes\"\n    }\n}' \"https://rest.zuora.com/v1/revenue-schedules/invoice-items/{invoice-item-id}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/revenue-schedules/invoice-items/{invoice-item-id}');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"revenueDistributions\": [\n        {\n            \"accountingPeriodName\": \"Jan '16\", \n            \"newAmount\": \"20\"\n        }, \n        {\n            \"accountingPeriodName\": \"Open-Ended\", \n            \"newAmount\": \"30\"\n        }\n    ], \n    \"revenueEvent\": {\n        \"eventType\": \"Revenue Distributed\", \n        \"eventTypeSystemId\": \"RevenueDistributed__z\", \n        \"notes\": \"My notes\"\n    }\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"revenueDistributions\\\": [\\n        {\\n            \\\"accountingPeriodName\\\": \\\"Jan '16\\\", \\n            \\\"newAmount\\\": \\\"20\\\"\\n        }, \\n        {\\n            \\\"accountingPeriodName\\\": \\\"Open-Ended\\\", \\n            \\\"newAmount\\\": \\\"30\\\"\\n        }\\n    ], \\n    \\\"revenueEvent\\\": {\\n        \\\"eventType\\\": \\\"Revenue Distributed\\\", \\n        \\\"eventTypeSystemId\\\": \\\"RevenueDistributed__z\\\", \\n        \\\"notes\\\": \\\"My notes\\\"\\n    }\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/revenue-schedules/invoice-items/{invoice-item-id}\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"revenueDistributions\\\": [\\n        {\\n            \\\"accountingPeriodName\\\": \\\"Jan '16\\\", \\n            \\\"newAmount\\\": \\\"20\\\"\\n        }, \\n        {\\n            \\\"accountingPeriodName\\\": \\\"Open-Ended\\\", \\n            \\\"newAmount\\\": \\\"30\\\"\\n        }\\n    ], \\n    \\\"revenueEvent\\\": {\\n        \\\"eventType\\\": \\\"Revenue Distributed\\\", \\n        \\\"eventTypeSystemId\\\": \\\"RevenueDistributed__z\\\", \\n        \\\"notes\\\": \\\"My notes\\\"\\n    }\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/revenue-schedules/invoice-items/{invoice-item-id}\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/revenue-schedules/invoice-items/{invoice-item-id}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"revenueDistributions\\\": [\\n        {\\n            \\\"accountingPeriodName\\\": \\\"Jan '16\\\", \\n            \\\"newAmount\\\": \\\"20\\\"\\n        }, \\n        {\\n            \\\"accountingPeriodName\\\": \\\"Open-Ended\\\", \\n            \\\"newAmount\\\": \\\"30\\\"\\n        }\\n    ], \\n    \\\"revenueEvent\\\": {\\n        \\\"eventType\\\": \\\"Revenue Distributed\\\", \\n        \\\"eventTypeSystemId\\\": \\\"RevenueDistributed__z\\\", \\n        \\\"notes\\\": \\\"My notes\\\"\\n    }\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/revenue-schedules/invoice-items/{invoice-item-id}\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"revenueDistributions\\\": [\\n        {\\n            \\\"accountingPeriodName\\\": \\\"Jan '16\\\", \\n            \\\"newAmount\\\": \\\"20\\\"\\n        }, \\n        {\\n            \\\"accountingPeriodName\\\": \\\"Open-Ended\\\", \\n            \\\"newAmount\\\": \\\"30\\\"\\n        }\\n    ], \\n    \\\"revenueEvent\\\": {\\n        \\\"eventType\\\": \\\"Revenue Distributed\\\", \\n        \\\"eventTypeSystemId\\\": \\\"RevenueDistributed__z\\\", \\n        \\\"notes\\\": \\\"My notes\\\"\\n    }\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/revenue-schedules/invoice-items/{invoice-item-id}/distribute-revenue-with-date-range" : {
      "post" : {
        "tags" : [ "Revenue Schedules" ],
        "summary" : "Create a revenue schedule for an Invoice Item (distribute by date range)",
        "description" : "This REST API reference describes how to create a revenue schedule for an Invoice Item and distribute the revenue by specifying the recognition start and end dates.",
        "operationId" : "POST_RSforInvoiceItem_DistributeByDateRange",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "invoice-item-id",
          "in" : "path",
          "description" : "ID of the Invoice Item, for example, e20b07fd416dcfcf0141c81164fd0a75.\nIf the specified Invoice Item is already associated with a revenue schedule, the call will fail.\n",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/POSTRevenueScheduleByDateRangeType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/POSTRevenueScheduleByTransactionResponseType"
            },
            "examples" : {
              "application/json" : {
                "revenueScheduleNumber" : "RS-00000003",
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"customField__c\": null, \n    \"distributionType\": \"Daily distribution\", \n    \"notes\": \"Manually distribute revenue by usage\", \n    \"recognitionEnd\": \"2016-12-31\", \n    \"recognitionStart\": \"2016-12-1\", \n    \"revenueEvent\": {\n        \"customField__c\": null, \n        \"eventType\": \"Revenue Distributed\", \n        \"eventTypeSystemId\": \"RevenueDistributed__z\", \n        \"notes\": \"\"\n    }\n}' \"https://rest.zuora.com/v1/revenue-schedules/invoice-items/{invoice-item-id}/distribute-revenue-with-date-range\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/revenue-schedules/invoice-items/{invoice-item-id}/distribute-revenue-with-date-range');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"customField__c\": null, \n    \"distributionType\": \"Daily distribution\", \n    \"notes\": \"Manually distribute revenue by usage\", \n    \"recognitionEnd\": \"2016-12-31\", \n    \"recognitionStart\": \"2016-12-1\", \n    \"revenueEvent\": {\n        \"customField__c\": null, \n        \"eventType\": \"Revenue Distributed\", \n        \"eventTypeSystemId\": \"RevenueDistributed__z\", \n        \"notes\": \"\"\n    }\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"customField__c\\\": null, \\n    \\\"distributionType\\\": \\\"Daily distribution\\\", \\n    \\\"notes\\\": \\\"Manually distribute revenue by usage\\\", \\n    \\\"recognitionEnd\\\": \\\"2016-12-31\\\", \\n    \\\"recognitionStart\\\": \\\"2016-12-1\\\", \\n    \\\"revenueEvent\\\": {\\n        \\\"customField__c\\\": null, \\n        \\\"eventType\\\": \\\"Revenue Distributed\\\", \\n        \\\"eventTypeSystemId\\\": \\\"RevenueDistributed__z\\\", \\n        \\\"notes\\\": \\\"\\\"\\n    }\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/revenue-schedules/invoice-items/{invoice-item-id}/distribute-revenue-with-date-range\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"customField__c\\\": null, \\n    \\\"distributionType\\\": \\\"Daily distribution\\\", \\n    \\\"notes\\\": \\\"Manually distribute revenue by usage\\\", \\n    \\\"recognitionEnd\\\": \\\"2016-12-31\\\", \\n    \\\"recognitionStart\\\": \\\"2016-12-1\\\", \\n    \\\"revenueEvent\\\": {\\n        \\\"customField__c\\\": null, \\n        \\\"eventType\\\": \\\"Revenue Distributed\\\", \\n        \\\"eventTypeSystemId\\\": \\\"RevenueDistributed__z\\\", \\n        \\\"notes\\\": \\\"\\\"\\n    }\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/revenue-schedules/invoice-items/{invoice-item-id}/distribute-revenue-with-date-range\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/revenue-schedules/invoice-items/{invoice-item-id}/distribute-revenue-with-date-range\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"customField__c\\\": null, \\n    \\\"distributionType\\\": \\\"Daily distribution\\\", \\n    \\\"notes\\\": \\\"Manually distribute revenue by usage\\\", \\n    \\\"recognitionEnd\\\": \\\"2016-12-31\\\", \\n    \\\"recognitionStart\\\": \\\"2016-12-1\\\", \\n    \\\"revenueEvent\\\": {\\n        \\\"customField__c\\\": null, \\n        \\\"eventType\\\": \\\"Revenue Distributed\\\", \\n        \\\"eventTypeSystemId\\\": \\\"RevenueDistributed__z\\\", \\n        \\\"notes\\\": \\\"\\\"\\n    }\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/revenue-schedules/invoice-items/{invoice-item-id}/distribute-revenue-with-date-range\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"customField__c\\\": null, \\n    \\\"distributionType\\\": \\\"Daily distribution\\\", \\n    \\\"notes\\\": \\\"Manually distribute revenue by usage\\\", \\n    \\\"recognitionEnd\\\": \\\"2016-12-31\\\", \\n    \\\"recognitionStart\\\": \\\"2016-12-1\\\", \\n    \\\"revenueEvent\\\": {\\n        \\\"customField__c\\\": null, \\n        \\\"eventType\\\": \\\"Revenue Distributed\\\", \\n        \\\"eventTypeSystemId\\\": \\\"RevenueDistributed__z\\\", \\n        \\\"notes\\\": \\\"\\\"\\n    }\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/revenue-schedules/subscription-charges/{charge-key}" : {
      "get" : {
        "tags" : [ "Revenue Schedules" ],
        "summary" : "Get revenue schedule by subscription charge",
        "description" : "This REST API reference describes how to get the revenue schedule details by specifying subscription charge ID. Request and response field descriptions and sample code are provided",
        "operationId" : "GETRSDetailsByCharge",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "charge-key",
          "in" : "path",
          "description" : "ID of the subscription rate plan charge; for example, 402892793e173340013e173b81000012.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GETRSDetailsByChargeType"
            },
            "examples" : {
              "application/json" : {
                "revenueSchedules" : [ {
                  "number" : "RS-00000291",
                  "recognitionRuleName" : "Recognize upon invoicing",
                  "amount" : 50,
                  "undistributedUnrecognizedRevenue" : 50,
                  "recognizedRevenue" : 0,
                  "unrecognizedRevenue" : 50,
                  "currency" : "USD",
                  "notes" : null,
                  "createdOn" : "2014-01-21 13:59:25",
                  "updatedOn" : "2014-01-21 13:59:25",
                  "accountId" : "2c92c0f8439770960143b2141f5a584e",
                  "subscriptionId" : "2c92c0f943977b4f0143b23487994327",
                  "subscriptionChargeId" : "2c92c0f943977b4f0143b23487ed432e",
                  "linkedTransactionId" : "2c92c094439782460143b62c2ee90f5a",
                  "linkedTransactionType" : "InvoiceItem",
                  "referenceId" : null,
                  "revenueScheduleDate" : "2014-01-21",
                  "cf_phases__c" : "Phase 1",
                  "cf_project__c" : "project A",
                  "revenueItems" : [ {
                    "accountingPeriodName" : "Open-Ended",
                    "isAccountingPeriodClosed" : false,
                    "amount" : 50,
                    "currency" : "USD",
                    "accountingPeriodStartDate" : "2013-12-11",
                    "accountingPeriodEndDate" : null,
                    "recognizedRevenueAccountingCodeType" : null,
                    "recognizedRevenueAccountingCode" : null,
                    "deferredRevenueAccountingCodeType" : null,
                    "deferredRevenueAccountingCode" : null
                  } ]
                }, {
                  "number" : "RS-00000290",
                  "recognitionRuleName" : "Recognize upon invoicing",
                  "amount" : 50,
                  "undistributedUnrecognizedRevenue" : 50,
                  "recognizedRevenue" : 0,
                  "unrecognizedRevenue" : 50,
                  "currency" : "USD",
                  "notes" : null,
                  "createdOn" : "2014-01-21 13:59:25",
                  "updatedOn" : "2014-01-21 13:59:25",
                  "accountId" : "2c92c0f8439770960143b2141f5a584e",
                  "subscriptionId" : "2c92c0f943977b4f0143b23487994327",
                  "subscriptionChargeId" : "2c92c0f943977b4f0143b23487ed432e",
                  "linkedTransactionId" : "2c92c094439782460143b62c2ee60f59",
                  "linkedTransactionNumber" : "INV00000838",
                  "linkedTransactionType" : "InvoiceItem",
                  "referenceId" : null,
                  "revenueScheduleDate" : "2014-01-21",
                  "cf_phases__c" : "Phase 1",
                  "cf_project__c" : "project A",
                  "revenueItems" : [ {
                    "accountingPeriodName" : "Open-Ended",
                    "isAccountingPeriodClosed" : false,
                    "amount" : 50,
                    "currency" : "USD",
                    "accountingPeriodStartDate" : "2013-12-11",
                    "accountingPeriodEndDate" : null,
                    "recognizedRevenueAccountingCodeType" : null,
                    "recognizedRevenueAccountingCode" : null,
                    "deferredRevenueAccountingCodeType" : null,
                    "deferredRevenueAccountingCode" : null
                  } ]
                } ],
                "nextPage" : "https://apisandbox-api.zuora.com/rest/v1/revenue-schedules/subscription-charges/2c92c0f943977b4f0143b23487ed432e?page=2&pageSize=8",
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/revenue-schedules/subscription-charges/{charge-key}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/revenue-schedules/subscription-charges/{charge-key}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/revenue-schedules/subscription-charges/{charge-key}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/revenue-schedules/subscription-charges/{charge-key}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/revenue-schedules/subscription-charges/{charge-key}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/revenue-schedules/subscription-charges/{charge-key}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "post" : {
        "tags" : [ "Revenue Schedules" ],
        "summary" : "Create a revenue schedule on a subscription charge",
        "description" : "This REST API reference describes how to create a revenue schedule by specifying the subscription charge. This method is for custom unlimited revenue recognition only.",
        "operationId" : "POSTRevenueScheduleByChargeResponse",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "charge-key",
          "in" : "path",
          "description" : "ID of the subscription rate plan charge; for example, 402892793e173340013e173b81000012.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/POSTRevenueScheduleByChargeType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/POSTRevenueScheduleByChargeResponseType"
            },
            "examples" : {
              "application/json" : {
                "revenueScheduleNumber" : "rs-00000001",
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"amount\": \"300\", \n    \"cf_phases__c\": \"Phase 1\", \n    \"cf_project__c\": \"project A\", \n    \"deferredRevenueAccountingCode\": \"Deferred Revenue\", \n    \"deferredRevenueAccountingCodeType\": \"Deferred Revenue\", \n    \"overrideChargeAccountingCodes\": \"true\", \n    \"recognizedRevenueAccountingCode\": \"Subscription Revenue\", \n    \"recognizedRevenueAccountingCodeType\": \"Sales Revenue\", \n    \"referenceId\": \"rs transaction ref\", \n    \"revenueDistributions\": [\n        {\n            \"accountingPeriodName\": \"Jan'2013\", \n            \"newAmount\": \"100\"\n        }, \n        {\n            \"accountingPeriodName\": \"Feb'2013\", \n            \"newAmount\": \"200\"\n        }\n    ], \n    \"revenueEvent\": {\n        \"cf_phases__c\": \"Phase 1\", \n        \"cf_project__c\": \"project A\", \n        \"eventType\": \"Revenue Distributed\", \n        \"eventTypeSystemId\": \"1111111\", \n        \"notes\": \"Manually distribute revenue by usage\"\n    }, \n    \"revenueScheduleDate\": \"2013-01-01\"\n}' \"https://rest.zuora.com/v1/revenue-schedules/subscription-charges/{charge-key}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/revenue-schedules/subscription-charges/{charge-key}');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"amount\": \"300\", \n    \"cf_phases__c\": \"Phase 1\", \n    \"cf_project__c\": \"project A\", \n    \"deferredRevenueAccountingCode\": \"Deferred Revenue\", \n    \"deferredRevenueAccountingCodeType\": \"Deferred Revenue\", \n    \"overrideChargeAccountingCodes\": \"true\", \n    \"recognizedRevenueAccountingCode\": \"Subscription Revenue\", \n    \"recognizedRevenueAccountingCodeType\": \"Sales Revenue\", \n    \"referenceId\": \"rs transaction ref\", \n    \"revenueDistributions\": [\n        {\n            \"accountingPeriodName\": \"Jan'2013\", \n            \"newAmount\": \"100\"\n        }, \n        {\n            \"accountingPeriodName\": \"Feb'2013\", \n            \"newAmount\": \"200\"\n        }\n    ], \n    \"revenueEvent\": {\n        \"cf_phases__c\": \"Phase 1\", \n        \"cf_project__c\": \"project A\", \n        \"eventType\": \"Revenue Distributed\", \n        \"eventTypeSystemId\": \"1111111\", \n        \"notes\": \"Manually distribute revenue by usage\"\n    }, \n    \"revenueScheduleDate\": \"2013-01-01\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"amount\\\": \\\"300\\\", \\n    \\\"cf_phases__c\\\": \\\"Phase 1\\\", \\n    \\\"cf_project__c\\\": \\\"project A\\\", \\n    \\\"deferredRevenueAccountingCode\\\": \\\"Deferred Revenue\\\", \\n    \\\"deferredRevenueAccountingCodeType\\\": \\\"Deferred Revenue\\\", \\n    \\\"overrideChargeAccountingCodes\\\": \\\"true\\\", \\n    \\\"recognizedRevenueAccountingCode\\\": \\\"Subscription Revenue\\\", \\n    \\\"recognizedRevenueAccountingCodeType\\\": \\\"Sales Revenue\\\", \\n    \\\"referenceId\\\": \\\"rs transaction ref\\\", \\n    \\\"revenueDistributions\\\": [\\n        {\\n            \\\"accountingPeriodName\\\": \\\"Jan'2013\\\", \\n            \\\"newAmount\\\": \\\"100\\\"\\n        }, \\n        {\\n            \\\"accountingPeriodName\\\": \\\"Feb'2013\\\", \\n            \\\"newAmount\\\": \\\"200\\\"\\n        }\\n    ], \\n    \\\"revenueEvent\\\": {\\n        \\\"cf_phases__c\\\": \\\"Phase 1\\\", \\n        \\\"cf_project__c\\\": \\\"project A\\\", \\n        \\\"eventType\\\": \\\"Revenue Distributed\\\", \\n        \\\"eventTypeSystemId\\\": \\\"1111111\\\", \\n        \\\"notes\\\": \\\"Manually distribute revenue by usage\\\"\\n    }, \\n    \\\"revenueScheduleDate\\\": \\\"2013-01-01\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/revenue-schedules/subscription-charges/{charge-key}\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"amount\\\": \\\"300\\\", \\n    \\\"cf_phases__c\\\": \\\"Phase 1\\\", \\n    \\\"cf_project__c\\\": \\\"project A\\\", \\n    \\\"deferredRevenueAccountingCode\\\": \\\"Deferred Revenue\\\", \\n    \\\"deferredRevenueAccountingCodeType\\\": \\\"Deferred Revenue\\\", \\n    \\\"overrideChargeAccountingCodes\\\": \\\"true\\\", \\n    \\\"recognizedRevenueAccountingCode\\\": \\\"Subscription Revenue\\\", \\n    \\\"recognizedRevenueAccountingCodeType\\\": \\\"Sales Revenue\\\", \\n    \\\"referenceId\\\": \\\"rs transaction ref\\\", \\n    \\\"revenueDistributions\\\": [\\n        {\\n            \\\"accountingPeriodName\\\": \\\"Jan'2013\\\", \\n            \\\"newAmount\\\": \\\"100\\\"\\n        }, \\n        {\\n            \\\"accountingPeriodName\\\": \\\"Feb'2013\\\", \\n            \\\"newAmount\\\": \\\"200\\\"\\n        }\\n    ], \\n    \\\"revenueEvent\\\": {\\n        \\\"cf_phases__c\\\": \\\"Phase 1\\\", \\n        \\\"cf_project__c\\\": \\\"project A\\\", \\n        \\\"eventType\\\": \\\"Revenue Distributed\\\", \\n        \\\"eventTypeSystemId\\\": \\\"1111111\\\", \\n        \\\"notes\\\": \\\"Manually distribute revenue by usage\\\"\\n    }, \\n    \\\"revenueScheduleDate\\\": \\\"2013-01-01\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/revenue-schedules/subscription-charges/{charge-key}\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/revenue-schedules/subscription-charges/{charge-key}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"amount\\\": \\\"300\\\", \\n    \\\"cf_phases__c\\\": \\\"Phase 1\\\", \\n    \\\"cf_project__c\\\": \\\"project A\\\", \\n    \\\"deferredRevenueAccountingCode\\\": \\\"Deferred Revenue\\\", \\n    \\\"deferredRevenueAccountingCodeType\\\": \\\"Deferred Revenue\\\", \\n    \\\"overrideChargeAccountingCodes\\\": \\\"true\\\", \\n    \\\"recognizedRevenueAccountingCode\\\": \\\"Subscription Revenue\\\", \\n    \\\"recognizedRevenueAccountingCodeType\\\": \\\"Sales Revenue\\\", \\n    \\\"referenceId\\\": \\\"rs transaction ref\\\", \\n    \\\"revenueDistributions\\\": [\\n        {\\n            \\\"accountingPeriodName\\\": \\\"Jan'2013\\\", \\n            \\\"newAmount\\\": \\\"100\\\"\\n        }, \\n        {\\n            \\\"accountingPeriodName\\\": \\\"Feb'2013\\\", \\n            \\\"newAmount\\\": \\\"200\\\"\\n        }\\n    ], \\n    \\\"revenueEvent\\\": {\\n        \\\"cf_phases__c\\\": \\\"Phase 1\\\", \\n        \\\"cf_project__c\\\": \\\"project A\\\", \\n        \\\"eventType\\\": \\\"Revenue Distributed\\\", \\n        \\\"eventTypeSystemId\\\": \\\"1111111\\\", \\n        \\\"notes\\\": \\\"Manually distribute revenue by usage\\\"\\n    }, \\n    \\\"revenueScheduleDate\\\": \\\"2013-01-01\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/revenue-schedules/subscription-charges/{charge-key}\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"amount\\\": \\\"300\\\", \\n    \\\"cf_phases__c\\\": \\\"Phase 1\\\", \\n    \\\"cf_project__c\\\": \\\"project A\\\", \\n    \\\"deferredRevenueAccountingCode\\\": \\\"Deferred Revenue\\\", \\n    \\\"deferredRevenueAccountingCodeType\\\": \\\"Deferred Revenue\\\", \\n    \\\"overrideChargeAccountingCodes\\\": \\\"true\\\", \\n    \\\"recognizedRevenueAccountingCode\\\": \\\"Subscription Revenue\\\", \\n    \\\"recognizedRevenueAccountingCodeType\\\": \\\"Sales Revenue\\\", \\n    \\\"referenceId\\\": \\\"rs transaction ref\\\", \\n    \\\"revenueDistributions\\\": [\\n        {\\n            \\\"accountingPeriodName\\\": \\\"Jan'2013\\\", \\n            \\\"newAmount\\\": \\\"100\\\"\\n        }, \\n        {\\n            \\\"accountingPeriodName\\\": \\\"Feb'2013\\\", \\n            \\\"newAmount\\\": \\\"200\\\"\\n        }\\n    ], \\n    \\\"revenueEvent\\\": {\\n        \\\"cf_phases__c\\\": \\\"Phase 1\\\", \\n        \\\"cf_project__c\\\": \\\"project A\\\", \\n        \\\"eventType\\\": \\\"Revenue Distributed\\\", \\n        \\\"eventTypeSystemId\\\": \\\"1111111\\\", \\n        \\\"notes\\\": \\\"Manually distribute revenue by usage\\\"\\n    }, \\n    \\\"revenueScheduleDate\\\": \\\"2013-01-01\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/revenue-schedules/{rs-number}" : {
      "get" : {
        "tags" : [ "Revenue Schedules" ],
        "summary" : "Get revenue schedule details",
        "description" : "This REST API reference describes how to get the details of a revenue schedule by specifying the revenue schedule number. Request and response field descriptions and sample code are provided.",
        "operationId" : "GETRSDetail",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "rs-number",
          "in" : "path",
          "description" : "Revenue schedule number. The revenue schedule number is always prefixed with \"RS\", for example, \"RS-00000001\".\n",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GETRSDetailType"
            },
            "examples" : {
              "application/json" : {
                "number" : "RS-00000008",
                "recognitionRuleName" : "Recognize upon invoicing",
                "amount" : 50,
                "undistributedUnrecognizedRevenue" : -10,
                "recognizedRevenue" : 0,
                "unrecognizedRevenue" : 50,
                "currency" : "USD",
                "notes" : "change recognition term",
                "createdOn" : "2014-01-20 16:36:45",
                "updatedOn" : "2014-01-28 17:05:52",
                "accountId" : "2c92c0f8439770960143b2141f5a584e",
                "subscriptionId" : "2c92c0f943977b4f0143b23487994327",
                "subscriptionChargeId" : "2c92c0f943977b4f0143b23487ed432e",
                "linkedTransactionId" : "2c92c095439782cd0143b239aa234cf5",
                "linkedTransactionType" : "InvoiceItem",
                "referenceId" : null,
                "revenueScheduleDate" : "2014-01-20",
                "cf_phases__c" : "Phase 1",
                "revenueItems" : [ {
                  "accountingPeriodName" : "Nov'2013",
                  "isAccountingPeriodClosed" : true,
                  "amount" : 60,
                  "currency" : "USD",
                  "accountingPeriodStartDate" : "2013-10-01",
                  "accountingPeriodEndDate" : "2013-10-31",
                  "recognizedRevenueAccountingCodeType" : "Revenue: Sales",
                  "recognizedRevenueAccountingCode" : "MONTHLY RECURRING CHARGE",
                  "deferredRevenueAccountingCodeType" : "Liabilities: Deferred Revenue",
                  "deferredRevenueAccountingCode" : "MONTHLY RECURRING CHARGE"
                }, {
                  "accountingPeriodName" : "Open-Ended",
                  "isAccountingPeriodClosed" : false,
                  "amount" : -10,
                  "currency" : "USD",
                  "accountingPeriodStartDate" : "2013-11-01",
                  "accountingPeriodEndDate" : null,
                  "recognizedRevenueAccountingCodeType" : "Revenue: Sales",
                  "recognizedRevenueAccountingCode" : "MONTHLY RECURRING CHARGE",
                  "deferredRevenueAccountingCodeType" : "Liabilities: Sales",
                  "deferredRevenueAccountingCode" : "MONTHLY RECURRING CHARGE"
                } ],
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/revenue-schedules/{rs-number}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/revenue-schedules/{rs-number}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/revenue-schedules/{rs-number}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/revenue-schedules/{rs-number}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/revenue-schedules/{rs-number}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/revenue-schedules/{rs-number}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "delete" : {
        "tags" : [ "Revenue Schedules" ],
        "summary" : "Delete revenue schedule",
        "description" : "This REST API reference describes how to delete a revenue schedule by specifying its revenue schedule number\n## Prerequisites\nYou must have the Delete Custom Revenue Schedule permissions in Zuora Finance.\n",
        "operationId" : "DELETE_RS",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "rs-number",
          "in" : "path",
          "description" : "\nRevenue schedule number of the revenue schedule you want to delete, for example, RS-00000256. To be deleted, the revenue schedule:\n* Must be using a custom unlimited recognition rule.\n* Cannot have any revenue in a closed accounting period.\n* Cannot be included in a summary journal entry.\n* Cannot have a revenue schedule date in a closed accounting period.\n",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CommonResponseType"
            },
            "examples" : {
              "application/json" : {
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X DELETE -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/revenue-schedules/{rs-number}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/revenue-schedules/{rs-number}');\n$request->setMethod(HTTP_METH_DELETE);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/revenue-schedules/{rs-number}\")\n  .delete()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"DELETE\", \"/revenue-schedules/{rs-number}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/revenue-schedules/{rs-number}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Delete.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/revenue-schedules/{rs-number}\");\nvar request = new RestRequest(Method.DELETE);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/revenue-schedules/{rs-number}/basic-information" : {
      "put" : {
        "tags" : [ "Revenue Schedules" ],
        "summary" : "Update revenue schedule basic information",
        "description" : "This REST API reference describes how to get basic information of a revenue schedule by specifying the revenue schedule number. Request and response field descriptions and sample code are provided.\n",
        "operationId" : "PUT_RSBasicInfo",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "rs-number",
          "in" : "path",
          "description" : "Revenue schedule number. The revenue schedule number is always prefixed with \"RS\", for example, \"RS-00000001\".\n",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PUTRSBasicInfoType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/CommonResponseType"
            },
            "examples" : {
              "application/json" : {
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X PUT -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"cf_phases__c\": \"Phase 1\", \n    \"notes\": \"change recognition term\", \n    \"referenceId\": \"Reference ID\"\n}' \"https://rest.zuora.com/v1/revenue-schedules/{rs-number}/basic-information\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/revenue-schedules/{rs-number}/basic-information');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"cf_phases__c\": \"Phase 1\", \n    \"notes\": \"change recognition term\", \n    \"referenceId\": \"Reference ID\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"cf_phases__c\\\": \\\"Phase 1\\\", \\n    \\\"notes\\\": \\\"change recognition term\\\", \\n    \\\"referenceId\\\": \\\"Reference ID\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/revenue-schedules/{rs-number}/basic-information\")\n  .put(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"cf_phases__c\\\": \\\"Phase 1\\\", \\n    \\\"notes\\\": \\\"change recognition term\\\", \\n    \\\"referenceId\\\": \\\"Reference ID\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"PUT\", \"/revenue-schedules/{rs-number}/basic-information\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/revenue-schedules/{rs-number}/basic-information\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"cf_phases__c\\\": \\\"Phase 1\\\", \\n    \\\"notes\\\": \\\"change recognition term\\\", \\n    \\\"referenceId\\\": \\\"Reference ID\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/revenue-schedules/{rs-number}/basic-information\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"cf_phases__c\\\": \\\"Phase 1\\\", \\n    \\\"notes\\\": \\\"change recognition term\\\", \\n    \\\"referenceId\\\": \\\"Reference ID\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/revenue-schedules/{rs-number}/distribute-revenue-across-accounting-periods" : {
      "put" : {
        "tags" : [ "Revenue Schedules" ],
        "summary" : "Distribute revenue across accounting periods",
        "description" : "This REST API reference describes how to distribute revenue by specifying the revenue schedule number. Request and response field descriptions and sample code are provided.",
        "operationId" : "PUT_RevenueAcrossAP",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "rs-number",
          "in" : "path",
          "description" : "Revenue schedule number. The revenue schedule number is always prefixed with \"RS\", for example, \"RS-00000001\".\n",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PUTAllocateManuallyType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/PUTRevenueScheduleResponseType"
            },
            "examples" : {
              "application/json" : {
                "revenueEventNumber" : "RE-00000326",
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X PUT -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"cf_phases__c\": \"Phase 1\", \n    \"cf_project__c\": \"project A\", \n    \"eventType\": \"Revenue Distributed\", \n    \"eventTypeSystemId\": \"RevenueDistributed__z\", \n    \"notes\": \"Manually distribute revenue for Phase 1\", \n    \"revenueDistributions\": [\n        {\n            \"accountingPeriodName\": \"Jan'2013\", \n            \"newAmount\": \"500\"\n        }, \n        {\n            \"accountingPeriodName\": \"Feb'2013\", \n            \"newAmount\": \"600\"\n        }\n    ]\n}' \"https://rest.zuora.com/v1/revenue-schedules/{rs-number}/distribute-revenue-across-accounting-periods\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/revenue-schedules/{rs-number}/distribute-revenue-across-accounting-periods');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"cf_phases__c\": \"Phase 1\", \n    \"cf_project__c\": \"project A\", \n    \"eventType\": \"Revenue Distributed\", \n    \"eventTypeSystemId\": \"RevenueDistributed__z\", \n    \"notes\": \"Manually distribute revenue for Phase 1\", \n    \"revenueDistributions\": [\n        {\n            \"accountingPeriodName\": \"Jan'2013\", \n            \"newAmount\": \"500\"\n        }, \n        {\n            \"accountingPeriodName\": \"Feb'2013\", \n            \"newAmount\": \"600\"\n        }\n    ]\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"cf_phases__c\\\": \\\"Phase 1\\\", \\n    \\\"cf_project__c\\\": \\\"project A\\\", \\n    \\\"eventType\\\": \\\"Revenue Distributed\\\", \\n    \\\"eventTypeSystemId\\\": \\\"RevenueDistributed__z\\\", \\n    \\\"notes\\\": \\\"Manually distribute revenue for Phase 1\\\", \\n    \\\"revenueDistributions\\\": [\\n        {\\n            \\\"accountingPeriodName\\\": \\\"Jan'2013\\\", \\n            \\\"newAmount\\\": \\\"500\\\"\\n        }, \\n        {\\n            \\\"accountingPeriodName\\\": \\\"Feb'2013\\\", \\n            \\\"newAmount\\\": \\\"600\\\"\\n        }\\n    ]\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/revenue-schedules/{rs-number}/distribute-revenue-across-accounting-periods\")\n  .put(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"cf_phases__c\\\": \\\"Phase 1\\\", \\n    \\\"cf_project__c\\\": \\\"project A\\\", \\n    \\\"eventType\\\": \\\"Revenue Distributed\\\", \\n    \\\"eventTypeSystemId\\\": \\\"RevenueDistributed__z\\\", \\n    \\\"notes\\\": \\\"Manually distribute revenue for Phase 1\\\", \\n    \\\"revenueDistributions\\\": [\\n        {\\n            \\\"accountingPeriodName\\\": \\\"Jan'2013\\\", \\n            \\\"newAmount\\\": \\\"500\\\"\\n        }, \\n        {\\n            \\\"accountingPeriodName\\\": \\\"Feb'2013\\\", \\n            \\\"newAmount\\\": \\\"600\\\"\\n        }\\n    ]\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"PUT\", \"/revenue-schedules/{rs-number}/distribute-revenue-across-accounting-periods\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/revenue-schedules/{rs-number}/distribute-revenue-across-accounting-periods\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"cf_phases__c\\\": \\\"Phase 1\\\", \\n    \\\"cf_project__c\\\": \\\"project A\\\", \\n    \\\"eventType\\\": \\\"Revenue Distributed\\\", \\n    \\\"eventTypeSystemId\\\": \\\"RevenueDistributed__z\\\", \\n    \\\"notes\\\": \\\"Manually distribute revenue for Phase 1\\\", \\n    \\\"revenueDistributions\\\": [\\n        {\\n            \\\"accountingPeriodName\\\": \\\"Jan'2013\\\", \\n            \\\"newAmount\\\": \\\"500\\\"\\n        }, \\n        {\\n            \\\"accountingPeriodName\\\": \\\"Feb'2013\\\", \\n            \\\"newAmount\\\": \\\"600\\\"\\n        }\\n    ]\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/revenue-schedules/{rs-number}/distribute-revenue-across-accounting-periods\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"cf_phases__c\\\": \\\"Phase 1\\\", \\n    \\\"cf_project__c\\\": \\\"project A\\\", \\n    \\\"eventType\\\": \\\"Revenue Distributed\\\", \\n    \\\"eventTypeSystemId\\\": \\\"RevenueDistributed__z\\\", \\n    \\\"notes\\\": \\\"Manually distribute revenue for Phase 1\\\", \\n    \\\"revenueDistributions\\\": [\\n        {\\n            \\\"accountingPeriodName\\\": \\\"Jan'2013\\\", \\n            \\\"newAmount\\\": \\\"500\\\"\\n        }, \\n        {\\n            \\\"accountingPeriodName\\\": \\\"Feb'2013\\\", \\n            \\\"newAmount\\\": \\\"600\\\"\\n        }\\n    ]\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/revenue-schedules/{rs-number}/distribute-revenue-on-specific-date" : {
      "put" : {
        "tags" : [ "Revenue Schedules" ],
        "summary" : "Distribute revenue on a specific date",
        "description" : "This REST API reference describes how to distribute revenue on a specific recognition date. Request and response field descriptions and sample code are provided.",
        "operationId" : "PUT_RevenueSpecificDate",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "rs-number",
          "in" : "path",
          "description" : "Revenue schedule number. The revenue schedule number is always prefixed with \"RS\", for example, \"RS-00000001\".\n",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PUTSpecificDateAllocationType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/PUTRevenueScheduleResponseType"
            },
            "examples" : {
              "application/json" : {
                "revenueEventNumber" : "RE-00000326",
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X PUT -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"amount\": \"1000.00\", \n    \"distributeOn\": \"2016-02-03\", \n    \"distributionType\": \"specific date (delta fixed amount)\", \n    \"eventNumber__c\": \"phase 2\", \n    \"eventType\": \"Revenue Distributed\", \n    \"eventTypeSystemId\": \"RevenueDistributed__z\", \n    \"notes\": \"service delivered and accepted by customer\"\n}' \"https://rest.zuora.com/v1/revenue-schedules/{rs-number}/distribute-revenue-on-specific-date\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/revenue-schedules/{rs-number}/distribute-revenue-on-specific-date');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"amount\": \"1000.00\", \n    \"distributeOn\": \"2016-02-03\", \n    \"distributionType\": \"specific date (delta fixed amount)\", \n    \"eventNumber__c\": \"phase 2\", \n    \"eventType\": \"Revenue Distributed\", \n    \"eventTypeSystemId\": \"RevenueDistributed__z\", \n    \"notes\": \"service delivered and accepted by customer\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"amount\\\": \\\"1000.00\\\", \\n    \\\"distributeOn\\\": \\\"2016-02-03\\\", \\n    \\\"distributionType\\\": \\\"specific date (delta fixed amount)\\\", \\n    \\\"eventNumber__c\\\": \\\"phase 2\\\", \\n    \\\"eventType\\\": \\\"Revenue Distributed\\\", \\n    \\\"eventTypeSystemId\\\": \\\"RevenueDistributed__z\\\", \\n    \\\"notes\\\": \\\"service delivered and accepted by customer\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/revenue-schedules/{rs-number}/distribute-revenue-on-specific-date\")\n  .put(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"amount\\\": \\\"1000.00\\\", \\n    \\\"distributeOn\\\": \\\"2016-02-03\\\", \\n    \\\"distributionType\\\": \\\"specific date (delta fixed amount)\\\", \\n    \\\"eventNumber__c\\\": \\\"phase 2\\\", \\n    \\\"eventType\\\": \\\"Revenue Distributed\\\", \\n    \\\"eventTypeSystemId\\\": \\\"RevenueDistributed__z\\\", \\n    \\\"notes\\\": \\\"service delivered and accepted by customer\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"PUT\", \"/revenue-schedules/{rs-number}/distribute-revenue-on-specific-date\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/revenue-schedules/{rs-number}/distribute-revenue-on-specific-date\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"amount\\\": \\\"1000.00\\\", \\n    \\\"distributeOn\\\": \\\"2016-02-03\\\", \\n    \\\"distributionType\\\": \\\"specific date (delta fixed amount)\\\", \\n    \\\"eventNumber__c\\\": \\\"phase 2\\\", \\n    \\\"eventType\\\": \\\"Revenue Distributed\\\", \\n    \\\"eventTypeSystemId\\\": \\\"RevenueDistributed__z\\\", \\n    \\\"notes\\\": \\\"service delivered and accepted by customer\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/revenue-schedules/{rs-number}/distribute-revenue-on-specific-date\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"amount\\\": \\\"1000.00\\\", \\n    \\\"distributeOn\\\": \\\"2016-02-03\\\", \\n    \\\"distributionType\\\": \\\"specific date (delta fixed amount)\\\", \\n    \\\"eventNumber__c\\\": \\\"phase 2\\\", \\n    \\\"eventType\\\": \\\"Revenue Distributed\\\", \\n    \\\"eventTypeSystemId\\\": \\\"RevenueDistributed__z\\\", \\n    \\\"notes\\\": \\\"service delivered and accepted by customer\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/revenue-schedules/{rs-number}/distribute-revenue-with-date-range" : {
      "put" : {
        "tags" : [ "Revenue Schedules" ],
        "summary" : "Distribute revenue by recognition start and end dates",
        "description" : "This REST API reference describes how to distribute revenue by specifying the recognition start and end dates. Request and response field descriptions and sample code are provided.",
        "operationId" : "PUT_RevenueByRecognitionStartandEndDates",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "rs-number",
          "in" : "path",
          "description" : "Revenue schedule number. Specify the revenue schedule whose revenue you want to distribute.\n  \nThe revenue schedule number is always prefixed with \"RS\", for example, \"RS-00000001\".\n",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PUTRSTermType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/PUTRevenueScheduleResponseType"
            },
            "examples" : {
              "application/json" : {
                "revenueEventNumber" : "RE-00000326",
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X PUT -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"cf_phases__c\": \"Phase 2\", \n    \"distributionType\": \"Daily distribution\", \n    \"eventType\": \"Revenue Distributed\", \n    \"eventTypeSystemId\": \"RevenueDistributed__z\", \n    \"notes\": \"manual distribute revenue by usage\", \n    \"recognitionEnd\": \"2015-12-31\", \n    \"recognitionStart\": \"2015-12-1\"\n}' \"https://rest.zuora.com/v1/revenue-schedules/{rs-number}/distribute-revenue-with-date-range\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/revenue-schedules/{rs-number}/distribute-revenue-with-date-range');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"cf_phases__c\": \"Phase 2\", \n    \"distributionType\": \"Daily distribution\", \n    \"eventType\": \"Revenue Distributed\", \n    \"eventTypeSystemId\": \"RevenueDistributed__z\", \n    \"notes\": \"manual distribute revenue by usage\", \n    \"recognitionEnd\": \"2015-12-31\", \n    \"recognitionStart\": \"2015-12-1\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"cf_phases__c\\\": \\\"Phase 2\\\", \\n    \\\"distributionType\\\": \\\"Daily distribution\\\", \\n    \\\"eventType\\\": \\\"Revenue Distributed\\\", \\n    \\\"eventTypeSystemId\\\": \\\"RevenueDistributed__z\\\", \\n    \\\"notes\\\": \\\"manual distribute revenue by usage\\\", \\n    \\\"recognitionEnd\\\": \\\"2015-12-31\\\", \\n    \\\"recognitionStart\\\": \\\"2015-12-1\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/revenue-schedules/{rs-number}/distribute-revenue-with-date-range\")\n  .put(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"cf_phases__c\\\": \\\"Phase 2\\\", \\n    \\\"distributionType\\\": \\\"Daily distribution\\\", \\n    \\\"eventType\\\": \\\"Revenue Distributed\\\", \\n    \\\"eventTypeSystemId\\\": \\\"RevenueDistributed__z\\\", \\n    \\\"notes\\\": \\\"manual distribute revenue by usage\\\", \\n    \\\"recognitionEnd\\\": \\\"2015-12-31\\\", \\n    \\\"recognitionStart\\\": \\\"2015-12-1\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"PUT\", \"/revenue-schedules/{rs-number}/distribute-revenue-with-date-range\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/revenue-schedules/{rs-number}/distribute-revenue-with-date-range\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"cf_phases__c\\\": \\\"Phase 2\\\", \\n    \\\"distributionType\\\": \\\"Daily distribution\\\", \\n    \\\"eventType\\\": \\\"Revenue Distributed\\\", \\n    \\\"eventTypeSystemId\\\": \\\"RevenueDistributed__z\\\", \\n    \\\"notes\\\": \\\"manual distribute revenue by usage\\\", \\n    \\\"recognitionEnd\\\": \\\"2015-12-31\\\", \\n    \\\"recognitionStart\\\": \\\"2015-12-1\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/revenue-schedules/{rs-number}/distribute-revenue-with-date-range\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"cf_phases__c\\\": \\\"Phase 2\\\", \\n    \\\"distributionType\\\": \\\"Daily distribution\\\", \\n    \\\"eventType\\\": \\\"Revenue Distributed\\\", \\n    \\\"eventTypeSystemId\\\": \\\"RevenueDistributed__z\\\", \\n    \\\"notes\\\": \\\"manual distribute revenue by usage\\\", \\n    \\\"recognitionEnd\\\": \\\"2015-12-31\\\", \\n    \\\"recognitionStart\\\": \\\"2015-12-1\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/rsa-signatures" : {
      "post" : {
        "tags" : [ "RSA Signatures" ],
        "summary" : "Generate RSA signature",
        "description" : "\nThe REST API used in Payment Pages 2.0 are CORS (Cross-Origin Resource Sharing) enabled and therefore requires a digital signature. The POST rsa_signatures call generates and returns the required digital signature and token for a Payment Pages 2.0 form. You need to pass the generated signature to your client for it to access Payment Pages 2.0. \n  \nThis REST service should be used only when you implement Payment Pages 2.0. \n",
        "operationId" : "POSTRSASignature",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/POSTRSASignatureType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/POSTRSASignatureResponseType"
            },
            "examples" : {
              "application/json" : {
                "signature" : "VpCAFL2hHC2irxbhWYGLJmdBigjARsCStwHZiQ78z5LyVuBCFr2lkie0db/7E8n38MXaq12Ng5As5Qj+9Nhz6RBsSEWLod7c7hvwNI28OcgBZtcV/wscbWU69EP/+/XrQnF3ZUbHbqmcmhE8C/zNnc2zvHckfArroDW2HxxmATfMJS0xKUm5TrHi4tiILZVMYY1KIUqQTyuXV6uRWYzkqMkFkZDNCxSxf0XwzuBI/VOgTCmFZb0c3+bk/q6+7d/azFCrrg8C3dquCNJRfUeaBou+SLUa4TW3hV4rGd2zpvSrD/425x4qFNGV6JQ7wvIleIdrXU4qbh9nCmYoApMODA==",
                "token" : "E2BJEle7YrAlw93SjkaKthTmzMvXF341",
                "tenantId" : "12270",
                "key" : "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmWRFTwxQOqaG4JDZSQF/NJWvCDoSXm3TYilNzoN8nBbuvhKa7SZBBS+VP6rFqcbIU38Fu+Rf09vqyYOxuasPJe7yhqeOiStWB/aCPLhwXBeKt37L/qkwpNOKb1FETtUgrc+UjbtT0pnl55wCfi+Ik//X5SQi0B+c0ei1DQv99qmPJJErrhnBtdxeaWAT0EYAo42AOQ5cp0UWDY6OdOYL6+RyFOUFIs1yEgtfg4VMMSpSOKBOhYclQYuSC7nBF5Cc18ydtzsBpf7l49gCLTFzG45NCDAocada8KihFNpGXbauV9V4EPRD4lofaXdsXJ5Tw8/+KCsrUlvIQI3vcEv9LQIDAQAB",
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"method\": \"POST\", \n    \"pageId\": \"2c92c0f855e2b4630155ec9e6a1b6eec\", \n    \"uri\": \"https://apisandbox.zuora.com/apps/PublicHostedPageLite.do\"\n}' \"https://rest.zuora.com/v1/rsa-signatures\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/rsa-signatures');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"method\": \"POST\", \n    \"pageId\": \"2c92c0f855e2b4630155ec9e6a1b6eec\", \n    \"uri\": \"https://apisandbox.zuora.com/apps/PublicHostedPageLite.do\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"method\\\": \\\"POST\\\", \\n    \\\"pageId\\\": \\\"2c92c0f855e2b4630155ec9e6a1b6eec\\\", \\n    \\\"uri\\\": \\\"https://apisandbox.zuora.com/apps/PublicHostedPageLite.do\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/rsa-signatures\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"method\\\": \\\"POST\\\", \\n    \\\"pageId\\\": \\\"2c92c0f855e2b4630155ec9e6a1b6eec\\\", \\n    \\\"uri\\\": \\\"https://apisandbox.zuora.com/apps/PublicHostedPageLite.do\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/rsa-signatures\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/rsa-signatures\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"method\\\": \\\"POST\\\", \\n    \\\"pageId\\\": \\\"2c92c0f855e2b4630155ec9e6a1b6eec\\\", \\n    \\\"uri\\\": \\\"https://apisandbox.zuora.com/apps/PublicHostedPageLite.do\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/rsa-signatures\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"method\\\": \\\"POST\\\", \\n    \\\"pageId\\\": \\\"2c92c0f855e2b4630155ec9e6a1b6eec\\\", \\n    \\\"uri\\\": \\\"https://apisandbox.zuora.com/apps/PublicHostedPageLite.do\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/rsa-signatures/decrypt" : {
      "post" : {
        "tags" : [ "RSA Signatures" ],
        "summary" : "Decrypt RSA signature",
        "description" : "\nThe REST API used in Payment Pages 2.0 are CORS (Cross-Origin Resource Sharing) enabled and therefore requires a digital signature. You use rsa_signatures to generate the required digital signature and token for a Payment Pages 2.0 form, and then you use the decrypt REST service to decrypt the signature to validate the signature and key.\n\nThis REST service should be used only when you implement Payment Pages 2.0. \n",
        "operationId" : "POSTDecryptResponse",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/POSTDecryptionType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/POSTDecryptResponseType"
            },
            "examples" : {
              "application/json" : {
                "publicKey" : "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmWRFTwxQOqaG4JDZSQF/NJWvCDoSXm3TYilNzoN8nBbuvhKa7SZBBS+VP6rFqcbIU38Fu+Rf09vqyYOxuasPJe7yhqeOiStWB/aCPLhwXBeKt37L/qkwpNOKb1FETtUgrc+UjbtT0pnl55wCfi+Ik//X5SQi0B+c0ei1DQv99qmPJJErrhnBtdxeaWAT0EYAo42AOQ5cp0UWDY6OdOYL6+RyFOUFIs1yEgtfg4VMMSpSOKBOhYclQYuSC7nBF5Cc18ydtzsBpf7l49gCLTFzG45NCDAocada8KihFNpGXbauV9V4EPRD4lofaXdsXJ5Tw8/+KCsrUlvIQI3vcEv9LQIDAQAB",
                "signature" : "BeNYuHFkp/sbfm3clYyCkKEqd7XVTRDOJ1/5rL0tpkqxiSq+maqYkDz5kA+lN64ipoefQuJ7Rdm5TpICErufeJfa2sfTmGARDJ0hr+StXfLsIxHmDoNH5dqcXv3W6MR4kaljEqPVuhzGQ0We98DG52JcHWqqN53oHwTyuZuXocQqnmiE23IPm8UrU3g4hX/OLat0R81wDQ1SslZ+4pnqlncpTpopCK4FxeG3B0gYMhZcYd17Cmf0N3tEHVXHDlJIm4rOx0OVT+YBnjbKYLM0jxYu7PRKRis+yzN1BoappOEB0gmPjznIeiYF0u/fJdZWoEwK7d9mrfJeOBbpFyRoHA==",
                "decryptedSignature" : "/apps/publichostedpagelite.do#12270#tpyeSbjfUdpZpY4EMSCy7CrupvuhIdvM#1473658419005#2c92c0f855e2b4630155ec9e6a1b6eec",
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"method\": \"POST\", \n    \"publicKey\": \"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmWRFTwxQOqaG4JDZSQF/NJWvCDoSXm3TYilNzoN8nBbuvhKa7SZBBS+VP6rFqcbIU38Fu+Rf09vqyYOxuasPJe7yhqeOiStWB/aCPLhwXBeKt37L/qkwpNOKb1FETtUgrc+UjbtT0pnl55wCfi+Ik//X5SQi0B+c0ei1DQv99qmPJJErrhnBtdxeaWAT0EYAo42AOQ5cp0UWDY6OdOYL6+RyFOUFIs1yEgtfg4VMMSpSOKBOhYclQYuSC7nBF5Cc18ydtzsBpf7l49gCLTFzG45NCDAocada8KihFNpGXbauV9V4EPRD4lofaXdsXJ5Tw8/+KCsrUlvIQI3vcEv9LQIDAQAB\", \n    \"signature\": \"BeNYuHFkp/sbfm3clYyCkKEqd7XVTRDOJ1/5rL0tpkqxiSq+maqYkDz5kA+lN64ipoefQuJ7Rdm5TpICErufeJfa2sfTmGARDJ0hr+StXfLsIxHmDoNH5dqcXv3W6MR4kaljEqPVuhzGQ0We98DG52JcHWqqN53oHwTyuZuXocQqnmiE23IPm8UrU3g4hX/OLat0R81wDQ1SslZ+4pnqlncpTpopCK4FxeG3B0gYMhZcYd17Cmf0N3tEHVXHDlJIm4rOx0OVT+YBnjbKYLM0jxYu7PRKRis+yzN1BoappOEB0gmPjznIeiYF0u/fJdZWoEwK7d9mrfJeOBbpFyRoHA==\"\n}' \"https://rest.zuora.com/v1/rsa-signatures/decrypt\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/rsa-signatures/decrypt');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"method\": \"POST\", \n    \"publicKey\": \"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmWRFTwxQOqaG4JDZSQF/NJWvCDoSXm3TYilNzoN8nBbuvhKa7SZBBS+VP6rFqcbIU38Fu+Rf09vqyYOxuasPJe7yhqeOiStWB/aCPLhwXBeKt37L/qkwpNOKb1FETtUgrc+UjbtT0pnl55wCfi+Ik//X5SQi0B+c0ei1DQv99qmPJJErrhnBtdxeaWAT0EYAo42AOQ5cp0UWDY6OdOYL6+RyFOUFIs1yEgtfg4VMMSpSOKBOhYclQYuSC7nBF5Cc18ydtzsBpf7l49gCLTFzG45NCDAocada8KihFNpGXbauV9V4EPRD4lofaXdsXJ5Tw8/+KCsrUlvIQI3vcEv9LQIDAQAB\", \n    \"signature\": \"BeNYuHFkp/sbfm3clYyCkKEqd7XVTRDOJ1/5rL0tpkqxiSq+maqYkDz5kA+lN64ipoefQuJ7Rdm5TpICErufeJfa2sfTmGARDJ0hr+StXfLsIxHmDoNH5dqcXv3W6MR4kaljEqPVuhzGQ0We98DG52JcHWqqN53oHwTyuZuXocQqnmiE23IPm8UrU3g4hX/OLat0R81wDQ1SslZ+4pnqlncpTpopCK4FxeG3B0gYMhZcYd17Cmf0N3tEHVXHDlJIm4rOx0OVT+YBnjbKYLM0jxYu7PRKRis+yzN1BoappOEB0gmPjznIeiYF0u/fJdZWoEwK7d9mrfJeOBbpFyRoHA==\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"method\\\": \\\"POST\\\", \\n    \\\"publicKey\\\": \\\"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmWRFTwxQOqaG4JDZSQF/NJWvCDoSXm3TYilNzoN8nBbuvhKa7SZBBS+VP6rFqcbIU38Fu+Rf09vqyYOxuasPJe7yhqeOiStWB/aCPLhwXBeKt37L/qkwpNOKb1FETtUgrc+UjbtT0pnl55wCfi+Ik//X5SQi0B+c0ei1DQv99qmPJJErrhnBtdxeaWAT0EYAo42AOQ5cp0UWDY6OdOYL6+RyFOUFIs1yEgtfg4VMMSpSOKBOhYclQYuSC7nBF5Cc18ydtzsBpf7l49gCLTFzG45NCDAocada8KihFNpGXbauV9V4EPRD4lofaXdsXJ5Tw8/+KCsrUlvIQI3vcEv9LQIDAQAB\\\", \\n    \\\"signature\\\": \\\"BeNYuHFkp/sbfm3clYyCkKEqd7XVTRDOJ1/5rL0tpkqxiSq+maqYkDz5kA+lN64ipoefQuJ7Rdm5TpICErufeJfa2sfTmGARDJ0hr+StXfLsIxHmDoNH5dqcXv3W6MR4kaljEqPVuhzGQ0We98DG52JcHWqqN53oHwTyuZuXocQqnmiE23IPm8UrU3g4hX/OLat0R81wDQ1SslZ+4pnqlncpTpopCK4FxeG3B0gYMhZcYd17Cmf0N3tEHVXHDlJIm4rOx0OVT+YBnjbKYLM0jxYu7PRKRis+yzN1BoappOEB0gmPjznIeiYF0u/fJdZWoEwK7d9mrfJeOBbpFyRoHA==\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/rsa-signatures/decrypt\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"method\\\": \\\"POST\\\", \\n    \\\"publicKey\\\": \\\"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmWRFTwxQOqaG4JDZSQF/NJWvCDoSXm3TYilNzoN8nBbuvhKa7SZBBS+VP6rFqcbIU38Fu+Rf09vqyYOxuasPJe7yhqeOiStWB/aCPLhwXBeKt37L/qkwpNOKb1FETtUgrc+UjbtT0pnl55wCfi+Ik//X5SQi0B+c0ei1DQv99qmPJJErrhnBtdxeaWAT0EYAo42AOQ5cp0UWDY6OdOYL6+RyFOUFIs1yEgtfg4VMMSpSOKBOhYclQYuSC7nBF5Cc18ydtzsBpf7l49gCLTFzG45NCDAocada8KihFNpGXbauV9V4EPRD4lofaXdsXJ5Tw8/+KCsrUlvIQI3vcEv9LQIDAQAB\\\", \\n    \\\"signature\\\": \\\"BeNYuHFkp/sbfm3clYyCkKEqd7XVTRDOJ1/5rL0tpkqxiSq+maqYkDz5kA+lN64ipoefQuJ7Rdm5TpICErufeJfa2sfTmGARDJ0hr+StXfLsIxHmDoNH5dqcXv3W6MR4kaljEqPVuhzGQ0We98DG52JcHWqqN53oHwTyuZuXocQqnmiE23IPm8UrU3g4hX/OLat0R81wDQ1SslZ+4pnqlncpTpopCK4FxeG3B0gYMhZcYd17Cmf0N3tEHVXHDlJIm4rOx0OVT+YBnjbKYLM0jxYu7PRKRis+yzN1BoappOEB0gmPjznIeiYF0u/fJdZWoEwK7d9mrfJeOBbpFyRoHA==\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/rsa-signatures/decrypt\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/rsa-signatures/decrypt\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"method\\\": \\\"POST\\\", \\n    \\\"publicKey\\\": \\\"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmWRFTwxQOqaG4JDZSQF/NJWvCDoSXm3TYilNzoN8nBbuvhKa7SZBBS+VP6rFqcbIU38Fu+Rf09vqyYOxuasPJe7yhqeOiStWB/aCPLhwXBeKt37L/qkwpNOKb1FETtUgrc+UjbtT0pnl55wCfi+Ik//X5SQi0B+c0ei1DQv99qmPJJErrhnBtdxeaWAT0EYAo42AOQ5cp0UWDY6OdOYL6+RyFOUFIs1yEgtfg4VMMSpSOKBOhYclQYuSC7nBF5Cc18ydtzsBpf7l49gCLTFzG45NCDAocada8KihFNpGXbauV9V4EPRD4lofaXdsXJ5Tw8/+KCsrUlvIQI3vcEv9LQIDAQAB\\\", \\n    \\\"signature\\\": \\\"BeNYuHFkp/sbfm3clYyCkKEqd7XVTRDOJ1/5rL0tpkqxiSq+maqYkDz5kA+lN64ipoefQuJ7Rdm5TpICErufeJfa2sfTmGARDJ0hr+StXfLsIxHmDoNH5dqcXv3W6MR4kaljEqPVuhzGQ0We98DG52JcHWqqN53oHwTyuZuXocQqnmiE23IPm8UrU3g4hX/OLat0R81wDQ1SslZ+4pnqlncpTpopCK4FxeG3B0gYMhZcYd17Cmf0N3tEHVXHDlJIm4rOx0OVT+YBnjbKYLM0jxYu7PRKRis+yzN1BoappOEB0gmPjznIeiYF0u/fJdZWoEwK7d9mrfJeOBbpFyRoHA==\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/rsa-signatures/decrypt\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"method\\\": \\\"POST\\\", \\n    \\\"publicKey\\\": \\\"MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmWRFTwxQOqaG4JDZSQF/NJWvCDoSXm3TYilNzoN8nBbuvhKa7SZBBS+VP6rFqcbIU38Fu+Rf09vqyYOxuasPJe7yhqeOiStWB/aCPLhwXBeKt37L/qkwpNOKb1FETtUgrc+UjbtT0pnl55wCfi+Ik//X5SQi0B+c0ei1DQv99qmPJJErrhnBtdxeaWAT0EYAo42AOQ5cp0UWDY6OdOYL6+RyFOUFIs1yEgtfg4VMMSpSOKBOhYclQYuSC7nBF5Cc18ydtzsBpf7l49gCLTFzG45NCDAocada8KihFNpGXbauV9V4EPRD4lofaXdsXJ5Tw8/+KCsrUlvIQI3vcEv9LQIDAQAB\\\", \\n    \\\"signature\\\": \\\"BeNYuHFkp/sbfm3clYyCkKEqd7XVTRDOJ1/5rL0tpkqxiSq+maqYkDz5kA+lN64ipoefQuJ7Rdm5TpICErufeJfa2sfTmGARDJ0hr+StXfLsIxHmDoNH5dqcXv3W6MR4kaljEqPVuhzGQ0We98DG52JcHWqqN53oHwTyuZuXocQqnmiE23IPm8UrU3g4hX/OLat0R81wDQ1SslZ+4pnqlncpTpopCK4FxeG3B0gYMhZcYd17Cmf0N3tEHVXHDlJIm4rOx0OVT+YBnjbKYLM0jxYu7PRKRis+yzN1BoappOEB0gmPjznIeiYF0u/fJdZWoEwK7d9mrfJeOBbpFyRoHA==\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/settings/finance/revenue-automation-start-date" : {
      "get" : {
        "tags" : [ "Settings" ],
        "summary" : "Get the revenue automation start date",
        "description" : "This REST API reference describes how to get the revenue automation start date. Request and response field descriptions and sample code are provided.\n",
        "operationId" : "GETRevenueStartDateSetting",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GETRevenueStartDateSettingType"
            },
            "examples" : {
              "application/json" : {
                "startDate" : "2012-02-01",
                "updatedOn" : "2013-09-11 22:49:18",
                "updatedBy" : "MyCorpAdmin",
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/settings/finance/revenue-automation-start-date\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/settings/finance/revenue-automation-start-date');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/settings/finance/revenue-automation-start-date\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/settings/finance/revenue-automation-start-date\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/settings/finance/revenue-automation-start-date\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/settings/finance/revenue-automation-start-date\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/subscriptions" : {
      "post" : {
        "tags" : [ "Subscriptions" ],
        "summary" : "Create subscription",
        "description" : "This REST API reference describes how to create a new subscription for an existing customer account.\n\n## Notes\nIf invoiceCollect is `true`, the call will not return success = `true` unless the subscription, invoice, and payment are all successful.\n\nDefault values for **customerAcceptanceDate** and **serviceActivationDate** are set as follows.\n\n|        | serviceActivationDate(SA) specified          | serviceActivationDate (SA) NOT specified  |\n| ------------- |:-------------:| -----:|\n| customerAcceptanceDate (CA) specified| SA uses value in the request call; CA uses value in the request call| CA uses value in the request call;SA uses CE as default |\n| customerAcceptanceDate (CA) NOT specified      | SA uses value in the request call; CA uses SA as default |   SA and CA use CE as default |\n",
        "operationId" : "POST_Subscription",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/POSTSubscriptionType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/POSTSubscriptionResponseType"
            },
            "examples" : {
              "application/json" : {
                "success" : true,
                "subscriptionId" : "402890fc4fa094d5014fa0a4aa78001d",
                "subscriptionNumber" : "A-S00000041",
                "contractedMrr" : 1950,
                "totalContractedValue" : 6227.41935465
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"accountKey\": \"A00001115\", \n    \"autoRenew\": true, \n    \"collect\": false, \n    \"contractEffectiveDate\": \"2015-02-1\", \n    \"initialTerm\": \"12\", \n    \"initialTermPeriodType\": \"Week\", \n    \"invoice\": true, \n    \"invoiceTargetDate\": \"2015-12-31\", \n    \"myCustomField__c\": \"test\", \n    \"notes\": \"Test POST subscription from z-ruby-sdk\", \n    \"renewalTerm\": \"3\", \n    \"renewalTermPeriodType\": \"Week\", \n    \"subscribeToRatePlans\": [\n        {\n            \"chargeOverrides\": [\n                {\n                    \"billCycleDay\": \"5\", \n                    \"billCycleType\": \"SpecificDayofMonth\", \n                    \"billingPeriodAlignment\": \"AlignToCharge\", \n                    \"billingTiming\": \"IN_ARREARS\", \n                    \"description\": \"This is rate plan charge description\", \n                    \"myCustomField__c\": \"test\", \n                    \"number\": \"TestCharge\", \n                    \"price\": 12.01, \n                    \"productRatePlanChargeId\": \"ff8080811ca15d19011cddad8c953b53\", \n                    \"triggerDate\": \"2015-09-01\", \n                    \"triggerEvent\": \"SpecificDate\"\n                }\n            ], \n            \"productRatePlanId\": \"ff8080811ca15d19011cdda9b0ad3b51\"\n        }\n    ], \n    \"termType\": \"TERMED\"\n}' \"https://rest.zuora.com/v1/subscriptions\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/subscriptions');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"accountKey\": \"A00001115\", \n    \"autoRenew\": true, \n    \"collect\": false, \n    \"contractEffectiveDate\": \"2015-02-1\", \n    \"initialTerm\": \"12\", \n    \"initialTermPeriodType\": \"Week\", \n    \"invoice\": true, \n    \"invoiceTargetDate\": \"2015-12-31\", \n    \"myCustomField__c\": \"test\", \n    \"notes\": \"Test POST subscription from z-ruby-sdk\", \n    \"renewalTerm\": \"3\", \n    \"renewalTermPeriodType\": \"Week\", \n    \"subscribeToRatePlans\": [\n        {\n            \"chargeOverrides\": [\n                {\n                    \"billCycleDay\": \"5\", \n                    \"billCycleType\": \"SpecificDayofMonth\", \n                    \"billingPeriodAlignment\": \"AlignToCharge\", \n                    \"billingTiming\": \"IN_ARREARS\", \n                    \"description\": \"This is rate plan charge description\", \n                    \"myCustomField__c\": \"test\", \n                    \"number\": \"TestCharge\", \n                    \"price\": 12.01, \n                    \"productRatePlanChargeId\": \"ff8080811ca15d19011cddad8c953b53\", \n                    \"triggerDate\": \"2015-09-01\", \n                    \"triggerEvent\": \"SpecificDate\"\n                }\n            ], \n            \"productRatePlanId\": \"ff8080811ca15d19011cdda9b0ad3b51\"\n        }\n    ], \n    \"termType\": \"TERMED\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"accountKey\\\": \\\"A00001115\\\", \\n    \\\"autoRenew\\\": true, \\n    \\\"collect\\\": false, \\n    \\\"contractEffectiveDate\\\": \\\"2015-02-1\\\", \\n    \\\"initialTerm\\\": \\\"12\\\", \\n    \\\"initialTermPeriodType\\\": \\\"Week\\\", \\n    \\\"invoice\\\": true, \\n    \\\"invoiceTargetDate\\\": \\\"2015-12-31\\\", \\n    \\\"myCustomField__c\\\": \\\"test\\\", \\n    \\\"notes\\\": \\\"Test POST subscription from z-ruby-sdk\\\", \\n    \\\"renewalTerm\\\": \\\"3\\\", \\n    \\\"renewalTermPeriodType\\\": \\\"Week\\\", \\n    \\\"subscribeToRatePlans\\\": [\\n        {\\n            \\\"chargeOverrides\\\": [\\n                {\\n                    \\\"billCycleDay\\\": \\\"5\\\", \\n                    \\\"billCycleType\\\": \\\"SpecificDayofMonth\\\", \\n                    \\\"billingPeriodAlignment\\\": \\\"AlignToCharge\\\", \\n                    \\\"billingTiming\\\": \\\"IN_ARREARS\\\", \\n                    \\\"description\\\": \\\"This is rate plan charge description\\\", \\n                    \\\"myCustomField__c\\\": \\\"test\\\", \\n                    \\\"number\\\": \\\"TestCharge\\\", \\n                    \\\"price\\\": 12.01, \\n                    \\\"productRatePlanChargeId\\\": \\\"ff8080811ca15d19011cddad8c953b53\\\", \\n                    \\\"triggerDate\\\": \\\"2015-09-01\\\", \\n                    \\\"triggerEvent\\\": \\\"SpecificDate\\\"\\n                }\\n            ], \\n            \\\"productRatePlanId\\\": \\\"ff8080811ca15d19011cdda9b0ad3b51\\\"\\n        }\\n    ], \\n    \\\"termType\\\": \\\"TERMED\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/subscriptions\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"accountKey\\\": \\\"A00001115\\\", \\n    \\\"autoRenew\\\": true, \\n    \\\"collect\\\": false, \\n    \\\"contractEffectiveDate\\\": \\\"2015-02-1\\\", \\n    \\\"initialTerm\\\": \\\"12\\\", \\n    \\\"initialTermPeriodType\\\": \\\"Week\\\", \\n    \\\"invoice\\\": true, \\n    \\\"invoiceTargetDate\\\": \\\"2015-12-31\\\", \\n    \\\"myCustomField__c\\\": \\\"test\\\", \\n    \\\"notes\\\": \\\"Test POST subscription from z-ruby-sdk\\\", \\n    \\\"renewalTerm\\\": \\\"3\\\", \\n    \\\"renewalTermPeriodType\\\": \\\"Week\\\", \\n    \\\"subscribeToRatePlans\\\": [\\n        {\\n            \\\"chargeOverrides\\\": [\\n                {\\n                    \\\"billCycleDay\\\": \\\"5\\\", \\n                    \\\"billCycleType\\\": \\\"SpecificDayofMonth\\\", \\n                    \\\"billingPeriodAlignment\\\": \\\"AlignToCharge\\\", \\n                    \\\"billingTiming\\\": \\\"IN_ARREARS\\\", \\n                    \\\"description\\\": \\\"This is rate plan charge description\\\", \\n                    \\\"myCustomField__c\\\": \\\"test\\\", \\n                    \\\"number\\\": \\\"TestCharge\\\", \\n                    \\\"price\\\": 12.01, \\n                    \\\"productRatePlanChargeId\\\": \\\"ff8080811ca15d19011cddad8c953b53\\\", \\n                    \\\"triggerDate\\\": \\\"2015-09-01\\\", \\n                    \\\"triggerEvent\\\": \\\"SpecificDate\\\"\\n                }\\n            ], \\n            \\\"productRatePlanId\\\": \\\"ff8080811ca15d19011cdda9b0ad3b51\\\"\\n        }\\n    ], \\n    \\\"termType\\\": \\\"TERMED\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/subscriptions\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/subscriptions\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"accountKey\\\": \\\"A00001115\\\", \\n    \\\"autoRenew\\\": true, \\n    \\\"collect\\\": false, \\n    \\\"contractEffectiveDate\\\": \\\"2015-02-1\\\", \\n    \\\"initialTerm\\\": \\\"12\\\", \\n    \\\"initialTermPeriodType\\\": \\\"Week\\\", \\n    \\\"invoice\\\": true, \\n    \\\"invoiceTargetDate\\\": \\\"2015-12-31\\\", \\n    \\\"myCustomField__c\\\": \\\"test\\\", \\n    \\\"notes\\\": \\\"Test POST subscription from z-ruby-sdk\\\", \\n    \\\"renewalTerm\\\": \\\"3\\\", \\n    \\\"renewalTermPeriodType\\\": \\\"Week\\\", \\n    \\\"subscribeToRatePlans\\\": [\\n        {\\n            \\\"chargeOverrides\\\": [\\n                {\\n                    \\\"billCycleDay\\\": \\\"5\\\", \\n                    \\\"billCycleType\\\": \\\"SpecificDayofMonth\\\", \\n                    \\\"billingPeriodAlignment\\\": \\\"AlignToCharge\\\", \\n                    \\\"billingTiming\\\": \\\"IN_ARREARS\\\", \\n                    \\\"description\\\": \\\"This is rate plan charge description\\\", \\n                    \\\"myCustomField__c\\\": \\\"test\\\", \\n                    \\\"number\\\": \\\"TestCharge\\\", \\n                    \\\"price\\\": 12.01, \\n                    \\\"productRatePlanChargeId\\\": \\\"ff8080811ca15d19011cddad8c953b53\\\", \\n                    \\\"triggerDate\\\": \\\"2015-09-01\\\", \\n                    \\\"triggerEvent\\\": \\\"SpecificDate\\\"\\n                }\\n            ], \\n            \\\"productRatePlanId\\\": \\\"ff8080811ca15d19011cdda9b0ad3b51\\\"\\n        }\\n    ], \\n    \\\"termType\\\": \\\"TERMED\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/subscriptions\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"accountKey\\\": \\\"A00001115\\\", \\n    \\\"autoRenew\\\": true, \\n    \\\"collect\\\": false, \\n    \\\"contractEffectiveDate\\\": \\\"2015-02-1\\\", \\n    \\\"initialTerm\\\": \\\"12\\\", \\n    \\\"initialTermPeriodType\\\": \\\"Week\\\", \\n    \\\"invoice\\\": true, \\n    \\\"invoiceTargetDate\\\": \\\"2015-12-31\\\", \\n    \\\"myCustomField__c\\\": \\\"test\\\", \\n    \\\"notes\\\": \\\"Test POST subscription from z-ruby-sdk\\\", \\n    \\\"renewalTerm\\\": \\\"3\\\", \\n    \\\"renewalTermPeriodType\\\": \\\"Week\\\", \\n    \\\"subscribeToRatePlans\\\": [\\n        {\\n            \\\"chargeOverrides\\\": [\\n                {\\n                    \\\"billCycleDay\\\": \\\"5\\\", \\n                    \\\"billCycleType\\\": \\\"SpecificDayofMonth\\\", \\n                    \\\"billingPeriodAlignment\\\": \\\"AlignToCharge\\\", \\n                    \\\"billingTiming\\\": \\\"IN_ARREARS\\\", \\n                    \\\"description\\\": \\\"This is rate plan charge description\\\", \\n                    \\\"myCustomField__c\\\": \\\"test\\\", \\n                    \\\"number\\\": \\\"TestCharge\\\", \\n                    \\\"price\\\": 12.01, \\n                    \\\"productRatePlanChargeId\\\": \\\"ff8080811ca15d19011cddad8c953b53\\\", \\n                    \\\"triggerDate\\\": \\\"2015-09-01\\\", \\n                    \\\"triggerEvent\\\": \\\"SpecificDate\\\"\\n                }\\n            ], \\n            \\\"productRatePlanId\\\": \\\"ff8080811ca15d19011cdda9b0ad3b51\\\"\\n        }\\n    ], \\n    \\\"termType\\\": \\\"TERMED\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/subscriptions/accounts/{account-key}" : {
      "get" : {
        "tags" : [ "Subscriptions" ],
        "summary" : "Get subscriptions by account",
        "description" : "Retrieves all subscriptions associated with the specified account. Zuora only returns the latest version of the subscriptions.\n\nSubscription data is returned in reverse chronological order based on `updatedDate`.\n",
        "operationId" : "GETSubscription",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "account-key",
          "in" : "path",
          "description" : "\nPossible values are:\n* an account number\n* an account ID\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "charge-detail",
          "in" : "query",
          "description" : "The segmented rate plan charges.\n\nWhen an amendment results in a change to a charge, Zuora creates a segmented rate plan charge. Use this field to track segment charges.\n\nPossible values are:\n\n* `last-segment`: (Default) The last rate plan charge on the subscription. The last rate plan charge is the last one in the order of time on the subscription rather than the most recent updated charge on the subscription.\n* `current-segment`: The segmented charge that is active on today’s date (**effectiveStartDate** <= today’s date < **effectiveEndDate**).\n* `all-segments`: All the segmented charges.\n* `specific-segment&as-of-date=date`: The segmented charge that is active on a date you specified (**effectiveStartDate** <= specific date < **effectiveEndDate**). The format of the date is yyyy-mm-dd.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GETSubscriptionWrapper"
            },
            "examples" : {
              "application/json" : {
                "subscriptions" : [ {
                  "id" : "402890314fcfc93e014fd051d3c50022",
                  "accountId" : "402890314fcf05a0014fcf087e690003",
                  "accountNumber" : "A00000001",
                  "accountName" : "MyAcctName",
                  "subscriptionNumber" : "A-S00000003",
                  "termType" : "TERMED",
                  "contractEffectiveDate" : "2015-09-15",
                  "serviceActivationDate" : "2015-09-15",
                  "customerAcceptanceDate" : "2015-09-15",
                  "subscriptionStartDate" : "2015-09-15",
                  "termStartDate" : "2015-09-15",
                  "termEndDate" : "2019-11-15",
                  "initialTerm" : 50,
                  "initialTermPeriodType" : "Week",
                  "currentTerm" : 12,
                  "currentTermPeriodType" : "Week",
                  "autoRenew" : false,
                  "renewalSetting" : "RENEW_WITH_SPECIFIC_TERM",
                  "renewalTerm" : 0,
                  "renewalTermPeriodType" : "Week",
                  "contractedMrr" : 360,
                  "totalContractedValue" : 18000,
                  "notes" : "",
                  "status" : "Active",
                  "ratePlans" : [ {
                    "id" : "402890314fcfc93e014fd051d3f7002d",
                    "productId" : "402890314fcb13c9014fcb22a2230002",
                    "productName" : "Volume Product",
                    "productSku" : "SKU-00000022",
                    "productRatePlanId" : "402890314fcb13c9014fcb22d38b0004",
                    "ratePlanName" : "New Rate Plan",
                    "ratePlanCharges" : [ {
                      "originalChargeId" : "402890314fcfc93e014fd051d40d002e",
                      "productRatePlanChargeId" : "402890314fcb13c9014fcb2382b50011",
                      "number" : "C-00000002",
                      "name" : "New Component",
                      "type" : "Recurring",
                      "model" : "Volume",
                      "uom" : "Each",
                      "version" : 1,
                      "billingDay" : "DefaultFromCustomer",
                      "listPriceBase" : "Per_Billing_Period",
                      "billingPeriod" : "Month",
                      "specificBillingPeriod" : null,
                      "smoothingModel" : null,
                      "numberOfPeriods" : null,
                      "overageCalculationOption" : null,
                      "overageUnusedUnitsCreditOption" : null,
                      "unusedUnitsCreditRates" : null,
                      "usageRecordRatingOption" : null,
                      "chargeSegments" : [ {
                        "id" : "402890314fcfc93e014fd051d40d002e",
                        "pricingSummary" : "Up to 10 Each: USD60/Each;  Up to 20 Each: USD50/Each",
                        "priceChangeOption" : "SpecificPercentageValue",
                        "priceIncreasePercentage" : 10,
                        "currency" : "USD",
                        "price" : null,
                        "tiers" : [ {
                          "tier" : 1,
                          "startingUnit" : 1,
                          "endingUnit" : 10,
                          "price" : 60,
                          "priceFormat" : "PerUnit"
                        }, {
                          "tier" : 2,
                          "startingUnit" : 11,
                          "endingUnit" : 20,
                          "price" : 50,
                          "priceFormat" : "PerUnit"
                        } ],
                        "includedUnits" : null,
                        "overagePrice" : null,
                        "discountPercentage" : null,
                        "discountAmount" : null,
                        "applyDiscountTo" : null,
                        "discountLevel" : null,
                        "billingPeriodAlignment" : "AlignToCharge",
                        "quantity" : 6,
                        "segment" : 1,
                        "effectiveStartDate" : "2015-09-15",
                        "effectiveEndDate" : "2019-11-15",
                        "processedThroughDate" : null,
                        "chargedThroughDate" : null,
                        "done" : false,
                        "triggerDate" : null,
                        "triggerEvent" : "ContractEffective",
                        "endDateCondition" : "One_Time",
                        "upToPeriodsType" : null,
                        "upToPeriods" : null,
                        "specificEndDate" : null,
                        "mrr" : 360,
                        "dmrc" : 360,
                        "tcv" : 18000,
                        "dtcv" : 18000,
                        "description" : ""
                      } ]
                    }, {
                      "originalChargeId" : "402890314fcfc93e014fd051d41a002f",
                      "productRatePlanChargeId" : "402890314fcfc93e014fd05040250018",
                      "number" : "C-00000003",
                      "name" : "New Component",
                      "type" : "Usage",
                      "model" : "TieredWithOverage",
                      "uom" : "Each",
                      "version" : 1,
                      "billingDay" : "DefaultFromCustomer",
                      "listPriceBase" : null,
                      "billingPeriod" : "Month",
                      "specificBillingPeriod" : null,
                      "smoothingModel" : "RollingWindow",
                      "numberOfPeriods" : 6,
                      "overageCalculationOption" : "EndOfSmoothingPeriod",
                      "overageUnusedUnitsCreditOption" : null,
                      "unusedUnitsCreditRates" : null,
                      "usageRecordRatingOption" : null,
                      "chargeSegments" : [ {
                        "id" : "402890314fcfc93e014fd051d41a002f",
                        "pricingSummary" : "1 to 10 Each: USD60 flat fee;  11 to 20 Each: USD50 flat fee;  21 to 30 Each: USD40 flat fee, thereafter USD35 per exceeding unit",
                        "priceChangeOption" : "SpecificPercentageValue",
                        "priceIncreasePercentage" : 5,
                        "currency" : "USD",
                        "price" : null,
                        "tiers" : [ {
                          "tier" : 1,
                          "startingUnit" : 1,
                          "endingUnit" : 10,
                          "price" : 60,
                          "priceFormat" : "FlatFee"
                        }, {
                          "tier" : 2,
                          "startingUnit" : 11,
                          "endingUnit" : 20,
                          "price" : 50,
                          "priceFormat" : "FlatFee"
                        }, {
                          "tier" : 3,
                          "startingUnit" : 21,
                          "endingUnit" : 30,
                          "price" : 40,
                          "priceFormat" : "FlatFee"
                        } ],
                        "includedUnits" : null,
                        "overagePrice" : 35,
                        "discountPercentage" : null,
                        "discountAmount" : null,
                        "applyDiscountTo" : null,
                        "discountLevel" : null,
                        "billingPeriodAlignment" : "AlignToCharge",
                        "quantity" : null,
                        "segment" : 1,
                        "effectiveStartDate" : "2015-09-15",
                        "effectiveEndDate" : "2019-11-15",
                        "processedThroughDate" : null,
                        "chargedThroughDate" : null,
                        "done" : false,
                        "triggerDate" : null,
                        "triggerEvent" : "ContractEffective",
                        "endDateCondition" : "One_Time",
                        "upToPeriodsType" : null,
                        "upToPeriods" : null,
                        "specificEndDate" : null,
                        "mrr" : null,
                        "dmrc" : null,
                        "tcv" : null,
                        "dtcv" : null,
                        "description" : ""
                      } ]
                    } ]
                  } ],
                  "success" : true
                } ]
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/subscriptions/accounts/{account-key}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/subscriptions/accounts/{account-key}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/subscriptions/accounts/{account-key}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/subscriptions/accounts/{account-key}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/subscriptions/accounts/{account-key}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/subscriptions/accounts/{account-key}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/subscriptions/preview" : {
      "post" : {
        "tags" : [ "Subscriptions" ],
        "summary" : "Preview subscription",
        "description" : "The REST API reference describes how to create a new subscription in preview mode. This call does not require a valid customer account. It can be used to show potential new customers a preview of a subscription with complete details and charges before creating an account, or to let existing customers preview a subscription with all charges before committing.\n\n## Notes\nDefault values for **customerAcceptanceDate** and **serviceActivationDate** are set as follows.\n\n|        | serviceActivationDate (SA) specified          | serviceActivationDate (SA) NOT specified  |\n| ------------- |:-------------:| -----:|\n| customerAcceptanceDate (CA) specified      | SA uses value in the request call; CA uses value in the request call| CA uses value in the request call;SA uses CE as default |\n| customerAcceptanceDate (CA) NOT specified      | SA uses value in the request call; CA uses SA as default |   SA and CA use CE as default |\n",
        "operationId" : "POST_SubscriptionPreview",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/POSTSubscriptionPreviewType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/POSTSubscriptionPreviewResponseType"
            },
            "examples" : {
              "application/json" : {
                "success" : true,
                "contractedMrr" : 100,
                "totalContractedValue" : 277.4193548,
                "amount" : 278.28,
                "amountWithoutTax" : 278.28,
                "taxAmount" : 0,
                "invoiceTargetDate" : "2016-12-31",
                "invoiceItems" : [ {
                  "serviceStartDate" : "2016-01-15",
                  "serviceEndDate" : "2016-01-30",
                  "chargeAmount" : 51.61,
                  "chargeDescription" : "",
                  "chargeName" : "recurring",
                  "productName" : "restAPITest",
                  "productRatePlanChargeId" : "40289070576ad42f0157b24a62420918",
                  "quantity" : 1,
                  "unitOfMeasure" : ""
                }, {
                  "serviceStartDate" : "2016-01-31",
                  "serviceEndDate" : "2016-02-28",
                  "chargeAmount" : 100,
                  "chargeDescription" : "",
                  "chargeName" : "recurring",
                  "productName" : "restAPITest",
                  "productRatePlanChargeId" : "40289070576ad42f0157b24a62420918",
                  "quantity" : 1,
                  "unitOfMeasure" : ""
                }, {
                  "serviceStartDate" : "2016-02-29",
                  "serviceEndDate" : "2016-03-30",
                  "chargeAmount" : 100,
                  "chargeDescription" : "",
                  "chargeName" : "recurring",
                  "productName" : "restAPITest",
                  "productRatePlanChargeId" : "40289070576ad42f0157b24a62420918",
                  "quantity" : 1,
                  "unitOfMeasure" : ""
                }, {
                  "serviceStartDate" : "2016-03-31",
                  "serviceEndDate" : "2016-04-07",
                  "chargeAmount" : 26.67,
                  "chargeDescription" : "",
                  "chargeName" : "recurring",
                  "productName" : "restAPITest",
                  "productRatePlanChargeId" : "40289070576ad42f0157b24a62420918",
                  "quantity" : 1,
                  "unitOfMeasure" : ""
                } ]
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"contractEffectiveDate\": \"2013-1-15\", \n    \"initialTerm\": 12, \n    \"initialTermPeriodType\": \"Week\", \n    \"invoiceTargetDate\": \"2013-12-31\", \n    \"previewAccountInfo\": {\n        \"billCycleDay\": 31, \n        \"billToContact\": {\n            \"city\": \"Walnut Creek\", \n            \"country\": \"United States\", \n            \"county\": \"Contra Consta\", \n            \"state\": \"California\", \n            \"zipCode\": \"94549\"\n        }, \n        \"currency\": \"USD\"\n    }, \n    \"subscribeToRatePlans\": [\n        {\n            \"chargeOverrides\": [\n                {\n                    \"productRatePlanChargeId\": \"ff8080811ca15d19011cddad8c953b53\", \n                    \"quantity\": 100\n                }\n            ], \n            \"productRatePlanId\": \"ff8080811ca15d19011cdda9b0ad3b51\"\n        }\n    ], \n    \"termType\": \"TERMED\"\n}' \"https://rest.zuora.com/v1/subscriptions/preview\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/subscriptions/preview');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"contractEffectiveDate\": \"2013-1-15\", \n    \"initialTerm\": 12, \n    \"initialTermPeriodType\": \"Week\", \n    \"invoiceTargetDate\": \"2013-12-31\", \n    \"previewAccountInfo\": {\n        \"billCycleDay\": 31, \n        \"billToContact\": {\n            \"city\": \"Walnut Creek\", \n            \"country\": \"United States\", \n            \"county\": \"Contra Consta\", \n            \"state\": \"California\", \n            \"zipCode\": \"94549\"\n        }, \n        \"currency\": \"USD\"\n    }, \n    \"subscribeToRatePlans\": [\n        {\n            \"chargeOverrides\": [\n                {\n                    \"productRatePlanChargeId\": \"ff8080811ca15d19011cddad8c953b53\", \n                    \"quantity\": 100\n                }\n            ], \n            \"productRatePlanId\": \"ff8080811ca15d19011cdda9b0ad3b51\"\n        }\n    ], \n    \"termType\": \"TERMED\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"contractEffectiveDate\\\": \\\"2013-1-15\\\", \\n    \\\"initialTerm\\\": 12, \\n    \\\"initialTermPeriodType\\\": \\\"Week\\\", \\n    \\\"invoiceTargetDate\\\": \\\"2013-12-31\\\", \\n    \\\"previewAccountInfo\\\": {\\n        \\\"billCycleDay\\\": 31, \\n        \\\"billToContact\\\": {\\n            \\\"city\\\": \\\"Walnut Creek\\\", \\n            \\\"country\\\": \\\"United States\\\", \\n            \\\"county\\\": \\\"Contra Consta\\\", \\n            \\\"state\\\": \\\"California\\\", \\n            \\\"zipCode\\\": \\\"94549\\\"\\n        }, \\n        \\\"currency\\\": \\\"USD\\\"\\n    }, \\n    \\\"subscribeToRatePlans\\\": [\\n        {\\n            \\\"chargeOverrides\\\": [\\n                {\\n                    \\\"productRatePlanChargeId\\\": \\\"ff8080811ca15d19011cddad8c953b53\\\", \\n                    \\\"quantity\\\": 100\\n                }\\n            ], \\n            \\\"productRatePlanId\\\": \\\"ff8080811ca15d19011cdda9b0ad3b51\\\"\\n        }\\n    ], \\n    \\\"termType\\\": \\\"TERMED\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/subscriptions/preview\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"contractEffectiveDate\\\": \\\"2013-1-15\\\", \\n    \\\"initialTerm\\\": 12, \\n    \\\"initialTermPeriodType\\\": \\\"Week\\\", \\n    \\\"invoiceTargetDate\\\": \\\"2013-12-31\\\", \\n    \\\"previewAccountInfo\\\": {\\n        \\\"billCycleDay\\\": 31, \\n        \\\"billToContact\\\": {\\n            \\\"city\\\": \\\"Walnut Creek\\\", \\n            \\\"country\\\": \\\"United States\\\", \\n            \\\"county\\\": \\\"Contra Consta\\\", \\n            \\\"state\\\": \\\"California\\\", \\n            \\\"zipCode\\\": \\\"94549\\\"\\n        }, \\n        \\\"currency\\\": \\\"USD\\\"\\n    }, \\n    \\\"subscribeToRatePlans\\\": [\\n        {\\n            \\\"chargeOverrides\\\": [\\n                {\\n                    \\\"productRatePlanChargeId\\\": \\\"ff8080811ca15d19011cddad8c953b53\\\", \\n                    \\\"quantity\\\": 100\\n                }\\n            ], \\n            \\\"productRatePlanId\\\": \\\"ff8080811ca15d19011cdda9b0ad3b51\\\"\\n        }\\n    ], \\n    \\\"termType\\\": \\\"TERMED\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/subscriptions/preview\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/subscriptions/preview\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"contractEffectiveDate\\\": \\\"2013-1-15\\\", \\n    \\\"initialTerm\\\": 12, \\n    \\\"initialTermPeriodType\\\": \\\"Week\\\", \\n    \\\"invoiceTargetDate\\\": \\\"2013-12-31\\\", \\n    \\\"previewAccountInfo\\\": {\\n        \\\"billCycleDay\\\": 31, \\n        \\\"billToContact\\\": {\\n            \\\"city\\\": \\\"Walnut Creek\\\", \\n            \\\"country\\\": \\\"United States\\\", \\n            \\\"county\\\": \\\"Contra Consta\\\", \\n            \\\"state\\\": \\\"California\\\", \\n            \\\"zipCode\\\": \\\"94549\\\"\\n        }, \\n        \\\"currency\\\": \\\"USD\\\"\\n    }, \\n    \\\"subscribeToRatePlans\\\": [\\n        {\\n            \\\"chargeOverrides\\\": [\\n                {\\n                    \\\"productRatePlanChargeId\\\": \\\"ff8080811ca15d19011cddad8c953b53\\\", \\n                    \\\"quantity\\\": 100\\n                }\\n            ], \\n            \\\"productRatePlanId\\\": \\\"ff8080811ca15d19011cdda9b0ad3b51\\\"\\n        }\\n    ], \\n    \\\"termType\\\": \\\"TERMED\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/subscriptions/preview\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"contractEffectiveDate\\\": \\\"2013-1-15\\\", \\n    \\\"initialTerm\\\": 12, \\n    \\\"initialTermPeriodType\\\": \\\"Week\\\", \\n    \\\"invoiceTargetDate\\\": \\\"2013-12-31\\\", \\n    \\\"previewAccountInfo\\\": {\\n        \\\"billCycleDay\\\": 31, \\n        \\\"billToContact\\\": {\\n            \\\"city\\\": \\\"Walnut Creek\\\", \\n            \\\"country\\\": \\\"United States\\\", \\n            \\\"county\\\": \\\"Contra Consta\\\", \\n            \\\"state\\\": \\\"California\\\", \\n            \\\"zipCode\\\": \\\"94549\\\"\\n        }, \\n        \\\"currency\\\": \\\"USD\\\"\\n    }, \\n    \\\"subscribeToRatePlans\\\": [\\n        {\\n            \\\"chargeOverrides\\\": [\\n                {\\n                    \\\"productRatePlanChargeId\\\": \\\"ff8080811ca15d19011cddad8c953b53\\\", \\n                    \\\"quantity\\\": 100\\n                }\\n            ], \\n            \\\"productRatePlanId\\\": \\\"ff8080811ca15d19011cdda9b0ad3b51\\\"\\n        }\\n    ], \\n    \\\"termType\\\": \\\"TERMED\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/subscriptions/{subscription-key}" : {
      "get" : {
        "tags" : [ "Subscriptions" ],
        "summary" : "Get subscriptions by key",
        "description" : "This REST API reference describes how to retrieve detailed information about a specified subscription in the latest version.\n",
        "operationId" : "GETOneSubscription",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "subscription-key",
          "in" : "path",
          "description" : "Possible values are:\n  * a subscription number\n  * a subscription ID\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "charge-detail",
          "in" : "query",
          "description" : "\nThe segmented rate plan charges. When an amendment results in a change to a charge, Zuora creates a segmented rate plan charge. Use this field to track segment charges.\n\nPossible values are:\n\n * __last-segment__: (Default) The last rate plan charge on the subscription. The last rate plan charge is the last one in the order of time on the subscription rather than the most recent changed charge on the subscription.\n * __current-segment__: The segmented charge that is active on today’s date (effectiveStartDate <= today’s date < effectiveEndDate).\n \n * __all-segments__: All the segmented charges.\n\n * __specific-segment&as-of-date=date__: The segmented charge that is active on a date you specified (effectiveStartDate <= specific date < effectiveEndDate). The format of the date is yyyy-mm-dd.\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GETSubscriptionTypeWithSuccess"
            },
            "examples" : {
              "application/json" : {
                "success" : true,
                "id" : "2c9081a03c63c94c013c687b864e0195",
                "accountId" : "2c9081a03c63c94c013c66688a2c00bf",
                "accountNumber" : "RestAPI",
                "accountName" : "RestAPI",
                "subscriptionNumber" : "A-S00000004",
                "termType" : "TERMED",
                "contractEffectiveDate" : "2012-02-01",
                "serviceActivationDate" : "2012-02-01",
                "customerAcceptanceDate" : "2012-02-01",
                "subscriptionStartDate" : "2012-02-01",
                "termStartDate" : "2012-02-01",
                "termEndDate" : "2013-02-01",
                "initialTermPeriodType" : "Week",
                "currentTerm" : 12,
                "currentTermPeriodType" : "Week",
                "autoRenew" : false,
                "renewalSetting" : "RENEW_WITH_SPECIFIC_TERM",
                "renewalTerm" : 0,
                "renewalTermPeriodType" : "Week",
                "contractedMrr" : 26.67,
                "totalContractedValue" : 404.0,
                "notes" : "",
                "status" : "Active",
                "ratePlans" : [ {
                  "id" : "2c9081a03c63c94c013c687b868901a4",
                  "productId" : "2c9081a03c63c94c013c66499ef0001b",
                  "productName" : "OneTime",
                  "productSku" : "SKU-00000022",
                  "productRatePlanId" : "2c9081a03c63c94c013c665102e5003a",
                  "ratePlanName" : "OT_Tiered",
                  "ratePlanCharges" : [ {
                    "id" : "2c9081a03c63c94c013c687b868901a5",
                    "originalChargeId" : "2c9081a03c63c94c013c687a92d70175",
                    "productRatePlanChargeId" : "2c9081a03c63c94c013c6651d677003c",
                    "number" : "C-00000010",
                    "name" : "OT_Tiered",
                    "type" : "OneTime",
                    "model" : "Tiered",
                    "uom" : "Each",
                    "version" : 1,
                    "pricingSummary" : "0 to 10 Each: USD20 flat fee;  11 Each or more: USD4/Each",
                    "priceChangeOption" : null,
                    "priceIncreasePercentage" : null,
                    "currency" : "USD",
                    "price" : null,
                    "tiers" : [ {
                      "tier" : 1,
                      "startingUnit" : "0E-9",
                      "endingUnit" : 10.0,
                      "price" : 20.0,
                      "priceFormat" : "FlatFee"
                    }, {
                      "tier" : 2,
                      "startingUnit" : 11.0,
                      "endingUnit" : null,
                      "price" : 4.0,
                      "priceFormat" : "PerUnit"
                    } ],
                    "includedUnits" : null,
                    "overagePrice" : null,
                    "discountPercentage" : null,
                    "discountAmount" : null,
                    "applyDiscountTo" : null,
                    "discountLevel" : null,
                    "billingDay" : null,
                    "listPriceBase" : null,
                    "billingPeriod" : null,
                    "specificBillingPeriod" : null,
                    "billingTiming" : null,
                    "billingPeriodAlignment" : null,
                    "quantity" : 11.0,
                    "smoothingModel" : null,
                    "numberOfPeriods" : null,
                    "overageCalculationOption" : null,
                    "overageUnusedUnitsCreditOption" : null,
                    "unusedUnitsCreditRates" : null,
                    "usageRecordRatingOption" : null,
                    "segment" : 1,
                    "effectiveStartDate" : "2012-02-01",
                    "effectiveEndDate" : "2012-02-02",
                    "processedThroughDate" : "2012-02-02",
                    "chargedThroughDate" : "2012-02-02",
                    "done" : true,
                    "triggerDate" : null,
                    "triggerEvent" : "ContractEffective",
                    "endDateCondition" : "One_Time",
                    "upToPeriodsType" : null,
                    "upToPeriods" : null,
                    "specificEndDate" : null,
                    "mrr" : null,
                    "dmrc" : null,
                    "tcv" : 24.0,
                    "dtcv" : 24.0,
                    "description" : "",
                    "pecker__c" : "good",
                    "point__c" : "6"
                  } ]
                } ]
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/subscriptions/{subscription-key}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/subscriptions/{subscription-key}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/subscriptions/{subscription-key}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/subscriptions/{subscription-key}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/subscriptions/{subscription-key}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/subscriptions/{subscription-key}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      },
      "put" : {
        "tags" : [ "Subscriptions" ],
        "summary" : "Update subscription",
        "description" : "Use this call to make the following kinds of changes to a subscription:\n  * Add a note\n  * Change the renewal term or auto-renewal flag\n  * Change the term length or change between evergreen and termed\n  * Add a new product rate plan\n  * Remove an existing subscription rate plan\n  * Change the quantity or price of an existing subscription rate plan\n\n## Notes\n* The Update Subscription call creates a new subscription, which has the old subscription number but a new subscription ID.  The old subscription is canceled but remains in the system.\n* In one request, this call can make:\n  * Up to 9 combined add, update, and remove changes\n  * No more than 1 change to terms & conditions\n* Updates are performed in the following sequence:\n  1. First change the notes on the existing subscription, if requested.\n  2. Then change the terms and conditions, if requested.\n  3. Then perform the remaining amendments based upon the effective dates specified. If multiple amendments have the same contract-effective dates, then execute adds before updates, and updates before removes.\n* The update operation is atomic. If any of the updates fails, the entire operation is rolled back.\n\n## Override a Tiered Price\nThere are two ways you override a tiered price:\n\n* Override a specific tier number\nFor example: `tiers[{tier:1,price:8},{tier:2,price:6}]`\n\n* Override the entire tier structure\nFor example:  `tiers[{tier:1,price:8,startingUnit:1,endingUnit:100,priceFormat:\"FlatFee\"},\n{tier:2,price:6,startingUnit:101,priceFormat:\"FlatFee\"}]`\n\nIf you just override a specific tier, do not include the `startingUnit` field in the request.\n",
        "operationId" : "PUT_Subscription",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "subscription-key",
          "in" : "path",
          "description" : "Subscription number or ID.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PUTSubscriptionType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/PUTSubscriptionResponseType"
            },
            "examples" : {
              "application/json" : {
                "success" : true,
                "subscriptionId" : "4028bb83510f8ed7015114a503cf0373",
                "totalDeltaMrr" : 100.0,
                "totalDeltaTcv" : 4867.7419355
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X PUT -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"autoRenew\": false, \n    \"collect\": false, \n    \"currentTerm\": \"10\", \n    \"currentTermPeriodType\": \"Month\", \n    \"invoice\": true, \n    \"myCustomField__c\": \"test\", \n    \"notes\": \"Test UPDATE subscription from z-ruby-sdk\", \n    \"renewalSetting\": \"RENEW_WITH_SPECIFIC_TERM\", \n    \"renewalTerm\": \"4\", \n    \"renewalTermPeriodType\": \"Month\", \n    \"termType\": \"TERMED\", \n    \"update\": [\n        {\n            \"chargeUpdateDetails\": [\n                {\n                    \"quantity\": 12, \n                    \"ratePlanChargeId\": \"2c92c8f83dcbd8b1013dcce0eb510075\"\n                }\n            ], \n            \"contractEffectiveDate\": \"2013-04-28\", \n            \"ratePlanId\": \"2c92c8f83dcbd8b1013dcce0ea7e006f\"\n        }\n    ]\n}' \"https://rest.zuora.com/v1/subscriptions/{subscription-key}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/subscriptions/{subscription-key}');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"autoRenew\": false, \n    \"collect\": false, \n    \"currentTerm\": \"10\", \n    \"currentTermPeriodType\": \"Month\", \n    \"invoice\": true, \n    \"myCustomField__c\": \"test\", \n    \"notes\": \"Test UPDATE subscription from z-ruby-sdk\", \n    \"renewalSetting\": \"RENEW_WITH_SPECIFIC_TERM\", \n    \"renewalTerm\": \"4\", \n    \"renewalTermPeriodType\": \"Month\", \n    \"termType\": \"TERMED\", \n    \"update\": [\n        {\n            \"chargeUpdateDetails\": [\n                {\n                    \"quantity\": 12, \n                    \"ratePlanChargeId\": \"2c92c8f83dcbd8b1013dcce0eb510075\"\n                }\n            ], \n            \"contractEffectiveDate\": \"2013-04-28\", \n            \"ratePlanId\": \"2c92c8f83dcbd8b1013dcce0ea7e006f\"\n        }\n    ]\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"autoRenew\\\": false, \\n    \\\"collect\\\": false, \\n    \\\"currentTerm\\\": \\\"10\\\", \\n    \\\"currentTermPeriodType\\\": \\\"Month\\\", \\n    \\\"invoice\\\": true, \\n    \\\"myCustomField__c\\\": \\\"test\\\", \\n    \\\"notes\\\": \\\"Test UPDATE subscription from z-ruby-sdk\\\", \\n    \\\"renewalSetting\\\": \\\"RENEW_WITH_SPECIFIC_TERM\\\", \\n    \\\"renewalTerm\\\": \\\"4\\\", \\n    \\\"renewalTermPeriodType\\\": \\\"Month\\\", \\n    \\\"termType\\\": \\\"TERMED\\\", \\n    \\\"update\\\": [\\n        {\\n            \\\"chargeUpdateDetails\\\": [\\n                {\\n                    \\\"quantity\\\": 12, \\n                    \\\"ratePlanChargeId\\\": \\\"2c92c8f83dcbd8b1013dcce0eb510075\\\"\\n                }\\n            ], \\n            \\\"contractEffectiveDate\\\": \\\"2013-04-28\\\", \\n            \\\"ratePlanId\\\": \\\"2c92c8f83dcbd8b1013dcce0ea7e006f\\\"\\n        }\\n    ]\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/subscriptions/{subscription-key}\")\n  .put(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"autoRenew\\\": false, \\n    \\\"collect\\\": false, \\n    \\\"currentTerm\\\": \\\"10\\\", \\n    \\\"currentTermPeriodType\\\": \\\"Month\\\", \\n    \\\"invoice\\\": true, \\n    \\\"myCustomField__c\\\": \\\"test\\\", \\n    \\\"notes\\\": \\\"Test UPDATE subscription from z-ruby-sdk\\\", \\n    \\\"renewalSetting\\\": \\\"RENEW_WITH_SPECIFIC_TERM\\\", \\n    \\\"renewalTerm\\\": \\\"4\\\", \\n    \\\"renewalTermPeriodType\\\": \\\"Month\\\", \\n    \\\"termType\\\": \\\"TERMED\\\", \\n    \\\"update\\\": [\\n        {\\n            \\\"chargeUpdateDetails\\\": [\\n                {\\n                    \\\"quantity\\\": 12, \\n                    \\\"ratePlanChargeId\\\": \\\"2c92c8f83dcbd8b1013dcce0eb510075\\\"\\n                }\\n            ], \\n            \\\"contractEffectiveDate\\\": \\\"2013-04-28\\\", \\n            \\\"ratePlanId\\\": \\\"2c92c8f83dcbd8b1013dcce0ea7e006f\\\"\\n        }\\n    ]\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"PUT\", \"/subscriptions/{subscription-key}\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/subscriptions/{subscription-key}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"autoRenew\\\": false, \\n    \\\"collect\\\": false, \\n    \\\"currentTerm\\\": \\\"10\\\", \\n    \\\"currentTermPeriodType\\\": \\\"Month\\\", \\n    \\\"invoice\\\": true, \\n    \\\"myCustomField__c\\\": \\\"test\\\", \\n    \\\"notes\\\": \\\"Test UPDATE subscription from z-ruby-sdk\\\", \\n    \\\"renewalSetting\\\": \\\"RENEW_WITH_SPECIFIC_TERM\\\", \\n    \\\"renewalTerm\\\": \\\"4\\\", \\n    \\\"renewalTermPeriodType\\\": \\\"Month\\\", \\n    \\\"termType\\\": \\\"TERMED\\\", \\n    \\\"update\\\": [\\n        {\\n            \\\"chargeUpdateDetails\\\": [\\n                {\\n                    \\\"quantity\\\": 12, \\n                    \\\"ratePlanChargeId\\\": \\\"2c92c8f83dcbd8b1013dcce0eb510075\\\"\\n                }\\n            ], \\n            \\\"contractEffectiveDate\\\": \\\"2013-04-28\\\", \\n            \\\"ratePlanId\\\": \\\"2c92c8f83dcbd8b1013dcce0ea7e006f\\\"\\n        }\\n    ]\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/subscriptions/{subscription-key}\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"autoRenew\\\": false, \\n    \\\"collect\\\": false, \\n    \\\"currentTerm\\\": \\\"10\\\", \\n    \\\"currentTermPeriodType\\\": \\\"Month\\\", \\n    \\\"invoice\\\": true, \\n    \\\"myCustomField__c\\\": \\\"test\\\", \\n    \\\"notes\\\": \\\"Test UPDATE subscription from z-ruby-sdk\\\", \\n    \\\"renewalSetting\\\": \\\"RENEW_WITH_SPECIFIC_TERM\\\", \\n    \\\"renewalTerm\\\": \\\"4\\\", \\n    \\\"renewalTermPeriodType\\\": \\\"Month\\\", \\n    \\\"termType\\\": \\\"TERMED\\\", \\n    \\\"update\\\": [\\n        {\\n            \\\"chargeUpdateDetails\\\": [\\n                {\\n                    \\\"quantity\\\": 12, \\n                    \\\"ratePlanChargeId\\\": \\\"2c92c8f83dcbd8b1013dcce0eb510075\\\"\\n                }\\n            ], \\n            \\\"contractEffectiveDate\\\": \\\"2013-04-28\\\", \\n            \\\"ratePlanId\\\": \\\"2c92c8f83dcbd8b1013dcce0ea7e006f\\\"\\n        }\\n    ]\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/subscriptions/{subscription-key}/cancel" : {
      "put" : {
        "tags" : [ "Subscriptions" ],
        "summary" : "Cancel subscription",
        "description" : "This REST API reference describes how to cancel an active subscription.\n",
        "operationId" : "POSTSubscriptionCancellation",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "subscription-key",
          "in" : "path",
          "description" : "Subscription number or ID. Subscription status must be `Active`.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/POSTSubscriptionCancellationType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/POSTSubscriptionCancellationResponseType"
            },
            "examples" : {
              "application/json" : {
                "success" : true,
                "subscriptionId" : "8a8082c453cd2a620154efc7bba0350e",
                "cancelledDate" : "2019-05-31",
                "totalDeltaMrr" : 0,
                "totalDeltaTcv" : -703.2258065,
                "invoiceId" : "8a8082c453cd2a620153e426c7eb78b3"
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X PUT -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"cancellationEffectiveDate\": \"2019-05-31\", \n    \"cancellationPolicy\": \"SpecificDate\", \n    \"collect\": false, \n    \"invoice\": true\n}' \"https://rest.zuora.com/v1/subscriptions/{subscription-key}/cancel\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/subscriptions/{subscription-key}/cancel');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"cancellationEffectiveDate\": \"2019-05-31\", \n    \"cancellationPolicy\": \"SpecificDate\", \n    \"collect\": false, \n    \"invoice\": true\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"cancellationEffectiveDate\\\": \\\"2019-05-31\\\", \\n    \\\"cancellationPolicy\\\": \\\"SpecificDate\\\", \\n    \\\"collect\\\": false, \\n    \\\"invoice\\\": true\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/subscriptions/{subscription-key}/cancel\")\n  .put(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"cancellationEffectiveDate\\\": \\\"2019-05-31\\\", \\n    \\\"cancellationPolicy\\\": \\\"SpecificDate\\\", \\n    \\\"collect\\\": false, \\n    \\\"invoice\\\": true\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"PUT\", \"/subscriptions/{subscription-key}/cancel\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/subscriptions/{subscription-key}/cancel\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"cancellationEffectiveDate\\\": \\\"2019-05-31\\\", \\n    \\\"cancellationPolicy\\\": \\\"SpecificDate\\\", \\n    \\\"collect\\\": false, \\n    \\\"invoice\\\": true\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/subscriptions/{subscription-key}/cancel\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"cancellationEffectiveDate\\\": \\\"2019-05-31\\\", \\n    \\\"cancellationPolicy\\\": \\\"SpecificDate\\\", \\n    \\\"collect\\\": false, \\n    \\\"invoice\\\": true\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/subscriptions/{subscription-key}/renew" : {
      "put" : {
        "tags" : [ "Subscriptions" ],
        "summary" : "Renew subscription",
        "description" : "Renews a termed subscription using existing renewal terms.\n",
        "operationId" : "PUT_RenewSubscription",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "subscription-key",
          "in" : "path",
          "description" : "Subscription number or ID",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PUTRenewSubscriptionType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/PUTRenewSubscriptionResponseType"
            },
            "examples" : {
              "application/json" : {
                "termStartDate" : "2014-02-01",
                "success" : true,
                "termEndDate" : "2014-05-01",
                "subscriptionId" : "2c92c8f83dcbd8b1013dcce0f09100a5"
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X PUT -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"collect\": false, \n    \"invoice\": true\n}' \"https://rest.zuora.com/v1/subscriptions/{subscription-key}/renew\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/subscriptions/{subscription-key}/renew');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"collect\": false, \n    \"invoice\": true\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"collect\\\": false, \\n    \\\"invoice\\\": true\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/subscriptions/{subscription-key}/renew\")\n  .put(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"collect\\\": false, \\n    \\\"invoice\\\": true\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"PUT\", \"/subscriptions/{subscription-key}/renew\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/subscriptions/{subscription-key}/renew\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"collect\\\": false, \\n    \\\"invoice\\\": true\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/subscriptions/{subscription-key}/renew\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"collect\\\": false, \\n    \\\"invoice\\\": true\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/subscriptions/{subscription-key}/resume" : {
      "put" : {
        "tags" : [ "Subscriptions" ],
        "summary" : "Resume subscription",
        "description" : "This REST API reference describes how to resume a suspended subscription. \n\nThis feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://suport.zuora.com). \n",
        "operationId" : "PUTSubscriptionResume",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "subscription-key",
          "in" : "path",
          "description" : "Subscription number or ID. Subscription status must be Active.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PUTSubscriptionResumeType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/PUTSubscriptionResumeResponseType"
            },
            "examples" : {
              "application/json" : {
                "success" : true,
                "subscriptionId" : "8a8082c4539c5bcc0153a752f9c87094",
                "resumeDate" : "2019-10-01",
                "termEndDate" : "2020-01-31",
                "totalDeltaTcv" : 396.7741935
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X PUT -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"collect\": false, \n    \"contractEffectiveDate\": \"2019-02-01\", \n    \"extendsTerm\": true, \n    \"invoice\": true, \n    \"resumePolicy\": \"SpecificDate\", \n    \"resumeSpecificDate\": \"2019-10-01\"\n}' \"https://rest.zuora.com/v1/subscriptions/{subscription-key}/resume\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/subscriptions/{subscription-key}/resume');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"collect\": false, \n    \"contractEffectiveDate\": \"2019-02-01\", \n    \"extendsTerm\": true, \n    \"invoice\": true, \n    \"resumePolicy\": \"SpecificDate\", \n    \"resumeSpecificDate\": \"2019-10-01\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"collect\\\": false, \\n    \\\"contractEffectiveDate\\\": \\\"2019-02-01\\\", \\n    \\\"extendsTerm\\\": true, \\n    \\\"invoice\\\": true, \\n    \\\"resumePolicy\\\": \\\"SpecificDate\\\", \\n    \\\"resumeSpecificDate\\\": \\\"2019-10-01\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/subscriptions/{subscription-key}/resume\")\n  .put(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"collect\\\": false, \\n    \\\"contractEffectiveDate\\\": \\\"2019-02-01\\\", \\n    \\\"extendsTerm\\\": true, \\n    \\\"invoice\\\": true, \\n    \\\"resumePolicy\\\": \\\"SpecificDate\\\", \\n    \\\"resumeSpecificDate\\\": \\\"2019-10-01\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"PUT\", \"/subscriptions/{subscription-key}/resume\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/subscriptions/{subscription-key}/resume\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"collect\\\": false, \\n    \\\"contractEffectiveDate\\\": \\\"2019-02-01\\\", \\n    \\\"extendsTerm\\\": true, \\n    \\\"invoice\\\": true, \\n    \\\"resumePolicy\\\": \\\"SpecificDate\\\", \\n    \\\"resumeSpecificDate\\\": \\\"2019-10-01\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/subscriptions/{subscription-key}/resume\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"collect\\\": false, \\n    \\\"contractEffectiveDate\\\": \\\"2019-02-01\\\", \\n    \\\"extendsTerm\\\": true, \\n    \\\"invoice\\\": true, \\n    \\\"resumePolicy\\\": \\\"SpecificDate\\\", \\n    \\\"resumeSpecificDate\\\": \\\"2019-10-01\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/subscriptions/{subscription-key}/suspend" : {
      "put" : {
        "tags" : [ "Subscriptions" ],
        "summary" : "Suspend subscription",
        "description" : "This REST API reference describes how to suspend an active subscription. \n\nThis feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://suport.zuora.com).\n",
        "operationId" : "PUTSubscriptionSuspend",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "subscription-key",
          "in" : "path",
          "description" : "Subscription number or ID. Subscription status must be Active.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Request",
          "description" : "",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PUTSubscriptionSuspendType"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/PUTSubscriptionSuspendResponseType"
            },
            "examples" : {
              "application/json" : {
                "success" : true,
                "subscriptionId" : "8a8082c4539c5bcc0153a658a9636fcc",
                "suspendDate" : "2019-05-01",
                "resumeDate" : "2016-06-01",
                "termEndDate" : "2020-02-01",
                "totalDeltaTcv" : -896.6666667,
                "invoiceId" : "8a8082c453bb061f0153c529bc921b4b"
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X PUT -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{\n    \"collect\": false, \n    \"contractEffectiveDate\": \"2019-02-01\", \n    \"extendsTerm\": true, \n    \"invoice\": true, \n    \"resume\": true, \n    \"resumePolicy\": \"SpecificDate\", \n    \"resumeSpecificDate\": \"2019-06-01\", \n    \"suspendPeriods\": 10, \n    \"suspendPeriodsType\": \"Day\", \n    \"suspendPolicy\": \"FixedPeriodsFromToday\"\n}' \"https://rest.zuora.com/v1/subscriptions/{subscription-key}/suspend\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/subscriptions/{subscription-key}/suspend');\n$request->setMethod(HTTP_METH_PUT);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{\n    \"collect\": false, \n    \"contractEffectiveDate\": \"2019-02-01\", \n    \"extendsTerm\": true, \n    \"invoice\": true, \n    \"resume\": true, \n    \"resumePolicy\": \"SpecificDate\", \n    \"resumeSpecificDate\": \"2019-06-01\", \n    \"suspendPeriods\": 10, \n    \"suspendPeriodsType\": \"Day\", \n    \"suspendPolicy\": \"FixedPeriodsFromToday\"\n}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{\\n    \\\"collect\\\": false, \\n    \\\"contractEffectiveDate\\\": \\\"2019-02-01\\\", \\n    \\\"extendsTerm\\\": true, \\n    \\\"invoice\\\": true, \\n    \\\"resume\\\": true, \\n    \\\"resumePolicy\\\": \\\"SpecificDate\\\", \\n    \\\"resumeSpecificDate\\\": \\\"2019-06-01\\\", \\n    \\\"suspendPeriods\\\": 10, \\n    \\\"suspendPeriodsType\\\": \\\"Day\\\", \\n    \\\"suspendPolicy\\\": \\\"FixedPeriodsFromToday\\\"\\n}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/subscriptions/{subscription-key}/suspend\")\n  .put(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{\\n    \\\"collect\\\": false, \\n    \\\"contractEffectiveDate\\\": \\\"2019-02-01\\\", \\n    \\\"extendsTerm\\\": true, \\n    \\\"invoice\\\": true, \\n    \\\"resume\\\": true, \\n    \\\"resumePolicy\\\": \\\"SpecificDate\\\", \\n    \\\"resumeSpecificDate\\\": \\\"2019-06-01\\\", \\n    \\\"suspendPeriods\\\": 10, \\n    \\\"suspendPeriodsType\\\": \\\"Day\\\", \\n    \\\"suspendPolicy\\\": \\\"FixedPeriodsFromToday\\\"\\n}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"PUT\", \"/subscriptions/{subscription-key}/suspend\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/subscriptions/{subscription-key}/suspend\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Put.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{\\n    \\\"collect\\\": false, \\n    \\\"contractEffectiveDate\\\": \\\"2019-02-01\\\", \\n    \\\"extendsTerm\\\": true, \\n    \\\"invoice\\\": true, \\n    \\\"resume\\\": true, \\n    \\\"resumePolicy\\\": \\\"SpecificDate\\\", \\n    \\\"resumeSpecificDate\\\": \\\"2019-06-01\\\", \\n    \\\"suspendPeriods\\\": 10, \\n    \\\"suspendPeriodsType\\\": \\\"Day\\\", \\n    \\\"suspendPolicy\\\": \\\"FixedPeriodsFromToday\\\"\\n}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/subscriptions/{subscription-key}/suspend\");\nvar request = new RestRequest(Method.PUT);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{\\n    \\\"collect\\\": false, \\n    \\\"contractEffectiveDate\\\": \\\"2019-02-01\\\", \\n    \\\"extendsTerm\\\": true, \\n    \\\"invoice\\\": true, \\n    \\\"resume\\\": true, \\n    \\\"resumePolicy\\\": \\\"SpecificDate\\\", \\n    \\\"resumeSpecificDate\\\": \\\"2019-06-01\\\", \\n    \\\"suspendPeriods\\\": 10, \\n    \\\"suspendPeriodsType\\\": \\\"Day\\\", \\n    \\\"suspendPolicy\\\": \\\"FixedPeriodsFromToday\\\"\\n}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/transactions/invoices/accounts/{account-key}" : {
      "get" : {
        "tags" : [ "Transactions" ],
        "summary" : "Get invoices",
        "description" : "Retrieves invoices for a specified account. \nInvoices are returned in reverse chronological order by **updatedDate**.\n",
        "operationId" : "GETInvoice",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "account-key",
          "in" : "path",
          "description" : "Account number or account ID.\n",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GETInvoiceFileWrapper"
            },
            "examples" : {
              "application/json" : {
                "invoices" : [ {
                  "id" : "2c92c095511f5b4401512682dcfd7987",
                  "accountId" : "2c92c0f8511f4b9d01512680ab282370",
                  "accountNumber" : "A00000002",
                  "accountName" : "XYZ, Inc",
                  "invoiceDate" : "2015-11-20",
                  "invoiceNumber" : "INV00000002",
                  "dueDate" : "2015-12-20",
                  "invoiceTargetDate" : "2015-11-20",
                  "amount" : 21.1,
                  "balance" : 21.1,
                  "createdBy" : "2c92c0f84fbac224014fc55639fe11d4",
                  "status" : "Draft",
                  "body" : null,
                  "invoiceItems" : [ {
                    "id" : "2c92c095511f5b4401512682dd017989",
                    "subscriptionName" : "A-S00000004",
                    "subscriptionId" : "2c92c0f9511f56b2015126814ad532cc",
                    "serviceStartDate" : "2015-11-20",
                    "serviceEndDate" : "2015-11-30",
                    "chargeAmount" : 21.1,
                    "chargeDescription" : "",
                    "chargeName" : "Annual Fee",
                    "chargeId" : "2c92c0f9511f56b2015126814af832d2",
                    "productName" : "TeamCollab Enterprise",
                    "quantity" : 1,
                    "taxAmount" : 0,
                    "unitOfMeasure" : ""
                  } ],
                  "invoiceFiles" : [ ]
                } ],
                "success" : true
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/transactions/invoices/accounts/{account-key}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/transactions/invoices/accounts/{account-key}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/transactions/invoices/accounts/{account-key}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/transactions/invoices/accounts/{account-key}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/transactions/invoices/accounts/{account-key}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/transactions/invoices/accounts/{account-key}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/transactions/payments/accounts/{account-key}" : {
      "get" : {
        "tags" : [ "Transactions" ],
        "summary" : "Get payments",
        "description" : "Retrieves payments for a specified account. Payments are returned in\nreverse chronological order by **updatedDate**.\n",
        "operationId" : "GETPayments",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "account-key",
          "in" : "path",
          "description" : "Account number or account ID.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GETPaymentsType"
            },
            "examples" : {
              "application/json" : {
                "success" : true,
                "payments" : [ {
                  "paymentMethodId" : "2c92c8f83dabf9cf013daef12dd303b0",
                  "paidInvoices" : [ {
                    "invoiceId" : "2c92a09539190dbe0139190f42780012",
                    "invoiceNumber" : "INV00000159",
                    "appliedPaymentAmount" : 5.0
                  }, {
                    "invoiceId" : "2c92a0953a3fa95d013a407c10a60100",
                    "invoiceNumber" : "INV00000323",
                    "appliedPaymentAmount" : 139722.1
                  }, {
                    "invoiceId" : "2c92a09739190dc60139194bcf1b0098",
                    "invoiceNumber" : "INV00000160",
                    "appliedPaymentAmount" : 10521.0
                  } ],
                  "effectiveDate" : "2013-03-27",
                  "accountId" : "2c92a0f9391832b10139183e277a0042",
                  "accountName" : "subscribeCallYan_1",
                  "id" : "2c92c8f83dabf9cf013daf3bfa0305a6",
                  "status" : "Processed",
                  "paymentNumber" : "P-00000075",
                  "gatewayTransactionNumber" : null,
                  "type" : "Electronic",
                  "accountNumber" : "A00001115",
                  "amount" : 150248.1
                }, {
                  "paymentMethodId" : "2c92a0f9391832b10139183e279e0044",
                  "paidInvoices" : [ {
                    "invoiceId" : "2c92a09539190dbe0139190f42780012",
                    "invoiceNumber" : "INV00000159",
                    "appliedPaymentAmount" : 5.0
                  } ],
                  "effectiveDate" : "2012-08-11",
                  "accountId" : "2c92a0f9391832b10139183e277a0042",
                  "accountName" : "subscribeCallYan_1",
                  "id" : "2c92a0f9391832b101391922ad5f049d",
                  "status" : "Processed",
                  "paymentNumber" : "P-00000056",
                  "gatewayTransactionNumber" : null,
                  "type" : "Electronic",
                  "accountNumber" : "A00001115",
                  "amount" : 5.0
                } ]
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/transactions/payments/accounts/{account-key}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/transactions/payments/accounts/{account-key}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/transactions/payments/accounts/{account-key}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/transactions/payments/accounts/{account-key}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/transactions/payments/accounts/{account-key}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/transactions/payments/accounts/{account-key}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/usage" : {
      "post" : {
        "tags" : [ "Usage" ],
        "summary" : "Post usage",
        "description" : "\nThis REST API reference describes how to post or import usage data for one or more accounts in the CSV  format. There are no path or query parameters. The data is uploade using the HTTP multipart/form-data POST method and applied to the user's tenant. \n\n## How this REST API Call Works\nThe content of the upload file must follow the format used by the UI import tool. It must be a comma-separated (CSV) file with a corresponding .csv extension. The file size must not exceed 4MB. Click [here](https://knowledgecenter.zuora.com/@api/deki/files/4105/UsageFileFormat.csv) to download the usage file template.\n\nAt the completion of the upload, before actually processing the file contents, theAPI returns a response containing the byte count of the received file and a URL for checking the status of the import process.  Of the five possible results displayed at that URL Pending, Processing, Completed, Canceled, and Failed) only a Completed status indicates that the import was successful.  The operation is atomic; if any record fails, the file is rejected.  In that case, the entire import is rolled back and all stored data is returned to its original state.\n\nTo view the actual import status, enter the resulting status URL from the checkImportStatus response using a tool such as POSTMAN.This additional step provides more information about why the import may have failed.\n\nTo manage the information after a successful upload, use the web-based UI.\n\n## Upload File Format\nThe upload file uses the following headings:\n\n| Heading         | Description   | Required |\n|-----------------|--------|----------|\n| ACCOUNT_ID      | Enter the account number, e.g., the default account number, such as A00000001, or your custom account number.,Although this field is labeled as Account_Id, it is not the actual Account ID nor Account Name.  | Yes      |\n| UOM             | Enter the unit of measure. This must match the UOM for the usage. | Yes      |\n| QTY             | Enter the quantity.  | Yes      |\n| STARTDATE       | Enter the start date of the usage.,This date determines the invoice item service period the associated usage is billed to. Date format is based on locale of the current user. Default date format: `MM/DD/YYYY` | Yes      |\n| ENDDATE         | Enter the end date of the usage.,This is not used in calculations for usage billing and is optional. Date format is based on locale of the current user. Default date format: `MM/DD/YYYY`    | Yes      |\n| SUBSCRIPTION_ID | Enter the subscription number or subscription name. If you created the subscription in the Zuora application, Zuora created a number automatically in a format similar to A-S00000001. If you do not provide a value for this field, the associated usage will be added to all subscriptions for the specified Account that use this Unit Of Measure. If your Accounts can have multiple subscriptions and you do not want double or triple counting of usage, you must specify the Subscription or Charge ID in each usage record.  | Yes      |\n| CHARGE_ID       | Enter the charge number (not the charge name). You can see the charge ID, e.g., C-00000001, when you add your rate plan to your subscription and view your individual charges. If your Accounts can have multiple subscriptions and you do not want double or triple counting of usage, you must specify the specific Subscription or Charge ID in each usage record. This field is related to the Charge Number on the subscription rate plan.                       | Yes      |\n| DESCRIPTION     | Enter a description for the charge. | No       |\n",
        "operationId" : "POST_Usage",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "Content-Type",
          "in" : "header",
          "description" : "Must be set to \"multipart/form-data\".\n",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/POSTUsageResponseType"
            },
            "examples" : {
              "application/json" : {
                "success" : true,
                "checkImportStatus" : "https://api.zuora.com/rest/v1/usage/2c92c8f83dcbd8b1013dcce1159900cc/status",
                "size" : 316
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X POST -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" -d '{}' \"https://rest.zuora.com/v1/usage\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/usage');\n$request->setMethod(HTTP_METH_POST);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\n$request->setBody('{}');\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequestBody body = RequestBody.create(mediaType, \"{}\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/usage\")\n  .post(body)\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\npayload = \"{}\"\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    'content-type': \"application/json\",\n    }\n\nconn.request(\"POST\", \"/usage\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/usage\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Post.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\nrequest[\"content-type\"] = 'application/json'\nrequest.body = \"{}\"\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/usage\");\nvar request = new RestRequest(Method.POST);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nrequest.AddParameter(\"application/json\", \"{}\", ParameterType.RequestBody);\nIRestResponse response = client.Execute(request);"
        } ]
      }
    },
    "/usage/accounts/{account-key}" : {
      "get" : {
        "tags" : [ "Usage" ],
        "summary" : "Get usage",
        "description" : "This REST API reference describes how to retrieve usage details for an account. Usage data is returned in reverse chronological order.\n",
        "operationId" : "GET_Usage",
        "parameters" : [ {
          "name" : "entityID",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "entityName",
          "in" : "header",
          "description" : "The entityName parameter specify the Name of the entity that you want to access.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "zuora-version",
          "in" : "header",
          "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "account-key",
          "in" : "path",
          "description" : "Account number or account ID.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "$ref" : "#/definitions/GETUsageWrapper"
            },
            "examples" : {
              "application/json" : {
                "usage" : [ {
                  "chargeNumber" : null,
                  "sourceName" : "Import",
                  "quantity" : 4.0,
                  "unitOfMeasure" : "UOM",
                  "accountName" : "subscribeCallYan_1",
                  "id" : "2c92c8953dac2b1c013dae0a263f35dd",
                  "subscriptionNumber" : null,
                  "startDateTime" : "2012-02-05 00:00:00",
                  "accountNumber" : "A00001115",
                  "status" : "Pending",
                  "submissionDateTime" : "2013-03-27 15:48:53",
                  "accountId" : "2c92a0f9391832b10139183e277a0042"
                }, {
                  "chargeNumber" : null,
                  "sourceName" : "Import",
                  "quantity" : 4.0,
                  "unitOfMeasure" : "UOM",
                  "accountName" : "subscribeCallYan_1",
                  "id" : "2c92c8943db2ae51013dcce116b00f4b",
                  "subscriptionNumber" : null,
                  "startDateTime" : "2012-02-05 00:00:00",
                  "accountNumber" : "A00001115",
                  "status" : "Pending",
                  "submissionDateTime" : "2013-04-02 15:32:16",
                  "accountId" : "2c92a0f9391832b10139183e277a0042"
                }, {
                  "chargeNumber" : null,
                  "sourceName" : "Import",
                  "quantity" : 3.0,
                  "unitOfMeasure" : "UOM",
                  "accountName" : "subscribeCallYan_1",
                  "id" : "2c92c8953dac2b1c013dae0a263f35dc",
                  "subscriptionNumber" : null,
                  "startDateTime" : "2012-02-04 00:00:00",
                  "accountNumber" : "A00001115",
                  "status" : "Pending",
                  "submissionDateTime" : "2013-03-27 15:48:53",
                  "accountId" : "2c92a0f9391832b10139183e277a0042"
                }, {
                  "chargeNumber" : null,
                  "sourceName" : "Import",
                  "quantity" : 3.0,
                  "unitOfMeasure" : "UOM",
                  "accountName" : "subscribeCallYan_1",
                  "id" : "2c92c8943db2ae51013dcce116b00f4a",
                  "subscriptionNumber" : null,
                  "startDateTime" : "2012-02-04 00:00:00",
                  "accountNumber" : "A00001115",
                  "status" : "Pending",
                  "submissionDateTime" : "2013-04-02 15:32:16",
                  "accountId" : "2c92a0f9391832b10139183e277a0042"
                }, {
                  "chargeNumber" : null,
                  "sourceName" : "Import",
                  "quantity" : 2.0,
                  "unitOfMeasure" : "UOM",
                  "accountName" : "subscribeCallYan_1",
                  "id" : "2c92c8953dac2b1c013dae0a263e35db",
                  "subscriptionNumber" : null,
                  "startDateTime" : "2012-02-03 00:00:00",
                  "accountNumber" : "A00001115",
                  "status" : "Pending",
                  "submissionDateTime" : "2013-03-27 15:48:53",
                  "accountId" : "2c92a0f9391832b10139183e277a0042"
                }, {
                  "chargeNumber" : null,
                  "sourceName" : "Import",
                  "quantity" : 2.0,
                  "unitOfMeasure" : "UOM",
                  "accountName" : "subscribeCallYan_1",
                  "id" : "2c92c8943db2ae51013dcce116af0f49",
                  "subscriptionNumber" : null,
                  "startDateTime" : "2012-02-03 00:00:00",
                  "accountNumber" : "A00001115",
                  "status" : "Pending",
                  "submissionDateTime" : "2013-04-02 15:32:16",
                  "accountId" : "2c92a0f9391832b10139183e277a0042"
                }, {
                  "chargeNumber" : null,
                  "sourceName" : "Import",
                  "quantity" : 1.0,
                  "unitOfMeasure" : "UOM",
                  "accountName" : "subscribeCallYan_1",
                  "id" : "2c92c8953dac2b1c013dae0a263e35da",
                  "subscriptionNumber" : null,
                  "startDateTime" : "2012-02-02 00:00:00",
                  "accountNumber" : "A00001115",
                  "status" : "Pending",
                  "submissionDateTime" : "2013-03-27 15:48:53",
                  "accountId" : "2c92a0f9391832b10139183e277a0042"
                }, {
                  "chargeNumber" : null,
                  "sourceName" : "Import",
                  "quantity" : 1.0,
                  "unitOfMeasure" : "UOM",
                  "accountName" : "subscribeCallYan_1",
                  "id" : "2c92c8943db2ae51013dcce116af0f48",
                  "subscriptionNumber" : null,
                  "startDateTime" : "2012-02-02 00:00:00",
                  "accountNumber" : "A00001115",
                  "status" : "Pending",
                  "submissionDateTime" : "2013-04-02 15:32:16",
                  "accountId" : "2c92a0f9391832b10139183e277a0042"
                }, {
                  "chargeNumber" : null,
                  "sourceName" : "Import",
                  "quantity" : 4.0,
                  "unitOfMeasure" : "UOM",
                  "accountName" : "subscribeCallYan_1",
                  "id" : "2c92c8953dac2b1c013dae0a263e35d9",
                  "subscriptionNumber" : null,
                  "startDateTime" : "2012-01-05 00:00:00",
                  "accountNumber" : "A00001115",
                  "status" : "Pending",
                  "submissionDateTime" : "2013-03-27 15:48:53",
                  "accountId" : "2c92a0f9391832b10139183e277a0042"
                }, {
                  "chargeNumber" : null,
                  "sourceName" : "Import",
                  "quantity" : 4.0,
                  "unitOfMeasure" : "UOM",
                  "accountName" : "subscribeCallYan_1",
                  "id" : "2c92c8943db2ae51013dcce116af0f47",
                  "subscriptionNumber" : null,
                  "startDateTime" : "2012-01-05 00:00:00",
                  "accountNumber" : "A00001115",
                  "status" : "Pending",
                  "submissionDateTime" : "2013-04-02 15:32:16",
                  "accountId" : "2c92a0f9391832b10139183e277a0042"
                } ],
                "success" : true,
                "nextPage" : "https://api.zuora.com/rest/v1/usage/accounts/A00001115?page=2&pageSize=10"
              }
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "curl -X GET -H \"apiAccessKeyId: dummyUser\" -H \"apiSecretAccessKey: dummyPassword\" -H \"Content-Type: application/json\" \"https://rest.zuora.com/v1/usage/accounts/{account-key}\""
        }, {
          "lang" : "PHP",
          "source" : "<?php\n\n$request = new HttpRequest();\n$request->setUrl('https://rest.zuora.com/v1/usage/accounts/{account-key}');\n$request->setMethod(HTTP_METH_GET);\n\n$request->setHeaders(array(\n  'content-type' => 'application/json',\n  'apisecretaccesskey' => 'dummyPassword',\n  'apiaccesskeyid' => 'dummyUser'\n));\n\ntry {\n  $response = $request->send();\n\n  echo $response->getBody();\n} catch (HttpException $ex) {\n  echo $ex;\n}"
        }, {
          "lang" : "Java",
          "source" : "OkHttpClient client = new OkHttpClient();\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nRequest request = new Request.Builder()\n  .url(\"https://rest.zuora.com/v1/usage/accounts/{account-key}\")\n  .get()\n  .addHeader(\"apiaccesskeyid\", \"dummyUser\")\n  .addHeader(\"apisecretaccesskey\", \"dummyPassword\")\n  .addHeader(\"content-type\", \"application/json\")\n  .addHeader(\"cache-control\", \"no-cache\")\n  .build();\n\nResponse response = client.newCall(request).execute();"
        }, {
          "lang" : "Python",
          "source" : "import http.client\n\nconn = http.client.HTTPSConnection(\"https://rest.zuora.com/v1\")\n\nheaders = {\n    'apiaccesskeyid': \"dummyUser\",\n    'apisecretaccesskey': \"dummyPassword\",\n    }\n\nconn.request(\"GET\", \"/usage/accounts/{account-key}\", headers=headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
        }, {
          "lang" : "Ruby",
          "source" : "require 'uri'\nrequire 'net/http'\n\nurl = URI(\"https://rest.zuora.com/v1/usage/accounts/{account-key}\")\n\nhttp = Net::HTTP.new(url.host, url.port)\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nrequest = Net::HTTP::Get.new(url)\nrequest[\"apiaccesskeyid\"] = 'dummyUser'\nrequest[\"apisecretaccesskey\"] = 'dummyPassword'\n\nresponse = http.request(request)\nputs response.read_body"
        }, {
          "lang" : "C#",
          "source" : "var client = new RestClient(\"https://rest.zuora.com/v1/usage/accounts/{account-key}\");\nvar request = new RestRequest(Method.GET);\nrequest.AddHeader(\"content-type\", \"application/json\");\nrequest.AddHeader(\"apisecretaccesskey\", \"dummyPassword\");\nrequest.AddHeader(\"apiaccesskeyid\", \"dummyUser\");\nIRestResponse response = client.Execute(request);"
        } ]
      }
    }
  },
  "definitions" : {
    "Account" : {
      "type" : "object",
      "properties" : {
        "AccountNumber" : {
          "type" : "string",
          "description" : "Unique account number assigned to the account.\n\n**Character limit**: 50\n\n\n**Values**: one of the following:\n\n- null to auto-generate\n- a string of 50 characters or fewer that doesn't begin with the default account number prefix\n"
        },
        "AdditionalEmailAddresses" : {
          "type" : "string",
          "description" : "List of additional email addresses to receive emailed invoices.\n\n**Character limit**: 120\n\n\n**Values**: comma-separated list of email addresses "
        },
        "AllowInvoiceEdit" : {
          "type" : "boolean",
          "description" : " Indicates if associated invoices can be edited.\n\n\n**Character limit**: 5\n\n\n**Values**: `true`, `false` (default if left null) "
        },
        "AutoPay" : {
          "type" : "boolean",
          "description" : " Indicates if future payments are automatically collected when they're due during a Payment Run.\n\n\n**Character limit**: 5\n\n\n**Values**: `true`, `false` (default) "
        },
        "Balance" : {
          "type" : "number",
          "format" : "double",
          "description" : "Current outstanding balance for the account.\n\n**Character limit**: 16\n\n\n**Values**: automatically generated "
        },
        "Batch" : {
          "type" : "string",
          "description" : " Organizes your customer accounts into groups to optimize your billing and payment operations.\n\n\n**Character limit**: 20\n\n\n**Values**:any system-defined batch (`Batch1` - `Batch50 `or by name). "
        },
        "BcdSettingOption" : {
          "type" : "string",
          "description" : "Billing cycle day setting option.\n\n**Character limit**: 9\n\n\n**Values**: `AutoSet`, `ManualSet` "
        },
        "BillCycleDay" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Billing cycle day (BCD) on which bill runs generate invoices for the account.\n\n**Character limit**: 2\n\n\n**Values**: any activated system-defined bill cycle day (`1` - `31`) "
        },
        "BillToId" : {
          "type" : "string",
          "description" : "ID of the person to bill for the account.\n\n**Character limit**: 32\n\n\n**Values**: a valid contact ID for the account "
        },
        "CommunicationProfileId" : {
          "type" : "string",
          "description" : "Associates the account with a specified communication profile.\n\n**Character limit**: 32\n\n\n**Values**: a valid communication profile ID "
        },
        "CreatedById" : {
          "type" : "string",
          "description" : "ID of the Zuora user who created the Account object.\n\n**Character limit**: 32\n\n\n**Values**: automatically generated "
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date when the Account object was created.\n\n**Character limit**: 29\n\n\n**Values**: automatically generated "
        },
        "CreditBalance" : {
          "type" : "number",
          "format" : "double",
          "description" : "Total credit balance for the account.\n\n**Character limit**: 16\n\n\n**Values**: automatically generated "
        },
        "CrmId" : {
          "type" : "string",
          "description" : "CRM account ID for the account. A CRM is a customer relationship management system, such as Salesforce.com.\n\n**Character limit**: 100\n\n\n**Values**: a string of 100 characters or fewer "
        },
        "Currency" : {
          "type" : "string",
          "description" : " Currency that the customer is billed in. See [a currency value defined in the Zuora Ui admin settings](https://knowledgecenter.zuora.com/CB_Billing/Billing_Settings/Customize_Currencies) "
        },
        "CustomerServiceRepName" : {
          "type" : "string",
          "description" : "Name of the account's customer service representative, if applicable.\n\n**Character limit**: 50\n\n\n**Values**: a string of 50 characters or fewer "
        },
        "DefaultPaymentMethodId" : {
          "type" : "string",
          "description" : "ID of the default payment method for the account. This field is required if the AutoPay field is set to `true`.\n\n**Character limit**: 32\n\n\n**Values**: a valid ID for an existing payment method "
        },
        "InvoiceDeliveryPrefsEmail" : {
          "type" : "boolean",
          "description" : "Indicates if the customer wants to receive invoices through email.\n**Character limit**: 5\n\n\n**Values**: `true`, `false` (default if left null) "
        },
        "InvoiceDeliveryPrefsPrint" : {
          "type" : "boolean",
          "description" : "Indicates if the customer wants to receive printed invoices, such as through postal mail.\n\n**Character limit**: 5\n\n\n**Values**: `true`, `false` (default if left null) "
        },
        "InvoiceTemplateId" : {
          "type" : "string",
          "description" : "The ID of the invoice template. Each customer account can use a specific invoice template for invoice generation.\n\n**Character limit**: 32\n\n\n**Values**: a[ valid template ID configured in Z-Billing Settings](https://knowledgecenter.zuora.com/CB_Billing/Billing_Settings/Manage_Invoice_Rules_and_Templates) To find the ID of your current invoice template: In Zuora, navigate to **Settings > Z-Billing > Manage Invoice Rules and Templates** and click **Show Id **next to the template you want to use.\n\n\n"
        },
        "LastInvoiceDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the previous invoice was generated for the account. The field value is null if no invoice has ever been generated for the account.\n\n\n**Character limit**: 29\n\n\n**Values**: automatically generated "
        },
        "Name" : {
          "type" : "string",
          "description" : "Name of the account as displayed in the Zuora UI.\n\n**Character limit**: 255\n\n\n**Values**: a string of 255 characters or fewer "
        },
        "Notes" : {
          "type" : "string",
          "description" : " Comments about the account.\n\n**Character limit**: 65,535\n\n\n**Values**: a string of 65,535 characters "
        },
        "ParentId" : {
          "type" : "string",
          "description" : "Identifier of the parent customer account for this Account object. Use this field if you have customer hierarchy enabled.\n\n**Character limit**: 32\n\n\n**Values**: a valid account ID "
        },
        "PaymentGateway" : {
          "type" : "string",
          "description" : "Gateway used for processing electronic payments and refunds.\n\n**Character limit**: 40\n\n\n**Values**: one of the following:\n\n- a valid configured gateway name\n- Null to inherit the default value set in Z-Payment Settings\n"
        },
        "PaymentTerm" : {
          "type" : "string",
          "description" : "Indicates when the customer pays for subscriptions.\n\n**Character limit**: 100\n\n\n**Values**: [a valid, active payment term defined in the web-based UI administrative settings](https://knowledgecenter.zuora.com/CB_Billing/Billing_Settings/Define_Payment_Terms) "
        },
        "PurchaseOrderNumber" : {
          "type" : "string",
          "description" : "The number of the purchase order associated with this account. Purchase order information generally comes from customers.\n\n**Character limit**: 100\n\n\n**Values**: a string of 100 characters or fewer "
        },
        "SalesRepName" : {
          "type" : "string",
          "description" : "The name of the sales representative associated with this account, if applicable.\n\n**Character limit**: 50\n\n\n**Values**: a string of 50 characters or fewer "
        },
        "SoldToId" : {
          "type" : "string",
          "description" : "ID of the person who bought the subscription associated with the account.\n\n**Character limit**: 32\n\n\n**Values**: a valid contact ID for the account "
        },
        "Status" : {
          "type" : "string",
          "description" : "Status of the account in the system.\n\n**Character limit**: 8\n\n\n**Values**: one of the following:\n\n- leave null if you're using `subscribe\n`\n- if you're using `create\n`:\n- `Draft`\n- `Active`\n- `Canceled`\n"
        },
        "TaxCompanyCode" : {
          "type" : "string",
          "description" : " Unique code that identifies a company account in Avalara. Use this field to calculate taxes based on origin and sold-to addresses in Avalara.\nThis feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).\n\n\n\n**Character limit**: 50\n\n\n**Values**: a valid company code "
        },
        "TaxExemptCertificateID" : {
          "type" : "string",
          "description" : "ID of your customer's tax exemption certificate.\n\n**Character limit**: 32\n\n\n**Values**: a string of 32 characters or fewer "
        },
        "TaxExemptCertificateType" : {
          "type" : "string",
          "description" : "Type of the tax exemption certificate that your customer holds.\n**Character limit**: 32\n\n\n**Values**: a string of 32 characters or fewer "
        },
        "TaxExemptDescription" : {
          "type" : "string",
          "description" : "Description of the tax exemption certificate that your customer holds.\n\n**Character limit**: 500\n\n\n**Values**: a string of 500 characters or fewer "
        },
        "TaxExemptEffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date when the the customer's tax exemption starts.\n\n**Character limit**: 29 **Version notes**: requires Z-Tax "
        },
        "TaxExemptExpirationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date when the customer's tax exemption certificate expires\n**Character limit**: 29 **Version notes**: requires Z-Tax "
        },
        "TaxExemptIssuingJurisdiction" : {
          "type" : "string",
          "description" : "Indicates the jurisdiction in which the customer's tax exemption certificate was issued.\n\n**Character limit**: 32\n\n\n**Values**: a string of 32 characters or fewer "
        },
        "TaxExemptStatus" : {
          "type" : "string",
          "description" : " Status of the account's tax exemption. Required if you use Z-Tax. This field is unavailable if you don't use Z-Tax.\n\n\n**Character limit**: 19\n\n\n**Values**: one of the following:\n\n- `Yes`\n- `No`\n- `PendingVerification`\n"
        },
        "TotalInvoiceBalance" : {
          "type" : "number",
          "format" : "double",
          "description" : "Total balance of the account's invoices.\n\n**Character limit**: 16\n\n\n**Values**: a valid currency value "
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : "ID of the user who last updated the account.\n\n**Character limit**: 32\n\n\n**Values**: automatically generated "
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date when the account was last updated.\n\n**Character limit**: 29\n\n\n**Values**: automatically generated "
        },
        "VATId" : {
          "type" : "string",
          "description" : " EU Value Added Tax ID.\nThis feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).\n\n\n\n**Character limit**: 25\n\n\n**Values**: a valid Value Added Tax ID "
        }
      }
    },
    "AmendOptions" : {
      "type" : "object",
      "properties" : {
        "ApplyCreditBalance" : {
          "type" : "boolean",
          "description" : ""
        },
        "ElectronicPaymentOptions" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/ElectronicPaymentOptions"
          }
        },
        "ExternalPaymentOptions" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/ExternalPaymentOptions"
          }
        },
        "GenerateInvoice" : {
          "type" : "boolean",
          "description" : ""
        },
        "InvoiceProcessingOptions" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/InvoiceProcessingOptions"
          }
        },
        "ProcessPayments" : {
          "type" : "boolean",
          "description" : ""
        }
      }
    },
    "AmendRequest" : {
      "type" : "object",
      "properties" : {
        "AmendOptions" : {
          "type" : "array",
          "description" : "Use the `AmendOptions` container to specify billing options, such as invoice generation and when to process payments.\n",
          "items" : {
            "$ref" : "#/definitions/AmendOptions"
          }
        },
        "Amendments" : {
          "type" : "array",
          "description" : "The `Amendment` object holds the changes that you want to make to the Subscription specified by the `SubscriptionId`, \nincluding its `RatePlan`, `RatePlanCharge`, and `RatePlanChargeTier`.\n",
          "items" : {
            "$ref" : "#/definitions/Amendment"
          }
        },
        "PreviewOptions" : {
          "type" : "array",
          "description" : "Use the `PreviewOptions` container to preview an amendment before committing its changes to a subscription. \nYou can use a preview to provide a quote of the new charges to a customer before the customer commits to the amended subscription. \nFor example, make an Amend call with an Amendment object that removes an existing rate plan, \nanother Amendment object that adds a new rate plan, and turn on the preview options.\n",
          "items" : {
            "$ref" : "#/definitions/PreviewOptions"
          }
        }
      }
    },
    "AmendResult" : {
      "type" : "object",
      "properties" : {
        "AmendmentIds" : {
          "type" : "string",
          "description" : " The IDs of the associated Amendment object. There can be as many as three AmendmentId values."
        },
        "ChargeMetricsData" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/ChargeMetricsData"
          }
        },
        "Errors" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/Error"
          }
        },
        "GatewayResponse" : {
          "type" : "string",
          "description" : ""
        },
        "GatewayResponseCode" : {
          "type" : "string",
          "description" : ""
        },
        "InvoiceDatas" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/InvoiceData"
          }
        },
        "InvoiceId" : {
          "type" : "string",
          "description" : ""
        },
        "PaymentId" : {
          "type" : "string",
          "description" : ""
        },
        "PaymentTransactionNumber" : {
          "type" : "string",
          "description" : ""
        },
        "SubscriptionId" : {
          "type" : "string",
          "description" : ""
        },
        "Success" : {
          "type" : "boolean",
          "description" : ""
        },
        "TotalDeltaMrr" : {
          "type" : "number",
          "format" : "double",
          "description" : ""
        },
        "TotalDeltaTcv" : {
          "type" : "number",
          "format" : "double",
          "description" : ""
        }
      }
    },
    "Amendment" : {
      "type" : "object",
      "properties" : {
        "AutoRenew" : {
          "type" : "boolean",
          "description" : " Determines whether the subscription is automatically renewed, or whether it expires at the end of the term and needs to be manually renewed. **Required:** For amendment of type TermsAndConditions when changing the automatic renewal status of a subscription.\n\n\n**Values**: true, false "
        },
        "Code" : {
          "type" : "string",
          "description" : " A unique alphanumeric string that identifies the amendment.\n\n\n**Character limit**: 50\n\n**Values**: one of the following:\n\n- `null` generates a value automatically\n- A string\n"
        },
        "ContractEffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the amendment's changes become effective for billing purposes.\n"
        },
        "CreatedById" : {
          "type" : "string",
          "description" : " The user ID of the person who created the amendment.\n\n\n**Character limit**: 32\n\n**Values**: automatically generated "
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the amendment was created.\n\n\n**Values**: automatically generated "
        },
        "CurrentTerm" : {
          "type" : "integer",
          "format" : "int64",
          "description" : " The length of the period for the current subscription term. This field can be updated when Status is `Draft`.\n\n**Required**: Only if the value of the Type field is set to `TermsAndConditions` and TermType is set to `TERMED`. This field is not required if `TermType` is set to `EVERGREEN`.\n\n\n**Values**: a valid number "
        },
        "CurrentTermPeriodType" : {
          "type" : "string",
          "description" : " The period type for the current subscription term.\n\n**Values**:\n\n- `Month` (default)\n- `Year`\n- `Day`\n- `Week`\n\n\n**Note**:\n\n- This field can be updated when Status is `Draft`.\n- This field is used with the CurrentTerm field to specify the current subscription term.\n"
        },
        "CustomerAcceptanceDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the customer accepts the amendment's changes to the subscription. Use this field if [Zuora is configured to require customer acceptance in Z-Billing](https://knowledgecenter.zuora.com/CB_Billing/W_Billing_and_Payments_Settings/Define_Default_Subscription_Settings). **Required**: Only if the value of the Status field is set to PendingAcceptance.\n\n"
        },
        "Description" : {
          "type" : "string",
          "description" : " A description of the amendment.\n\n\n**Character limit**: 500\n\n**Values**: maximum 500 characters "
        },
        "DestinationAccountId" : {
          "type" : "string",
          "description" : " The ID of the account that the subscription is being transferred to.\n\n\n**Character limit**: 32\n\n**Values**: a valid account ID "
        },
        "DestinationInvoiceOwnerId" : {
          "type" : "string",
          "description" : " The ID of the invoice that the subscription is being transferred to.\n\n\n**Character limit**: 32\n\n**Values**: a valid invoice ID "
        },
        "EffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the amendment's changes take effective. This field validates that the amendment's changes are within valid ranges of products and product rate plans.\n**Required**: For the cancellation amendments. Optional for other types of amendments.\n\n"
        },
        "Name" : {
          "type" : "string",
          "description" : " The name of the amendment.\n\n\n**Character limit**: 100\n\n**Values**: a string of 100 characters or fewer "
        },
        "RatePlanData" : {
          "type" : "array",
          "description" : "A container for one `RatePlanData`.\n",
          "items" : {
            "$ref" : "#/definitions/RatePlanData"
          }
        },
        "RenewalSetting" : {
          "type" : "string",
          "description" : " Specifies whether a termed subscription will remain termed or change to evergreen when it is renewed.\n**Required**: If TermType is Termed\n\n**Values**: RENEW_WITH_SPECIFIC_TERM (default), RENEW_TO_EVERGREEN "
        },
        "RenewalTerm" : {
          "type" : "integer",
          "format" : "int64",
          "description" : " The term of renewal for the amended subscription. This field can be updated when Status is `Draft`.\n**Required**: Only if the value of the `Type` field is set to `TermsAndConditions`.\n\n\n\n**Values:** a valid number "
        },
        "RenewalTermPeriodType" : {
          "type" : "string",
          "description" : " The period type for the subscription renewal term. This field can be updated when Status is `Draft`.\n**Required**: Only if the value of the Type field is set to `TermsAndConditions`. This field is used with the RenewalTerm field to specify the subscription renewal term.\n\n\n**Values**:\n\n- `Month` (default)\n- `Year`\n- `Day`\n- `Week`\n"
        },
        "ServiceActivationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when service is activated. Use this field if [Zuora is configured to require service activation in Z-Billing](https://knowledgecenter.zuora.com/CB_Billing/W_Billing_and_Payments_Settings/Define_Default_Subscription_Settings).\n\n**Required**: Only if the value of the `Status` field is set to `PendingActivation`.\n"
        },
        "SpecificUpdateDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date when the UpdateProduct amendment takes effect. This field is only applicable if there is already a future-dated UpdateProduct amendment on the subscription.\n\n\n**Required**: Only for the UpdateProduct amendments if there is already a future-dated UpdateProduct amendment on the subscription.\n"
        },
        "Status" : {
          "type" : "string",
          "description" : " The status of the amendment. Type: string (enum)\n\n\n\n**Values**: one of the following:\n\n- Draft (default, if left null)\n- Pending Activation\n- Pending Acceptance\n- Completed\n"
        },
        "SubscriptionId" : {
          "type" : "string",
          "description" : " The ID of the subscription that the amendment changes.\n\n\n**Character limit**: 32\n\n**Values**: a valid subscription ID "
        },
        "TermStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the new terms and conditions take effect.\n**Required**: Only if the value of the Type field is set to TermsAndConditions.\n"
        },
        "TermType" : {
          "type" : "string",
          "description" : " Indicates if the subscription isTERMED or EVERGREEN.\n\n- A TERMED subscription has an expiration date, and must be manually renewed.\n- An EVERGREEN subscription doesn't have an expiration date, and must be manually ended.\n\n**Required**: Only when as part of an amendment of type TermsAndConditions &#65279;to change the term type of a subscription. Type: string\n\n**Character limit**: 9\n\n**Values**: TERMED, EVERGREEN "
        },
        "Type" : {
          "type" : "string",
          "description" : " The type of amendment.\n\n\n**Character limit**: 18\n\n\n\n**Values**: one of the following:\n\n- Cancellation\n- NewProduct\n- OwnerTransfer\n- RemoveProduct\n- Renewal\n- UpdateProduct\n- TermsAndConditions\n- SuspendSubscription (This value is in **Limited Availability**.)\n- ResumeSubscription (This value is in **Limited Availability**.)\n"
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : " The ID of the user who last updated the amendment.\n\n\n**Character limit**: 32\n\n**Values**: automatically generated "
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the amendment was last updated.\n\n\n**Values**: automatically generated "
        }
      }
    },
    "ChargeMetricsData" : {
      "type" : "object",
      "properties" : {
        "ChargeMetrics" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/NewChargeMetrics"
          }
        }
      }
    },
    "CommonResponseType" : {
      "type" : "object",
      "properties" : {
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        }
      }
    },
    "Contact" : {
      "type" : "object",
      "properties" : {
        "AccountId" : {
          "type" : "string",
          "description" : " The Zuora account ID associated with this contact. This field is not required when you use the subscribe\ncall. This field is required for all other calls.\n**Character limit: **32 **Values: **a valid account ID "
        },
        "Address1" : {
          "type" : "string",
          "description" : " The first line of the contact's address, which is often a street address or business name.\n\n\n**Character limit**: 255\n\n\n**Values**: a string of 255 characters or fewer "
        },
        "Address2" : {
          "type" : "string",
          "description" : " The second line of the contact's address.\n\n\n**Character limit**: 255\n\n\n**Values**: a string of 255 characters or fewer "
        },
        "City" : {
          "type" : "string",
          "description" : " The city of the contact's address.\n\n\n**Character limit**: 40 **Values: **a string of 40 characters or fewer "
        },
        "Country" : {
          "type" : "string",
          "description" : " The country of the contact's address. "
        },
        "County" : {
          "type" : "string",
          "description" : " The country. May optionally be used by [Z-Tax](/C_Zuora_User_Guides/A_Billing_and_Payments/I_Taxes/Z-Tax) to calculate county tax.\n\n\n**Character limit**: 32\n\n\n**Values**: a string of 32 characters or fewer "
        },
        "CreatedById" : {
          "type" : "string",
          "description" : "The ID of the Zuora user who created the contact.\n\n**Character limit**: 32\n\n\n**Values**: automatically generated "
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date when the contact was created.\n\n**Character limit**: 29\n\n\n**Values**: automatically generated "
        },
        "Description" : {
          "type" : "string",
          "description" : " A description for the contact.\n\n\n**Character limit**: 100\n\n\n**Values**: a string of 100 characters or fewer "
        },
        "Fax" : {
          "type" : "string",
          "description" : " The contact's fax number.\n\n\n**Character limit**: 40\n\n\n**Values**: a string of 40 characters or fewer "
        },
        "FirstName" : {
          "type" : "string",
          "description" : " The contact's first name.\n\n\n**Character limit**: 100\n\n\n**Values**: a string of the contact's first name "
        },
        "HomePhone" : {
          "type" : "string",
          "description" : " The contact's home phone number.\n\n\n**Character limit**: 40\n\n\n**Values**: a string of 40 characters or fewer "
        },
        "LastName" : {
          "type" : "string",
          "description" : " The contact's last name.\n\n\n**Character limit**: 100\n\n\n**Values**: a string of 100 characters or fewer "
        },
        "MobilePhone" : {
          "type" : "string",
          "description" : " The contact's mobile phone number.\n\n\n**Character limit**: 40\n\n\n**Values**: a string of 40 characters or fewer "
        },
        "NickName" : {
          "type" : "string",
          "description" : " A nickname for the contact.\n\n\n**Character limit**: 100\n\n\n**Values**: a string of 100 characters or fewer "
        },
        "OtherPhone" : {
          "type" : "string",
          "description" : " An additional phone number for the contact.\n\n\n**Character limit**: 40\n\n\n**Values**: a string of 40 characters or fewer "
        },
        "OtherPhoneType" : {
          "type" : "string",
          "description" : "The type of the `OtherPhone`.\n\n**Character limit**: 20\n\n\n**Values**: `Work`, `Mobile`, `Home`, `Other` "
        },
        "PersonalEmail" : {
          "type" : "string",
          "description" : " The contact's personal email address.\n\n\n**Character limit**: 80\n\n\n**Values**: a string of 80 characters or fewer "
        },
        "PostalCode" : {
          "type" : "string",
          "description" : " The zip code for the contact's address.\n**Character limit:** 20 **Values: **a string of 20 characters or fewer "
        },
        "State" : {
          "type" : "string",
          "description" : " The state or province of the contact's address. "
        },
        "TaxRegion" : {
          "type" : "string",
          "description" : "If using [Z-Tax](https://knowledgecenter.zuora.com/CB_Billing/J_Billing_Operations/L_Taxes/A_Z-Tax) tax rules "
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : " The ID of the user who lasted updated the contact.\n\n\n**Character limit**: 32\n\n\n**Values**: automatically generated "
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the contact was last updated.\n\n\n**Character limit**: 29\n\n\n**Values**: automatically generated "
        },
        "WorkEmail" : {
          "type" : "string",
          "description" : " The contact's business email address.\n\n\n**Character limit**: 80\n\n\n**Values**: a string of 80 characters or fewer "
        },
        "WorkPhone" : {
          "type" : "string",
          "description" : " The contact's business phone number.\n\n\n**Character limit**: 40 **notes**: --\n\n\n**Values**: a string of 40 characters or fewer "
        }
      }
    },
    "DeleteResult" : {
      "type" : "object",
      "properties" : {
        "errors" : {
          "type" : "array",
          "description" : "If the delete failed, this contains an array of Error objects.\n",
          "items" : {
            "$ref" : "#/definitions/Error"
          }
        },
        "id" : {
          "type" : "string",
          "description" : "ID of the deleted object.\n"
        },
        "success" : {
          "type" : "boolean",
          "description" : "A boolean field indicating the success of the delete operation. If the delete was successful, it is `true`. Otherwise, `false`.\n"
        }
      }
    },
    "ElectronicPaymentOptions" : {
      "type" : "object",
      "properties" : {
        "PaymentMethodId" : {
          "type" : "string",
          "description" : ""
        }
      }
    },
    "Error" : {
      "type" : "object",
      "properties" : {
        "Code" : {
          "type" : "string",
          "description" : ""
        },
        "Field" : {
          "type" : "string",
          "description" : ""
        },
        "Message" : {
          "type" : "string",
          "description" : ""
        }
      }
    },
    "EventRevenueItemType" : {
      "type" : "object",
      "required" : [ "accountingPeriodName" ],
      "properties" : {
        "accountingPeriodName" : {
          "type" : "string",
          "description" : "Name of the accounting period. The open-ended accounting period is named `Open-Ended`.\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        }
      },
      "title" : "revenueItems"
    },
    "ExecuteResult" : {
      "type" : "object",
      "properties" : {
        "Errors" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/Error"
          }
        },
        "Id" : {
          "type" : "string",
          "description" : "The ID of the object in the call. The value is the same as the value you provide in the `ids` field for the request.\n"
        },
        "Success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the call was processed successfully, otherwise `false`.\n"
        }
      }
    },
    "ExternalPaymentOptions" : {
      "type" : "object",
      "properties" : {
        "Amount" : {
          "type" : "number",
          "format" : "double",
          "description" : ""
        },
        "EffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : ""
        },
        "GatewayOrderId" : {
          "type" : "string",
          "description" : ""
        },
        "PaymentMethodId" : {
          "type" : "string",
          "description" : ""
        },
        "ReferenceId" : {
          "type" : "string",
          "description" : ""
        }
      }
    },
    "GETAccountSummaryInvoiceType" : {
      "type" : "object",
      "properties" : {
        "amount" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Invoice amount before adjustments, discounts, and similar items.\n"
        },
        "balance" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Balance due on the invoice.\n"
        },
        "dueDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Due date as `yyyy-mm-dd`.\n"
        },
        "id" : {
          "type" : "string",
          "description" : "Invoice ID.\n"
        },
        "invoiceDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Invoice date as `yyyy-mm-dd`.\n"
        },
        "invoiceNumber" : {
          "type" : "string",
          "description" : "Invoice number.\n"
        },
        "status" : {
          "type" : "string",
          "description" : "Invoice status - not the payment status of the invoice, just the status of the invoice itself. Possible values are: `Posted`, `Draft`, `Canceled`, `Error`.\n"
        }
      },
      "title" : "invoices"
    },
    "GETAccountSummaryPaymentInvoiceType" : {
      "type" : "object",
      "properties" : {
        "appliedPaymentAmount" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Amount of payment applied to the invoice.\n"
        },
        "invoiceId" : {
          "type" : "string",
          "description" : "Invoice ID.\n"
        },
        "invoiceNumber" : {
          "type" : "string",
          "description" : "Invoice number.\n"
        }
      },
      "title" : "paidInvoices"
    },
    "GETAccountSummaryPaymentType" : {
      "type" : "object",
      "properties" : {
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Effective date as `yyyy-mm-dd`.\n"
        },
        "id" : {
          "type" : "string",
          "description" : "Payment ID.\n"
        },
        "paidInvoices" : {
          "type" : "array",
          "description" : "Container for paid invoices for this subscription.\n",
          "items" : {
            "$ref" : "#/definitions/GETAccountSummaryPaymentInvoiceType"
          }
        },
        "paymentNumber" : {
          "type" : "string",
          "description" : "Payment number.\n"
        },
        "paymentType" : {
          "type" : "string",
          "description" : "Payment type; possible values are: `External`, `Electronic`.\n"
        },
        "status" : {
          "type" : "string",
          "description" : "Payment status. Possible values are: `Draft`, `Processing`, `Processed`, `Error`, `Voided`, `Canceled`, `Posted`.\n"
        }
      },
      "title" : "payments"
    },
    "GETAccountSummarySubscriptionRatePlanType" : {
      "type" : "object",
      "properties" : {
        "productId" : {
          "type" : "string",
          "description" : "Product ID.\n"
        },
        "productName" : {
          "type" : "string",
          "description" : "Product name.\n"
        },
        "productRatePlanId" : {
          "type" : "string",
          "description" : "Product Rate Plan ID.\n"
        },
        "productSku" : {
          "type" : "string",
          "description" : ""
        },
        "ratePlanName" : {
          "type" : "string",
          "description" : "Rate plan name.\n"
        }
      },
      "title" : "ratePlans"
    },
    "GETAccountSummarySubscriptionType" : {
      "type" : "object",
      "properties" : {
        "CpqBundleJsonId__QT" : {
          "type" : "string",
          "description" : ""
        },
        "OpportunityCloseDate__QT" : {
          "type" : "string",
          "description" : ""
        },
        "OpportunityName__QT" : {
          "type" : "string",
          "description" : ""
        },
        "QuoteBusinessType__QT" : {
          "type" : "string",
          "description" : ""
        },
        "QuoteNumber__QT" : {
          "type" : "string",
          "description" : ""
        },
        "QuoteType__QT" : {
          "type" : "string",
          "description" : ""
        },
        "autoRenew" : {
          "type" : "boolean",
          "description" : "If `true`, auto-renew is enabled. If `false`, auto-renew is disabled.\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "id" : {
          "type" : "string",
          "description" : "Subscription ID.\n"
        },
        "initialTerm" : {
          "type" : "string",
          "description" : "Duration of the initial subscription term in whole months. \n"
        },
        "ratePlans" : {
          "type" : "array",
          "description" : "Container for rate plans for this subscription.\n",
          "items" : {
            "$ref" : "#/definitions/GETAccountSummarySubscriptionRatePlanType"
          }
        },
        "renewalTerm" : {
          "type" : "string",
          "description" : "Duration of the renewal term in whole months.\n"
        },
        "status" : {
          "type" : "string",
          "description" : "Subscription status; possible values are: `Draft`, `PendingActivation`, `PendingAcceptance`, `Active`, `Cancelled`, `Expired`.\n"
        },
        "subscriptionNumber" : {
          "type" : "string",
          "description" : "Subscription Number.\n"
        },
        "subscriptionStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Subscription start date.\n"
        },
        "termEndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "End date of the subscription term. If the subscription is evergreen, this is either null or equal to the cancellation date, as appropriate.\n"
        },
        "termStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Start date of the subscription term. If this is a renewal subscription, this date is different than the subscription start date.\n"
        },
        "termType" : {
          "type" : "string",
          "description" : "Possible values are: `TERMED`, `EVERGREEN`.\n"
        }
      },
      "title" : "subscriptions"
    },
    "GETAccountSummaryType" : {
      "type" : "object",
      "properties" : {
        "basicInfo" : {
          "$ref" : "#/definitions/GETAccountSummaryType_basicInfo"
        },
        "billToContact" : {
          "$ref" : "#/definitions/GETAccountSummaryType_billToContact"
        },
        "invoices" : {
          "type" : "array",
          "description" : "Container for invoices. Only returns the last 6 invoices.\n",
          "items" : {
            "$ref" : "#/definitions/GETAccountSummaryInvoiceType"
          }
        },
        "payments" : {
          "type" : "array",
          "description" : "Container for payments. Only returns the last 6 payments.\n",
          "items" : {
            "$ref" : "#/definitions/GETAccountSummaryPaymentType"
          }
        },
        "soldToContact" : {
          "$ref" : "#/definitions/GETAccountSummaryType_soldToContact"
        },
        "subscriptions" : {
          "type" : "array",
          "description" : "Container for subscriptions.\n",
          "items" : {
            "$ref" : "#/definitions/GETAccountSummarySubscriptionType"
          }
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        },
        "taxInfo" : {
          "$ref" : "#/definitions/GETAccountSummaryType_taxInfo"
        },
        "usage" : {
          "type" : "array",
          "description" : "Container for usage data. Only returns the last 6 months of usage.\n",
          "items" : {
            "$ref" : "#/definitions/GETAccountSummaryUsageType"
          }
        }
      }
    },
    "GETAccountSummaryUsageType" : {
      "type" : "object",
      "properties" : {
        "quantity" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Number of units used.\n"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The start date of a usage period as `yyyy-mm`. Zuora uses this field value to determine the usage date.\n"
        },
        "unitOfMeasure" : {
          "type" : "string",
          "description" : "Unit by which consumption is measured, as configured in the Billing Settings section of the web-based UI.\n"
        }
      },
      "title" : "usage"
    },
    "GETAccountType" : {
      "type" : "object",
      "properties" : {
        "basicInfo" : {
          "$ref" : "#/definitions/GETAccountType_basicInfo"
        },
        "billToContact" : {
          "$ref" : "#/definitions/GETAccountType_billToContact"
        },
        "billingAndPayment" : {
          "$ref" : "#/definitions/GETAccountType_billingAndPayment"
        },
        "metrics" : {
          "$ref" : "#/definitions/GETAccountType_metrics"
        },
        "soldToContact" : {
          "$ref" : "#/definitions/GETAccountType_soldToContact"
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        },
        "taxInfo" : {
          "$ref" : "#/definitions/GETAccountSummaryType_taxInfo"
        }
      }
    },
    "GETAccountingCodeItemType" : {
      "type" : "object",
      "properties" : {
        "category" : {
          "type" : "string",
          "description" : "The category associated with the accounting code.\n\nPossible values:\n* `Assets`\n* `Liabilities`\n* `Equity`\n* `Revenue`\n* `Expenses`\n"
        },
        "createdBy" : {
          "type" : "string",
          "description" : "The ID of the user who created the accounting code.\n"
        },
        "createdOn" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time when the accounting code was created.\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "glAccountName" : {
          "type" : "string",
          "description" : "Name of the account in your general ledger.\n\nField only available if you have Zuora Finance enabled.\n"
        },
        "glAccountNumber" : {
          "type" : "string",
          "description" : "Account number in your general ledger.\n\nField only available if you have Zuora Finance enabled.\n"
        },
        "id" : {
          "type" : "string",
          "description" : "ID of the accounting code.\n"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the accounting code.\n"
        },
        "notes" : {
          "type" : "string",
          "description" : "Any optional notes for the accounting code.\n"
        },
        "status" : {
          "type" : "string",
          "description" : "The accounting code status.\n\nPossible values:\n* `Active`\n* `Inactive`\n"
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        },
        "type" : {
          "type" : "string",
          "description" : "Accounting code type.\n\nPossible values:\n* `AccountsReceivable`\n* `Cash`\n* `OtherAssets`\n* `CustomerCashOnAccount`\n* `DeferredRevenue`\n* `SalesTaxPayable`\n* `OtherLiabilities`\n* `SalesRevenue`\n* `SalesDiscounts`\n* `OtherRevenue`\n* `OtherEquity`\n* `BadDebt`\n* `OtherExpenses`\n"
        },
        "updatedBy" : {
          "type" : "string",
          "description" : "The ID of the user who last updated the accounting code.\n"
        },
        "updatedOn" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time when the accounting code was last updated.\n"
        }
      }
    },
    "GETAccountingCodeItemWithoutSuccessType" : {
      "type" : "object",
      "properties" : {
        "category" : {
          "type" : "string",
          "description" : "The category associated with the accounting code.\n\nPossible values:\n* `Assets`\n* `Liabilities`\n* `Equity`\n* `Revenue`\n* `Expenses`\n"
        },
        "createdBy" : {
          "type" : "string",
          "description" : "The ID of the user who created the accounting code.\n"
        },
        "createdOn" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time when the accounting code was created.\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "glAccountName" : {
          "type" : "string",
          "description" : "Name of the account in your general ledger.\n\nField only available if you have Zuora Finance enabled.\n"
        },
        "glAccountNumber" : {
          "type" : "string",
          "description" : "Account number in your general ledger.\n\nField only available if you have Zuora Finance enabled.\n"
        },
        "id" : {
          "type" : "string",
          "description" : "ID of the accounting code.\n"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the accounting code.\n"
        },
        "notes" : {
          "type" : "string",
          "description" : "Any optional notes for the accounting code.\n"
        },
        "status" : {
          "type" : "string",
          "description" : "The accounting code status.\n\nPossible values:\n* `Active`\n* `Inactive`\n"
        },
        "type" : {
          "type" : "string",
          "description" : "Accounting code type.\n\nPossible values:\n* `AccountsReceivable`\n* `Cash`\n* `OtherAssets`\n* `CustomerCashOnAccount`\n* `DeferredRevenue`\n* `SalesTaxPayable`\n* `OtherLiabilities`\n* `SalesRevenue`\n* `SalesDiscounts`\n* `OtherRevenue`\n* `OtherEquity`\n* `BadDebt`\n* `OtherExpenses`\n"
        },
        "updatedBy" : {
          "type" : "string",
          "description" : "The ID of the user who last updated the accounting code.\n"
        },
        "updatedOn" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time when the accounting code was last updated.\n"
        }
      },
      "title" : "accountingCodes"
    },
    "GETAccountingCodesType" : {
      "type" : "object",
      "properties" : {
        "accountingCodes" : {
          "type" : "array",
          "description" : "An array of all the accounting codes in your chart of accounts. Each accounting code has the following fields.\n",
          "items" : {
            "$ref" : "#/definitions/GETAccountingCodeItemWithoutSuccessType"
          }
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        }
      }
    },
    "GETAccountingPeriodFileIdsType" : {
      "type" : "object",
      "properties" : {
        "accountsReceivableAccountAgingDetailExportFileId" : {
          "type" : "string",
          "description" : "File ID of the Accounts Receivable Aging Account Detail report.\n"
        },
        "accountsReceivableInvoiceAgingDetailExportFileId" : {
          "type" : "string",
          "description" : "File ID of the Accounts Receivable Aging Invoice Detail report.\n"
        },
        "arRollForwardDetailExportFileId" : {
          "type" : "string",
          "description" : "File ID of the Accounts Receivable Detail report.\n"
        },
        "fxRealizedGainAndLossDetailExportFileId" : {
          "type" : "string",
          "description" : "File ID of the Realized Gain and Loss Detail report.\n\nReturned only if you have Foreign Currency Conversion enabled.\n"
        },
        "fxUnrealizedGainAndLossDetailExportFileId" : {
          "type" : "string",
          "description" : "File ID of the Unrealized Gain and Loss Detail report.\n\nReturned only if you have Foreign Currency Conversion enabled\n"
        },
        "revenueDetailCsvFileId" : {
          "type" : "string",
          "description" : "File ID of the Revenue Detail report in CSV format.\n"
        },
        "revenueDetailExcelFileId" : {
          "type" : "string",
          "description" : "File ID of the Revenue Detail report in XLSX format.\n"
        },
        "unprocessedChargesFileId" : {
          "type" : "string",
          "description" : "File ID of a report containing all unprocessed charges for the accounting period.\n"
        }
      },
      "title" : "fileIds"
    },
    "GETAccountingPeriodType" : {
      "type" : "object",
      "properties" : {
        "createdBy" : {
          "type" : "string",
          "description" : "ID of the user who created the accounting period.\n"
        },
        "createdOn" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time when the accounting period was created.\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "endDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The end date of the accounting period.\n"
        },
        "fileIds" : {
          "type" : "array",
          "description" : "File IDs of the reports available for the accounting period. You can retrieve the reports by specifying the file ID in a [Get Files](https://knowledgecenter.zuora.com/DC_Developers/REST_API/B_REST_API_reference/Get_Files) REST API call.\n",
          "items" : {
            "$ref" : "#/definitions/GETAccountingPeriodFileIdsType"
          }
        },
        "fiscalYear" : {
          "type" : "string",
          "description" : "Fiscal year of the accounting period.\n"
        },
        "fiscal_quarter" : {
          "type" : "integer",
          "format" : "int64",
          "description" : ""
        },
        "id" : {
          "type" : "string",
          "description" : "ID of the accounting period.\n"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the accounting period.\n"
        },
        "notes" : {
          "type" : "string",
          "description" : "Any optional notes about the accounting period.\n"
        },
        "runTrialBalanceEnd" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the trial balance was completed. If the trial balance status is `Pending`, `Processing`, or `Error`, this field is `null`.\n"
        },
        "runTrialBalanceErrorMessage" : {
          "type" : "string",
          "description" : "If trial balance status is Error, an error message is returned in this field.\n"
        },
        "runTrialBalanceStart" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the trial balance was run. If the trial balance status is Pending, this field is null.\n"
        },
        "runTrialBalanceStatus" : {
          "type" : "string",
          "description" : "Status of the trial balance for the accounting period. Possible values:\n\n* `Pending`\n* `Processing`\n* `Completed`\n* `Error`\n"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The start date of the accounting period.\n"
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the accounting period. Possible values:\n* `Open`\n* `PendingClose`\n* `Closed`\n"
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        },
        "updatedBy" : {
          "type" : "string",
          "description" : "ID of the user who last updated the accounting period.\n"
        },
        "updatedOn" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time when the accounting period was last updated.\n"
        }
      }
    },
    "GETAccountingPeriodWithoutSuccessType" : {
      "type" : "object",
      "properties" : {
        "createdBy" : {
          "type" : "string",
          "description" : "ID of the user who created the accounting period.\n"
        },
        "createdOn" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time when the accounting period was created.\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "endDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The end date of the accounting period.\n"
        },
        "fileIds" : {
          "type" : "array",
          "description" : "File IDs of the reports available for the accounting period. You can retrieve the reports by specifying the file ID in a [Get Files](https://knowledgecenter.zuora.com/DC_Developers/REST_API/B_REST_API_reference/Get_Files) REST API call.\n",
          "items" : {
            "$ref" : "#/definitions/GETAccountingPeriodFileIdsType"
          }
        },
        "fiscalYear" : {
          "type" : "string",
          "description" : "Fiscal year of the accounting period.\n"
        },
        "fiscal_quarter" : {
          "type" : "integer",
          "format" : "int64",
          "description" : ""
        },
        "id" : {
          "type" : "string",
          "description" : "ID of the accounting period.\n"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the accounting period.\n"
        },
        "notes" : {
          "type" : "string",
          "description" : "Any optional notes about the accounting period.\n"
        },
        "runTrialBalanceEnd" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the trial balance was completed. If the trial balance status is `Pending`, `Processing`, or `Error`, this field is `null`.\n"
        },
        "runTrialBalanceErrorMessage" : {
          "type" : "string",
          "description" : "If trial balance status is Error, an error message is returned in this field.\n"
        },
        "runTrialBalanceStart" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the trial balance was run. If the trial balance status is `Pending`, this field is `null`.\n"
        },
        "runTrialBalanceStatus" : {
          "type" : "string",
          "description" : "Status of the trial balance for the accounting period. Possible values:\n\n* `Pending`\n* `Processing`\n* `Completed`\n* `Error`\n"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The start date of the accounting period.\n"
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the accounting period. Possible values:\n\n* `Open`\n* `PendingClose`\n* `Closed`\n"
        },
        "updatedBy" : {
          "type" : "string",
          "description" : "D of the user who last updated the accounting period.\n"
        },
        "updatedOn" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time when the accounting period was last updated.\n"
        }
      },
      "title" : "accountingPeriods"
    },
    "GETAccountingPeriodsType" : {
      "type" : "object",
      "properties" : {
        "accountingPeriods" : {
          "type" : "array",
          "description" : "An array of all accounting periods on your tenant. The accounting periods are returned in ascending order of start date; that is, the latest period is returned first.\n",
          "items" : {
            "$ref" : "#/definitions/GETAccountingPeriodWithoutSuccessType"
          }
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        }
      }
    },
    "GETAmendmentType" : {
      "type" : "object",
      "properties" : {
        "autoRenew" : {
          "type" : "boolean",
          "description" : "Determines whether the subscription is automatically renewed, or whether it expires at the end of the term and needs to be manually renewed. \n"
        },
        "baseRatePlanId" : {
          "type" : "string",
          "description" : "The rate plan ID on which changes are made. Only the Update or Remove amendment returns a base rate plan ID.\n"
        },
        "baseSubscriptionId" : {
          "type" : "string",
          "description" : "The ID of the subscription based on which the amendment is created.\n"
        },
        "code" : {
          "type" : "string",
          "description" : "The amendment code.\n"
        },
        "contractEffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date when the amendment becomes effective for billing purposes, as `yyyy-mm-dd`.\n"
        },
        "currentTerm" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The length of the period for the current subscription term. \n"
        },
        "currentTermPeriodType" : {
          "type" : "string",
          "description" : "The period type for the current subscription term.\nPossible values are:\n\n- Month\n- Year\n- Day\n- Week\n"
        },
        "customerAcceptanceDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date when the customer accepts the amendment changes to the subscription, as `yyyy-mm-dd`.\n"
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the amendment.\n"
        },
        "destinationAccountId" : {
          "type" : "string",
          "description" : "The ID of the account that the subscription is being transferred to.\n"
        },
        "destinationInvoiceOwnerId" : {
          "type" : "string",
          "description" : "The ID of the invoice that the subscription is being transferred to.\n"
        },
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date when the amendment changes take effective. \n"
        },
        "id" : {
          "type" : "string",
          "description" : "The amendment ID.\n"
        },
        "name" : {
          "type" : "string",
          "description" : "The name of the amendment.\n"
        },
        "newRatePlanId" : {
          "type" : "string",
          "description" : "The ID of the rate plan charge on which amendment is made. Only the Add or Update amendment returns a new rate plan ID.\n"
        },
        "newSubscriptionId" : {
          "type" : "string",
          "description" : "The ID of the subscription that the amendment changes.\n"
        },
        "renewalSetting" : {
          "type" : "string",
          "description" : "Specifies whether a termed subscription will remain termed or change to evergreen when it is renewed.\nPossible values are:\n\n- RENEW_WITH_SPECIFIC_TERM\n- RENEW_TO_EVERGREEN\n"
        },
        "renewalTerm" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The term of renewal for the amended subscription.\n"
        },
        "renewalTermPeriodType" : {
          "type" : "string",
          "description" : "The period type for the subscription renewal term.\nPossible values are:\n\n- Month\n- Year\n- Day\n- Week\n"
        },
        "resumeDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date when the subscription resumption takes effect, as `yyyy-mm-dd`.\n\n**Note:** This feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).\n"
        },
        "serviceActivationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date when service is activated, as `yyyy-mm-dd`.\n"
        },
        "specificUpdateDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date when the Update Product amendment takes effect. \nOnly for the Update Product amendments if there is already a future-dated Update Product amendment on\nthe subscription.\n"
        },
        "status" : {
          "type" : "string",
          "description" : "The status of the amendment.\nPossible values are:\n\n- Draft \n- Pending Activation\n- Pending Acceptance\n- Completed\n"
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        },
        "suspendDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date when the subscription suspension takes effect, as `yyyy-mm-dd`.\n\n**Note:** This feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).\n"
        },
        "termStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date when the new terms and conditions take effect.\n"
        },
        "termType" : {
          "type" : "string",
          "description" : "Indicates if the subscription is `TERMED` or `EVERGREEN`.\n"
        },
        "type" : {
          "type" : "string",
          "description" : "Type of the amendment.\nPossible values are:\n\n- Cancellation\n- NewProduct\n- OwnerTransfer\n- RemoveProduct\n- Renewal\n- UpdateProduct\n- TermsAndConditions\n"
        }
      }
    },
    "GETAttachmentResponseType" : {
      "type" : "object",
      "properties" : {
        "createdBy" : {
          "type" : "string",
          "description" : "Zuora user id who added this attachment to the object.\n"
        },
        "createdOn" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time when the attachment was added to the object.\n"
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the attachment.\n"
        },
        "fileContentType" : {
          "type" : "string",
          "description" : "File type.\n"
        },
        "fileId" : {
          "type" : "string",
          "description" : "File id of the attached file.\n"
        },
        "fileName" : {
          "type" : "string",
          "description" : "Attachment file name.\n"
        },
        "id" : {
          "type" : "string",
          "description" : "Id of this attachment.\n"
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        },
        "updatedBy" : {
          "type" : "string",
          "description" : "Zuora user id who last updated the attachment.\n"
        },
        "updatedOn" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time when the attachment was last updated.\n"
        }
      }
    },
    "GETAttachmentResponseWithoutSuccessType" : {
      "type" : "object",
      "properties" : {
        "createdBy" : {
          "type" : "string",
          "description" : "Zuora user id of who added this attachment to the object.\n"
        },
        "createdOn" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time when the attachment was added to the object.\n"
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the attachment.\n"
        },
        "fileContentType" : {
          "type" : "string",
          "description" : "Attachment file type.\n"
        },
        "fileId" : {
          "type" : "string",
          "description" : "File id of the attached file.\n"
        },
        "fileName" : {
          "type" : "string",
          "description" : "Attachment file name.\n"
        },
        "id" : {
          "type" : "string",
          "description" : "Zuora id of this attachement.\n"
        },
        "updatedBy" : {
          "type" : "string",
          "description" : "Zuora user id who last updated the attachment.\n"
        },
        "updatedOn" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time when the attachment was last updated.\n"
        }
      },
      "title" : "attachments"
    },
    "GETAttachmentsResponseType" : {
      "type" : "object",
      "properties" : {
        "attachments" : {
          "type" : "array",
          "description" : "Container for one or more attachments.\n",
          "items" : {
            "$ref" : "#/definitions/GETAttachmentResponseWithoutSuccessType"
          }
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        }
      }
    },
    "GETCalloutHistoryVOType" : {
      "type" : "object",
      "properties" : {
        "attemptedNum" : {
          "type" : "string",
          "description" : "The number of times the callout was retried.\n"
        },
        "createTime" : {
          "type" : "string",
          "description" : "The time that the calloutHistory record was made.\n"
        },
        "eventCategory" : {
          "type" : "string",
          "description" : "The event category for the callout.\n"
        },
        "eventContext" : {
          "type" : "string",
          "description" : "The context of the callout event.\n"
        },
        "notification" : {
          "type" : "string",
          "description" : "The name of the notification.\n"
        },
        "requestMethod" : {
          "type" : "string",
          "description" : "The request method set in notifications settings.\n"
        },
        "requestUrl" : {
          "type" : "string",
          "description" : "The base url set in notifications settings.\n"
        },
        "responseCode" : {
          "type" : "string",
          "description" : "The responseCode of the request.\n"
        },
        "responseContent" : {
          "type" : "string",
          "description" : ""
        }
      },
      "title" : "calloutHistories"
    },
    "GETCalloutHistoryVOsType" : {
      "type" : "object",
      "properties" : {
        "calloutHistories" : {
          "type" : "array",
          "description" : "A container for callout histories.\n",
          "items" : {
            "$ref" : "#/definitions/GETCalloutHistoryVOType"
          }
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        }
      }
    },
    "GETCatalogType" : {
      "type" : "object",
      "properties" : {
        "products" : {
          "type" : "array",
          "description" : "Container for one or more products:\n",
          "items" : {
            "$ref" : "#/definitions/GETProductType"
          }
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        }
      }
    },
    "GETChargeRSDetailType" : {
      "type" : "object",
      "properties" : {
        "accountId" : {
          "type" : "string",
          "description" : "An account ID.\n"
        },
        "amount" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "The revenue schedule amount, which is the sum of all revenue items. This field cannot be null and must be formatted based on the currency, such as *JPY 30* or USD *30.15*. Test out the currency to ensure you are using the proper formatting otherwise, the response will fail and this error message is returned:  *\"Allocation amount with wrong decimal places.\"*\n"
        },
        "currency" : {
          "type" : "string",
          "description" : "The type of currency used. \n"
        },
        "notes" : {
          "type" : "string",
          "description" : "Additional information about this record.\n"
        },
        "number" : {
          "type" : "string",
          "description" : "The charge revenue summary number.\n"
        },
        "recognitionRuleName" : {
          "type" : "string",
          "description" : "The name of the recognition rule.\n"
        },
        "recognizedRevenue" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "The revenue that was distributed in a closed accounting period.\n"
        },
        "revenueItems" : {
          "type" : "array",
          "description" : "Revenue items are listed in ascending order by the accounting period start date.\n",
          "items" : {
            "$ref" : "#/definitions/GETRevenueItemType"
          }
        },
        "subscriptionChargeId" : {
          "type" : "string",
          "description" : "The original subscription charge ID.\n"
        },
        "subscriptionId" : {
          "type" : "string",
          "description" : "The original subscription ID.\n"
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        },
        "undistributedUnrecognizedRevenue" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Revenue in the open-ended accounting period.\n"
        },
        "unrecognizedRevenue" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Revenue distributed in all open accounting periods, which includes the open-ended accounting period.\n"
        }
      }
    },
    "GETCustomExchangeRatesDataType" : {
      "type" : "object",
      "properties" : {
        "DATE" : {
          "$ref" : "#/definitions/List of exchange rates"
        }
      },
      "title" : "rates"
    },
    "GETCustomExchangeRatesType" : {
      "type" : "object",
      "properties" : {
        "inverse" : {
          "type" : "boolean",
          "description" : "- If `true`, the exchange rate in the response is an inverse exchange rate.\n- If `false`, the exchange rate in the response is not an inverse exchange rate.\nThe value is determined by the **Use inverse rate** checkbox in your Zuora Finance Manage Currency Conversion settings.\n"
        },
        "rates" : {
          "type" : "array",
          "description" : "Container for exchange rate data. Contains a set of fields that provide exchange rate data for each day between the specified `startDate` and `endDate` (inclusive). \n",
          "items" : {
            "$ref" : "#/definitions/GETCustomExchangeRatesDataType"
          }
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        }
      }
    },
    "GETEmailHistoryVOType" : {
      "type" : "object",
      "properties" : {
        "bcc" : {
          "type" : "string",
          "description" : "Blind carbon copy recipients of the email.\n"
        },
        "cc" : {
          "type" : "string",
          "description" : "Carbon Copy recipients of the email.\n"
        },
        "errorMessage" : {
          "type" : "string",
          "description" : "null if the content of result is \"OK\". A description of the error if the content of result is not \"OK\".\n"
        },
        "eventCategory" : {
          "type" : "string",
          "description" : "The event category of the email.\n"
        },
        "fromEmail" : {
          "type" : "string",
          "description" : "The sender of the email.\n"
        },
        "notification" : {
          "type" : "string",
          "description" : "The name of the notification.\n"
        },
        "replyTo" : {
          "type" : "string",
          "description" : "The reply-to address as configured in the email template.\n"
        },
        "result" : {
          "type" : "string",
          "description" : "The result from the mail server of sending the email.\n"
        },
        "sendTime" : {
          "type" : "string",
          "description" : "The date and time the email was sent.\n"
        },
        "subject" : {
          "type" : "string",
          "description" : "The subject of the email.\n"
        },
        "toEmail" : {
          "type" : "string",
          "description" : "The intended recipient of the email.\n"
        }
      },
      "title" : "emailHistories"
    },
    "GETEmailHistoryVOsType" : {
      "type" : "object",
      "properties" : {
        "emailHistories" : {
          "type" : "array",
          "description" : "A container for email histories.\n",
          "items" : {
            "$ref" : "#/definitions/GETEmailHistoryVOType"
          }
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        }
      }
    },
    "GETInvoiceFileType" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "ID of the invoice PDF file.\nThis is the ID for the file object and different from the file handle id in the pdfFileUrl field. To open a file, you need to use the file handle ID.\n"
        },
        "pdfFileUrl" : {
          "type" : "string",
          "description" : "REST URL for the invoice PDF file. Click the URL to open the invoice PDF file.\n"
        },
        "versionNumber" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Version number of the invoice PDF file\n"
        }
      },
      "title" : "invoiceFiles"
    },
    "GETInvoiceFileWrapper" : {
      "type" : "object",
      "properties" : {
        "invoices" : {
          "type" : "array",
          "description" : "Contains information about one or more invoices:\n",
          "items" : {
            "$ref" : "#/definitions/GETInvoiceType"
          }
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        }
      }
    },
    "GETInvoiceType" : {
      "type" : "object",
      "properties" : {
        "accountId" : {
          "type" : "string",
          "description" : "Customer account ID.\n"
        },
        "accountName" : {
          "type" : "string",
          "description" : "Customer account name.\n"
        },
        "accountNumber" : {
          "type" : "string",
          "description" : "Customer account number.\n"
        },
        "amount" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Amount of the invoice before adjustments, discounts, and similar items.\n"
        },
        "balance" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Balance remaining due on the invoice (after adjustments, discounts, etc.)\n"
        },
        "body" : {
          "type" : "string",
          "description" : "The REST URL of the invoice PDF file.\n"
        },
        "createdBy" : {
          "type" : "string",
          "description" : "User ID of the person who created the invoice. If a bill run generated the invoice, then this is the user ID of person who created the bill run.\n"
        },
        "creditBalanceAdjustmentAmount" : {
          "type" : "string",
          "format" : "decimal",
          "description" : ""
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "dueDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Payment due date as _yyyy-mm-dd_.\n"
        },
        "id" : {
          "type" : "string",
          "description" : "Invoice ID.\n"
        },
        "invoiceDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Invoice date as _yyyy-mm-dd_\n"
        },
        "invoiceFiles" : {
          "type" : "array",
          "description" : "Information about the invoice PDF file:\n",
          "items" : {
            "$ref" : "#/definitions/GETInvoiceFileType"
          }
        },
        "invoiceItems" : {
          "type" : "array",
          "description" : "Information on one or more items on this invoice:\n",
          "items" : {
            "$ref" : "#/definitions/GETInvoicesInvoiceItemType"
          }
        },
        "invoiceNumber" : {
          "type" : "string",
          "description" : "Unique invoice ID, returned as a string.\n"
        },
        "invoiceTargetDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date through which charges on this invoice are calculated, as _yyyy-mm-dd_.\n"
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the invoice in the system - not the payment status, but the status of the invoice itself. Possible values are: `Posted`, `Draft`, `Canceled`, `Error`.\n"
        }
      },
      "title" : "invoices"
    },
    "GETInvoicesInvoiceItemType" : {
      "type" : "object",
      "properties" : {
        "chargeAmount" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "The amount of the charge. This amount doesn't include taxes regardless if the charge's tax mode is inclusive or exclusive.\n"
        },
        "chargeDescription" : {
          "type" : "string",
          "description" : "Description of the charge.\n"
        },
        "chargeId" : {
          "type" : "string",
          "description" : "ID of the charge.\n"
        },
        "chargeName" : {
          "type" : "string",
          "description" : "Name of the charge.\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "id" : {
          "type" : "string",
          "description" : "Item ID.\n"
        },
        "productName" : {
          "type" : "string",
          "description" : "Name of the product associated with this item.\n"
        },
        "quantity" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Quantity of this item, in the configured unit of measure for the charge.\n"
        },
        "serviceEndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "End date of the service period for this item, i.e., the last day of the service period, as _yyyy-mm-dd_.\n"
        },
        "serviceStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Start date of the service period for this item, as _yyyy-mm-dd_. For a one-time fee item, the date of the charge.\n"
        },
        "subscriptionId" : {
          "type" : "string",
          "description" : "ID of the subscription for this item.\n"
        },
        "subscriptionName" : {
          "type" : "string",
          "description" : "Name of the subscription for this item.\n"
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        },
        "taxAmount" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Tax applied to the charge.\n"
        },
        "unitOfMeasure" : {
          "type" : "string",
          "description" : "Unit used to measure consumption.\n"
        }
      },
      "title" : "invoiceItems"
    },
    "GETJournalEntriesInJournalRunType" : {
      "type" : "object",
      "properties" : {
        "journalEntries" : {
          "type" : "array",
          "description" : "Key name that represents the list of journal entries.\n",
          "items" : {
            "$ref" : "#/definitions/GETJournalEntryDetailTypeWithoutSuccess"
          }
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        }
      }
    },
    "GETJournalEntryDetailType" : {
      "type" : "object",
      "properties" : {
        "accountingPeriodName" : {
          "type" : "string",
          "description" : "Name of the accounting period that the journal entry belongs to.\n"
        },
        "aggregateCurrency" : {
          "type" : "boolean",
          "description" : "Returns true if the journal entry is aggregating currencies. That is, if the journal entry was created when the `Aggregate transactions with different currencies during a Journal Run` setting was configured to `Yes`. Otherwise, returns `false`.\n"
        },
        "currency" : {
          "type" : "string",
          "description" : "Currency used.\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "homeCurrency" : {
          "type" : "string",
          "description" : "Home currency used.\n"
        },
        "journalEntryDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date of the journal entry.\n"
        },
        "journalEntryItems" : {
          "type" : "array",
          "description" : "Key name that represents the list of journal entry items.\n",
          "items" : {
            "$ref" : "#/definitions/GETJournalEntryItemType"
          }
        },
        "notes" : {
          "type" : "string",
          "description" : "\nAdditional information about this record.\nCharacter limit: 2,000\n"
        },
        "number" : {
          "type" : "string",
          "description" : "Journal entry number in the format JE-00000001.\n"
        },
        "segments" : {
          "type" : "array",
          "description" : "List of segments that apply to the summary journal entry.\n",
          "items" : {
            "$ref" : "#/definitions/GETJournalEntrySegmentType"
          }
        },
        "status" : {
          "type" : "string",
          "description" : "Status of journal entry. An enum with the values `Created` or `Cancelled`.\n"
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        },
        "timePeriodEnd" : {
          "type" : "string",
          "format" : "date",
          "description" : "End date of time period included in the journal entry.\n"
        },
        "timePeriodStart" : {
          "type" : "string",
          "format" : "date",
          "description" : "Start date of time period included in the journal entry.\n"
        },
        "transactionType" : {
          "type" : "string",
          "description" : "Transaction type of the transactions included in the summary journal entry.\n"
        },
        "transferDateTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that transferredToAccounting was changed to `Yes`. This field is returned only when transferredToAccounting is `Yes`. Otherwise, this field is `null`.\n"
        },
        "transferredBy" : {
          "type" : "string",
          "description" : "User ID of the person who changed transferredToAccounting to `Yes`. This field is returned only when transferredToAccounting is `Yes`. Otherwise, this field is `null`.\n"
        },
        "transferredToAccounting" : {
          "type" : "string",
          "description" : "Status shows whether the journal entry has been transferred to an accounting system. The possible values are `No`, `Processing`, `Yes`, `Error`, `Ignore`.\n"
        }
      }
    },
    "GETJournalEntryDetailTypeWithoutSuccess" : {
      "type" : "object",
      "properties" : {
        "accountingPeriodName" : {
          "type" : "string",
          "description" : "Name of the accounting period that the journal entry belongs to.\n"
        },
        "aggregateCurrency" : {
          "type" : "boolean",
          "description" : "Returns true if the journal entry is aggregating currencies. That is, if the journal entry was created when the `Aggregate transactions with different currencies during a JournalRun` setting was configured to \"Yes\". Otherwise, returns `false`.\n"
        },
        "currency" : {
          "type" : "string",
          "description" : "Currency used.\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "homeCurrency" : {
          "type" : "string",
          "description" : "Home currency used.\n"
        },
        "journalEntryDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date of the journal entry.\n"
        },
        "journalEntryItems" : {
          "type" : "array",
          "description" : "Key name that represents the list of journal entry items.\n",
          "items" : {
            "$ref" : "#/definitions/GETJournalEntryItemType"
          }
        },
        "notes" : {
          "type" : "string",
          "description" : "Additional information about this record.\nCharacter limit: 2,000\n"
        },
        "number" : {
          "type" : "string",
          "description" : "Journal entry number in the format JE-00000001.\n"
        },
        "segments" : {
          "type" : "array",
          "description" : "List of segments that apply to the summary journal entry.\n",
          "items" : {
            "$ref" : "#/definitions/GETJournalEntrySegmentType"
          }
        },
        "status" : {
          "type" : "string",
          "description" : "Status of journal entry. An enum with the values`Created` or `Cancelled`.\n"
        },
        "timePeriodEnd" : {
          "type" : "string",
          "format" : "date",
          "description" : "End date of time period included in the journal entry.\n"
        },
        "timePeriodStart" : {
          "type" : "string",
          "format" : "date",
          "description" : "Start date of time period included in the journal entry.\n"
        },
        "transactionType" : {
          "type" : "string",
          "description" : "Transaction type of the transactions included in the summary journal entry.\n"
        },
        "transferDateTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that transferredToAccounting was changed to `Yes`. This field is returned only when transferredToAccounting is `Yes`. Otherwise, this field is `null`.\n"
        },
        "transferredBy" : {
          "type" : "string",
          "description" : "User ID of the person who changed transferredToAccounting to `Yes`. This field is returned only when transferredToAccounting is `Yes`. Otherwise, this field is `null`.\n"
        },
        "transferredToAccounting" : {
          "type" : "string",
          "description" : "Status shows whether the journal entry has been transferred to an accounting system. The possible values are `No`, `Processing`, `Yes`, `Error`, `Ignore`.\n"
        }
      },
      "title" : "journalEntries"
    },
    "GETJournalEntryItemType" : {
      "type" : "object",
      "properties" : {
        "accountingCodeName" : {
          "type" : "string",
          "description" : "Name of the accounting code.\n"
        },
        "accountingCodeType" : {
          "type" : "string",
          "description" : "Accounting code type. The accounting code types are:\n\n* `AccountsReceivable`\n*  `Cash`\n*  `OtherAssets`\n*  `CustomerCashOnAccount `\n* `DeferredRevenue`\n* `SalesTaxPayable`\n* `OtherLiabilities`\n* `SalesRevenue`\n* `SalesDiscounts`\n* `OtherRevenue` \n* `OtherEquity`\n* `BadDebt`  \n* `OtherExpenses`\n"
        },
        "amount" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Journal entry item amount in transaction currency.\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "glAccountName" : {
          "type" : "string",
          "description" : "The account number in the general ledger (GL) that corresponds to the accounting code.\n"
        },
        "glAccountNumber" : {
          "type" : "string",
          "description" : "The account name in the general ledger (GL) that corresponds to the accounting code.\n"
        },
        "homeCurrencyAmount" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Journal entry item amount in home currency.\n"
        },
        "type" : {
          "type" : "string",
          "description" : "Type of journal entry item. An enum with the value `Credit` or `Debit`.\n"
        }
      },
      "title" : "journalEntryItems"
    },
    "GETJournalEntrySegmentType" : {
      "type" : "object",
      "properties" : {
        "segmentName" : {
          "type" : "string",
          "description" : "Name of segment.\n"
        },
        "segmentValue" : {
          "type" : "string",
          "description" : "Value of segment in this summary journal entry.\n"
        }
      },
      "title" : "segments"
    },
    "GETJournalRunTransactionType" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "Transaction type. \n\nThe transaction types are:\n* Invoice Item\n* Taxation Item\n* Invoice Item Adjustment (Invoice)\n* Invoice Item Adjustment (Tax)\n* Invoice Adjustment (Invoice Adjustment is deprecated on Production. Zuora recommends that you use the Invoice Item Adjustment instead.)\n* Electronic Payment\n* External Payment\n* Electronic Refund\n* External Refund\n* Electronic Credit Balance Payment\n* External Credit Balance Payment\n* Electronic Credit Balance Refund\n* External Credit Balance Refund\n* Credit Balance Adjustment (Applied from Credit Balance)\n* Credit Balance Adjustment (Transferred to Credit Balance)\n* Revenue Event Item\n"
        }
      },
      "title" : "transactionTypes"
    },
    "GETJournalRunType" : {
      "type" : "object",
      "properties" : {
        "aggregateCurrency" : {
          "type" : "boolean",
          "description" : ""
        },
        "executedOn" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time the journal run was executed.\n"
        },
        "journalEntryDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date of the journal entry.\n"
        },
        "number" : {
          "type" : "string",
          "description" : "Journal run number.\n"
        },
        "segmentationRuleName" : {
          "type" : "string",
          "description" : "Name of GL segmentation rule used in the journal run.\n"
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the journal run. \n\nThe possible values are:\n* Pending\n* Processing\n* Completed\n* Error\n* CancelInprogress\n* Cancelled\n* DeleteInprogress\n"
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        },
        "targetEndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The target end date of the journal run.\n"
        },
        "targetStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The target start date of the journal run.\n"
        },
        "totalJournalEntryCount" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Total number of journal entries in the journal run.\n"
        },
        "transactionTypes" : {
          "type" : "array",
          "description" : "Transaction types included in the journal run.\n",
          "items" : {
            "$ref" : "#/definitions/GETJournalRunTransactionType"
          }
        }
      }
    },
    "GETMassUpdateType" : {
      "type" : "object",
      "properties" : {
        "actionType" : {
          "type" : "string",
          "description" : "Type of mass action.\n"
        },
        "endedOn" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the mass action was completed. The format is `yyyy-MM-dd hh:mm:ss`.\n"
        },
        "errorCount" : {
          "type" : "string",
          "description" : "Total number of failed records.\n\nThis field is updated in real time. When the mass action **status** is Processing, this field returns the number of records that have failed so far. When the mass action **status** is Pending, this field is null.\n"
        },
        "inputSize" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Size of the input file in bytes.\n"
        },
        "outputSize" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Size of the response file in bytes.\n"
        },
        "outputType" : {
          "type" : "string",
          "description" : "Type of output for the response file. The following table describes the output type.\n\n| Output Type    | Description                         |\n|----------------|-------------------------------------|\n| (url:.csv.zip) | URL pointing to a zipped .csv file. |\n"
        },
        "outputURL" : {
          "type" : "string",
          "description" : "URL to download the response file. The response file is a zipped .csv file. \nThe response file is identical to the file you uploaded to perform the mass action, with additional columns providing information about the outcome of each record. \nThis field only returns a value when the mass action **status** is Completed or Stopped. Otherwise, this field is null.\n"
        },
        "processedCount" : {
          "type" : "string",
          "description" : "Total number of processed records. This field is equal to the sum of `errorCount` and `successCount`.\n\nThis field is updated in real time. When the mass action **status** is Processing, this field returns the number of records that have been processed so far. When the mass action **status** is Pending, this field is null.\n"
        },
        "startedOn" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that Zuora started processing the mass action. The format is `yyyy-MM-dd hh:mm:ss`.\n"
        },
        "status" : {
          "type" : "string",
          "description" : "Status of the mass action. The following table describes the mass action statuses.\n\n| Status     | Description                                                                |\n|------------|----------------------------------------------------------------------------|\n| Pending    | Mass action has not yet started being processed.                           |\n| Processing | Mass action is in progress.                                                |\n| Stopping   | Mass action is in the process of stopping, but has not yet stopped.        |\n| Stopped    | Mass action has stopped.                                                   |\n| Completed  | Mass action was successfully completed. There may still be failed records. |\n| Failed     | Mass action failed. No records are processed. No response file is created. |\n"
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        },
        "successCount" : {
          "type" : "string",
          "description" : "Total number of successful records.\nThis field is updated in real time. When the mass action **status** is Processing, this field returns the number of records that have succeeded so far. When the mass action **status** is Pending, this field is null.\n"
        },
        "totalCount" : {
          "type" : "string",
          "description" : "Total number of records in the uploaded mass action file.\nWhen the mass action **status** is Pending, this field is null.\n"
        },
        "uploadedBy" : {
          "type" : "string",
          "description" : "Email of the person who uploaded the mass action file.\n"
        },
        "uploadedOn" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date and time that the mass action file was uploaded. The format is `yyyy-MM-dd hh:mm:ss`.\n"
        }
      }
    },
    "GETPaidInvoicesType" : {
      "type" : "object",
      "properties" : {
        "appliedPaymentAmount" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Amount of the payment applied to this invoice.\n"
        },
        "invoiceId" : {
          "type" : "string",
          "description" : "Invoice ID.\n"
        },
        "invoiceNumber" : {
          "type" : "string",
          "description" : "Invoice number.\n"
        }
      },
      "title" : "paidInvoices"
    },
    "GETPaymentMethodType" : {
      "type" : "object",
      "properties" : {
        "cardHolderInfo" : {
          "$ref" : "#/definitions/GETPaymentMethodType_cardHolderInfo"
        },
        "cardNumber" : {
          "type" : "string",
          "description" : "Credit or debit card number, 16 characters or less, masked for security purposes.\n"
        },
        "cardType" : {
          "type" : "string",
          "description" : "The type of credit card or debit card being billed.  Possible values are: `Visa`, `MasterCard`, `AmericanExpress`, `Discover`.\n"
        },
        "defaultPaymentMethod" : {
          "type" : "boolean",
          "description" : "Contains true if this is the default payment method for this customer, otherwise false.\n"
        },
        "expirationMonth" : {
          "type" : "string",
          "description" : "Two-digit expiration month (01 - 12).\n"
        },
        "expirationYear" : {
          "type" : "string",
          "description" : "Four-digit expiration year.\n"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique ID generated by Zuora when this payment method was created.\n"
        }
      },
      "title" : "creditCards"
    },
    "GETPaymentMethodsType" : {
      "type" : "object",
      "properties" : {
        "creditCards" : {
          "type" : "array",
          "description" : "Container for one or more credit or debit card records:\n",
          "items" : {
            "$ref" : "#/definitions/GETPaymentMethodType"
          }
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        }
      }
    },
    "GETPaymentType" : {
      "type" : "object",
      "properties" : {
        "accountID" : {
          "type" : "string",
          "description" : "Customer account ID.\n"
        },
        "accountName" : {
          "type" : "string",
          "description" : "Customer account name.\n"
        },
        "accountNumber" : {
          "type" : "string",
          "description" : "Customer account number.\n"
        },
        "amount" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Payment amount.\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "effectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Effective payment date as _yyyy-mm-dd_.\n"
        },
        "gatewayTransactionNumber" : {
          "type" : "string",
          "description" : "Transaction ID from payment gateway.\n"
        },
        "id" : {
          "type" : "string",
          "description" : "PaymentID.\n"
        },
        "paidInvoices" : {
          "type" : "array",
          "description" : "Information about one or more invoices to which this payment was applied:\n",
          "items" : {
            "$ref" : "#/definitions/GETPaidInvoicesType"
          }
        },
        "paymentMethodID" : {
          "type" : "string",
          "description" : "Payment method.\n"
        },
        "paymentNumber" : {
          "type" : "string",
          "description" : "Unique payment number.\n"
        },
        "status" : {
          "type" : "string",
          "description" : "Possible values are: `Draft`, `Processing`, `Processed`, `Error`, `Voided`, `Canceled`, `Posted.\n"
        },
        "type" : {
          "type" : "string",
          "description" : "Possible values are: `External`, `Electronic`.\n"
        }
      },
      "title" : "payments"
    },
    "GETPaymentsType" : {
      "type" : "object",
      "properties" : {
        "payments" : {
          "type" : "array",
          "description" : "Information about one or more payments:\n",
          "items" : {
            "$ref" : "#/definitions/GETPaymentType"
          }
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        }
      }
    },
    "GETProductRatePlanChargePricingTierType" : {
      "type" : "object",
      "properties" : {
        "endingUnit" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Decimal defining end of tier range.\n"
        },
        "price" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "The decimal value of the tiered charge model. If the charge model is not a tiered type then this price field will be null and the price field directly under the productRatePlanCharges applies.\n"
        },
        "priceFormat" : {
          "type" : "string",
          "description" : "Tier price format.\n\nAllowed values:\n- flat fee \n- per unit\n"
        },
        "startingUnit" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Decimal defining start of tier range.\n"
        },
        "tier" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique number of the tier.\n"
        }
      },
      "title" : "tiers"
    },
    "GETProductRatePlanChargePricingType" : {
      "type" : "object",
      "properties" : {
        "currency" : {
          "type" : "string",
          "description" : "Currency used by the charge model. For example: USD or EUR\n"
        },
        "discountAmount" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Value subtracted from price in currency specified. Used only when the charge model is DiscountFixedAmount.\n"
        },
        "discountPercentage" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Percent discount applied to the price. Used only when the charge model is DiscountPercentage.\n"
        },
        "includedUnits" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Specifies the number of units in the base set of units when the charge model is Overage.\n"
        },
        "overagePrice" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Price per unit when base set of units is exceeded. Used only when charge model is Overage or Tiered with Overage.\n"
        },
        "price" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "The decimal value that applies when the charge model is not tiered\n"
        },
        "tiers" : {
          "type" : "array",
          "description" : "Container for one or many defined tier ranges with distinct pricing.  Applies when model is `Tiered`, `TieredWithOverage`, or `Volume`\n",
          "items" : {
            "$ref" : "#/definitions/GETProductRatePlanChargePricingTierType"
          }
        }
      },
      "title" : "pricing"
    },
    "GETProductRatePlanChargeType" : {
      "type" : "object",
      "properties" : {
        "applyDiscountTo" : {
          "type" : "string",
          "description" : "Specifies where (to what charge type) the discount will be applied. These field values are case-sensitive.\n\nPermissible values:\n- RECURRING\n- USAGE\n- ONETIMERECURRING\n- ONETIMEUSAGE\n- RECURRINGUSAGE\n- ONETIMERECURRINGUSAGE\n"
        },
        "billingDay" : {
          "type" : "string",
          "description" : "The bill cycle day (BCD) for the charge. The BCD determines which day of the month or week the customer is billed. The BCD value in the account can override the BCD in this object.\n"
        },
        "billingPeriod" : {
          "type" : "string",
          "description" : "The billing period for the charge. The start day of the billing period is also called the bill cycle day (BCD).\n\nValues:\n- Month\n- Quarter\n- Annual\n- Semi-Annual\n- Specific Months\n- Week\n- Specific_Weeks\n"
        },
        "billingPeriodAlignment" : {
          "type" : "string",
          "description" : "Aligns charges within the same subscription if multiple charges begin on different dates.\n\nPossible values:\n- AlignToCharge\n- AlignToSubscriptionStart\n- AlignToTermStart\n"
        },
        "billingTiming" : {
          "type" : "string",
          "description" : "The billing timing for the charge. You can choose to bill for charges in advance or in arrears.\n\nValues:\n- In Advance\n- In Arrears\n\n**Note:** This feature is in Limited Availability. If you wish to have access to the feature, submit a request at [Zuora Global Support](https://support.zuora.com). \n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "defaultQuantity" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "The default quantity of units.  This field is required if you use a per-unit charge model.\n"
        },
        "description" : {
          "type" : "string",
          "description" : "Usually a brief line item summary of the Rate Plan Charge.\n"
        },
        "discountLevel" : {
          "type" : "string",
          "description" : "The level of the discount. \n\nValues:\n- RatePlan\n- Subscription\n- Account\n"
        },
        "endDateCondition" : {
          "type" : "string",
          "description" : "Defines when the charge ends after the charge trigger date. If the subscription ends before the charge end date, the charge ends when the subscription ends. But if the subscription end date is subsequently changed through a Renewal, or Terms and Conditions amendment, the charge will end on the charge end date.\n\nValues:\n- Subscription_End\n- Fixed_Period\n"
        },
        "financeInformation" : {
          "$ref" : "#/definitions/financeInformation"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique product rate-plan charge ID.\n"
        },
        "includedUnits" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Specifies the number of units in the base set of units when the charge model is Overage.\n"
        },
        "listPriceBase" : {
          "type" : "string",
          "description" : "The list price base for the product rate plan charge.\n\nValues:\n- Month\n- Billing Period\n- Per_Week\n"
        },
        "maxQuantity" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Specifies the maximum number of units for this charge. Use this field and the `minQuantity` field to create a range of units allowed in a product rate plan charge.\n"
        },
        "minQuantity" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Specifies the minimum number of units for this charge. Use this field and the `maxQuantity` field to create a range of units allowed in a product rate plan charge.\n"
        },
        "model" : {
          "type" : "string",
          "description" : "Charge model which determines how charges are calculated.  Charge models must be individually activated in Zuora Billing administration. \n\nPossible values are:\n- FlatFee\n- PerUnit\n- Overage\n- Volume\n- Tiered\n- TieredWithOverage\n- DiscountFixedAmount\n- DiscountPercentage\nThe Pricing Summaries section below details these charge models and their associated pricingSummary values.\n"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the product rate-plan charge. (Not required to be unique.)\n"
        },
        "numberOfPeriods" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Value specifies the number of periods used in the smoothing model calculations Used when overage smoothing model is `RollingWindow` or `Rollover`.\n"
        },
        "overageCalculationOption" : {
          "type" : "string",
          "description" : "Value specifies when to calculate overage charges.\n\nValues:\n- EndOfSmoothingPeriod\n- PerBillingPeriod\n"
        },
        "overageUnusedUnitsCreditOption" : {
          "type" : "string",
          "description" : "Determines whether to credit the customer with unused units of usage.\n\nValues:\n- NoCredit\n- CreditBySpecificRate\n"
        },
        "prepayPeriods" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The number of periods to which prepayment is set. \n\n**Note:** This field is only available if you already have the prepayment feature enabled. The prepayment feature is deprecated and available only for backward compatibility. Zuora does not support enabling this feature anymore.\n"
        },
        "priceChangeOption" : {
          "type" : "string",
          "description" : "Applies an automatic price change when a termed subscription is renewed and the following applies:\n\n1. AutomatedPriceChange setting is on\n2. Charge type is not one-time\n3. Charge model is not discount fixed amount\n\nValues:\n- NoChange (default)\n- SpecificPercentageValue\n- UseLatestProductCatalogPricing\n"
        },
        "priceIncreasePercentage" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Specifies the percentage to increase or decrease the price of a termed subscription's renewal. Use this field if you set the `PriceChangeOption` value to `SpecificPercentageValue`.\n\n1. AutomatedPriceChange setting is on\n2. Charge type is not one-time\n3. Charge model is not discount fixed amount\n\nValues: a decimal between -100 and 100\n"
        },
        "pricing" : {
          "type" : "array",
          "description" : "One or more price charge models with attributes that further describe the model. \nSome attributes show as null values when not applicable.\n",
          "items" : {
            "$ref" : "#/definitions/GETProductRatePlanChargePricingType"
          }
        },
        "pricingSummary" : {
          "type" : "array",
          "description" : "A concise description of the charge model and pricing that is suitable to show to your customers.\n",
          "items" : {
            "type" : "string"
          }
        },
        "ratingGroup" : {
          "type" : "string",
          "description" : "Specifies a rating group based on which usage records are rated. \n\n**Note:** This feature is in Limited Availability. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/). \n"
        },
        "revenueRecognitionRuleName" : {
          "type" : "string",
          "description" : "The name of the revenue recognition rule governing the revenue schedule.\n"
        },
        "smoothingModel" : {
          "type" : "string",
          "description" : "Specifies the smoothing model for an overage smoothing charge model or an tiered with overage model, which is an advanced type of a usage model that avoids spikes in usage charges. If a customer's usage spikes in a single period, then an overage smoothing model eases overage charges by considering usage and multiple periods.\n\nOne of the following values shows which smoothing model will be applied to the charge when `Overage` or `Tiered with Overage` is used:\n\n- `RollingWindow` considers a number of periods to smooth usage. The rolling window starts and increments forward based on billing frequency. When allowed usage is met, then period resets and a new window begins.\n- `Rollover` considers a fixed number of periods before calculating usage. The net balance at the end of a period is unused usage, which is carried over to the next period's balance.\n"
        },
        "specificBillingPeriod" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "When the billing period is set to `Specific` Months then this positive integer reflects the number of months for billing period charges.\n"
        },
        "taxCode" : {
          "type" : "string",
          "description" : "Specifies the tax code for taxation rules; used by Zuora Tax.\n"
        },
        "taxMode" : {
          "type" : "string",
          "description" : "Specifies how to define taxation for the charge; used by Zuora Tax. Possible values are: `TaxExclusive`, `TaxInclusive`.\n"
        },
        "taxable" : {
          "type" : "boolean",
          "description" : "Specifies whether the charge is taxable; used by Zuora Tax. Possible values are:`true`, `false`.\n"
        },
        "triggerEvent" : {
          "type" : "string",
          "description" : "Specifies when to start billing the customer for the charge.\n\nValues: one of the following:\n- `ContractEffective` is the date when the subscription's contract goes into effect and the charge is ready to be billed.\n- `ServiceActivation` is the date when the services or products for a subscription have been activated and the customers have access.\n- `CustomerAcceptance` is when the customer accepts the services or products for a subscription. \n- `SpecificDate` is the date specified.\n"
        },
        "type" : {
          "type" : "string",
          "description" : "The type of charge. Possible values are: `OneTime`, `Recurring`, `Usage`.\n"
        },
        "uom" : {
          "type" : "string",
          "description" : "Describes the Units of Measure (uom) configured in **Settings > Billing** for the productRatePlanCharges.\n\nValues: `Each`, `License`, `Seat`, or `null`\n"
        },
        "upToPeriods" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Specifies the length of the period during which the charge is active. If this period ends before the subscription ends, the charge ends when this period ends.\nIf the subscription end date is subsequently changed through a Renewal, or Terms and Conditions amendment, the charge end date will change accordingly up to the original period end.\n"
        },
        "upToPeriodsType" : {
          "type" : "string",
          "description" : "The period type used to define when the charge ends.\n\nValues:\n- Billing_Periods\n- Days\n- Weeks\n- Months\n- Years\n  \n"
        },
        "usageRecordRatingOption" : {
          "type" : "string",
          "description" : "Determines how Zuora processes usage records for per-unit usage charges. \n"
        },
        "useDiscountSpecificAccountingCode" : {
          "type" : "boolean",
          "description" : "Determines whether to define a new accounting code for the new discount charge.\nValues: `true`, `false`\n"
        },
        "useTenantDefaultForPriceChange" : {
          "type" : "boolean",
          "description" : "Shows the tenant-level percentage uplift value for an automatic price change to a termed subscription's renewal. You set the tenant uplift value in the web-based UI: **Settings > Billing > Define Default Subscription Settings**.\n\nValues: `true`, `false`\n"
        }
      },
      "title" : "productRatePlanCharges"
    },
    "GETProductRatePlanType" : {
      "type" : "object",
      "properties" : {
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "description" : {
          "type" : "string",
          "description" : "Rate plan description.\n"
        },
        "effectiveEndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Final date the rate plan is active, as `yyyy-mm-dd`. After this date, the rate plan status is `Expired`.\n"
        },
        "effectiveStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "First date the rate plan is active (i.e., available to be subscribed to), as `yyyy-mm-dd`.  Before this date, the status is `NotStarted`.\n"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique product rate-plan charge ID.\n"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the product rate-plan charge. (Not required to be unique.)\n"
        },
        "productRatePlanCharges" : {
          "type" : "array",
          "description" : "Field attributes describing the product rate plan charges:\n",
          "items" : {
            "$ref" : "#/definitions/GETProductRatePlanChargeType"
          }
        },
        "status" : {
          "type" : "string",
          "description" : "Possible vales are: `Active`, `Expired`, `NotStarted`.\n"
        }
      },
      "title" : "productRatePlans"
    },
    "GETProductType" : {
      "type" : "object",
      "properties" : {
        "category" : {
          "type" : "string",
          "description" : "Category of the product. Used by Zuora Quotes Guided Product Selector.\n\nPossible values are:\n  - Base Products\n  - Add On Services\n  - Miscellaneous Products\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "description" : {
          "type" : "string",
          "description" : "Optional product description.\n"
        },
        "effectiveEndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date when the product expires and cannot be subscribed to anymore, as `yyyy-mm-dd`.\n"
        },
        "effectiveStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date when the product becomes available and can be subscribed to, as `yyyy-mm-dd`.\n"
        },
        "id" : {
          "type" : "string",
          "description" : "Product ID.\n"
        },
        "name" : {
          "type" : "string",
          "description" : "Product name, up to 100 characters.\n"
        },
        "productFeatures" : {
          "type" : "array",
          "description" : "Container for one or more product features. Only available when the following settings are enabled:\n- The Entitlements feature in your tenant\n- The Enable Feature Specification in Product and Subscriptions setting in Settings > Billing\n",
          "items" : {
            "$ref" : "#/definitions/GetProductFeatureType"
          }
        },
        "productRatePlans" : {
          "type" : "array",
          "description" : "Container for one or more product rate plans:\n",
          "items" : {
            "$ref" : "#/definitions/GETProductRatePlanType"
          }
        },
        "sku" : {
          "type" : "string",
          "description" : "Unique product SKU, up to 50 characters.\n"
        },
        "tags" : {
          "type" : "string",
          "description" : ""
        }
      },
      "title" : "products"
    },
    "GETRSDetailType" : {
      "type" : "object",
      "properties" : {
        "accountId" : {
          "type" : "string",
          "description" : "An account ID.\n"
        },
        "amount" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "The revenue schedule amount, which is the sum of all revenue items. This field cannot be null and must be formatted based on the currency, such as `JPY 30` or `USD 30.15`. Test out the currency to ensure you are using the proper formatting otherwise, the response will fail and this error message is returned: `Allocation amount with wrong decimal places.`\n"
        },
        "createdOn" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date when the record was created in `YYYY-MM-DD HH:MM:SS` format.\n"
        },
        "currency" : {
          "type" : "string",
          "description" : "The type of currency used.\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "linkedTransactionId" : {
          "type" : "string",
          "description" : "The linked transaction ID for billing transactions. This field is used for all rules except the custom unlimited or manual recognition rule models. If using the custom unlimited rule model, then the field value must be null. If the field is not null, then the referenceId field must be null. \n"
        },
        "linkedTransactionNumber" : {
          "type" : "string",
          "description" : "The number for the linked invoice item or invoice item adjustment transaction. This field is used for all rules except the custom unlimited or manual recognition rule models.  If using the custom unlimited or manual recognition rule models, then the field value is null. \n"
        },
        "linkedTransactionType" : {
          "type" : "string",
          "description" : "The type of linked transaction for billing transactions, which can be invoice item or invoice item adjustment. This field is used for all rules except the custom unlimited or manual recognition rule models.\n"
        },
        "notes" : {
          "type" : "string",
          "description" : "Additional information about this record.\n"
        },
        "number" : {
          "type" : "string",
          "description" : "Revenue schedule number. The revenue schedule number is always prefixed with \"RS\", for example, \"RS-00000001\".\n"
        },
        "recognitionRuleName" : {
          "type" : "string",
          "description" : "The name of the recognition rule.\n"
        },
        "recognizedRevenue" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "The revenue that was distributed in a closed accounting period.\n"
        },
        "referenceId" : {
          "type" : "string",
          "description" : "Reference ID is used only in the custom unlimited rule to create a revenue schedule. In this scenario, the revenue schedule is not linked to an invoice item or invoice item adjustment.\n"
        },
        "revenueItems" : {
          "type" : "array",
          "description" : "Revenue items are listed in ascending order by the accounting period start date.\n",
          "items" : {
            "$ref" : "#/definitions/GETRsRevenueItemType"
          }
        },
        "revenueScheduleDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The effective date of the revenue schedule. For example, the revenue schedule date for bookings-based revenue recognition is typically set to the order date or contract date.\n\nThe date cannot be in a closed accounting period. The date must be in the `YYYY-MM-DD` format.\n"
        },
        "subscriptionChargeId" : {
          "type" : "string",
          "description" : "The original subscription charge ID.\n"
        },
        "subscriptionId" : {
          "type" : "string",
          "description" : "The original subscription ID.\n"
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        },
        "undistributedUnrecognizedRevenue" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Revenue in the open-ended accounting period.\n"
        },
        "unrecognizedRevenue" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Revenue distributed in all open accounting periods, which includes the open-ended accounting period.\n"
        },
        "updatedOn" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date when the revenue automation start date was set.\n"
        }
      }
    },
    "GETRSDetailWithoutSuccessType" : {
      "type" : "object",
      "properties" : {
        "accountId" : {
          "type" : "string",
          "description" : "An account ID.\n"
        },
        "amount" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "The revenue schedule amount, which is the sum of all revenue items. This field cannot be null and must be formatted based on the currency, such as `JPY 30` or `USD 30.15`. Test out the currency to ensure you are using the proper formatting otherwise, the response will fail and this error message is returned: `Allocation amount with wrong decimal places.`\n"
        },
        "createdOn" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date when the record was created in `YYYY-MM-DD HH:MM:SS` format.\n"
        },
        "currency" : {
          "type" : "string",
          "description" : "The type of currency used.\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "linkedTransactionId" : {
          "type" : "string",
          "description" : "The linked transaction ID for billing transactions. This field is used for all rules except the custom unlimited or manual recognition rule models. If using the custom unlimited rule model, then the field value must be null. If the field is not null, then the referenceId field must be null. \n"
        },
        "linkedTransactionNumber" : {
          "type" : "string",
          "description" : "The number for the linked invoice item or invoice item adjustment transaction. This field is used for all rules except the custom unlimited or manual recognition rule models.  If using the custom unlimited or manual recognition rule models, then the field value is null. \n"
        },
        "linkedTransactionType" : {
          "type" : "string",
          "description" : "The type of linked transaction for billing transactions, which can be invoice item or invoice item adjustment. This field is used for all rules except the custom unlimited or manual recognition rule models.\n"
        },
        "notes" : {
          "type" : "string",
          "description" : "Additional information about this record.\n"
        },
        "number" : {
          "type" : "string",
          "description" : "Revenue schedule number. The revenue schedule number is always prefixed with \"RS\", for example, \"RS-00000001\".\n"
        },
        "recognitionRuleName" : {
          "type" : "string",
          "description" : "The name of the recognition rule.\n"
        },
        "recognizedRevenue" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "The revenue that was distributed in a closed accounting period.\n"
        },
        "referenceId" : {
          "type" : "string",
          "description" : "Reference ID is used only in the custom unlimited rule to create a revenue schedule. In this scenario, the revenue schedule is not linked to an invoice item or invoice item adjustment.\n"
        },
        "revenueItems" : {
          "type" : "array",
          "description" : "Revenue items are listed in ascending order by the accounting period start date.\n",
          "items" : {
            "$ref" : "#/definitions/GETRsRevenueItemType"
          }
        },
        "revenueScheduleDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The effective date of the revenue schedule. For example, the revenue schedule date for bookings-based revenue recognition is typically set to the order date or contract date.\n\nThe date cannot be in a closed accounting period. The date must be in the `YYYY-MM-DD` format.\n"
        },
        "subscriptionChargeId" : {
          "type" : "string",
          "description" : "The original subscription charge ID.\n"
        },
        "subscriptionId" : {
          "type" : "string",
          "description" : "The original subscription ID.\n"
        },
        "undistributedUnrecognizedRevenue" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Revenue in the open-ended accounting period.\n"
        },
        "unrecognizedRevenue" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Revenue distributed in all open accounting periods, which includes the open-ended accounting period.\n"
        },
        "updatedOn" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date when the revenue automation start date was set.\n"
        }
      },
      "title" : "revenueSchedules"
    },
    "GETRSDetailsByChargeType" : {
      "type" : "object",
      "properties" : {
        "revenueSchedules" : {
          "type" : "array",
          "description" : "Represents how revenue will be recognized over time.\n\nThis contains the details of a revenue schedule. If you do not specify the ｀pageSize｀ variable, the default number of revenue schedules returned per invocation is 8, and if there are more than 8 revenue schedules to be returned, the ｀nextPage｀ field will provide a hyperlink to view the next page(s) of revenue events. The order of revenue schedules is descending by the ｀updatedOn｀ field.\n",
          "items" : {
            "$ref" : "#/definitions/GETRSDetailWithoutSuccessType"
          }
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        }
      }
    },
    "GETRevenueEventDetailType" : {
      "type" : "object",
      "properties" : {
        "accountId" : {
          "type" : "string",
          "description" : "An account ID.\n"
        },
        "createdOn" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date when the record was created in YYYY-MM-DD HH:MM:SS format.\n"
        },
        "currency" : {
          "type" : "string",
          "description" : "The type of currency used. \n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "eventType" : {
          "type" : "string",
          "description" : "Label of the revenue event type. Revenue event type labels can be duplicated. You can configure your revenue event type labels by navigating to **Settings > Finance > Configure Revenue Event Types** in the Zuora UI. The default revenue event types are:\n\n  * Invoice Posted\n  * Invoice Item Adjustment Created\n  * Invoice Canceled\n  * Invoice Item Adjustment Canceled\n  * Revenue Distributed\n"
        },
        "notes" : {
          "type" : "string",
          "description" : "Additional information about this record.\n"
        },
        "number" : {
          "type" : "string",
          "description" : "The revenue event number created when a revenue event occurs.\n"
        },
        "recognitionEnd" : {
          "type" : "string",
          "format" : "date",
          "description" : "The end date of a recognition period in YYYY-MM-DD format. \n\nThe maximum difference of the recognitionStart and recognitionEnd date fields is equal to 250 multiplied by the length of an accounting period.\n"
        },
        "recognitionStart" : {
          "type" : "string",
          "format" : "date",
          "description" : "The start date of a recognition period in YYYY-MM-DD format.\n"
        },
        "revenueItems" : {
          "type" : "array",
          "description" : "Revenue items are listed in ascending order by the accounting period start date.\n",
          "items" : {
            "$ref" : "#/definitions/GETRevenueItemType"
          }
        },
        "subscriptionChargeId" : {
          "type" : "string",
          "description" : "The original subscription charge ID.\n"
        },
        "subscriptionId" : {
          "type" : "string",
          "description" : "The original subscription ID.\n"
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        }
      }
    },
    "GETRevenueEventDetailWithoutSuccessType" : {
      "type" : "object",
      "properties" : {
        "accountId" : {
          "type" : "string",
          "description" : "An account ID.\n"
        },
        "createdOn" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date when the record was created in YYYY-MM-DD HH:MM:SS format.\n"
        },
        "currency" : {
          "type" : "string",
          "description" : "The type of currency used. \n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "eventType" : {
          "type" : "string",
          "description" : "Label of the revenue event type. Revenue event type labels can be duplicated. You can configure your revenue event type labels by navigating to **Settings > Finance > Configure Revenue Event Types** in the Zuora UI. The default revenue event types are:\n\n  * Invoice Posted\n  * Invoice Item Adjustment Created\n  * Invoice Canceled\n  * Invoice Item Adjustment Canceled\n  * Revenue Distributed\n"
        },
        "notes" : {
          "type" : "string",
          "description" : "Additional information about this record.\n"
        },
        "number" : {
          "type" : "string",
          "description" : "The revenue event number created when a revenue event occurs.\n"
        },
        "recognitionEnd" : {
          "type" : "string",
          "format" : "date",
          "description" : "\nThe end date of a recognition period in YYYY-MM-DD format. \n\nThe maximum difference of the recognitionStart and recognitionEnd date fields is equal to 250 multiplied by the length of an accounting period.\n"
        },
        "recognitionStart" : {
          "type" : "string",
          "format" : "date",
          "description" : "The start date of a recognition period in YYYY-MM-DD format.\n"
        },
        "revenueItems" : {
          "type" : "array",
          "description" : "Revenue items are listed in ascending order by the accounting period start date.\n",
          "items" : {
            "$ref" : "#/definitions/GETRevenueItemType"
          }
        },
        "subscriptionChargeId" : {
          "type" : "string",
          "description" : "The original subscription charge ID.\n"
        },
        "subscriptionId" : {
          "type" : "string",
          "description" : "The original subscription ID.\n"
        }
      },
      "title" : "revenueEventDetails"
    },
    "GETRevenueEventDetailsType" : {
      "type" : "object",
      "properties" : {
        "revenueEventDetails" : {
          "type" : "array",
          "description" : "Represents a change to a revenue schedule, such as posting an invoice or distributing revenue.\n",
          "items" : {
            "$ref" : "#/definitions/GETRevenueEventDetailWithoutSuccessType"
          }
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        }
      }
    },
    "GETRevenueItemType" : {
      "type" : "object",
      "properties" : {
        "accountingPeriodEndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The accounting period end date. The accounting period end date of the open-ended accounting period is null. \n"
        },
        "accountingPeriodName" : {
          "type" : "string",
          "description" : "Name of the accounting period. The open-ended accounting period is named `Open-Ended`. \n"
        },
        "accountingPeriodStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The accounting period start date.\n"
        },
        "amount" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "The revenue schedule amount, which is the sum of all revenue items. This field cannot be null and must be formatted based on the currency, such as *JPY 30* or *USD 30.15*. Test out the currency to ensure you are using the proper formatting otherwise, the response will fail and this error message is returned:  `Allocation amount with wrong decimal places.`\n"
        },
        "currency" : {
          "type" : "string",
          "description" : "The type of currency used. \n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "isAccountingPeriodClosed" : {
          "type" : "boolean",
          "description" : "Indicates if the accounting period is closed or open. \n"
        }
      },
      "title" : "revenueItems"
    },
    "GETRevenueItemsType" : {
      "type" : "object",
      "properties" : {
        "revenueItems" : {
          "type" : "array",
          "description" : "Revenue items are listed in ascending order by the accounting period start date.\n",
          "items" : {
            "$ref" : "#/definitions/GETRevenueItemType"
          }
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        }
      }
    },
    "GETRevenueRecognitionRuleAssociationType" : {
      "type" : "object",
      "properties" : {
        "revenueRecognitionRuleName" : {
          "type" : "string",
          "description" : "The name of the revenue recognition rule governing the revenue schedule.\n"
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        }
      }
    },
    "GETRevenueStartDateSettingType" : {
      "type" : "object",
      "properties" : {
        "startDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date on which revenue automation starts. This is the first day of an accounting period.\n"
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        },
        "updatedBy" : {
          "type" : "string",
          "description" : "The user who made the change.\n"
        },
        "updatedOn" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date when the revenue automation start date was set.\n"
        }
      }
    },
    "GETRsRevenueItemType" : {
      "type" : "object",
      "properties" : {
        "accountingPeriodEndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The accounting period end date. The accounting period end date of the open-ended accounting period is null.\n"
        },
        "accountingPeriodName" : {
          "type" : "string",
          "description" : "Name of the accounting period. The open-ended accounting period is named `Open-Ended`. \n"
        },
        "accountingPeriodStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The accounting period start date.\n"
        },
        "amount" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "The amount of the revenue item.\n"
        },
        "currency" : {
          "type" : "string",
          "description" : "The type of currency used.\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "deferredRevenueAccountingCode" : {
          "type" : "string",
          "description" : "The accounting code for deferred revenue, such as Monthly Recurring Liability. Required only when `overrideChargeAccountingCodes` is `true`. Otherwise this value is ignored.\n"
        },
        "deferredRevenueAccountingCodeType" : {
          "type" : "string",
          "description" : "The type associated with the deferred revenue accounting code, such as Deferred Revenue. Required only when `overrideChargeAccountingCodes` is `true`. Otherwise this value is ignored.\n"
        },
        "isAccountingPeriodClosed" : {
          "type" : "boolean",
          "description" : "Indicates if the accounting period is closed or open.\n"
        },
        "recognizedRevenueAccountingCode" : {
          "type" : "string",
          "description" : "The accounting code for recognized revenue, such as Monthly Recurring Charges or Overage Charges. Required only when `overrideChargeAccountingCodes` is `true`. Otherwise the value is ignored.\n"
        },
        "recognizedRevenueAccountingCodeType" : {
          "type" : "string",
          "description" : "The type associated with the recognized revenue accounting code, such as Sales Revenue or Sales Discount. Required only when `overrideChargeAccountingCodes` is `true`. Otherwise this value is ignored.\n"
        }
      },
      "title" : "revenueItems"
    },
    "GETRsRevenueItemsType" : {
      "type" : "object",
      "properties" : {
        "revenueItems" : {
          "type" : "array",
          "description" : "Revenue items are listed in ascending order by the accounting period start date.\n",
          "items" : {
            "$ref" : "#/definitions/GETRsRevenueItemType"
          }
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        }
      }
    },
    "GETSubscriptionProductFeatureType" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "type" : "string",
          "description" : "Feature description.\n"
        },
        "featureCode" : {
          "type" : "string",
          "description" : "Feature code, up to 255 characters long.\n"
        },
        "id" : {
          "type" : "string",
          "description" : "SubscriptionProductFeature ID.\n"
        },
        "name" : {
          "type" : "string",
          "description" : "Feature name, up to 255 characters long.\n"
        }
      },
      "title" : "subscriptionProductFeatures"
    },
    "GETSubscriptionRatePlanChargesType" : {
      "type" : "object",
      "properties" : {
        "applyDiscountTo" : {
          "type" : "string",
          "description" : "Specifies the type of charges a specific discount applies to. \n\nThis field is only used when applied to a discount charge model. If you are not using a discount charge model, the value is null.\n\nPossible values:\n\n* `RECURRING`\n* `USAGE`\n* `ONETIMERECURRING`\n* `ONETIMEUSAGE`\n* `RECURRINGUSAGE`\n* `ONETIMERECURRINGUSAGE`\n"
        },
        "billingDay" : {
          "type" : "string",
          "description" : "Billing cycle day (BCD), which is when bill runs generate invoices\nfor charges associated with the product rate plan charge or the account.  \n\nValues:\n\n* `DefaultFromCustomer`\n* `SpecificDayofMonth(#)`\n* `SubscriptionStartDay`\n* `ChargeTriggerDay`\n* `SpecificDayOfWeek/dayofweek`: in which dayofweek is the day in the week you define your billing periods to start.\n\nIn the response data, a day-of-the-month value (`1`-`31`) appears in place of the hash sign above (\"#\"). If this value exceeds the number of days in a particular month, the last day of the month is used as the BCD.\n"
        },
        "billingPeriod" : {
          "type" : "string",
          "description" : "Allows billing period to be overridden on the rate plan charge.\n"
        },
        "billingPeriodAlignment" : {
          "type" : "string",
          "description" : "Possible values:\n\n* `AlignToCharge`\n* `AlignToSubscriptionStart`\n* `AlignToTermStart`\n"
        },
        "billingTiming" : {
          "type" : "string",
          "description" : "The billing timing for the charge. This field is only used if the `ratePlanChargeType` value is `Recurring`.\n\nPossible values are:\n\n* `In Advance`\n* `In Arrears`\n\n**Note:** This feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).\n"
        },
        "chargedThroughDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date through which a customer has been billed for the charge.\n"
        },
        "currency" : {
          "type" : "string",
          "description" : "Currency used by the account. For example, `USD` or `EUR`.\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the rate plan charge.\n"
        },
        "discountAmount" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "The amount of the discount.\n"
        },
        "discountLevel" : {
          "type" : "string",
          "description" : "The level of the discount. Values: `RatePlan`, `Subscription`, `Account`.\n"
        },
        "discountPercentage" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "The amount of the discount as a percentage.\n"
        },
        "dmrc" : {
          "type" : "string",
          "description" : "The change (delta) of monthly recurring charge exists when the change in monthly recurring revenue caused by an amendment or a new subscription.\n"
        },
        "done" : {
          "type" : "boolean",
          "description" : "A value of `true` indicates that an invoice for a charge segment has been completed. A value of `false` indicates that an invoice has not bee completed for the charge segment.\n"
        },
        "dtcv" : {
          "type" : "string",
          "description" : "After an amendment or an AutomatedPriceChange event, `dtcv` displays the change (delta) for the total contract value (TCV) amount for this charge, compared with its previous value with recurring charge types.\n"
        },
        "effectiveEndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The effective end date of the rate plan charge.\n"
        },
        "effectiveStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The effective start date of the rate plan charge.\n"
        },
        "endDateCondition" : {
          "type" : "string",
          "description" : "Defines when the charge ends after the charge trigger date.\n\nIf the subscription ends before the charge end date, the charge ends when the subscription ends. But if the subscription end date is subsequently changed through a Renewal, or Terms and Conditions amendment, the charge will end on the charge end date.\n\nValues:\n\n* `Subscription_End`\n* `Fixed_Period`\n* `Specific_End_Date`\n"
        },
        "id" : {
          "type" : "string",
          "description" : "Rate plan charge ID.\n"
        },
        "includedUnits" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Specifies the number of units in the base set of units.\n"
        },
        "listPriceBase" : {
          "type" : "string",
          "description" : "List price base; possible values are:\n\n* `Per_Billing_Period`\n* `Per_Month`\n* `Per_Week`\n"
        },
        "model" : {
          "type" : "string",
          "description" : "Charge model; possible values are:\n\n* `FlatFee`\n* `PerUnit`\n* `Overage`\n* `Volume`\n* `Tiered`\n* `TieredWithOverage`\n* `DiscountFixedAmount`\n* `DiscountPercentage`\n"
        },
        "mrr" : {
          "type" : "string",
          "description" : "Monthly recurring revenue of the rate plan charge.\n"
        },
        "name" : {
          "type" : "string",
          "description" : "Charge name.\n"
        },
        "number" : {
          "type" : "string",
          "description" : "Charge number.\n"
        },
        "numberOfPeriods" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Specifies the number of periods to use when calculating charges in an overage smoothing charge model.\n"
        },
        "originalChargeId" : {
          "type" : "string",
          "description" : "The original ID of the rate plan charge.\n"
        },
        "overageCalculationOption" : {
          "type" : "string",
          "description" : "Determines when to calculate overage charges.\n"
        },
        "overagePrice" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "The price for units over the allowed amount.\n"
        },
        "overageUnusedUnitsCreditOption" : {
          "type" : "string",
          "description" : "Determines whether to credit the customer with unused units of usage.\n"
        },
        "price" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "The price associated with the rate plan charge expressed as a decimal.\n"
        },
        "priceChangeOption" : {
          "type" : "string",
          "description" : "When the following is true:\n\n1. AutomatedPriceChange setting is on\n\n2. Charge type is not one-time\n\n3. Charge model is not discount percentage\n\nThen an automatic price change can have a value for when a termed subscription is renewed. \n\nValues (one of the following):\n\n* `NoChange` (default)\n* `SpecificPercentageValue`\n* `UseLatestProductCatalogPricing`\n"
        },
        "priceIncreasePercentage" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "A planned future price increase amount as a percentage.\n"
        },
        "pricingSummary" : {
          "type" : "string",
          "description" : "Concise description of rate plan charge model.\n"
        },
        "processedThroughDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date until when charges have been processed. When billing in arrears, such as usage, this field value is the the same as the `ChargedThroughDate` value. This date is the earliest date when a charge can be amended.\n"
        },
        "productRatePlanChargeId" : {
          "type" : "string",
          "description" : ""
        },
        "quantity" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "The quantity of units, such as the number of authors in a hosted wiki service. Valid for all charge models except for Flat Fee pricing.\n"
        },
        "ratingGroup" : {
          "type" : "string",
          "description" : "Specifies a rating group based on which usage records are rated. \n\nPossible values are:\n\n* `ByBillingPeriod` (default)\n* `ByUsageStartDate`\n* `ByUsageRecord`\n* `ByUsageUpload`\n\n**Note:** This field is only used for per unit, volume pricing, and tiered pricing charge models. Use this field only for Usage charges. One-Time Charges and Recurring Charges return `NULL`.\n\n**Note:** This feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).\n"
        },
        "segment" : {
          "type" : "string",
          "format" : "date",
          "description" : "The identifying number of the subscription rate plan segment. Segments are numbered sequentially, starting with 1.\n"
        },
        "smoothingModel" : {
          "type" : "string",
          "description" : "Specifies when revenue recognition begins. When charge model is `Overage` or `TieredWithOverage`, `smoothingModel` will be one of the following values:\n\n* `ContractEffectiveDate`\n* `ServiceActivationDate`\n* `CustomerAcceptanceDate`\n"
        },
        "specificBillingPeriod" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Customizes the number of month or week for the charges billing period. This field is required if you set the value of the `BillingPeriod` field to `Specific_Months` or `Specific_Weeks`.\n"
        },
        "specificEndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The specific date on which the charge ends. If the subscription ends before the specific end date, the charge ends when the subscription ends. But if the subscription end date is subsequently changed through a Renewal, or Terms and Conditions amendment, the charge will end on the specific end date.\n"
        },
        "tcv" : {
          "type" : "string",
          "description" : "The total contract value.\n"
        },
        "tiers" : {
          "type" : "array",
          "description" : "One or many defined ranges with distinct pricing.\n",
          "items" : {
            "$ref" : "#/definitions/GETTierType"
          }
        },
        "triggerDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date that the rate plan charge will be triggered.\n"
        },
        "triggerEvent" : {
          "type" : "string",
          "description" : "The event that will cause the rate plan charge to be triggered.\n\nPossible values: \n\n* `ContractEffective`\n* `ServiceActivation`\n* `CustomerAcceptance`\n* `SpecificDate`\n"
        },
        "type" : {
          "type" : "string",
          "description" : "Charge type. Possible values are: `OneTime`, `Recurring`, `Usage`.\n"
        },
        "unusedUnitsCreditRates" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Specifies the rate to credit a customer for unused units of usage. This field is applicable only for overage charge models when the \n`OverageUnusedUnitsCreditOption` field value is `CreditBySpecificRate`.\n"
        },
        "uom" : {
          "type" : "string",
          "description" : "Specifies the units to measure usage. \n"
        },
        "upToPeriods" : {
          "type" : "string",
          "description" : "Specifies the length of the period during which the charge is active. If this period ends before the subscription ends, the charge ends when this period ends.\n\nIf the subscription end date is subsequently changed through a Renewal, or Terms and Conditions amendment, the charge end date will change accordingly up to the original period end.\n"
        },
        "upToPeriodsType" : {
          "type" : "string",
          "description" : "The period type used to define when the charge ends. \n\nValues:\n\n* `Billing_Periods`\n* `Days`\n* `Weeks`\n* `Months`\n* `Years`\n"
        },
        "usageRecordRatingOption" : {
          "type" : "string",
          "description" : "Determines how Zuora processes usage records for per-unit usage charges. \n"
        },
        "version" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Rate plan charge revision number.\n"
        }
      },
      "title" : "ratePlanCharges"
    },
    "GETSubscriptionRatePlanType" : {
      "type" : "object",
      "properties" : {
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "id" : {
          "type" : "string",
          "description" : "Rate plan ID.\n"
        },
        "lastChangeType" : {
          "type" : "string",
          "description" : "The last amendment on the rate plan.\n\nPossible Values:\n\n* `Add`\n* `Update`\n* `Remove`\n"
        },
        "productId" : {
          "type" : "string",
          "description" : ""
        },
        "productName" : {
          "type" : "string",
          "description" : ""
        },
        "productRatePlanId" : {
          "type" : "string",
          "description" : ""
        },
        "productSku" : {
          "type" : "string",
          "description" : "The unique SKU for the product.\n"
        },
        "ratePlanCharges" : {
          "type" : "array",
          "description" : "Container for one or more charges.\n",
          "items" : {
            "$ref" : "#/definitions/GETSubscriptionRatePlanChargesType"
          }
        },
        "ratePlanName" : {
          "type" : "string",
          "description" : "Name of the rate plan.\n"
        },
        "subscriptionProductFeatures" : {
          "type" : "array",
          "description" : "Container for one or more features. \n\nOnly available when the following settings are enabled:\n\n* The Entitlements feature in your tenant.\n*",
          "items" : {
            "$ref" : "#/definitions/GETSubscriptionProductFeatureType"
          }
        }
      },
      "title" : "ratePlans"
    },
    "GETSubscriptionType" : {
      "type" : "object",
      "properties" : {
        "CpqBundleJsonId__QT" : {
          "type" : "string",
          "description" : ""
        },
        "OpportunityCloseDate__QT" : {
          "type" : "string",
          "description" : "The closing date of the Opportunity. This field is populated when the subscription originates from Zuora Quotes.\n\nThis field is used only for reporting subscription metrics. \n\n"
        },
        "OpportunityName__QT" : {
          "type" : "string",
          "description" : "The unique identifier of the Opportunity. This field is populated when the subscription originates from Zuora Quotes.\n\nThis field is used only for reporting subscription metrics. \n\n"
        },
        "QuoteBusinessType__QT" : {
          "type" : "string",
          "description" : "The specific identifier for the type of business transaction the Quote represents such as New, Upsell, Downsell, Renewal, or Churn. This field is populated when the subscription originates from Zuora Quotes.\n\nThis field is used only for reporting subscription metrics. \n\n"
        },
        "QuoteNumber__QT" : {
          "type" : "string",
          "description" : "The unique identifier of the Quote. This field is populated when the subscription originates from Zuora Quotes.\n\nThis field is used only for reporting subscription metrics.\n\n\n"
        },
        "QuoteType__QT" : {
          "type" : "string",
          "description" : "The Quote type that represents the subscription lifecycle stage such as New, Amendment, Renew or Cancel. This field is populated when the subscription originates from Zuora Quotes.\n\nThis field is used only for reporting subscription metrics. \n\n"
        },
        "accountId" : {
          "type" : "string",
          "description" : ""
        },
        "accountName" : {
          "type" : "string",
          "description" : ""
        },
        "accountNumber" : {
          "type" : "string",
          "description" : ""
        },
        "autoRenew" : {
          "type" : "boolean",
          "description" : "If `true`, the subscription automatically renews at the end of the term. Default is `false`.\n"
        },
        "contractEffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Effective contract date for this subscription, as yyyy-mm-dd.\n"
        },
        "contractedMrr" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Monthly recurring revenue of the subscription.\n"
        },
        "currentTerm" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The length of the period for the current subscription term.\n"
        },
        "currentTermPeriodType" : {
          "type" : "string",
          "description" : "The period type for the current subscription term.\n\nValues are:\n\n* `Month` (default)\n* `Year`\n* `Day`\n* `Week`\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "customerAcceptanceDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date on which the services or products within a subscription have been accepted by the customer, as yyyy-mm-dd.\n"
        },
        "id" : {
          "type" : "string",
          "description" : "Subscription ID.\n"
        },
        "initialTerm" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The length of the period for the first subscription term.\n"
        },
        "initialTermPeriodType" : {
          "type" : "string",
          "description" : "The period type for the first subscription term.\n\nValues are:\n\n* `Month` (default)\n* `Year`\n* `Day`\n* `Week`\n"
        },
        "invoiceOwnerAccountId" : {
          "type" : "string",
          "description" : ""
        },
        "invoiceOwnerAccountName" : {
          "type" : "string",
          "description" : ""
        },
        "invoiceOwnerAccountNumber" : {
          "type" : "string",
          "description" : ""
        },
        "invoiceSeparately" : {
          "type" : "string",
          "description" : "Separates a single subscription from other subscriptions and creates an invoice for the subscription. \n\nIf the value is `true`, the subscription is billed separately from other subscriptions. If the value is `false`, the subscription is included with other subscriptions in the account invoice.\n"
        },
        "notes" : {
          "type" : "string",
          "description" : "A string of up to 65,535 characters.\n"
        },
        "ratePlans" : {
          "type" : "array",
          "description" : "Container for rate plans.\n",
          "items" : {
            "$ref" : "#/definitions/GETSubscriptionRatePlanType"
          }
        },
        "renewalSetting" : {
          "type" : "string",
          "description" : "Specifies whether a termed subscription will remain `TERMED` or change to `EVERGREEN` when it is renewed. \n\nValues are:\n\n* `RENEW_WITH_SPECIFIC_TERM` (default)\n* `RENEW_TO_EVERGREEN`\n"
        },
        "renewalTerm" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The length of the period for the subscription renewal term.\n"
        },
        "renewalTermPeriodType" : {
          "type" : "string",
          "description" : "The period type for the subscription renewal term.\n\nValues are:\n\n* `Month` (default)\n* `Year`\n* `Day`\n* `Week`\n"
        },
        "serviceActivationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date on which the services or products within a subscription have been activated and access has been provided to the customer, as yyyy-mm-dd\n"
        },
        "status" : {
          "type" : "string",
          "description" : "Subscription status; possible values are:\n\n* `Draft`\n* `PendingActivation`\n* `PendingAcceptance`\n* `Active`\n* `Cancelled`\n* `Suspended` (This value is in Limited Availability.)\n"
        },
        "subscriptionNumber" : {
          "type" : "string",
          "description" : ""
        },
        "subscriptionStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date the subscription becomes effective.\n"
        },
        "termEndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date the subscription term ends. If the subscription is evergreen, this is null or is the cancellation date (if one has been set).\n"
        },
        "termStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date the subscription term begins. If this is a renewal subscription, this date is different from the subscription start date.\n"
        },
        "termType" : {
          "type" : "string",
          "description" : "Possible values are: `TERMED`, `EVERGREEN`.\n"
        },
        "totalContractedValue" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Total contracted value of the subscription.\n"
        }
      },
      "title" : "subscriptions"
    },
    "GETSubscriptionTypeWithSuccess" : {
      "type" : "object",
      "properties" : {
        "CpqBundleJsonId__QT" : {
          "type" : "string",
          "description" : ""
        },
        "OpportunityCloseDate__QT" : {
          "type" : "string",
          "description" : "The closing date of the Opportunity. This field is populated when the subscription originates from Zuora Quotes.\n\nThis field is used only for reporting subscription metrics. \n\n"
        },
        "OpportunityName__QT" : {
          "type" : "string",
          "description" : "The unique identifier of the Opportunity. This field is populated when the subscription originates from Zuora Quotes.\n\nThis field is used only for reporting subscription metrics. \n\n"
        },
        "QuoteBusinessType__QT" : {
          "type" : "string",
          "description" : "The specific identifier for the type of business transaction the Quote represents such as New, Upsell, Downsell, Renewal, or Churn. This field is populated when the subscription originates from Zuora Quotes.\n\nThis field is used only for reporting subscription metrics. \n\n"
        },
        "QuoteNumber__QT" : {
          "type" : "string",
          "description" : "The unique identifier of the Quote. This field is populated when the subscription originates from Zuora Quotes.\n\nThis field is used only for reporting subscription metrics.\n\nSee [Subscription Data Source](https://knowledgecenter.zuora.com/CD_Reporting/Data_Exports/Z_Data_Source_Reference/Subscription_Data_Source) for more information.\n"
        },
        "QuoteType__QT" : {
          "type" : "string",
          "description" : "The Quote type that represents the subscription lifecycle stage such as New, Amendment, Renew or Cancel. This field is populated when the subscription originates from Zuora Quotes.\n\nThis field is used only for reporting subscription metrics. \n\n"
        },
        "accountId" : {
          "type" : "string",
          "description" : ""
        },
        "accountName" : {
          "type" : "string",
          "description" : ""
        },
        "accountNumber" : {
          "type" : "string",
          "description" : ""
        },
        "autoRenew" : {
          "type" : "boolean",
          "description" : "If `true`, the subscription automatically renews at the end of the term. Default is `false`.\n"
        },
        "contractEffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Effective contract date for this subscription, as yyyy-mm-dd.\n"
        },
        "contractedMrr" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Monthly recurring revenue of the subscription.\n"
        },
        "currentTerm" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The length of the period for the current subscription term.\n"
        },
        "currentTermPeriodType" : {
          "type" : "string",
          "description" : "The period type for the current subscription term.\n\nValues are:\n\n* `Month` (default)\n* `Year`\n* `Day`\n* `Week`\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "customerAcceptanceDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date on which the services or products within a subscription have been accepted by the customer, as yyyy-mm-dd.\n"
        },
        "id" : {
          "type" : "string",
          "description" : "Subscription ID.\n"
        },
        "initialTerm" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The length of the period for the first subscription term.\n"
        },
        "initialTermPeriodType" : {
          "type" : "string",
          "description" : "The period type for the first subscription term.\n\nValues are:\n\n* `Month` (default)\n* `Year`\n* `Day`\n* `Week`\n"
        },
        "invoiceOwnerAccountId" : {
          "type" : "string",
          "description" : ""
        },
        "invoiceOwnerAccountName" : {
          "type" : "string",
          "description" : ""
        },
        "invoiceOwnerAccountNumber" : {
          "type" : "string",
          "description" : ""
        },
        "invoiceSeparately" : {
          "type" : "string",
          "description" : "Separates a single subscription from other subscriptions and creates an invoice for the subscription. \n\nIf the value is `true`, the subscription is billed separately from other subscriptions. If the value is `false`, the subscription is included with other subscriptions in the account invoice.\n"
        },
        "notes" : {
          "type" : "string",
          "description" : "A string of up to 65,535 characters.\n"
        },
        "ratePlans" : {
          "type" : "array",
          "description" : "Container for rate plans.\n",
          "items" : {
            "$ref" : "#/definitions/GETSubscriptionRatePlanType"
          }
        },
        "renewalSetting" : {
          "type" : "string",
          "description" : "Specifies whether a termed subscription will remain `TERMED` or change to `EVERGREEN` when it is renewed. \n\nValues are:\n\n* `RENEW_WITH_SPECIFIC_TERM` (default)\n* `RENEW_TO_EVERGREEN`\n"
        },
        "renewalTerm" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The length of the period for the subscription renewal term.\n"
        },
        "renewalTermPeriodType" : {
          "type" : "string",
          "description" : "The period type for the subscription renewal term.\n\nValues are:\n\n* `Month` (default)\n* `Year`\n* `Day`\n* `Week`\n"
        },
        "serviceActivationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date on which the services or products within a subscription have been activated and access has been provided to the customer, as yyyy-mm-dd\n"
        },
        "status" : {
          "type" : "string",
          "description" : "Subscription status; possible values are:\n\n* `Draft`\n* `PendingActivation`\n* `PendingAcceptance`\n* `Active`\n* `Cancelled`\n* `Suspended` (This value is in Limited Availability.)\n"
        },
        "subscriptionNumber" : {
          "type" : "string",
          "description" : ""
        },
        "subscriptionStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date the subscription becomes effective.\n"
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        },
        "termEndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date the subscription term ends. If the subscription is evergreen, this is null or is the cancellation date (if one has been set).\n"
        },
        "termStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date the subscription term begins. If this is a renewal subscription, this date is different from the subscription start date.\n"
        },
        "termType" : {
          "type" : "string",
          "description" : "Possible values are: `TERMED`, `EVERGREEN`.\n"
        },
        "totalContractedValue" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Total contracted value of the subscription.\n"
        }
      }
    },
    "GETSubscriptionWrapper" : {
      "type" : "object",
      "properties" : {
        "subscriptions" : {
          "type" : "array",
          "description" : "Array of subscriptions.\n",
          "items" : {
            "$ref" : "#/definitions/GETSubscriptionType"
          }
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        }
      }
    },
    "GETTierType" : {
      "type" : "object",
      "properties" : {
        "endingUnit" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Decimal defining end of tier range.\n"
        },
        "price" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "The decimal value of the tiered charge model. If the charge model is not a tiered type then this price field will be null and the `price` field directly under the `productRatePlanCharges` applies.\n"
        },
        "priceFormat" : {
          "type" : "string",
          "description" : "Tier price format. Allowed values: `flat fee`, `per unit`.\n"
        },
        "startingUnit" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Decimal defining start of tier range.\n"
        },
        "tier" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique number of the tier.\n"
        }
      },
      "title" : "tiers"
    },
    "GETUsageType" : {
      "type" : "object",
      "properties" : {
        "accountId" : {
          "type" : "string",
          "description" : "Customer account ID.\n"
        },
        "accountName" : {
          "type" : "string",
          "description" : "Customer account name.\n"
        },
        "accountNumber" : {
          "type" : "string",
          "description" : "Customer account number.\n"
        },
        "chargeNumber" : {
          "type" : "string",
          "description" : "Number of the rate-plan charge that pays for this usage.\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "id" : {
          "type" : "string",
          "description" : "Unique ID for the usage item.\n"
        },
        "quantity" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Number of units used.\n"
        },
        "sourceName" : {
          "type" : "string",
          "description" : "Source of the usage data. Possible values are: `Import`, `API`.\n"
        },
        "startDateTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Start date of the time period in which usage is tracked. Zuora uses this field value to determine the usage date.\n"
        },
        "status" : {
          "type" : "string",
          "description" : "Possible values are: `Importing`, `Pending`, `Processed`.\n"
        },
        "submissionDateTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date when usage was submitted.\n"
        },
        "subscriptionNumber" : {
          "type" : "string",
          "description" : "Number of the subscription covering this usage.\n"
        },
        "unitOfMeasure" : {
          "type" : "string",
          "description" : "Unit used to measure consumption.\n"
        }
      },
      "title" : "usage"
    },
    "GETUsageWrapper" : {
      "type" : "object",
      "properties" : {
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        },
        "usage" : {
          "type" : "array",
          "description" : "Contains one or more usage items.\n",
          "items" : {
            "$ref" : "#/definitions/GETUsageType"
          }
        }
      }
    },
    "GatewayOption" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : ""
        },
        "value" : {
          "type" : "string",
          "description" : ""
        }
      }
    },
    "GatewayOptionData" : {
      "type" : "object",
      "properties" : {
        "GatewayOption" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/GatewayOption"
          }
        }
      }
    },
    "GetHostedPageType" : {
      "type" : "object",
      "properties" : {
        "pageId" : {
          "type" : "string",
          "description" : "Page ID of the Payment Page that Zuora assigns when it is created.\n"
        },
        "pageName" : {
          "type" : "string",
          "description" : "Name of the Payment Page that specified during the page configuration.\n"
        },
        "pageType" : {
          "type" : "string",
          "description" : "Payment method type of this Payment Page, e.g. 'Credit Card', 'ACH', or 'Bank Transfer'.\n"
        },
        "pageVersion" : {
          "type" : "string",
          "description" : "Version of the Payment Page. 1 for Payment Pages 1.0 or 2 for Payment Pages 2.0.\n"
        }
      },
      "title" : "hostedpages"
    },
    "GetHostedPagesType" : {
      "type" : "object",
      "properties" : {
        "hostedpages" : {
          "type" : "array",
          "description" : "Container for the hosted page information.\n",
          "items" : {
            "$ref" : "#/definitions/GetHostedPageType"
          }
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        }
      }
    },
    "GetProductFeatureType" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Feature code, up to 255 characters long.\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "description" : {
          "type" : "string",
          "description" : "Feature description.\n"
        },
        "id" : {
          "type" : "string",
          "description" : "Feature ID.\n"
        },
        "name" : {
          "type" : "string",
          "description" : "Feature name, up to 255 characters long.\n"
        },
        "status" : {
          "type" : "string",
          "description" : ""
        }
      },
      "title" : "productFeatures"
    },
    "Invoice" : {
      "type" : "object",
      "properties" : {
        "AccountId" : {
          "type" : "string",
          "description" : ""
        },
        "AdjustmentAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The amount of the invoice adjustments associated with the invoice. **Character limi**t: 16\n\n\n**Values**: a valid currency amount "
        },
        "Amount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The sum of all charges and taxes associated with the invoice.\n\n\n**Character limit**: 16\n\n\n**Values**: automatically generated "
        },
        "AmountWithoutTax" : {
          "type" : "number",
          "format" : "double",
          "description" : " The sum of all charges associated with the invoice. Taxes are excluded from this value.\n\n\n**Character limit**: 16\n\n\n**Values**: automatically generated "
        },
        "Balance" : {
          "type" : "number",
          "format" : "double",
          "description" : " The remaining balance of the invoice after all payments, adjustments, and refunds are applied.\n\n\n**Character limit**: 16\n\n\n**Values**: automatically generated "
        },
        "BillRunId" : {
          "type" : "string",
          "description" : " The ID of a Bill Run.\n\n\n**Character limit**: 32\n\n\n**Values**: a BillRun ID "
        },
        "Body" : {
          "type" : "string",
          "description" : " Required "
        },
        "Comments" : {
          "type" : "string",
          "description" : " Additional information related to the invoice that a Zuora user added to the invoice.\n\n\n**Character limit**: 255 **Values:** a string of 255 characters or fewer "
        },
        "CreatedById" : {
          "type" : "string",
          "description" : " The user ID of the person who created the invoice. If a bill run generated the invoice, then the value is the user ID of person who created the bill run.\n\n\n**Character limit**: 32\n\n\n**Values**: automatically generated "
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the invoice was generated.\n\n\n**Character limit**: 29\n\n\n**Values**: automatically generated "
        },
        "CreditBalanceAdjustmentAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The currency amount of the adjustment applied to the customer's credit balance.\n\n\n**Character limit**: 16\n\n\n**Values**: a valid currency amount This field is only available if the [Zuora Global Support](http://support.zuora.com/) to enable this feature.\n\n\n"
        },
        "DueDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date by which the payment for this invoice is due.\n\n\n**Character limit**: 29 "
        },
        "IncludesOneTime" : {
          "type" : "boolean",
          "description" : " Specifies whether the invoice includes one-time charges. You can use this field only with the `generate\n` call for the Invoice object.\n\n\n**Character limit**: 5\n\n\n**Values**: automatically generated from one of the following: `True` (default), `False` "
        },
        "IncludesRecurring" : {
          "type" : "boolean",
          "description" : " Specifies whether the invoice includes recurring charges. You can use this field only with the `generate\n`call for the Invoice object.\n\n\n**Character limit**: 5\n\n\n**Values**: automatically generated from one of the following: `True` (default), `False` "
        },
        "IncludesUsage" : {
          "type" : "boolean",
          "description" : " Specifies whether the invoice includes usage charges. You can use this field only with the `generate\n`call for the Invoice object.\n\n\n**Character limit**: 5\n\n\n**Values**: automatically generated from one of the following: `True `(default), `False` "
        },
        "InvoiceDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " Specifies the date on which to generate the invoice.\n\n\n**Character limit**: 29 "
        },
        "InvoiceNumber" : {
          "type" : "string",
          "description" : " The unique identification number for the invoice. This number is returned as a string.\n\n\n**Character limit**: 32\n\n\n**Values**: automatically generated "
        },
        "LastEmailSentDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the invoice was last emailed.\n\n\n**Character limit**: 29\n\n\n**Values**: automatically generated "
        },
        "PaymentAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The amount of payments applied to the invoice.\n\n\n**Character limit**: 16 **Value**s: automatically generated "
        },
        "PostedBy" : {
          "type" : "string",
          "description" : " The user ID of the person who moved the invoice to Posted status.\n\n\n**Character limit**: 32\n\n\n**Values**: automatically generated "
        },
        "PostedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the invoice was posted.\n**Character limit:** 29\n\n\n**Values**: automatically generated "
        },
        "RefundAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : " Specifies the amount of a refund that was applied against an earlier payment on the invoice.\n\n\n**Character limit**: 16\n\n\n**Values**: automatically generated "
        },
        "RegenerateInvoicePDF" : {
          "type" : "boolean",
          "description" : " Regenerates a PDF of an invoice that was already generated. Add this field to an `update\n` call to regenerate an invoice PDF. Note that when you set the `RegenerateInvoicePDF` field to `true`, you cannot update any other fields in the same `update\n` call. Otherwise, you will receive the following `INVALID_VALUE` error: &quot;When field RegenerateInvoicePDF is set to true to regenerate the invoice PDF file, changes on other fields of the invoice are not allowed.&quot;\n\n**Character limit**: 5\n\n\n**Values**: `True`, `False` "
        },
        "Status" : {
          "type" : "string",
          "description" : " The status of the invoice in the system. This status is not the status of the payment of the invoice, just the status of the invoice itself.\n\n\n**Character limit**: 8\n\n\n**Values**: one of the following:\n\n-  Draft (default, automatically set upon invoice creation)\n\n-  Posted\n\n-  Canceled\n\n"
        },
        "TargetDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " This date is used to determine which charges are to be billed. All charges that are to be billed on this date or prior will be included in this bill run.\n\n\n**Character limit**: 29 "
        },
        "TaxAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The total amount of the taxes applied to the invoice.\n\n\n**Character limit**: 16\n\n\n**Values**: automatically generated "
        },
        "TaxExemptAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The total amount of the invoice that is exempt from taxation.\n\n\n**Character limit**: 16\n\n\n**Values**: automatically generated "
        },
        "TransferredToAccounting" : {
          "type" : "string",
          "description" : " Specifies whether or not the invoice was transferred to an external accounting system, such as NetSuite.\n\n\n**Character limit**: 10\n\n\n**Values**: Processing, Yes, Error, Ignore "
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : ""
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the invoice was last updated.\n\n\n**Character limit**: 29\n\n\n**Values**: automatically generated "
        }
      }
    },
    "InvoiceData" : {
      "type" : "object",
      "properties" : {
        "Invoice" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/Invoice"
          }
        },
        "InvoiceItem" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/InvoiceItem"
          }
        }
      }
    },
    "InvoiceItem" : {
      "type" : "object",
      "properties" : {
        "AccountingCode" : {
          "type" : "string",
          "description" : " The accounting code for the item's charge. Accounting codes group transactions that contain similar accounting attributes.\n\n\n**Character limit**: 100\n\n\n**Values**: inherited from `RatePlanCharge.AccountingCode` "
        },
        "AppliedToChargeNumber" : {
          "type" : "string",
          "description" : " The charge number that the discount charge is applied to. This field is only for the invoice items that are discount charges. This field is only returned in subscription previews.\nThis field will be returned in the response if you specify the charge number in the rate plan charges in the request.\n\n**Character limit**: 32\n\n**Values**: inherited from `RatePlanCharge.ChargeNumber` for the charge associated with the invoice item that the discount charge is applied to "
        },
        "AppliedToInvoiceItemId" : {
          "type" : "string",
          "description" : " Associates a discount invoice item to a specific invoice item.\n\n**Character limit**: 32\n\n**Values**: inherited from the ID of the charge that a discount applies to "
        },
        "ChargeAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The amount being charged for the invoice item. This amount doesn't include taxes regardless if the charge's tax mode is inclusive or exclusive.\n\n\n**Character limit**:\n\n\n**Values**: automatically calculated from multiple fields in multiple objects "
        },
        "ChargeDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the Invoice Item is created .\n\n\n**Character limit**: 29\n\n\n**Values**: automatically generated "
        },
        "ChargeDescription" : {
          "type" : "string",
          "description" : " A description of the invoice item's charge.\n\n\n**Character limit**: 500\n\n\n**Values**: inherited from `RatePlanCharge.Description` "
        },
        "ChargeId" : {
          "type" : "string",
          "description" : " The ID of the rate plan charge that is associated with this invoice item upon object creation.\n\n\n**Character limit**: 32\n\n\n**Values**: inherited from `RatePlanCharge.Id` "
        },
        "ChargeName" : {
          "type" : "string",
          "description" : " The name of the invoice item's charge.\n**Character limi**t: 50 **Values: **inherited from `RatePlanCharge.Name` "
        },
        "ChargeNumber" : {
          "type" : "string",
          "description" : " The unique identifier of the invoice item's charge.\n**Character limit:** 50 **Values:** inherited from `RatePlanCharge.ChargeNumber` "
        },
        "ChargeType" : {
          "type" : "string",
          "description" : " Specifies the type of charge.\n\n\n**Character limit**: 9\n\n\n**Values**: one of the following:\n\n- `OneTime`\n- `Recurring`\n- `Usage`\n"
        },
        "CreatedById" : {
          "type" : "string",
          "description" : " The user ID of the person who created the invoice item.\n\n\n**Character limit**: 32\n\n\n**Values**: automatically generated "
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date the invoice item was created.\n**Character limit:** 29\n\n\n**Values**: automatically generated "
        },
        "InvoiceId" : {
          "type" : "string",
          "description" : " The ID of the invoice that's associated with this invoice item.\n\n\n**Character limit**: 32\n\n\n**Values**: inherited from `Invoice.Id` "
        },
        "ProcessingType" : {
          "type" : "number",
          "format" : "double",
          "description" : " Identifies the kind of charge where 0 is a charge, 1 is a discount, 2 is a prepayment, and 3 is a tax. The returned value is text not decimal on data sources.\n\n\n**Character limit**: **Values: **\n\n- 0: charge\n- 1: discount\n- 2: prepayment\n- 3: tax\n"
        },
        "ProductDescription" : {
          "type" : "string",
          "description" : " A description of the product associated with this invoice item.\n\n\n**Character limit**: 500\n\n\n**Values**: inherited from `Product.Description` "
        },
        "ProductId" : {
          "type" : "string",
          "description" : " The ID of the product associated with this invoice item.\n\n\n**Character limit**: 32\n\n\n**Values**: inherited from `Product.Id` "
        },
        "ProductName" : {
          "type" : "string",
          "description" : " The name of the product associated with this invoice item.\n\n\n**Character limit**: 255 **Values: **inherited from `Product.Name` "
        },
        "ProductRatePlanChargeId" : {
          "type" : "string",
          "description" : " The ID of the rate plan charge that's associated with this invoice item.\n\n\n**Character limit**: 32\n\n\n**Values**: inherited from `ProductRatePlanCharge.Id` You cannot `query\n` for this field. Only the s`ubscribe\n` preview and the `amend\n` preview calls will return the value of this field in the response."
        },
        "Quantity" : {
          "type" : "number",
          "format" : "double",
          "description" : " The number of units for this invoice item.\n\n\n\n**Values**: inherited from `RatePlanCharge.Quantity` "
        },
        "RatePlanChargeId" : {
          "type" : "string",
          "description" : " The ID of the rate plan charge that's associated with this invoice item.\n\n\n**Character limit**: 32\n\n\n**Values**: inherited from `RatePlanCharge.Id` "
        },
        "RevRecCode" : {
          "type" : "string",
          "description" : " Associates this invoice item with a specific revenue recognition code.\n\n\n**Character limit**: 32\n\n\n**Values**: inherited from `ProductRatePlanCharge.RevRecCode` "
        },
        "RevRecStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when revenue recognition is triggered.\n\n\n**Character limit**: 29\n\n\n**Values**: generated from `InvoiceItem.RevRecTriggerCondition` "
        },
        "RevRecTriggerCondition" : {
          "type" : "string",
          "description" : " Specifies when revenue recognition begins based on a triggering event.\n\n\n**Character limit**:\n\n\n**Values**: inherited from `ProductRatePlanCharge`.`RevRecTriggerCondition` "
        },
        "SKU" : {
          "type" : "string",
          "description" : " The unique SKU for the product associated with this invoice item.\n\n\n**Character limit**: 255\n\n\n**Values**: inherited from `Product.SKU` "
        },
        "ServiceEndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The end date of the service period associated with this invoice item. Service ends one second before the date in this value.\n\n\n**Character limit**: 29\n\n\n**Values**: automatically generated "
        },
        "ServiceStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The start date of the service period associated with this invoice item. If the associated charge is a one-time fee, then this date is the date of that charge.\n**Character limit:** 29\n\n\n**Values**: automatically generated "
        },
        "SubscriptionId" : {
          "type" : "string",
          "description" : " The ID of the subscription associated with the invoice item.\n\n\n**Character limit**: 32\n\n\n**Values**: inherited from `Subscription.Id` "
        },
        "SubscriptionNumber" : {
          "type" : "string",
          "description" : " The number of the subscription associated with the invoice item.\n\n\n**Character limit**:\n\n\n**Values**: "
        },
        "TaxAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The amount of tax applied to the invoice item's charge.\n\n\n**Character limit**:\n\n\n**Values**: calculated from multiple fields in the ProductRatePlanCharge object "
        },
        "TaxCode" : {
          "type" : "string",
          "description" : " Specifies the tax code for taxation rules.\n\n\n**Character limit**: 6\n\n\n**Values**: inherited from `ProductRatePlanCharge.TaxCode` "
        },
        "TaxExemptAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The amount of the invoice item's charge that's tax exempt.\n\n\n**Character limit**:\n\n\n**Values**: calculated from multiple fields in the ProductRatePlanCharge object "
        },
        "TaxMode" : {
          "type" : "string",
          "description" : " The tax mode of the invoice item.\n\n\n**Character limit**: 12\n\n\n**Values**: `TaxExclusive`, `TaxInclusive` "
        },
        "UOM" : {
          "type" : "string",
          "description" : " Specifies the units to measure usage. Units of measure are configured in the web-based UI: **Z-Billing > Settings**\n\n**Character limit**:\n\n\n**Values**: inherited from `ProductRatePlanCharge.UOM` "
        },
        "UnitPrice" : {
          "type" : "number",
          "format" : "double",
          "description" : " The per-unit price of the invoice item.\n\n\n**Character limit**:\n\n\n**Values**: calculated from multiple fields in ProductRatePlanCharge and ProductRatePlanChargeTier objets "
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : " The ID of the user who last updated the invoice item.\n\n\n**Character limit**: 32\n\n\n**Values**: automatically generated "
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the invoice item was last updated.\n\n\n**Character limit**: 29\n\n\n**Values**: automatically generated "
        }
      }
    },
    "InvoiceProcessingOptions" : {
      "type" : "object",
      "properties" : {
        "InvoiceDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The invoice date."
        },
        "InvoiceTargetDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date that determines which charges to bill. Charges prior to this date or on this date are billed on the resulting invoices. "
        }
      }
    },
    "InvoiceResult" : {
      "type" : "object",
      "properties" : {
        "Invoice" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/Invoice"
          }
        }
      }
    },
    "NewChargeMetrics" : {
      "type" : "object",
      "properties" : {
        "ChargeNumber" : {
          "type" : "string",
          "description" : ""
        },
        "DMRR" : {
          "type" : "number",
          "format" : "double",
          "description" : ""
        },
        "DTCV" : {
          "type" : "number",
          "format" : "double",
          "description" : ""
        },
        "MRR" : {
          "type" : "number",
          "format" : "double",
          "description" : ""
        },
        "OriginalId" : {
          "type" : "string",
          "description" : ""
        },
        "OriginalRatePlanId" : {
          "type" : "string",
          "description" : ""
        },
        "ProductRatePlanChargeId" : {
          "type" : "string",
          "description" : ""
        },
        "ProductRatePlanId" : {
          "type" : "string",
          "description" : ""
        },
        "TCV" : {
          "type" : "number",
          "format" : "double",
          "description" : ""
        }
      }
    },
    "POSTAccountResponseType" : {
      "type" : "object",
      "properties" : {
        "accountId" : {
          "type" : "string",
          "description" : "Auto-generated account ID.\n"
        },
        "accountNumber" : {
          "type" : "string",
          "description" : "Account number.\n"
        },
        "contractedMrr" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Contracted monthly recurring revenue of the subscription.\n"
        },
        "invoiceId" : {
          "type" : "string",
          "description" : "ID of the invoice generated at account creation, if applicable.\n"
        },
        "paidAmount" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Amount collected on the invoice generated at account creation, if applicable.\n"
        },
        "paymentId" : {
          "type" : "string",
          "description" : "ID of the payment collected on the invoice generated at account creation, if applicable.\n"
        },
        "paymentMethodId" : {
          "type" : "string",
          "description" : "ID of the payment method that was set up at account creation, which automatically becomes the default payment method for this account.\n"
        },
        "subscriptionId" : {
          "type" : "string",
          "description" : "ID of the subscription that was set up at account creation, if applicable.\n"
        },
        "subscriptionNumber" : {
          "type" : "string",
          "description" : "Number of the subscription that was set up at account creation, if applicable.\n"
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        },
        "totalContractedValue" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Total contracted value of the subscription.\n"
        }
      }
    },
    "POSTAccountType" : {
      "type" : "object",
      "required" : [ "currency", "name" ],
      "properties" : {
        "accountNumber" : {
          "type" : "string",
          "description" : "A unique account number, up to 50 characters that do not begin with the default account number prefix.  If no account number is specified, one is generated.\n"
        },
        "applyCreditBalance" : {
          "type" : "boolean",
          "description" : "Applies a credit balance to an invoice. \n\nIf the value is `true`, the credit balance is applied to the invoice. If the value is `false`, no action is taken.\n\nPrerequisite: `invoice` must be `true`. \n\n**Note:** If you are using the field `invoiceCollect` rather than the field `invoice`, the `invoiceCollect` value must be `true`.\n\nTo view the credit balance adjustment, retrieve the details of the invoice using the Get Invoices method.\n"
        },
        "autoPay" : {
          "type" : "boolean",
          "description" : "Specifies whether future payments are to be automatically billed when they are due. Possible values are: `true`, `false`.\n"
        },
        "batch" : {
          "type" : "string",
          "description" : "The alias name given to a batch. A string of 50 characters or less.\n"
        },
        "billCycleDay" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The account's bill cycle day (BCD), when bill runs generate invoices for the account.  Specify any day of the month (1-31, where 31 = end-of-month), or 0 for auto-set.\n\nRequired if no subscription will be created. \n\nOptional if a subscription is created and defaults to the day-of-the-month of the subscription's `contractEffectiveDate`.\n"
        },
        "billToContact" : {
          "$ref" : "#/definitions/POSTAccountType_billToContact"
        },
        "collect" : {
          "type" : "string",
          "description" : "Collects an automatic payment for a subscription. The collection generated in this operation is only for this subscription, not for the entire customer account.\n\nIf the value is `true`, the automatic payment is collected. If the value is `false`, no action is taken.\n\nThe default value is `true`.\n\nPrerequisite: invoice must be `true`. \n\n**Note:** This field is in Zuora REST API version control. Supported minor versions are 196.0 or later. To use this field in the method, you must set the `zuora-version` parameter to the minor version number in the request header. "
        },
        "communicationProfileId" : {
          "type" : "string",
          "description" : "The ID of a communication profile.          "
        },
        "creditCard" : {
          "$ref" : "#/definitions/POSTAccountType_creditCard"
        },
        "crmId" : {
          "type" : "string",
          "description" : "CRM account ID for the account, up to 100 characters.\n"
        },
        "currency" : {
          "type" : "string",
          "description" : "A currency as defined in Billing Settings in the Zuora UI.\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "hpmCreditCardPaymentMethodId" : {
          "type" : "string",
          "description" : "The ID of the HPM credit card payment method associated with this account. You must provide either this field or the `creditCard` structure, but not both.\n\n**Note:** Non-credit card payment methods are not supported.\n"
        },
        "invoice" : {
          "type" : "string",
          "description" : "Creates an invoice for a subscription. The invoice generated in this operation is only for this subscription, not for the entire customer account.\n\nIf the value is `true`, an invoice is created. If the value is `false`, no action is taken.\n\nThe default value is `true`. \n\n**Note:** This field is in Zuora REST API version control. Supported minor versions are 196.0 or later. To use this field in the method, you must set the `zuora-version` parameter to the minor version number in the request header."
        },
        "invoiceCollect" : {
          "type" : "boolean",
          "description" : "**Note:** This field has been replaced by the `invoice` field and the `collect` field. `invoiceCollect` is available only for backward compatibility.\n\nIf `true` (default), and a subscription is created, an invoice is generated at account creation time and payment is immediately collected using the account's default payment method.\n\nThis field is in Zuora REST API version control. Supported minor versions are 186.0, 187.0, 188.0, 189.0, and 196.0.\n"
        },
        "invoiceTargetDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "If `invoiceCollect` is true, the target date for the invoice (that is, the date through which charges should be calculated). In `yyyy-mm-dd` format; defaults to the current date.\n"
        },
        "invoiceTemplateId" : {
          "type" : "string",
          "description" : "Invoice template ID, configured in Billing Settings in the Zuora UI.\n"
        },
        "name" : {
          "type" : "string",
          "description" : "Account name, up to 255 characters.\n"
        },
        "notes" : {
          "type" : "string",
          "description" : "A string of up to 65,535 characters.\n"
        },
        "paymentGateway" : {
          "type" : "string",
          "description" : "The name of the payment gateway instance. If null or left unassigned, the Account will use the Default Gateway.\n"
        },
        "paymentTerm" : {
          "type" : "string",
          "description" : "Payment terms for this account. Possible values are: `Due Upon Receipt`, `Net 30`, `Net 60`, `Net 90`.\n"
        },
        "soldToContact" : {
          "$ref" : "#/definitions/POSTAccountType_soldToContact"
        },
        "subscription" : {
          "$ref" : "#/definitions/POSTAccountType_subscription"
        },
        "tagging" : {
          "type" : "string",
          "description" : ""
        },
        "taxInfo" : {
          "$ref" : "#/definitions/POSTAccountType_taxInfo"
        }
      },
      "example" : {
        "autoPay" : false,
        "billCycleDay" : 0,
        "billToContact" : {
          "address1" : "1051 E Hillsdale Blvd",
          "city" : "Foster City",
          "country" : "United States",
          "firstName" : "John",
          "lastName" : "Smith",
          "state" : "CA",
          "workEmail" : "john.smith@test.com",
          "zipCode" : "94404"
        },
        "collect" : false,
        "currency" : "USD",
        "hpmCreditCardPaymentMethodId" : "2c92c0f93cf64d94013cfe2d20db61a7",
        "invoice" : true,
        "name" : "Zuora Test Account",
        "notes" : "This account is for demo purposes.",
        "paymentTerm" : "Due Upon Receipt",
        "subscription" : {
          "autoRenew" : true,
          "contractEffectiveDate" : "2016-01-01",
          "initialTerm" : 12,
          "notes" : "This is a trial subscription for POST account demo.",
          "renewalTerm" : 12,
          "subscribeToRatePlans" : [ {
            "chargeOverrides" : [ {
              "price" : 1000,
              "productRatePlanChargeId" : "2c92c0f94ac8307f014ae5d4a5156b28"
            }, {
              "price" : 1000,
              "productRatePlanChargeId" : "2c92c0f94ac8307f014ae5dbe2947851"
            } ],
            "productRatePlanId" : "2c92c0f94ac8307f014ae5d3d1d469e2"
          }, {
            "chargeOverrides" : [ {
              "price" : 1000,
              "productRatePlanChargeId" : "2c92c0f83cf64298013d027725a67b7b"
            } ],
            "productRatePlanId" : "2c92c0f93cf64d94013d027681560341"
          } ],
          "termType" : "TERMED"
        }
      }
    },
    "POSTAccountingCodeResponseType" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "ID of the newly created accounting code.\n"
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        }
      }
    },
    "POSTAccountingCodeType" : {
      "type" : "object",
      "required" : [ "name", "type" ],
      "properties" : {
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "glAccountName" : {
          "type" : "string",
          "description" : "Name of the account in your general ledger.\n\nField only available if you have Zuora Finance enabled. Maximum of 255 characters.\n"
        },
        "glAccountNumber" : {
          "type" : "string",
          "description" : "Account number in your general ledger.\n\nField only available if you have Zuora Finance enabled. Maximum of 255 characters.\n"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the accounting code.\n\nAccounting code name must be unique. Maximum of 100 characters.\n"
        },
        "notes" : {
          "type" : "string",
          "description" : "Maximum of 2,000 characters.\n"
        },
        "type" : {
          "type" : "string",
          "description" : "Accounting code type. \n\nValid values are as follows:\n* `Cash`\n* `OtherAssets`\n* `CustomerCashOnAccount`\n* `DeferredRevenue`\n* `SalesTaxPayable`\n* `OtherLiabilities`\n* `SalesRevenue`\n* `SalesDiscounts`\n* `OtherRevenue`\n* `OtherEquity`\n* `BadDebt`\n* `OtherExpenses`\n          \nYou cannot create new accounting codes of type `AccountsReceivable`.\n"
        }
      },
      "example" : {
        "name" : "CASH",
        "type" : "Cash"
      }
    },
    "POSTAccountingPeriodResponseType" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "ID of the newly-created accounting period.\n"
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        }
      }
    },
    "POSTAccountingPeriodType" : {
      "type" : "object",
      "required" : [ "endDate", "fiscalYear", "name", "startDate" ],
      "properties" : {
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "endDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The end date of the accounting period in yyyy-mm-dd format, for example, \"2016-02-19\".\n"
        },
        "fiscalYear" : {
          "type" : "string",
          "description" : "Fiscal year of the accounting period in yyyy format, for example, \"2016\".\n"
        },
        "fiscal_quarter" : {
          "type" : "integer",
          "format" : "int64",
          "description" : ""
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the accounting period.\n\nAccounting period name must be unique. Maximum of 100 characters.\n"
        },
        "notes" : {
          "type" : "string",
          "description" : "Notes about the accounting period.\n\nMaximum of 255 characters.\n"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The start date of the accounting period in yyyy-mm-dd format, for example, \"2016-02-19\".\n"
        }
      },
      "example" : {
        "endDate" : "2016-06-30",
        "fiscalYear" : 2016,
        "name" : "Jun 2016",
        "notes" : "optional notes here",
        "startDate" : "2016-06-01"
      }
    },
    "POSTAttachmentResponseType" : {
      "type" : "object",
      "properties" : {
        "fileId" : {
          "type" : "string",
          "description" : "Id to identify the attached file.\n"
        },
        "id" : {
          "type" : "string",
          "description" : "Attachment id.\n"
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        }
      }
    },
    "POSTAttachmentType" : {
      "type" : "object",
      "required" : [ "file" ],
      "properties" : {
        "file" : {
          "type" : "string",
          "description" : "The file to be attached. Must be multipart/form-data.\nThe maximum file size is 4 MB.\nFiles with the following extensions are not supported: .exe, .sh, .dmg, .pkg, .cmd, .bat\n"
        }
      },
      "example" : "curl\n--form \"file=@PODocument.pdf\" \\\n-X POST https://api.zuora.com/rest/v1/attachments/?description=123&associatedObjectType=Subscription&associatedObjectKey=A-S00005714"
    },
    "POSTDecryptResponseType" : {
      "type" : "object",
      "properties" : {
        "decryptedSignature" : {
          "type" : "string",
          "description" : "The string of a list of the following items: Payment Pages 2.0 URL, tenant ID, timestamp,the Payment Page ID\n\nThe items are separated by '#', e.g., \"/apps/publichostedpagelite.do#12271#rvBp1AxBJwk6FrT7aqFuABIINiRbwJCc\n#1418848373103#2c92c0f948f899\"\n"
        },
        "publicKey" : {
          "type" : "string",
          "description" : "The public key passed in as a request parameter.\n"
        },
        "signature" : {
          "type" : "string",
          "description" : "The signature passed in as a request parameter.\n"
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        }
      }
    },
    "POSTDecryptionType" : {
      "type" : "object",
      "required" : [ "method", "publicKey", "signature" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "description" : "The type of the request. Set it to POST.\n"
        },
        "publicKey" : {
          "type" : "string",
          "description" : "The public key generated by Zuora.\n"
        },
        "signature" : {
          "type" : "string",
          "description" : "The signature generated by Zuora.\n"
        }
      },
      "example" : {
        "method" : "POST",
        "publicKey" : "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAmWRFTwxQOqaG4JDZSQF/NJWvCDoSXm3TYilNzoN8nBbuvhKa7SZBBS+VP6rFqcbIU38Fu+Rf09vqyYOxuasPJe7yhqeOiStWB/aCPLhwXBeKt37L/qkwpNOKb1FETtUgrc+UjbtT0pnl55wCfi+Ik//X5SQi0B+c0ei1DQv99qmPJJErrhnBtdxeaWAT0EYAo42AOQ5cp0UWDY6OdOYL6+RyFOUFIs1yEgtfg4VMMSpSOKBOhYclQYuSC7nBF5Cc18ydtzsBpf7l49gCLTFzG45NCDAocada8KihFNpGXbauV9V4EPRD4lofaXdsXJ5Tw8/+KCsrUlvIQI3vcEv9LQIDAQAB",
        "signature" : "BeNYuHFkp/sbfm3clYyCkKEqd7XVTRDOJ1/5rL0tpkqxiSq+maqYkDz5kA+lN64ipoefQuJ7Rdm5TpICErufeJfa2sfTmGARDJ0hr+StXfLsIxHmDoNH5dqcXv3W6MR4kaljEqPVuhzGQ0We98DG52JcHWqqN53oHwTyuZuXocQqnmiE23IPm8UrU3g4hX/OLat0R81wDQ1SslZ+4pnqlncpTpopCK4FxeG3B0gYMhZcYd17Cmf0N3tEHVXHDlJIm4rOx0OVT+YBnjbKYLM0jxYu7PRKRis+yzN1BoappOEB0gmPjznIeiYF0u/fJdZWoEwK7d9mrfJeOBbpFyRoHA=="
      }
    },
    "POSTDistributionItemType" : {
      "type" : "object",
      "required" : [ "accountingPeriodName", "newAmount" ],
      "properties" : {
        "accountingPeriodName" : {
          "type" : "string",
          "description" : "Name of the accounting period. The open-ended accounting period is named `Open-Ended`. \n\nThe accounting period must be open.\n"
        },
        "newAmount" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Amount of revenue you want to distribute into the accounting period.\n\nThe value must be formatted based on the currency, for example, `JPY 30` or `USD 30.15`. If the value is formatted incorrectly, the following error message is returned: `Allocation amount with wrong decimal places.`\n"
        }
      },
      "title" : "revenueDistributions"
    },
    "POSTHMACSignatureResponseType" : {
      "type" : "object",
      "properties" : {
        "signature" : {
          "type" : "string",
          "description" : "Contains a keyed-hash message authentication code (HMAC)\ne.g. `ZmI0ZjE2ZTMxMWY1YjA0ZTc4MTg1ZDhlYWRkMTEwNDE3M2RiMzNiNQ==<`\n"
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        },
        "token" : {
          "type" : "string",
          "description" : "cContains a token code. e.g. `gCH6gYqQffQCsFKSLuxyagXsuXcIK0uf`\n"
        }
      }
    },
    "POSTHMACSignatureType" : {
      "type" : "object",
      "required" : [ "method", "uri" ],
      "properties" : {
        "accountKey" : {
          "type" : "string",
          "description" : "Customer account number or ID.\n\nSpecifies this field only when creating signatures for Create payment method.\n"
        },
        "method" : {
          "type" : "string",
          "description" : "Possible values are: 'GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'.\n"
        },
        "name" : {
          "type" : "string",
          "description" : "Account name.\n\nSpecifies this field only when creating signatures for Create account.\n"
        },
        "pageId" : {
          "type" : "string",
          "description" : "The page id of your Payment Pages 2.0 form. Click **Show Page Id** next to the Payment Page name in the Hosted Page List to retrieve the page id.\n\nSpecifies this field only when creating signatures for RSA Signatures.\n"
        },
        "uri" : {
          "type" : "string",
          "description" : "The URI of the API object the customer will make a CORS enabled call to.\ne.g. \"https://api.zuora.com/rest/v1/payment-methods/credit-cards\"\n"
        }
      },
      "example" : {
        "accountKey" : "A00000001",
        "method" : "POST",
        "uri" : "https://api.zuora.com/rest/v1/payment-methods/credit-cards"
      }
    },
    "POSTInvoiceCollectInvoicesType" : {
      "type" : "object",
      "properties" : {
        "invoiceAmount" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Invoice amount.\n"
        },
        "invoiceId" : {
          "type" : "string",
          "description" : "Invoice ID.\n"
        },
        "invoiceNumber" : {
          "type" : "string",
          "description" : "Invoice number.\n"
        }
      },
      "title" : "invoices"
    },
    "POSTInvoiceCollectResponseType" : {
      "type" : "object",
      "properties" : {
        "amountCollected" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Payment amount applied.\n"
        },
        "invoices" : {
          "type" : "array",
          "description" : "Information on one or more invoices associated with this operation:\n",
          "items" : {
            "$ref" : "#/definitions/POSTInvoiceCollectInvoicesType"
          }
        },
        "paymentId" : {
          "type" : "string",
          "description" : "Payment ID.\n"
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        }
      }
    },
    "POSTInvoiceCollectType" : {
      "type" : "object",
      "required" : [ "accountKey" ],
      "properties" : {
        "accountKey" : {
          "type" : "string",
          "description" : "Customer account ID or account number.\n"
        },
        "invoiceDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The invoice date that should appear on the invoice being generated, in `yyyy-mm-dd` format. If `invoiceId` is not specified and this value is omitted, the current date is used by default.\n"
        },
        "invoiceId" : {
          "type" : "string",
          "description" : "The ID of an existing invoice for which to collect payment using the account's default payment method. If this value is specified, no new invoice is generated, and both `invoiceDate` and `invoiceTargetDate` are ignored.\n"
        },
        "invoiceTargetDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date, in `yyyy-mm-dd` format, through which charges on this account will be processed when generating a new invoice.If `invoiceId` is not specified and this value is omitted, the current date is used by default.\n"
        },
        "paymentGateway" : {
          "type" : "string",
          "description" : "The name of the gateway that will be used for the payment. Must be a valid gateway name and the gateway must support the specific payment method. If a value is not specified, the default gateway on the Account will be used.\n"
        }
      },
      "example" : {
        "accountKey" : "4028925a4cb74ec9014cb7520fc00005",
        "invoiceId" : "4028925a4cb74ec9014cb7540988002e",
        "paymentGateway" : "TestGateway"
      }
    },
    "POSTJournalEntryItemType" : {
      "type" : "object",
      "required" : [ "accountingCodeName", "amount", "type" ],
      "properties" : {
        "accountingCodeName" : {
          "type" : "string",
          "description" : "Name of the accounting code.\n"
        },
        "accountingCodeType" : {
          "type" : "string",
          "description" : "Accounting code type. The accounting code types are:\n\n* `AccountsReceivable`\n*  `Cash`\n*  `OtherAssets`\n*  `CustomerCashOnAccount `\n* `DeferredRevenue`\n* `SalesTaxPayable`\n* `OtherLiabilities`\n* `SalesRevenue`\n* `SalesDiscounts`\n* `OtherRevenue` \n* `OtherEquity`\n* `BadDebt`  \n* `OtherExpenses`\n\nThis field is required if accountingCodeName is not unique.\n"
        },
        "amount" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Journal entry item amount in transaction currency.\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "homeCurrencyAmount" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Journal entry item amount in home currency.\n\nThis field is required if you have set your home currency for foreign currency conversion. Otherwise, do not pass this field.\n"
        },
        "type" : {
          "type" : "string",
          "description" : "Type of journal entry item. An enum with the value `Credit` or `Debit`.\n"
        }
      },
      "title" : "journalEntryItems"
    },
    "POSTJournalEntryResponseType" : {
      "type" : "object",
      "properties" : {
        "journalEntryNumber" : {
          "type" : "string",
          "description" : "Journal entry number in the format JE-00000001.\n"
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        }
      }
    },
    "POSTJournalEntrySegmentType" : {
      "type" : "object",
      "required" : [ "segmentName", "segmentValue" ],
      "properties" : {
        "segmentName" : {
          "type" : "string",
          "description" : "Name of segment.\n"
        },
        "segmentValue" : {
          "type" : "string",
          "description" : "Value of segment in this summary journal entry.\n"
        }
      },
      "title" : "segments"
    },
    "POSTJournalEntryType" : {
      "type" : "object",
      "required" : [ "accountingPeriodName", "currency", "journalEntryDate", "journalEntryItems" ],
      "properties" : {
        "accountingPeriodName" : {
          "type" : "string",
          "description" : "Name of the accounting period. The open-ended accounting period is named `Open-Ended`. \n"
        },
        "currency" : {
          "type" : "string",
          "description" : "The type of currency used. \n\nCurrency must be active.\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "journalEntryDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date of the journal entry.\n"
        },
        "journalEntryItems" : {
          "type" : "array",
          "description" : "Key name that represents the list of journal entry items.\n",
          "items" : {
            "$ref" : "#/definitions/POSTJournalEntryItemType"
          }
        },
        "notes" : {
          "type" : "string",
          "description" : "The number associated with the revenue event.\n\nCharacter limit: 2,000\n"
        },
        "segments" : {
          "type" : "array",
          "description" : "List of segments that apply to the summary journal entry.\n",
          "items" : {
            "$ref" : "#/definitions/POSTJournalEntrySegmentType"
          }
        },
        "transferredToAccounting" : {
          "type" : "string",
          "description" : "Status shows whether the journal entry has been transferred to an accounting system. The possible values are `No`, `Processing`, `Yes`, `Error`, `Ignore`.\n"
        }
      },
      "example" : {
        "accountingPeriodName" : "Nov-2014",
        "cf_pk1__c" : "CreditCard",
        "cf_pk2__c" : "John Smith",
        "cf_txt1__c" : "1000001",
        "cf_txt2__c" : "2014-11-01",
        "currency" : "USD",
        "journalEntryDate" : "2014-09-09",
        "journalEntryItems" : [ {
          "accountingCodeName" : "Accounts Receivable",
          "accountingCodeType" : "Deferred Revenue",
          "amount" : "400.9",
          "homeCurrencyAmount" : "801.8",
          "type" : "Credit"
        }, {
          "accountingCodeName" : "Subscription Revenue",
          "accountingCodeType" : "Sales Revenue",
          "amount" : "400.9",
          "homeCurrencyAmount" : "801.8",
          "type" : "Debit"
        } ],
        "notes" : "my account",
        "segments" : [ {
          "segmentName" : "billToCountry",
          "segmentValue" : "United States"
        }, {
          "segmentName" : "billToState",
          "segmentValue" : "California"
        } ],
        "transferredToAccounting" : "No"
      }
    },
    "POSTJournalRunResponseType" : {
      "type" : "object",
      "properties" : {
        "journalRunNumber" : {
          "type" : "string",
          "description" : "Journal run number.\n"
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        }
      }
    },
    "POSTJournalRunTransactionType" : {
      "type" : "object",
      "required" : [ "type" ],
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "Transaction type. \n\nThe transaction types are:\n* Invoice Item\n* Taxation Item\n* Invoice Item Adjustment (Invoice)\n* Invoice Item Adjustment (Tax)\n* Invoice Adjustment (Invoice Adjustment is deprecated on Production. Zuora recommends that you use the Invoice Item Adjustment instead.)\n* Electronic Payment\n* External Payment\n* Electronic Refund\n* External Refund\n* Electronic Credit Balance Payment\n* External Credit Balance Payment\n* Electronic Credit Balance Refund\n* External Credit Balance Refund\n* Credit Balance Adjustment (Applied from Credit Balance)\n* Credit Balance Adjustment (Transferred to Credit Balance)\n* Revenue Event Item\n\nTo include all transaction types, pass in \"All\".\n"
        }
      },
      "title" : "transactionTypes"
    },
    "POSTJournalRunType" : {
      "type" : "object",
      "required" : [ "journalEntryDate", "transactionTypes" ],
      "properties" : {
        "accountingPeriodName" : {
          "type" : "string",
          "description" : "Name of the accounting period.\n\nThis field determines the target start and end dates of the journal run.\n\nRequired if you don't include 'targetStartDate' and 'targetEndDate'.\n"
        },
        "journalEntryDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date of the journal entry.\n"
        },
        "targetEndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The target end date of the journal run.\n\nIf you include 'accountingPeriodName', the 'targetEndDate' must be empty or the same as the end date of the accounting period specified in 'accountingPeriodName'.\n"
        },
        "targetStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The target start date of the journal run.\n\nRequired if you include targetEndDate.\n\nIf you include 'accountingPeriodName', the 'targetStartDate' must be empty or the same as the start date of the accounting period specified in 'accountingPeriodName'.\n"
        },
        "transactionTypes" : {
          "type" : "array",
          "description" : "Transaction types included in the journal run.\n\nYou can include one or more transaction types.\n",
          "items" : {
            "$ref" : "#/definitions/POSTJournalRunTransactionType"
          }
        }
      },
      "example" : {
        "accountingPeriodName" : "Nov-2014",
        "journalEntryDate" : "2014-11-04",
        "transactionTypes" : [ {
          "type" : "Invoice Item"
        }, {
          "type" : "Revenue Event Item"
        } ]
      }
    },
    "POSTMassUpdateResponseType" : {
      "type" : "object",
      "properties" : {
        "bulkKey" : {
          "type" : "string",
          "description" : "String of 32 characters that identifies the mass action. The bulkKey is generated before the mass action is processed. You can use the bulkKey to Get the Mass Action Result.\n"
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        }
      }
    },
    "POSTMassUpdateType" : {
      "type" : "object",
      "required" : [ "file" ],
      "properties" : {
        "file" : {
          "type" : "string",
          "description" : "File containing data about the mass action you want to perform. The file requirements are the same as when uploading a file through the Mass Updater on the Zuora UI.\n\nThe file must be a .csv file or a zipped .csv file. \n\nThe maximum file size is 4 MB.\n\nThe data in the file must be formatted according to the mass action type you want to perform. Refer to the articles listed in the `actionType` field below for the requirements of each mass action type.\n"
        },
        "params" : {
          "$ref" : "#/definitions/POSTMassUpdateType_params"
        }
      },
      "example" : "curl\n-H \"apiAccessKeyId:Username\"\n-H \"apiSecretAccessKey:Password\"\n-H \"Accept:application/json\"\n--form \"file=@CreateRevenueSchedules.csv\"\n--form \"params={actionType:CreateRevenueSchedule}\"\n-X POST https://api.zuora.com/rest/v1/bulk"
    },
    "POSTPaymentMethodResponseType" : {
      "type" : "object",
      "properties" : {
        "paymentMethodId" : {
          "type" : "string",
          "description" : "ID of the newly-created payment method.\n"
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        }
      }
    },
    "POSTPaymentMethodType" : {
      "type" : "object",
      "required" : [ "accountKey", "creditCardNumber", "creditCardType", "expirationMonth", "expirationYear" ],
      "properties" : {
        "accountKey" : {
          "type" : "string",
          "description" : "ID of the customer account to update.\n"
        },
        "cardHolderInfo" : {
          "$ref" : "#/definitions/POSTPaymentMethodType_cardHolderInfo"
        },
        "creditCardNumber" : {
          "type" : "string",
          "description" : "Credit card number, a string of up to 16 characters. This field can only be set when creating a new payment method; it cannot be queried or updated.\n"
        },
        "creditCardType" : {
          "type" : "string",
          "description" : "Possible values are: `Visa`, `MasterCard`, `AmericanExpress`, `Discover`.\n"
        },
        "defaultPaymentMethod" : {
          "type" : "boolean",
          "description" : "Specify true to make this card the default payment method; otherwise, omit this parameter to keep the current default payment method.\n"
        },
        "expirationMonth" : {
          "type" : "string",
          "description" : "Two-digit expiration month (01-12).\n"
        },
        "expirationYear" : {
          "type" : "string",
          "description" : "Four-digit expiration year.\n"
        },
        "securityCode" : {
          "type" : "string",
          "description" : "The CVV or CVV2 security code for the credit card or debit card. Only required if changing expirationMonth, expirationYear, or cardHolderName. To ensure PCI compliance, this value isn't stored and can't be queried.\n\n"
        }
      },
      "example" : {
        "accountKey" : "A00001115",
        "cardHolderInfo" : {
          "addressLine1" : "77 Fallon Glen",
          "addressLine2" : "",
          "cardHolderName" : "Bill Thiebault",
          "city" : "Fremont",
          "country" : "USA",
          "email" : "bill@testaddress.com",
          "phone" : "4155551234",
          "state" : "California",
          "zipCode" : "94020"
        },
        "creditCardNumber" : "1111222233334444",
        "creditCardType" : "Discover",
        "defaultPaymentMethod" : false,
        "expirationMonth" : "10",
        "expirationYear" : "2015",
        "securityCode" : "123"
      }
    },
    "POSTQuoteDocResponseType" : {
      "type" : "object",
      "properties" : {
        "file" : {
          "type" : "string",
          "description" : "URL of the generated quote document if the file was successfully generated.\n"
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        }
      }
    },
    "POSTQuoteDocType" : {
      "type" : "object",
      "required" : [ "documentType", "quoteId", "serverUrl", "sessionId", "templateId" ],
      "properties" : {
        "apiuser" : {
          "type" : "string",
          "description" : "If not using Salesforce locale, this API Zuora user will be used to retrieve the locale from Zuora.\n"
        },
        "documentType" : {
          "type" : "string",
          "description" : "Type of the document to generate: `PDF` or `DOC`.\n"
        },
        "locale" : {
          "type" : "string",
          "description" : "Salesforce locale value to use.\n"
        },
        "password" : {
          "type" : "string",
          "description" : ""
        },
        "quoteId" : {
          "type" : "string",
          "description" : "｜ Id of the quote。"
        },
        "sandbox" : {
          "type" : "string",
          "description" : ""
        },
        "serverUrl" : {
          "type" : "string",
          "description" : "SOAP URL used to login to Salesforce to get data. You can get the value with the following code in a Visualforce page: `{!$Api.Partner_Server_URL_100}`\n"
        },
        "sessionId" : {
          "type" : "string",
          "description" : "Salesforce session id used to log in to Salesforce to get data. You can get the value with the following code in a Visualforce page: *{!$Api.Session_ID}*\n"
        },
        "templateId" : {
          "type" : "string",
          "description" : "Id of the quote template in Zuora.\n"
        },
        "token" : {
          "type" : "string",
          "description" : ""
        },
        "useSFDCLocale" : {
          "type" : "string",
          "description" : "If using Salesforce org locale, set this to a value that is not null.\n"
        },
        "username" : {
          "type" : "string",
          "description" : ""
        },
        "zquotesMajorVersion" : {
          "type" : "string",
          "description" : "The major version number of Zuora Quotes you are generating the quote document in.\nYou can use a quote template with hierarchy sizes bigger than 3 if this is set to 7 or higher.\n"
        },
        "zquotesMinorVersion" : {
          "type" : "string",
          "description" : "The minor version number of Zuora Quotes you are generating the quote document in.\n"
        }
      },
      "example" : {
        "apiuser" : "superadmin@zuora.com",
        "documentType" : "pdf",
        "locale" : "en_US",
        "quoteId" : "a0Bi000000A71rp",
        "serverUrl" : "https://c.na10.visual.force.com/services/Soap/u/10.0/00DF00000008VnX",
        "sessionId" : "we764buuM03bkE0fmmc5zGMYp",
        "templateId" : "4028925648fdb7830148fdc1246c0003",
        "useSFDCLocale" : "1",
        "zquotesMajorVersion" : "7",
        "zquotesMinorVersion" : "0"
      }
    },
    "POSTRSASignatureResponseType" : {
      "type" : "object",
      "properties" : {
        "key" : {
          "type" : "string",
          "description" : "Public key generated for this Payment Page.\n"
        },
        "signature" : {
          "type" : "string",
          "description" : "Digital signature generated for this Payment Page.\n"
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        },
        "tenantId" : {
          "type" : "string",
          "description" : "ID of the Zuora tenant.\n"
        },
        "token" : {
          "type" : "string",
          "description" : "Token generated for this Payment Page.\n"
        }
      }
    },
    "POSTRSASignatureType" : {
      "type" : "object",
      "required" : [ "method", "pageId", "uri" ],
      "properties" : {
        "method" : {
          "type" : "string",
          "description" : "The type of the request. Set it to POST.\n"
        },
        "pageId" : {
          "type" : "string",
          "description" : "The page id of your Payment Pages 2.0 form. Click **Show Page Id** next to the Payment Page name in the Hosted Page List to retrieve the page id.\n"
        },
        "uri" : {
          "type" : "string",
          "description" : "The URL that the Payment Page will be served from. Set it to:\n\n* https://www.zuora.com/apps/PublicHostedPageLite.do if you are on the production environment.\n* https://apisandbox.zuora.com/apps/PublicHostedPageLite.do if you are on the API Sandbox environmentdbox.zuora.com/apps/PublicHostedPageLite.do if you are on the API Sandbox environment.\n"
        }
      },
      "example" : {
        "method" : "POST",
        "pageId" : "2c92c0f855e2b4630155ec9e6a1b6eec",
        "uri" : "https://apisandbox.zuora.com/apps/PublicHostedPageLite.do"
      }
    },
    "POSTRevenueScheduleByChargeResponseType" : {
      "type" : "object",
      "properties" : {
        "revenueScheduleNumber" : {
          "type" : "string",
          "description" : "Revenue schedule number. The revenue schedule number is always prefixed with \"RS\", for example, \"RS-00000001\".\n"
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        }
      }
    },
    "POSTRevenueScheduleByChargeType" : {
      "type" : "object",
      "required" : [ "amount", "revenueScheduleDate" ],
      "properties" : {
        "amount" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "The revenue schedule amount, which is the sum of all revenue items. This field cannot be null and must be formatted based on the currency, such as `JPY 30` or `USD 30.15`. Test out the currency to ensure you are using the proper formatting otherwise, the response will fail and this error message is returned: `Allocation amount with wrong decimal places.`\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "deferredRevenueAccountingCode" : {
          "type" : "string",
          "description" : "The accounting code for deferred revenue, such as Monthly Recurring Liability. Required only when `overrideChargeAccountingCodes` is `true`. Otherwise this value is ignored.\n"
        },
        "deferredRevenueAccountingCodeType" : {
          "type" : "string",
          "description" : "The type associated with the deferred revenue accounting code, such as Deferred Revenue. Required only when `overrideChargeAccountingCodes` is `true`. Otherwise this value is ignored.\n"
        },
        "notes" : {
          "type" : "string",
          "description" : "Additional information about this record.\n\nCharacter Limit: 2,000\n"
        },
        "overrideChargeAccountingCodes" : {
          "type" : "boolean",
          "description" : "When overriding accounting codes from a charge, `recognizedRevenueAccountingCode` and `deferredRevenue AccountingCode` must be in the request body and can have empty value.\n\n`True` or `False`. A `false` value will be used if this field is empty in the request body.\n"
        },
        "recognizedRevenueAccountingCode" : {
          "type" : "string",
          "description" : "The accounting code for recognized revenue, such as Monthly Recurring Charges or Overage Charges. Required only when `overrideChargeAccountingCodes` is `true`. Otherwise the value is ignored.\n"
        },
        "recognizedRevenueAccountingCodeType" : {
          "type" : "string",
          "description" : "The type associated with the recognized revenue accounting code, such as Sales Revenue or Sales Discount. Required only when `overrideChargeAccountingCodes` is `true`. Otherwise this value is ignored.\n"
        },
        "referenceId" : {
          "type" : "string",
          "description" : "Reference ID is used only in the custom unlimited rule to create a revenue schedule. In this scenario, the revenue schedule is not linked to an invoice item or invoice item adjustment.\n\nCharacter Limit: 60\n"
        },
        "revenueDistributions" : {
          "type" : "array",
          "description" : "An array of revenue distributions. Represents how you want to distribute revenue for this revenue schedule. You can distribute revenue into a maximum of 250 accounting periods with one revenue schedule.\n\nThe sum of the newAmount fields must be equal to the amount field.\n",
          "items" : {
            "$ref" : "#/definitions/POSTDistributionItemType"
          }
        },
        "revenueEvent" : {
          "$ref" : "#/definitions/POSTRevenueScheduleByChargeType_revenueEvent"
        },
        "revenueScheduleDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The effective date of the revenue schedule. For example, the revenue schedule date for bookings-based revenue recognition is typically set to the order date or contract date.\n\nThe date cannot be in a closed accounting period. The date must be in the `YYYY-MM-DD` format.\n"
        }
      },
      "example" : {
        "amount" : "300",
        "cf_phases__c" : "Phase 1",
        "cf_project__c" : "project A",
        "deferredRevenueAccountingCode" : "Deferred Revenue",
        "deferredRevenueAccountingCodeType" : "Deferred Revenue",
        "overrideChargeAccountingCodes" : "true",
        "recognizedRevenueAccountingCode" : "Subscription Revenue",
        "recognizedRevenueAccountingCodeType" : "Sales Revenue",
        "referenceId" : "rs transaction ref",
        "revenueDistributions" : [ {
          "accountingPeriodName" : "Jan'2013",
          "newAmount" : "100"
        }, {
          "accountingPeriodName" : "Feb'2013",
          "newAmount" : "200"
        } ],
        "revenueEvent" : {
          "cf_phases__c" : "Phase 1",
          "cf_project__c" : "project A",
          "eventType" : "Revenue Distributed",
          "eventTypeSystemId" : "1111111",
          "notes" : "Manually distribute revenue by usage"
        },
        "revenueScheduleDate" : "2013-01-01"
      }
    },
    "POSTRevenueScheduleByDateRangeType" : {
      "type" : "object",
      "required" : [ "recognitionEnd", "recognitionStart" ],
      "properties" : {
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "distributionType" : {
          "type" : "string",
          "description" : "How you want to distribute the revenue. The distribution types are: \n* Daily Distribution: Distributes revenue evenly across each day between the recognitionStart and recognitionEnd dates.\n* Monthly Distribution (Back Load): Back loads the revenue so you distribute the monthly amount in the partial month at the end only.\n* Monthly Distribution (Front Load): Front loads the revenue so you distribute the monthly amount in the partial month at the beginning only.\n* Monthly Distribution (Proration by Days): Splits the revenue amount between the two partial months.\n\n**Note:** To use any of the Monthly Distribution options, you must have the \"Monthly recognition over time\" model enabled in **Settings > Finance > Manage Revenue Recognition Models**. \n"
        },
        "notes" : {
          "type" : "string",
          "description" : "Additional information about this record.\n"
        },
        "recognitionEnd" : {
          "type" : "string",
          "format" : "date",
          "description" : "The end date of a recognition period in `YYYY-MM-DD` format. \n\nThe maximum difference of the `recognitionStart` and `recognitionEnd` date fields is equal to 250 multiplied by the length of an accounting period.\n"
        },
        "recognitionStart" : {
          "type" : "string",
          "format" : "date",
          "description" : "The start date of a recognition period in `YYYY-MM-DD` format.\n\nIf there is a closed accounting period between the `recognitionStart` and `recognitionEnd` dates, the revenue that would be placed in the closed accounting period is instead placed in the next open accounting period.\n"
        },
        "revenueEvent" : {
          "$ref" : "#/definitions/POSTRevenueScheduleByDateRangeType_revenueEvent"
        }
      },
      "example" : {
        "customField__c" : null,
        "distributionType" : "Daily distribution",
        "notes" : "Manually distribute revenue by usage",
        "recognitionEnd" : "2016-12-31",
        "recognitionStart" : "2016-12-1",
        "revenueEvent" : {
          "customField__c" : null,
          "eventType" : "Revenue Distributed",
          "eventTypeSystemId" : "RevenueDistributed__z",
          "notes" : ""
        }
      }
    },
    "POSTRevenueScheduleByTransactionResponseType" : {
      "type" : "object",
      "properties" : {
        "revenueScheduleNumber" : {
          "type" : "string",
          "description" : "Revenue schedule number. The revenue schedule number is always prefixed with \"RS\", for example, \"RS-00000001\".\n"
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        }
      }
    },
    "POSTRevenueScheduleByTransactionType" : {
      "type" : "object",
      "properties" : {
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "notes" : {
          "type" : "string",
          "description" : "Additional information about this record.\n\nCharacter Limit: 2,000\n"
        },
        "revenueDistributions" : {
          "type" : "array",
          "description" : "An array of revenue distributions. Represents how you want to distribute revenue for this revenue schedule. You can distribute revenue into a maximum of 250 accounting periods with one revenue schedule.\n\nThe sum of newAmounts must equal the the Charge Amount of the specified Invoice Item.\n",
          "items" : {
            "$ref" : "#/definitions/POSTDistributionItemType"
          }
        },
        "revenueEvent" : {
          "$ref" : "#/definitions/POSTRevenueScheduleByTransactionType_revenueEvent"
        }
      },
      "example" : {
        "revenueDistributions" : [ {
          "accountingPeriodName" : "Jan '16",
          "newAmount" : "20"
        }, {
          "accountingPeriodName" : "Open-Ended",
          "newAmount" : "30"
        } ],
        "revenueEvent" : {
          "eventType" : "Revenue Distributed",
          "eventTypeSystemId" : "RevenueDistributed__z",
          "notes" : "My notes"
        }
      }
    },
    "POSTScCreateType" : {
      "type" : "object",
      "required" : [ "productRatePlanChargeId", "quantity" ],
      "properties" : {
        "applyDiscountTo" : {
          "type" : "string",
          "description" : "Specifies the type of charges that you want a specific discount to apply to.\n\nValues:\n\n* `ONETIME`\n* `RECURRING`\n* `USAGE`\n* `ONETIMERECURRING`\n* `ONETIMEUSAGE`\n* `RECURRINGUSAGE`\n* `ONETIMERECURRINGUSAGE`\n"
        },
        "billCycleDay" : {
          "type" : "string",
          "description" : "Sets the bill cycle day (BCD) for the charge. The BCD determines which day of the month the customer is billed.\n\nValues: `1`-`31`\n"
        },
        "billCycleType" : {
          "type" : "string",
          "description" : "Specifies how to determine the billing day for the charge. When this field is set to `SpecificDayOfMonth`, set the `BillCycleDay` field. When this field is set to `SpecificDayOfWeek`, set the `weeklyBillCycleDay` field.\n\nValues:\n\n* `DefaultFromCustomer`\n* `SpecificDayOfMonth`\n* `SubscriptionStartDay`\n* `ChargeTriggerDay`\n* `SpecificDayOfWeek`\n"
        },
        "billingPeriod" : {
          "type" : "string",
          "description" : "Billing period for the charge. The start day of the billing period is also called the bill cycle day (BCD).\n\nValues:\n\n* `Month`\n* `Quarter`\n* `Semi_Annual`\n* `Annual`\n* `Eighteen_Months`\n* `Two_Years`\n* `Three_Years`\n* `Five_Years`\n* `Specific_Months`\n* `Subscription_Term`\n* `Week`\n* `Specific_Weeks`\n"
        },
        "billingPeriodAlignment" : {
          "type" : "string",
          "description" : "Aligns charges within the same subscription if multiple charges begin on different dates.\n\nValues:\n\n* `AlignToCharge`\n* `AlignToSubscriptionStart`\n* `AlignToTermStart`\n"
        },
        "billingTiming" : {
          "type" : "string",
          "description" : "Billing timing for the charge for recurring charge types. Not avaliable for one time, usage, and discount charges.\n\nValues:\n\n* `IN_ADVANCE` (default)\n* `IN_ARREARS`\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the charge.\n"
        },
        "discountAmount" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Specifies the amount of fixed-amount discount.\n"
        },
        "discountLevel" : {
          "type" : "string",
          "description" : "Specifies if the discount applies to the product rate plan only, the entire subscription, or to any activity in the account.\n\nValues:\n\n* `rateplan`\n* `subscription`\n* `account`\n"
        },
        "discountPercentage" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Percentage of discount for a percentage discount. \n"
        },
        "endDateCondition" : {
          "type" : "string",
          "description" : "Defines when the charge ends after the charge trigger date. If the subscription ends before the charge end date, the charge ends when the subscription ends. But if the subscription end date is subsequently changed through a Renewal, or Terms and Conditions amendment, the charge will end on the charge end date.\n\nValues:\n\n* `Subscription_End`\n* `Fixed_Period`\n* `Specific_End_Date`\n"
        },
        "includedUnits" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Specifies the number of units in the base set of units for this charge. Must be >=`0`.\n"
        },
        "listPriceBase" : {
          "type" : "string",
          "description" : "The list price base for the product rate plan charge.\n\nValues:\n\n* `Per_Billing_Period`\n* `Per_Month`\n* `Per_Week`\n"
        },
        "number" : {
          "type" : "string",
          "description" : "Unique number that identifies the charge. Max 50 characters. System-generated if not provided.\n"
        },
        "numberOfPeriods" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Specifies the number of periods to use when calculating charges in an overage smoothing charge model.\n"
        },
        "overagePrice" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Price for units over the allowed amount.\n"
        },
        "overageUnusedUnitsCreditOption" : {
          "type" : "string",
          "description" : "Determines whether to credit the customer with unused units of usage.\n\nValues:\n\n* `NoCredit`\n* `CreditBySpecificRate`\n"
        },
        "price" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Price for units in the subscription rate plan.\n"
        },
        "priceChangeOption" : {
          "type" : "string",
          "description" : "Applies an automatic price change when a termed subscription is renewed. The Billing Admin setting **Enable Automatic Price Change When Subscriptions are Renewed?** must be set to Yes to use this field.\nValues:\n\n* `NoChange` (default)\n* `SpecificPercentageValue`\n* `UseLatestProductCatalogPricing`\n"
        },
        "priceIncreasePercentage" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Specifies the percentage to increase or decrease the price of a termed subscription's renewal. Required if you set the `PriceChangeOption` field to `SpecificPercentageValue`. \n\nValue must be a decimal between `-100` and `100`.\n"
        },
        "productRatePlanChargeId" : {
          "type" : "string",
          "description" : "ID of a product rate-plan charge for this subscription.\n"
        },
        "quantity" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Number of units. Must be a decimal >=`0`.\n"
        },
        "ratingGroup" : {
          "type" : "string",
          "description" : "Specifies a rating group based on which usage records are rated. **Note:** This feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).\n\nValues:\n\n* `ByBillingPeriod` (default): The rating is based on all the usages in a billing period.       \n* `ByUsageStartDate`: The rating is based on all the usages on the same usage start date. \n* `ByUsageRecord`: The rating is based on each usage record.\n* `ByUsageUpload`: The rating is based on all the usages in a uploaded usage file (.xls or .csv).\n\n**Note:**\n\nThe `ByBillingPeriod` value can be applied for all charge models.\nThe `ByUsageStartDate`, `ByUsageRecord`, and `ByUsageUpload` values can only be applied for per unit, volume pricing, and tiered pricing charge models.\nUse this field only for Usage charges. One-Time Charges and Recurring Charges return `NULL`.\n"
        },
        "specificBillingPeriod" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Specifies the number of month or week for the charges billing period. Required if you set the value of the `billingPeriod` field to `Specific_Months` or `Specific_Weeks`.\n"
        },
        "specificEndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Defines when the charge ends after the charge trigger date.\n\n**note:**\n\n* This field is only applicable when the `endDateCondition` field is set to `Specific_End_Date`.\n\n* If the subscription ends before the specific end date, the charge ends when the subscription ends. But if the subscription end date is subsequently changed through a Renewal, or Terms and Conditions amendment, the charge will end on the specific end date.\n"
        },
        "tiers" : {
          "type" : "array",
          "description" : "Container for Volume, Tiered, or Tiered with Overage charge models. Supports the following charge types:\n\n* One-time\n* Recurring\n* Usage-based\n",
          "items" : {
            "$ref" : "#/definitions/POSTTierType"
          }
        },
        "triggerDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Specifies when to start billing the customer for the charge. Required if the `triggerEvent` field is set to `USD`.\n"
        },
        "triggerEvent" : {
          "type" : "string",
          "description" : "Specifies when to start billing the customer for the charge.\n\nValues:\n\n* `UCE`\n* `USA`\n* `UCA`\n* `USD`\n"
        },
        "unusedUnitsCreditRates" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Specifies the rate to credit a customer for unused units of usage. This field applies only for overage charge models when the `OverageUnusedUnitsCreditOption` field is set to `CreditBySpecificRate`.\n"
        },
        "upToPeriods" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Specifies the length of the period during which the charge is active. If this period ends before the subscription ends, the charge ends when this period ends.\n\n**Note:** You must use this field together with the `upToPeriodsType` field to specify the time period.\n\n* This field is applicable only when the `endDateCondition` field is set to `Fixed_Period`. \n* If the subscription end date is subsequently changed through a Renewal, or Terms and Conditions amendment, the charge end date will change accordingly up to the original period end.\n"
        },
        "upToPeriodsType" : {
          "type" : "string",
          "description" : "\nThe period type used to define when the charge ends. \n\nValues:\n\n* `Billing_Periods`\n* `Days`\n* `Weeks`\n* `Months`\n* `Years`\n\nYou must use this field together with the `upToPeriods` field to specify the time period.\n\nThis field is applicable only when the `endDateCondition` field is set to `Fixed_Period`. \n"
        },
        "weeklyBillCycleDay" : {
          "type" : "string",
          "description" : "Specifies which day of the week is the bill cycle day (BCD) for the charge. \n\nValues:\n\n* `Sunday`\n* `Monday`\n* `Tuesday`\n* `Wednesday`\n* `Thursday`\n* `Friday`\n* `Saturday`\n"
        }
      },
      "title" : "chargeOverrides"
    },
    "POSTSrpCreateType" : {
      "type" : "object",
      "required" : [ "productRatePlanId" ],
      "properties" : {
        "chargeOverrides" : {
          "type" : "array",
          "description" : "This optional container is used to override the quantity of one or more product rate plan charges for this subscription.\n",
          "items" : {
            "$ref" : "#/definitions/POSTScCreateType"
          }
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "productRatePlanId" : {
          "type" : "string",
          "description" : "ID of a product rate plan for this subscription.\n"
        }
      },
      "title" : "subscribeToRatePlans"
    },
    "POSTSubscriptionCancellationResponseType" : {
      "type" : "object",
      "properties" : {
        "cancelledDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date that the subscription was canceled.\n"
        },
        "invoiceId" : {
          "type" : "string",
          "description" : "ID of the invoice, if one is generated.\n"
        },
        "paidAmount" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Amount paid.\n"
        },
        "paymentId" : {
          "type" : "string",
          "description" : "ID of the payment, if a payment is collected.\n"
        },
        "subscriptionId" : {
          "type" : "string",
          "description" : "The subscription ID.\n"
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        },
        "totalDeltaMrr" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Change in the subscription monthly recurring revenue as a result of the update.\n"
        },
        "totalDeltaTcv" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Change in the total contracted value of the subscription as a result of the update.\n"
        }
      }
    },
    "POSTSubscriptionCancellationType" : {
      "type" : "object",
      "required" : [ "cancellationPolicy", "invoiceCollect" ],
      "properties" : {
        "OpportunityCloseDate_QT" : {
          "type" : "string",
          "description" : "The closing date of the Opportunity. This field is populated when the subscription originates from Zuora Quotes.\n\nThis field is used only for reporting subscription metrics. \n\n"
        },
        "OpportunityName_QT" : {
          "type" : "string",
          "description" : "The unique identifier of the Opportunity. This field is populated when the subscription originates from Zuora Quotes.\n\nThis field is used only for reporting subscription metrics. \n\n"
        },
        "QuoteBusinessType_QT" : {
          "type" : "string",
          "description" : "The specific identifier for the type of business transaction the Quote represents such as New, Upsell, Downsell, Renewal, or Churn. This field is populated when the subscription originates from Zuora Quotes.\n\nThis field is used only for reporting subscription metrics. \n\n"
        },
        "QuoteNumber_QT" : {
          "type" : "string",
          "description" : "The unique identifier of the Quote. This field is populated when the subscription originates from Zuora Quotes.\n\nThis field is used only for reporting subscription metrics. \n\n"
        },
        "QuoteType_QT" : {
          "type" : "string",
          "description" : "The Quote type that represents the subscription lifecycle stage such as New, Amendment, Renew or Cancel. This field is populated when the subscription originates from Zuora Quotes.\n\n"
        },
        "applyCreditBalance" : {
          "type" : "boolean",
          "description" : "Applies a credit balance to an invoice.\n\nIf the value is `true`, the credit balance is applied to the invoice. If the value is `false`, no action is taken.\n\nPrerequisite: invoice must be true. \n\n**Note:** If you are using the field `invoiceCollect` rather than the field `invoice`, the `invoiceCollect` value must be `true`.\n\nTo view the credit balance adjustment, retrieve the details of the invoice using the Get Invoices method.\n"
        },
        "cancellationEffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date the cancellation takes effect, in the format yyyy-mm-dd.  Use only if `cancellationPolicy` is `SpecificDate`. Should not be earlier than the subscription contract-effective date, later than the subscription term-end date, or within a period for which the customer has been invoiced.\n"
        },
        "cancellationPolicy" : {
          "type" : "string",
          "description" : "Cancellation method. Possible values are: `EndOfCurrentTerm`, `EndOfLastInvoicePeriod`, `SpecificDate`. If using `SpecificDate`, the `cancellationEffectiveDate` field is required.\n"
        },
        "collect" : {
          "type" : "boolean",
          "description" : "Collects an automatic payment for a subscription. The collection generated in this operation is only for this subscription, not for the entire customer account.\n\nIf the value is `true`, the automatic payment is collected. If the value is `false`, no action is taken.\n\nThe default value is `false`.\n\nThis field is in Zuora REST API version control. Supported minor versions are 196.0 or later. To use this field in the method, you must set the `zuora-version` parameter to the minor version number in the request header. \n\nPrerequisite: `invoice` must be `true`. \n"
        },
        "invoice" : {
          "type" : "boolean",
          "description" : "Creates an invoice for a subscription. The invoice generated in this operation is only for this subscription, not for the entire customer account.\n\nIf the value is `true`, an invoice is created. If the value is `false`, no action is taken.\n\nThe default value is `false`. \n\nThis field is in Zuora REST API version control. Supported minor versions are 196.0 or later. To use this field in the method, you must set the `zuora-version` parameter to the minor version number in the request header. \n"
        },
        "invoiceCollect" : {
          "type" : "boolean",
          "description" : "This field has been replaced by the `invoice` field and the `collect` field. `invoiceCollect` is available only for backward compatibility.\n\nIf `true`, an invoice is generated and payment automatically collected. Default is `false`.\n\nThis field is in Zuora REST API version control. Supported minor versions are 186.0, 187.0, 188.0, 189.0, and 196.0.\n"
        },
        "invoiceTargetDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "If an invoice is to be generated, the date through which to calculate the charges, as yyyy-mm-dd\n"
        }
      },
      "example" : {
        "cancellationEffectiveDate" : "2019-05-31",
        "cancellationPolicy" : "SpecificDate",
        "collect" : false,
        "invoice" : true
      }
    },
    "POSTSubscriptionPreviewInvoiceItemsType" : {
      "type" : "object",
      "properties" : {
        "chargeAmount" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "The amount of the charge. This amount doesn't include taxes unless the charge's tax mode is inclusive.\n"
        },
        "chargeDescription" : {
          "type" : "string",
          "description" : "Description of the charge.\n"
        },
        "chargeName" : {
          "type" : "string",
          "description" : "Name of the charge.\n"
        },
        "productName" : {
          "type" : "string",
          "description" : "Name of the product associated with this item.\n"
        },
        "productRatePlanChargeId" : {
          "type" : "string",
          "description" : "ID of the product rate plan charge.\n"
        },
        "quantity" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Quantity of this item.\n"
        },
        "serviceEndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "End date of the service period for this item, i.e., the last day of the period, as yyyy-mm-dd.\n"
        },
        "serviceStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Service start date as yyyy-mm-dd. If the charge is a one-time fee, this is the date of that charge.\n"
        },
        "unitOfMeasure" : {
          "type" : "string",
          "description" : ""
        }
      },
      "title" : "invoiceItems"
    },
    "POSTSubscriptionPreviewResponseType" : {
      "type" : "object",
      "properties" : {
        "amount" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Invoice amount.\n"
        },
        "amountWithoutTax" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Invoice amount minus tax.\n"
        },
        "chargeMetrics" : {
          "$ref" : "#/definitions/POSTSubscriptionPreviewResponseType_chargeMetrics"
        },
        "contractedMrr" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Monthly recurring revenue of the subscription.\n"
        },
        "invoiceItems" : {
          "type" : "array",
          "description" : "Container for invoice items.\n",
          "items" : {
            "$ref" : "#/definitions/POSTSubscriptionPreviewInvoiceItemsType"
          }
        },
        "invoiceTargetDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date through which charges are calculated on the invoice, as yyyy-mm-dd.\n"
        },
        "previewChargeMetricsResponse" : {
          "type" : "string",
          "description" : ""
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        },
        "taxAmount" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Tax amount on the invoice.\n"
        },
        "totalContractedValue" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Total contracted value of the subscription.\n"
        }
      }
    },
    "POSTSubscriptionPreviewType" : {
      "type" : "object",
      "required" : [ "contractEffectiveDate", "subscribeToRatePlans", "termType" ],
      "properties" : {
        "OpportunityCloseDate_QT" : {
          "type" : "string",
          "description" : "The closing date of the Opportunity. This field is populated when the subscription originates from Zuora Quotes.\n\nThis field is used only for reporting subscription metrics. \n\n"
        },
        "OpportunityName_QT" : {
          "type" : "string",
          "description" : "The unique identifier of the Opportunity. This field is populated when the subscription originates from Zuora Quotes.\n\nThis field is used only for reporting subscription metrics. \n\n"
        },
        "QuoteBusinessType_QT" : {
          "type" : "string",
          "description" : "The specific identifier for the type of business transaction the Quote represents such as New, Upsell, Downsell, Renewal, or Churn. This field is populated when the subscription originates from Zuora Quotes.\n\nThis field is used only for reporting subscription metrics. \n\n"
        },
        "QuoteNumber_QT" : {
          "type" : "string",
          "description" : "The unique identifier of the Quote. This field is populated when the subscription originates from Zuora Quotes.\n\nThis field is used only for reporting subscription metrics. \n\n"
        },
        "QuoteType_QT" : {
          "type" : "string",
          "description" : "The Quote type that represents the subscription lifecycle stage such as New, Amendment, Renew or Cancel. This field is populated when the subscription originates from Zuora Quotes.\n\nThis field is used only for reporting subscription metrics. \n\n"
        },
        "accountKey" : {
          "type" : "string",
          "description" : "\nCustomer account number or ID.\n\nYou must specify the account information either in this field or in the `previewAccountInfo` field with the following conditions:\n         \n* If you already have a customer account, specify the account number or ID in this field.\n* If you do not have a customer account, provide account information in the `previewAccountInfo` field.\n"
        },
        "contractEffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Effective contract date for this subscription, as yyyy-mm-dd.\n"
        },
        "customerAcceptanceDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date on which the services or products within a subscription have been accepted by the customer, as yyyy-mm-dd.\n\nDefault value is dependent on the value of other fields. See **Notes** section for more details.\n"
        },
        "includeExistingDraftInvoiceItems" : {
          "type" : "boolean",
          "description" : "Specifies whether to include draft invoice items in subscription previews.\n\nValues: \n\n* `true` (default). Includes draft invoice items in amendment previews. \n* `false`. Excludes draft invoice items in amendment previews.\n"
        },
        "initialTerm" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Duration of the first term of the subscription, in whole months. Default is `0`. If `termType` is `TERMED`, then this field is required, and the value must be greater than `0`. If `termType` is `EVERGREEN`, this field is ignored.\n"
        },
        "initialTermPeriodType" : {
          "type" : "string",
          "description" : "The period type of the initial term. \n\nSupported values are:\n\n* `Month`\n* `Year`\n* `Day`\n* `Week`\n"
        },
        "invoiceOwnerAccountKey" : {
          "type" : "string",
          "description" : "Invoice owner account number or ID.\n\n**Note:** This feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).\n"
        },
        "invoiceTargetDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date through which to calculate charges if an invoice is generated, as yyyy-mm-dd. Default is current date.\n"
        },
        "notes" : {
          "type" : "string",
          "description" : "String of up to 500 characters."
        },
        "previewAccountInfo" : {
          "$ref" : "#/definitions/POSTSubscriptionPreviewType_previewAccountInfo"
        },
        "previewType" : {
          "type" : "string",
          "description" : "The type of preview you will receive. The possible values are `invoiceItem`, `chargeMetrics`, or `InvoiceItemChargeMetrics`. The default is `invoiceItem`.\n"
        },
        "serviceActivationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date on which the services or products within a subscription have been activated and access has been provided to the customer, as yyyy-mm-dd.\n\nDefault value is dependent on the value of other fields. See **Notes** section for more details.\n"
        },
        "subscribeToRatePlans" : {
          "type" : "array",
          "description" : "Container for one or more rate plans for this subscription.\n",
          "items" : {
            "$ref" : "#/definitions/POSTSrpCreateType"
          }
        },
        "termStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date on which the subscription term begins, as yyyy-mm-dd. If this is a renewal subscription, this date is different from the subscription start date.\n"
        },
        "termType" : {
          "type" : "string",
          "description" : "Possible values are: `TERMED`, `EVERGREEN`.\n"
        }
      },
      "example" : {
        "contractEffectiveDate" : "2013-1-15",
        "initialTerm" : 12,
        "initialTermPeriodType" : "Week",
        "invoiceTargetDate" : "2013-12-31",
        "previewAccountInfo" : {
          "billCycleDay" : 31,
          "billToContact" : {
            "city" : "Walnut Creek",
            "country" : "United States",
            "county" : "Contra Consta",
            "state" : "California",
            "zipCode" : "94549"
          },
          "currency" : "USD"
        },
        "subscribeToRatePlans" : [ {
          "chargeOverrides" : [ {
            "productRatePlanChargeId" : "ff8080811ca15d19011cddad8c953b53",
            "quantity" : 100
          } ],
          "productRatePlanId" : "ff8080811ca15d19011cdda9b0ad3b51"
        } ],
        "termType" : "TERMED"
      }
    },
    "POSTSubscriptionResponseType" : {
      "type" : "object",
      "properties" : {
        "contractedMrr" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Monthly recurring revenue of the subscription.\n"
        },
        "invoiceId" : {
          "type" : "string",
          "description" : "Invoice ID, if an invoice is generated during the subscription process.\n"
        },
        "paidAmount" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Payment amount, if a payment is collected.\n"
        },
        "paymentId" : {
          "type" : "string",
          "description" : "Payment ID, if a payment is collected.\n"
        },
        "subscriptionId" : {
          "type" : "string",
          "description" : ""
        },
        "subscriptionNumber" : {
          "type" : "string",
          "description" : ""
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        },
        "totalContractedValue" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Total contracted value of the subscription.\n"
        }
      }
    },
    "POSTSubscriptionType" : {
      "type" : "object",
      "required" : [ "accountKey", "contractEffectiveDate", "subscribeToRatePlans", "termType" ],
      "properties" : {
        "CpqBundleJsonId__QT" : {
          "type" : "string",
          "description" : ""
        },
        "OpportunityCloseDate__QT" : {
          "type" : "string",
          "description" : ""
        },
        "OpportunityName__QT" : {
          "type" : "string",
          "description" : ""
        },
        "QuoteBusinessType__QT" : {
          "type" : "string",
          "description" : ""
        },
        "QuoteNumber__QT" : {
          "type" : "string",
          "description" : ""
        },
        "QuoteType__QT" : {
          "type" : "string",
          "description" : ""
        },
        "accountKey" : {
          "type" : "string",
          "description" : "Customer account number or ID\n"
        },
        "applyCreditBalance" : {
          "type" : "boolean",
          "description" : "Applies a credit balance to an invoice.\n\nIf the value is `true`, the credit balance is applied to the invoice. If the value is `false`, no action is taken.\n\n**Prerequisite:** `invoice` must be `true`. \n\n**Note:** If you are using the field `invoiceCollect` rather than the field invoice, the `invoiceCollect` value must be `true`.\n\nTo view the credit balance adjustment, retrieve the details of the invoice using the Get Invoices.\n"
        },
        "autoRenew" : {
          "type" : "boolean",
          "description" : "If `true`, this subscription automatically renews at the end of the subscription term. Default is `false`.\n"
        },
        "collect" : {
          "type" : "boolean",
          "description" : "Collects an automatic payment for a subscription. The collection generated in this operation is only for this subscription, not for the entire customer account.\nIf the value is `true`, the automatic payment is collected. If the value is `false`, no action is taken.\n\nThe default value is `true`.\n\n**Prerequisite:** The invoice field must be `true`. \n\n**Note:** This field is in Zuora REST API version control. Supported minor versions are 196.0 or later. To use this field in the method, you must set the `zuora-version` field to the minor version number in the request header.\n"
        },
        "contractEffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Effective contract date for this subscription, as yyyy-mm-dd\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "customerAcceptanceDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date on which the services or products within a subscription have been accepted by the customer, as yyyy-mm-dd.\n\nDefault value is dependent on the value of other fields. See **Notes** section for more details.\n"
        },
        "initialTerm" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The length of the period for the first subscription term. Default is `0`. If `termType` is `TERMED`, then this field is required, and the value must be greater than `0`. If `termType` is `EVERGREEN`, this field is ignored.\n"
        },
        "initialTermPeriodType" : {
          "type" : "string",
          "description" : "The period type for the first subscription term.\n\nThis field is used with the `InitialTerm` field to specify the initial subscription term.\n\nValues are:\n\n* `Month` (default)\n* `Year`\n* `Day`\n* `Week`\n"
        },
        "invoice" : {
          "type" : "boolean",
          "description" : "Creates an invoice for a subscription. The invoice generated in this operation is only for this subscription, not for the entire customer account.\n\nIf the value is `true`, an invoice is created. If the value is `false`, no action is taken. The default value is `true`. \n\nThis field is in Zuora REST API version control. Supported minor versions are `196.0` or later. To use this field in the method, you must set the zuora-version parameter to the minor version number in the request header. \n"
        },
        "invoiceCollect" : {
          "type" : "boolean",
          "description" : "**Note:** This field has been replaced by the invoice field and the collect field. invoiceCollect is available only for backward compatibility.\n\nIf `true` (default), an invoice is generated and payment collected automatically during the subscription process. If `false`, no invoicing or payment takes place. The invoice generated in this operation is only for this subscription, not for the entire customer account.\n\nThis field is in Zuora REST API version control. Supported minor versions are `186.0`, `187.0`, `188.0`, `189.0`, and `196.0`.\n"
        },
        "invoiceOwnerAccountKey" : {
          "type" : "string",
          "description" : "Invoice owner account number or ID.\n\n**Note:** This feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).\n"
        },
        "invoiceSeparately" : {
          "type" : "boolean",
          "description" : "Separates a single subscription from other subscriptions and invoices the charge independently. \n\nIf the value is `true`, the subscription is billed separately from other subscriptions. If the value is `false`, the subscription is included with other subscriptions in the account invoice.\n\nThe default value is `false`.\n\nPrerequisite: The default subscription setting Enable Subscriptions to be Invoiced Separately must be set to Yes.\n"
        },
        "invoiceTargetDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date through which to calculate charges if an invoice is generated, as yyyy-mm-dd. Default is current date.\n"
        },
        "notes" : {
          "type" : "string",
          "description" : "String of up to 500 characters.\n"
        },
        "renewalSetting" : {
          "type" : "string",
          "description" : "Specifies whether a termed subscription will remain termed or change to evergreen when it is renewed.\n\nValues:\n\n* `RENEW_WITH_SPECIFIC_TERM` (default)\n* `RENEW_TO_EVERGREEN`\n"
        },
        "renewalTerm" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The length of the period for the subscription renewal term. Default is `0`.\n"
        },
        "renewalTermPeriodType" : {
          "type" : "string",
          "description" : "The period type for the subscription renewal term.\n\nThis field is used with the `renewalTerm` field to specify the subscription renewal term.\n\nValues are:\n\n* `Month` (default)\n* `Year`\n* `Day`\n* `Week`\n"
        },
        "serviceActivationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date on which the services or products within a subscription have been activated and access has been provided to the customer, as yyyy-mm-dd.\n\nDefault value is dependent on the value of other fields. See **Notes** section for more details.\n"
        },
        "subscribeToRatePlans" : {
          "type" : "array",
          "description" : "Container for one or more rate plans for this subscription.\n",
          "items" : {
            "$ref" : "#/definitions/POSTSrpCreateType"
          }
        },
        "subscriptionNumber" : {
          "type" : "string",
          "description" : "Subscription Number. The value can be up to 1000 characters.\n\nIf you do not specify a subscription number when creating a subscription, Zuora will generate a subscription number automatically.\n\nIf the account is created successfully, the subscription number is returned in the `subscriptionNumber` response field.\n"
        },
        "termStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date on which the subscription term begins, as yyyy-mm-dd. If this is a renewal subscription, this date is different from the subscription start date.\n"
        },
        "termType" : {
          "type" : "string",
          "description" : "Possible values are: `TERMED`, `EVERGREEN`.\n"
        }
      },
      "example" : {
        "accountKey" : "A00001115",
        "autoRenew" : true,
        "collect" : false,
        "contractEffectiveDate" : "2015-02-1",
        "initialTerm" : "12",
        "initialTermPeriodType" : "Week",
        "invoice" : true,
        "invoiceTargetDate" : "2015-12-31",
        "myCustomField__c" : "test",
        "notes" : "Test POST subscription from z-ruby-sdk",
        "renewalTerm" : "3",
        "renewalTermPeriodType" : "Week",
        "subscribeToRatePlans" : [ {
          "chargeOverrides" : [ {
            "billCycleDay" : "5",
            "billCycleType" : "SpecificDayofMonth",
            "billingPeriodAlignment" : "AlignToCharge",
            "billingTiming" : "IN_ARREARS",
            "description" : "This is rate plan charge description",
            "myCustomField__c" : "test",
            "number" : "TestCharge",
            "price" : 12.01,
            "productRatePlanChargeId" : "ff8080811ca15d19011cddad8c953b53",
            "triggerDate" : "2015-09-01",
            "triggerEvent" : "SpecificDate"
          } ],
          "productRatePlanId" : "ff8080811ca15d19011cdda9b0ad3b51"
        } ],
        "termType" : "TERMED"
      }
    },
    "POSTTierType" : {
      "type" : "object",
      "required" : [ "price", "tier" ],
      "properties" : {
        "endingUnit" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "End number of a range of units for the tier.\n"
        },
        "price" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Price of the tier if the charge is a flat fee, or the price of each unit in the tier if the charge model is tiered pricing.\n"
        },
        "priceFormat" : {
          "type" : "string",
          "description" : "Indicates if pricing is a flat fee or is per unit.\n\nValues:\n\n* `FlatFee`\n* `PerUnit`\n"
        },
        "startingUnit" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Starting number of a range of units for the tier.\n"
        },
        "tier" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Unique number that identifies the tier that the price applies to.\n"
        }
      },
      "title" : "tiers"
    },
    "POSTUsageResponseType" : {
      "type" : "object",
      "properties" : {
        "checkImportStatus" : {
          "type" : "string",
          "description" : "URL for checking the status of the import operation.  Possible status values at this URL are:`Pending`, `Processing`, `Completed`, `Canceled`, `Failed`.  Only a status of Completed indicates that the file contents were imported successfully.\n"
        },
        "size" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The size of the uploaded file in bytes.\n"
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        }
      }
    },
    "PUTAccountType" : {
      "type" : "object",
      "properties" : {
        "autoPay" : {
          "type" : "boolean",
          "description" : "Specifies whether future payments are to be automatically billed when they are due. Possible values are: `true`, `false`.\n"
        },
        "batch" : {
          "type" : "string",
          "description" : "The alias name given to a batch. A string of 50 characters or less.\n"
        },
        "billToContact" : {
          "$ref" : "#/definitions/PUTAccountType_billToContact"
        },
        "communicationProfileId" : {
          "type" : "string",
          "description" : "The ID of a communication profile.\n"
        },
        "crmId" : {
          "type" : "string",
          "description" : "CRM account ID for the account, up to 100 characters.\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "invoiceTemplateId" : {
          "type" : "string",
          "description" : "Invoice template ID, configured in Billing Settings in the Zuora UI.\n"
        },
        "name" : {
          "type" : "string",
          "description" : "Account name, up to 255 characters.\n"
        },
        "notes" : {
          "type" : "string",
          "description" : "A string of up to 65,535 characters.\n"
        },
        "paymentGateway" : {
          "type" : "string",
          "description" : "The name of the payment gateway instance. If null or left unassigned, the Account will use the Default Gateway.\n"
        },
        "soldToContact" : {
          "$ref" : "#/definitions/PUTAccountType_soldToContact"
        },
        "tagging" : {
          "type" : "string",
          "description" : ""
        },
        "taxInfo" : {
          "$ref" : "#/definitions/POSTAccountType_taxInfo"
        }
      },
      "example" : {
        "paymentGateway" : "TestGateway"
      }
    },
    "PUTAccountingCodeType" : {
      "type" : "object",
      "properties" : {
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "glAccountName" : {
          "type" : "string",
          "description" : "Name of the account in your general ledger.\n\nField only available if you have Zuora Finance enabled. Maximum of 255 characters.\n"
        },
        "glAccountNumber" : {
          "type" : "string",
          "description" : "Account number in your general ledger.\n\nField only available if you have Zuora Finance enabled. Maximum of 255 characters.\n"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the accounting code.\n\nAccounting code name must be unique. Maximum of 100 characters.\n"
        },
        "notes" : {
          "type" : "string",
          "description" : "Maximum of 2,000 characters.\n"
        },
        "type" : {
          "type" : "string",
          "description" : "Accounting code type. \n\nValid values are as follows:\n* `AccountsReceivable`\n* `Cash`\n* `OtherAssets`\n* `CustomerCashOnAccount`\n* `DeferredRevenue`\n* `SalesTaxPayable`\n* `OtherLiabilities`\n* `SalesRevenue`\n* `SalesDiscounts`\n* `OtherRevenue`\n* `OtherEquity`\n* `BadDebt`\n* `OtherExpenses`\n          \nYou cannot change the type of an accounting code from `AccountsReceivable` to a different type.\n"
        }
      },
      "example" : {
        "name" : "CASH",
        "type" : "Cash"
      }
    },
    "PUTAccountingPeriodType" : {
      "type" : "object",
      "properties" : {
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "endDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The end date of the accounting period in yyyy-mm-dd format, for example, \"2016-02-19\".\n"
        },
        "fiscalYear" : {
          "type" : "string",
          "description" : "Fiscal year of the accounting period in yyyy format, for example, \"2016\".\n"
        },
        "fiscal_quarter" : {
          "type" : "integer",
          "format" : "int64",
          "description" : ""
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the accounting period.\n\nAccounting period name must be unique. Maximum of 100 characters.\n"
        },
        "notes" : {
          "type" : "string",
          "description" : "Notes about the accounting period.\n\nMaximum of 255 characters.\n"
        },
        "startDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The start date of the accounting period in yyyy-mm-dd format, for example, \"2016-02-19\".\n"
        }
      },
      "example" : {
        "endDate" : "2016-01-31",
        "fiscalYear" : 2016,
        "name" : "Jan 2016",
        "startDate" : "2016-01-01"
      }
    },
    "PUTAllocateManuallyType" : {
      "type" : "object",
      "properties" : {
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "eventType" : {
          "type" : "string",
          "description" : "Label of the revenue event type. Revenue event type labels can be duplicated. You can configure your revenue event type labels by navigating to **Settings > Finance > Configure Revenue Event Types** in the Zuora UI. The default revenue event types are:\n* Invoice Posted\n* Invoice Item Adjustment Created\n* Invoice Canceled\n* Invoice Item Adjustment Canceled\n* Revenue Distributed\n\nYou can create revenue event types from **Settings > Finance > Revenue Event Types**.\n"
        },
        "eventTypeSystemId" : {
          "type" : "string",
          "description" : "System ID of the revenue event type. Each eventType has a unique system ID. You can configure your revenue event type system IDs by navigating to **Settings > Finance > Configure Revenue Event Types** in the Zuora UI.\n\nCannot be duplicated.\n"
        },
        "notes" : {
          "type" : "string",
          "description" : "Additional information about this record.\n"
        },
        "revenueDistributions" : {
          "type" : "array",
          "description" : "An array of revenue distributions. Represents how you want to distribute revenue for this revenue schedule. You can distribute revenue into a maximum of 250 accounting periods with one revenue schedule.\n",
          "items" : {
            "$ref" : "#/definitions/POSTDistributionItemType"
          }
        }
      },
      "example" : {
        "cf_phases__c" : "Phase 1",
        "cf_project__c" : "project A",
        "eventType" : "Revenue Distributed",
        "eventTypeSystemId" : "RevenueDistributed__z",
        "notes" : "Manually distribute revenue for Phase 1",
        "revenueDistributions" : [ {
          "accountingPeriodName" : "Jan'2013",
          "newAmount" : "500"
        }, {
          "accountingPeriodName" : "Feb'2013",
          "newAmount" : "600"
        } ]
      }
    },
    "PUTAttachmentType" : {
      "type" : "object",
      "properties" : {
        "description" : {
          "type" : "string",
          "description" : "Description of the attachment.\n"
        },
        "fileName" : {
          "type" : "string",
          "description" : "File name of the attachment. The value should not contain the file extension. Only the file name without the extension can be edited.\n"
        }
      },
      "example" : "curl\n-H \"filename\":\"Image123.png\" \\\n-H \"description\":\"Updated Image\" \\\n-H \"Accept:application:json\" \\\n-X PUT https://api.zuora.com/rest/v1/attachments/8a8083e1545b706a015473153e4743f"
    },
    "PUTEventRIDetailType" : {
      "type" : "object",
      "required" : [ "revenueItems" ],
      "properties" : {
        "revenueItems" : {
          "type" : "array",
          "description" : "Revenue items are listed in ascending order by the accounting period start date.\n\nInclude at least one custom field.\n",
          "items" : {
            "$ref" : "#/definitions/EventRevenueItemType"
          }
        }
      },
      "example" : {
        "revenueItems" : [ {
          "accountingPeriodName" : "Oct'2014",
          "cf_phases__c" : "Scoping Phase",
          "cf_project__c" : "Security"
        }, {
          "accountingPeriodName" : "Nov'2014",
          "cf_phases__c" : "Design Phase",
          "cf_project__c" : "Security"
        } ]
      }
    },
    "PUTJournalEntryItemType" : {
      "type" : "object",
      "required" : [ "accountingCodeName", "type" ],
      "properties" : {
        "accountingCodeName" : {
          "type" : "string",
          "description" : "Name of the accounting code.\n\nIf the Journal Entry Item has a blank accounting code, enter the empty string (“”). \n"
        },
        "accountingCodeType" : {
          "type" : "string",
          "description" : "Accounting code type. The accounting code types are:\n  * `AccountsReceivable`\n  *  `Cash`\n  *  `OtherAssets`\n  *  `CustomerCashOnAccount `\n  * `DeferredRevenue`\n  * `SalesTaxPayable`\n  * `OtherLiabilities`\n  * `SalesRevenue`\n  * `SalesDiscounts`\n  * `OtherRevenue` \n  * `OtherEquity`\n  * `BadDebt`  \n  * `OtherExpenses`\n      \n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "type" : {
          "type" : "string",
          "description" : "Type of journal entry item. An enum with the value `Credit` or `Debit`.\n"
        }
      },
      "title" : "journalEntryItems"
    },
    "PUTPaymentMethodResponseType" : {
      "type" : "object",
      "properties" : {
        "paymentMethodId" : {
          "type" : "string",
          "description" : "ID of the updated payment method.\n"
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        }
      }
    },
    "PUTPaymentMethodType" : {
      "type" : "object",
      "properties" : {
        "addressLine1" : {
          "type" : "string",
          "description" : "First address line, 255 characters or less.\n"
        },
        "addressLine2" : {
          "type" : "string",
          "description" : "Second address line, 255 characters or less.\n"
        },
        "cardHolderName" : {
          "type" : "string",
          "description" : "The full name as it appears on the card, e.g., \"John J Smith\", 50 characters or less.\n"
        },
        "city" : {
          "type" : "string",
          "description" : "City, 40 characters or less.\n"
        },
        "country" : {
          "type" : "string",
          "description" : "Country; must be a valid country name or abbreviation.\n"
        },
        "defaultPaymentMethod" : {
          "type" : "boolean",
          "description" : "Specify \"true\" to make this card the default payment method; otherwise, omit this parameter to keep the current default payment method.\n"
        },
        "email" : {
          "type" : "string",
          "description" : "Card holder's email address, 80 characters or less.\n"
        },
        "expirationMonth" : {
          "type" : "string",
          "description" : "Two-digit expiration month (01-12).\n"
        },
        "expirationYear" : {
          "type" : "string",
          "description" : "Four-digit expiration year.\n"
        },
        "phone" : {
          "type" : "string",
          "description" : "Phone number, 40 characters or less.\n"
        },
        "securityCode" : {
          "type" : "string",
          "description" : "The CVV or CVV2 security code for the credit card or debit card. Only required if changing expirationMonth, expirationYear, or cardHolderName. To ensure PCI compliance, this value isn't stored and can't be queried.\n\n"
        },
        "state" : {
          "type" : "string",
          "description" : "State; must be a valid state name or 2-character abbreviation.\n"
        },
        "zipCode" : {
          "type" : "string",
          "description" : "Zip code, 20 characters or less.\n"
        }
      },
      "example" : {
        "cardHolderName" : "Leo",
        "expirationMonth" : 8,
        "expirationYear" : 2015,
        "securityCode" : "111"
      }
    },
    "PUTRSBasicInfoType" : {
      "type" : "object",
      "properties" : {
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "notes" : {
          "type" : "string",
          "description" : "Additional information about this record.\n"
        },
        "referenceId" : {
          "type" : "string",
          "description" : "Reference ID is used only in the custom unlimited rule to create a revenue schedule. In this scenario, the revenue schedule is not linked to an invoice item or invoice item adjustment.\n\nUse this field only when the revenue schedule is not linked to an invoice item or invoice item adjustment, such as for revenue schedules based on the Custom - Unlimited recognition model. \n"
        }
      },
      "example" : {
        "cf_phases__c" : "Phase 1",
        "notes" : "change recognition term",
        "referenceId" : "Reference ID"
      }
    },
    "PUTRSTermType" : {
      "type" : "object",
      "required" : [ "recognitionEnd", "recognitionStart" ],
      "properties" : {
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "distributionType" : {
          "type" : "string",
          "description" : "How you want to distribute the revenue. The distribution types are: \n* Daily Distribution: Distributes revenue evenly across each day between the recognitionStart and recognitionEnd dates.\n* Monthly Distribution (Back Load): Back loads the revenue so you distribute the monthly amount in the partial month at the end only.\n* Monthly Distribution (Front Load): Front loads the revenue so you distribute the monthly amount in the partial month at the beginning only.\n* Monthly Distribution (Proration by Days): Splits the revenue amount between the two partial months.\n\n**Note:** To use any of the Monthly Distribution options, you must have the \"Monthly recognition over time\" model enabled in **Settings > Finance > Manage Revenue Recognition Models**. \n"
        },
        "eventType" : {
          "type" : "string",
          "description" : "Label of the revenue event type. Revenue event type labels can be duplicated. You can configure your revenue event type labels by navigating to **Settings > Finance > Configure Revenue Event Types** in the Zuora UI. The default revenue event types are:\n* Invoice Posted\n* Invoice Item Adjustment Created\n* Invoice Canceled\n* Invoice Item Adjustment Canceled\n* Revenue Distributed\n"
        },
        "eventTypeSystemId" : {
          "type" : "string",
          "description" : "System ID of the revenue event type. Each eventType has a unique system ID. You can configure your revenue event type system IDs by navigating to **Settings > Finance > Configure Revenue Event Types** in the Zuora UI.\n"
        },
        "notes" : {
          "type" : "string",
          "description" : "Additional information about this record.\n"
        },
        "recognitionEnd" : {
          "type" : "string",
          "format" : "date",
          "description" : "The end date of a recognition period in `YYYY-MM-DD` format. \n\nThe maximum difference of the `recognitionStart` and `recognitionEnd` date fields is equal to 250 multiplied by the length of an accounting period.\n"
        },
        "recognitionStart" : {
          "type" : "string",
          "format" : "date",
          "description" : "The start date of a recognition period in `YYYY-MM-DD` format.\n\nIf there is a closed accounting period between the `recognitionStart` and `recognitionEnd` dates, the revenue that would be placed in the closed accounting period is instead placed in the next open accounting period.\n"
        }
      },
      "example" : {
        "cf_phases__c" : "Phase 2",
        "distributionType" : "Daily distribution",
        "eventType" : "Revenue Distributed",
        "eventTypeSystemId" : "RevenueDistributed__z",
        "notes" : "manual distribute revenue by usage",
        "recognitionEnd" : "2015-12-31",
        "recognitionStart" : "2015-12-1"
      }
    },
    "PUTRenewSubscriptionResponseType" : {
      "type" : "object",
      "properties" : {
        "invoiceId" : {
          "type" : "string",
          "description" : "Invoice ID, if one is generated.\n"
        },
        "paidAmount" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Payment amount, if payment is collected.\n"
        },
        "paymentId" : {
          "type" : "string",
          "description" : "Payment ID, if payment is collected.\n"
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        },
        "termEndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date the new subscription term ends, as yyyy-mm-dd.\n"
        },
        "termStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date the new subscription term begins, as yyyy-mm-dd.\n"
        },
        "totalDeltaMrr" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Change in the subscription monthly recurring revenue as a result of the update. For a renewal, this is the MRR of the subscription in the new term.\n"
        },
        "totalDeltaTcv" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Change in the total contracted value of the subscription as a result of the update. For a renewal, this is the TCV of the subscription in the new term.\n"
        }
      }
    },
    "PUTRenewSubscriptionType" : {
      "type" : "object",
      "properties" : {
        "OpportunityCloseDate_QT" : {
          "type" : "string",
          "description" : "The closing date of the Opportunity. This field is populated when the subscription originates from Zuora Quotes.\n\nThis field is used only for reporting subscription metrics. \n\n"
        },
        "OpportunityName_QT" : {
          "type" : "string",
          "description" : "The unique identifier of the Opportunity. This field is populated when the subscription originates from Zuora Quotes.\n          \nThis field is used only for reporting subscription metrics. \n\n"
        },
        "QuoteBusinessType_QT" : {
          "type" : "string",
          "description" : "The specific identifier for the type of business transaction the Quote represents such as New, Upsell, Downsell, Renewal, or Churn. This field is populated when the subscription originates from Zuora Quotes.\n          \nThis field is used only for reporting subscription metrics. \n\n"
        },
        "QuoteNumber_QT" : {
          "type" : "string",
          "description" : "The unique identifier of the Quote. This field is populated when the subscription originates from Zuora Quotes.\n          \nThis field is used only for reporting subscription metrics. \n\n"
        },
        "QuoteType_QT" : {
          "type" : "string",
          "description" : "The Quote type that represents the subscription lifecycle stage such as New, Amendment, Renew or Cancel. This field is populated when the subscription originates from Zuora Quotes.\n          \nThis field is used only for reporting subscription metrics. \n\n"
        },
        "applyCreditBalance" : {
          "type" : "boolean",
          "description" : "Applies a credit balance to an invoice.\n\nIf the value is `true`, the credit balance is applied to the invoice. If the value is `false`, no action is taken.\n\n**Prerequisite:** `invoice` must be `true`. \n\n**Note:** If you are using the field `invoiceCollect` rather than the field `invoice`, the `invoiceCollect` value must be `true`.\n\nTo view the credit balance adjustment, retrieve the details of the invoice using the Get Invoices method.\n"
        },
        "collect" : {
          "type" : "string",
          "description" : "Collects an automatic payment for a subscription. The collection generated in this operation is only for this subscription, not for the entire customer account.\n\nIf the value is `true`, the automatic payment is collected. If the value is `false`, no action is taken.\n\nThe default value is `false`.\n\n**Prerequisite:** `invoice` must be `true`. \n\n**Note:** This field is in Zuora REST API version control. Supported minor versions are 196.0 or later. To use this field in the method, you must set the `zuora-version` field to the minor version number in the request header. \n"
        },
        "invoice" : {
          "type" : "string",
          "description" : "Creates an invoice for a subscription. The invoice generated in this operation is only for this subscription, not for the entire customer account.\n\nIf the value is `true`, an invoice is created. If the value is `false`, no action is taken.\n\nThe default value is `false`. \n\n**Note:** This field is in Zuora REST API version control. Supported minor versions are 196.0 or later. To use this field in the method, you must set the `zuora-version` field to the minor version number in the request header. \n"
        },
        "invoiceCollect" : {
          "type" : "boolean",
          "description" : "**Note:** This field has been replaced by the invoice field and the collect field. invoiceCollect is available only for backward compatibility.\n\nIf `true` (default), an invoice is generated and payment collected automatically during the subscription process. If `false`, no invoicing or payment takes place. The invoice generated in this operation is only for this subscription, not for the entire customer account.\n\nThis field is in Zuora REST API version control. Supported minor versions are `186.0`, `187.0`, `188.0`, `189.0`, and `196.0`.\n"
        },
        "invoiceTargetDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date through which to calculate charges if generating an invoice, in yyyy-mm-dd format. Default is current date.\n"
        }
      },
      "example" : {
        "collect" : false,
        "invoice" : true
      }
    },
    "PUTRevenueScheduleResponseType" : {
      "type" : "object",
      "properties" : {
        "revenueEventNumber" : {
          "type" : "string",
          "description" : "The revenue event number created when a revenue event occurs.\n"
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        }
      }
    },
    "PUTScAddType" : {
      "type" : "object",
      "required" : [ "productRatePlanChargeId" ],
      "properties" : {
        "applyDiscountTo" : {
          "type" : "string",
          "description" : "Specifies the type of charges that you want a specific discount to apply to.\n\nValues:\n\n* `ONETIME`\n* `RECURRING`\n* `USAGE`\n* `ONETIMERECURRING`\n* `ONETIMEUSAGE`\n* `RECURRINGUSAGE`\n* `ONETIMERECURRINGUSAGE`\n\nAvailable for the following charge type for the Discount-Fixed Amount and Discount-Percentage charge models:\n\n* Recurring\n"
        },
        "billCycleDay" : {
          "type" : "string",
          "description" : "Sets the bill cycle day (BCD) for the charge. The BCD determines which day of the month customer is billed.\n\nValues: `1`-`31`\n\nAvailable for the following charge types:\n\n* Recurring\n* Usage-based\n"
        },
        "billCycleType" : {
          "type" : "string",
          "description" : "Specifies how to determine the billing day for the charge. When this field is set to `SpecificDayOfMonth`, set the `BillCycleDay` field. When this field is set to `SpecificDayOfWeek`, set the `weeklyBillCycleDay` field.\n\nValues:\n\n* `DefaultFromCustomer`\n* `SpecificDayOfMonth`\n* `SubscriptionStartDay`\n* `ChargeTriggerDay`\n* `SpecificDayOfWeek`\n\nAvailable for the following charge types:\n\n* Recurring\n* Usage-based\n"
        },
        "billingPeriod" : {
          "type" : "string",
          "description" : "Billing period for the charge. The start day of the billing period is also called the bill cycle day (BCD).\n\nValues:\n\n* `Month`\n* `Quarter`\n* `Semi_Annual`\n* `Annual`\n* `Eighteen_Months`\n* `Two_Years`\n* `Three_Years`\n* `Five_Years`\n* `Specific_Months`\n* `Subscription_Term`\n* `Week`\n* `Specific_Weeks`\n\nAvailable for the following charge types:\n\n* Recurring\n* Usage-based\n"
        },
        "billingPeriodAlignment" : {
          "type" : "string",
          "description" : "Aligns charges within the same subscription if multiple charges begin on different dates.\n\nValues:\n\n* `AlignToCharge`\n* `AlignToSubscriptionStart`\n* `AlignToTermStart`\n\nAvailable for the following charge types:\n\n* Recurring\n* Usage-based\n"
        },
        "billingTiming" : {
          "type" : "string",
          "description" : "Billing timing for the charge for recurring charge types. Not avaliable for one time, usage and discount charges.\n\nValues:\n\n* `IN_ADVANCE` (default)\n* `IN_ARREARS`\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the charge.\n"
        },
        "discountAmount" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Specifies the amount of fixed-amount discount.\n\nAvailable for the following charge type for the Discount-Fixed Amount charge model:\n\n* Recurring\n"
        },
        "discountLevel" : {
          "type" : "string",
          "description" : "Specifies if the discount applies to the product rate plan only , the entire subscription, or to any activity in the account.\n\nValues:\n\n* `rateplan`\n* `subscription`\n* `account`\n\nAvailable for the following charge type for the Discount-Fixed Amount and Discount-Percentage charge models:\n\n* Recurring\n"
        },
        "discountPercentage" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Specifies the percentage of a percentage discount. \n\nAvailable for the following charge type for the Discount-Percentage charge model:\n\n* Recurring\n"
        },
        "endDateCondition" : {
          "type" : "string",
          "description" : "Defines when the charge ends after the charge trigger date. If the subscription ends before the charge end date, the charge ends when the subscription ends. But if the subscription end date is subsequently changed through a Renewal, or Terms and Conditions amendment, the charge will end on the charge end date.\n\nValues:\n\n* `Subscription_End`\n* `Fixed_Period`\n* `Specific_End_Date`\n"
        },
        "includedUnits" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Specifies the number of units in the base set of units for this charge. Must be >=`0`.\n\nAvailable for the following charge types for the Overage charge model:\n\n* Recurring\n* Usage-based\n"
        },
        "listPriceBase" : {
          "type" : "string",
          "description" : "The list price base for the product rate plan charge.\n\nValues:\n\n* `Per_Billing_Period`\n* `Per_Month`\n* `Per_Week`\n\nAvailable for the following charge type for the Flat Fee, Per Unit, Volume Pricing, and Tiered Pricing charge models:\n\n* Recurring\n"
        },
        "number" : {
          "type" : "string",
          "description" : "Unique number that identifies the charge. System-generated if not provided.\n"
        },
        "numberOfPeriods" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Specifies the number of periods to use when calculating charges in an overage smoothing charge model.\n\nAvailable for the following charge type for the Overage and Tiered with Overage charge models:\n\n* Usage-based\n"
        },
        "overagePrice" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Price for units over the allowed amount. \n\nAvailable for the following charge type for the Overage and Tiered with Overage charge models:\n\n* Usage-based\n"
        },
        "overageUnusedUnitsCreditOption" : {
          "type" : "string",
          "description" : "Determines whether to credit the customer with unused units of usage.\n\nValues:\n\n* `NoCredit`\n* `CreditBySpecificRate`\n\nAvailable for the following charge type for the Overage and Tiered with Overage charge models:\n\n* Usage-based\n"
        },
        "price" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Price for units in the subscription rate plan.\n\nSupports all charge types for the Flat Fee and Per Unit charge models\n"
        },
        "priceChangeOption" : {
          "type" : "string",
          "description" : "Applies an automatic price change when a termed subscription is renewed. The Zuora Billing Admin setting Enable Automatic Price Change When Subscriptions are Renewed?  must be set to Yes to use this field.  See Define Default Subscription Settings for more information on setting this option.\n\nValues:\n\n* `NoChange` (default)\n* `SpecificPercentageValue`\n* `UseLatestProductCatalogPricing`\n\nAvailable for the following charge types:\n\n* Recurring\n* Usage-based\n* Not available for the Fixed-Amount Discount charge model.\n"
        },
        "priceIncreasePercentage" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Specifies the percentage to increase or decrease the price of a termed subscription's renewal. Required if you set the `PriceChangeOption` field to `SpecificPercentageValue`.\n\nDecimal between -100 and 100.\n\nAvailable for the following charge types:\n\n* Recurring\n* Usage-based\n\nNot available for the Fixed-Amount Discount charge model.\n"
        },
        "productRatePlanChargeId" : {
          "type" : "string",
          "description" : ""
        },
        "quantity" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Number of units. Must be >=`0`.\n\nAvailable for the following charge types for the Per Unit, Volume Pricing, and Tiered Pricing charge models:\n\n* One-time\n* Recurring\n"
        },
        "ratingGroup" : {
          "type" : "string",
          "description" : "Specifies a rating group based on which usage records are rated.\n\n**Note:** This feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).\n\nValues:\n\n* `ByBillingPeriod` (default): The rating is based on all the usages in a billing period.       \n* `ByUsageStartDate`: The rating is based on all the usages on the same usage start date. \n* `ByUsageRecord`: The rating is based on each usage record.\n* `ByUsageUpload`: The rating is based on all the usages in a uploaded usage file (.xls or .csv).\n\nThe `ByBillingPeriod` value can be applied for all charge models.\nThe `ByUsageStartDate`, `ByUsageRecord`, and `ByUsageUpload` values can only be applied for per unit, volume pricing, and tiered pricing charge models.\nUse this field only for Usage charges. One-Time Charges and Recurring Charges return `NULL`.\n"
        },
        "specificBillingPeriod" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Specifies the number of month or week for the charges billing period. Required if you set the value of the `billingPeriod` field to `Specific_Months` or `Specific_Weeks`.\n\nAvailable for the following charge types:\n\n* Recurring\n* Usage-based\n"
        },
        "specificEndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Defines when the charge ends after the charge trigger date.\n\nThis field is only applicable when the `endDateCondition` field is set to `Specific_End_Date`.\n\nIf the subscription ends before the specific end date, the charge ends when the subscription ends. But if the subscription end date is subsequently changed through a Renewal, or Terms and Conditions amendment, the charge will end on the specific end date.\n"
        },
        "tiers" : {
          "type" : "array",
          "description" : "Container for Volume, Tiered or Tiered with Overage charge models. Supports the following charge types:\n\n* One-time\n* Recurring\n* Usage-based\n",
          "items" : {
            "$ref" : "#/definitions/POSTTierType"
          }
        },
        "triggerDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Specifies when to start billing the customer for the charge. Required if the `triggerEvent` field is set to `USD`.\n"
        },
        "triggerEvent" : {
          "type" : "string",
          "description" : "Specifies when to start billing the customer for the charge.\n\nValues:\n\n* `UCE`\n* `USA`\n* `UCA`\n* `USD`\n"
        },
        "unusedUnitsCreditRates" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Specifies the rate to credit a customer for unused units of usage. This field applies only for overage charge models when the `OverageUnusedUnitsCreditOption` field is set to `CreditBySpecificRate`.\n\nAvailable for the following charge type for the Overage and Tiered with Overage charge models:\n\n* Usage-based\n"
        },
        "upToPeriods" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The period type used to define when the charge ends. \n\nValues:\n\n* `Billing_Periods`\n* `Days`\n* `Weeks`\n* `Months`\n* `Years`\n\nYou must use this field together with the `upToPeriods` field to specify the time period.\n\nThis field is applicable only when the `endDateCondition` field is set to `Fixed_Period`. \n"
        },
        "upToPeriodsType" : {
          "type" : "string",
          "description" : "The period type used to define when the charge ends. \n\nValues:\n\n* `Billing_Periods`\n* `Days`\n* `Weeks`\n* `Months`\n* `Years`\n\nYou must use this field together with the `upToPeriods` field to specify the time period.\n\nThis field is applicable only when the `endDateCondition` field is set to `Fixed_Period`. \n"
        }
      },
      "title" : "chargeOverrides"
    },
    "PUTScUpdateType" : {
      "type" : "object",
      "required" : [ "ratePlanChargeId" ],
      "properties" : {
        "billingPeriodAlignment" : {
          "type" : "string",
          "description" : "Aligns charges within the same subscription if multiple charges begin on different dates.\n\nValues:\n\n* `AlignToCharge`\n* `AlignToSubscriptionStart`\n* `AlignToTermStart`\n\nAvailable for the following charge types:\n\n* Recurring\n* Usage-based\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "description" : {
          "type" : "string",
          "description" : "Description of the charge.\n"
        },
        "includedUnits" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Specifies the number of units in the base set of units for this charge. Must be >=0.\n\nAvailable for the following charge types for the Overage charge model:\n\n* `Recurring`\n* `Usage-based`\n"
        },
        "overagePrice" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Price for units over the allowed amount. \n\nAvailable for the following charge type for the Overage and Tiered with Overage charge models:\n\n* Usage-based\n"
        },
        "price" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Price for units in the subscription rate plan.\n\nSupports all charge types for the Flat Fee and Per Unit charge models\n"
        },
        "priceChangeOption" : {
          "type" : "string",
          "description" : "Applies an automatic price change when a termed subscription is renewed. The Billing Admin setting **Enable Automatic Price Change When Subscriptions are Renewed?** must be set to Yes to use this field.\n\nValues:\n\n* `NoChange` (default)\n* `SpecificPercentageValue`\n* `UseLatestProductCatalogPricing`\n\nAvailable for the following charge types:\n\n* Recurring\n* Usage-based\n\nNot available for the Fixed-Amount Discount charge model.\n"
        },
        "priceIncreasePercentage" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Specifies the percentage to increase or decrease the price of a termed subscription's renewal. Required if you set the `PriceChangeOption` field to `SpecificPercentageValue`.\n\nDecimal between `-100` and `100`.\n\nAvailable for the following charge types:\n\n* Recurring\n* Usage-based\n\nNot available for the Fixed-Amount Discount charge model.\n"
        },
        "quantity" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Quantity of units; must be greater than zero.\n"
        },
        "ratePlanChargeId" : {
          "type" : "string",
          "description" : "ID of a rate-plan charge for this subscription.\n"
        },
        "tiers" : {
          "type" : "array",
          "description" : "Container for Volume, Tiered or Tiered with Overage charge models. Supports the following charge types:\n\n* One-time\n* Recurring\n* Usage-based\n",
          "items" : {
            "$ref" : "#/definitions/POSTTierType"
          }
        },
        "triggerDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Specifies when to start billing the customer for the charge. Required if the `triggerEvent` field is set to USD.\n\n`triggerDate` cannot be updated for the following using the REST update subscription call:\n\n* One-time charge type\n* Discount-Fixed Amount charge model\n* Discount-Percentage charge model\n"
        },
        "triggerEvent" : {
          "type" : "string",
          "description" : "Specifies when to start billing the customer for the charge.\n\nValues:\n\n* `UCE`\n* `USA`\n* `UCA`\n* `USD`\n\nThis is the date when charge changes in the REST request become effective.\n\n`triggerEvent` cannot be updated for the following using the REST update subscription call:\n\n* One-time charge type\n* Discount-Fixed Amount charge model\n* Discount-Percentage charge model\n"
        }
      },
      "title" : "chargeUpdateDetails"
    },
    "PUTScheduleRIDetailType" : {
      "type" : "object",
      "required" : [ "revenueItems" ],
      "properties" : {
        "revenueItems" : {
          "type" : "array",
          "description" : "Revenue items are listed in ascending order by the accounting period start date.\n\nInclude at least one custom field.\n",
          "items" : {
            "$ref" : "#/definitions/RevenueScheduleItemType"
          }
        }
      },
      "example" : {
        "revenueItems" : [ {
          "accountingPeriodName" : "Oct'2014",
          "cf_phases__c" : "Scoping Phase",
          "cf_project__c" : "Security"
        }, {
          "accountingPeriodName" : "Nov'2014",
          "cf_phases__c" : "Design Phase",
          "cf_project__c" : "Security"
        } ]
      }
    },
    "PUTSpecificDateAllocationType" : {
      "type" : "object",
      "required" : [ "distributeOn", "distributionType" ],
      "properties" : {
        "amount" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "The revenue schedule amount, which is the sum of all revenue items. This field cannot be null and must be formatted based on the currency, such as `JPY 30` or `USD 30.15`. Test out the currency to ensure you are using the proper formatting otherwise, the response will fail and this error message is returned: `Allocation amount with wrong decimal places.`\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "distributeOn" : {
          "type" : "string",
          "format" : "date",
          "description" : "The recognition date on which to distribute revenue for milestone-based recognition.\n\nType: date in `YYYY-MM-DD` format.\n"
        },
        "distributionType" : {
          "type" : "string",
          "description" : "How to distribute the revenue for milestone-based recognition.\n\nPossible values are:\n* specific date (delta fixed amount)\n* specific date (delta percent total)\n* specific date (delta percent undistributed)\n"
        },
        "eventType" : {
          "type" : "string",
          "description" : "Label of the revenue event type. Revenue event type labels can be duplicated. You can configure your revenue event type labels by navigating to **Settings > Finance > Configure Revenue Event Types** in the Zuora UI. The default revenue event types are:\n* Invoice Posted\n* Invoice Item Adjustment Created\n* Invoice Canceled\n* Invoice Item Adjustment Canceled\n* Revenue Distributed\n"
        },
        "eventTypeSystemId" : {
          "type" : "string",
          "description" : "System ID of the revenue event type. Each eventType has a unique system ID. You can configure your revenue event type system IDs by navigating to **Settings > Finance > Configure Revenue Event Types** in the Zuora UI.\n"
        },
        "notes" : {
          "type" : "string",
          "description" : "Additional information about this record.\n"
        },
        "percentage" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Percentage of the total recognition amount or total undistributed to distribute.\n\nRequired if distributionType is either:\n* specific date (delta percent total)\n* specific date (delta percent undistributed)\n"
        }
      },
      "example" : {
        "amount" : "1000.00",
        "distributeOn" : "2016-02-03",
        "distributionType" : "specific date (delta fixed amount)",
        "eventNumber__c" : "phase 2",
        "eventType" : "Revenue Distributed",
        "eventTypeSystemId" : "RevenueDistributed__z",
        "notes" : "service delivered and accepted by customer"
      }
    },
    "PUTSrpAddType" : {
      "type" : "object",
      "required" : [ "contractEffectiveDate", "productRatePlanId" ],
      "properties" : {
        "chargeOverrides" : {
          "type" : "array",
          "description" : "This optional container is used to override the quantity of one or more product rate plan charges for this subscription.\n",
          "items" : {
            "$ref" : "#/definitions/PUTScAddType"
          }
        },
        "contractEffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date when the amendment changes take effect. The format of the date is yyyy-mm-dd.\n\nIf there is already a future-dated Update Product amendment on the subscription, the `specificUpdateDate` field will be used instead of this field to specify when the Update Product amendment takes effect.\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "customerAcceptanceDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date when the customer accepts the contract in yyyy-mm-dd format.\n\nIf this field is not set:\n\n* If the `serviceActivationDate` field is not set, the value of this field is set to be the contract effective date.\n* If the `serviceActivationDate` field is set, the value of this field is set to be the service activation date.\n\nThe billing trigger dates must follow this rule:\n\ncontractEffectiveDate <= serviceActivationDate <= contractAcceptanceDate\n"
        },
        "productRatePlanId" : {
          "type" : "string",
          "description" : "ID of a product rate plan for this subscription\n"
        },
        "serviceActivationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date when the new product in the subscription is activated in yyyy-mm-dd format.\n\nYou must specify a Service Activation date if the Customer Acceptance date is set. If the Customer Acceptance date is not set, the value of the `serviceActivationDate` field defaults to be the Contract Effective Date.\n\nThe billing trigger dates must follow this rule:\n\ncontractEffectiveDate <= serviceActivationDate <= contractAcceptanceDate\n"
        }
      },
      "title" : "add"
    },
    "PUTSrpRemoveType" : {
      "type" : "object",
      "required" : [ "contractEffectiveDate", "ratePlanId" ],
      "properties" : {
        "contractEffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Effective date of the new subscription, as yyyy-mm-dd.\n"
        },
        "customerAcceptanceDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date when the customer accepts the contract in yyyy-mm-dd format.\n\nIf this field is not set:\n\n* If the `serviceActivationDate` field is not set, the value of this field is set to be the contract effective date.\n* If the `serviceActivationDate` field is set, the value of this field is set to be the service activation date.\n\nThe billing trigger dates must follow this rule:\n\ncontractEffectiveDate <= serviceActivationDate <= contractAcceptanceDate\n"
        },
        "ratePlanId" : {
          "type" : "string",
          "description" : "ID of a rate-plan charge for this subscription\n"
        },
        "serviceActivationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date when the remove amendment is activated in yyyy-mm-dd format.\n\nYou must specify a Service Activation date if the Customer Acceptance date is set. If the Customer Acceptance date is not set, the value of the `serviceActivationDate` field defaults to be the Contract Effective Date.\n\nThe billing trigger dates must follow this rule:\n\ncontractEffectiveDate <= serviceActivationDate <= contractAcceptanceDate\n"
        }
      },
      "title" : "remove"
    },
    "PUTSrpUpdateType" : {
      "type" : "object",
      "required" : [ "contractEffectiveDate", "ratePlanId" ],
      "properties" : {
        "chargeUpdateDetails" : {
          "type" : "array",
          "description" : "Container for one or more product rate plan charges. \n",
          "items" : {
            "$ref" : "#/definitions/PUTScUpdateType"
          }
        },
        "contractEffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date when the amendment changes take effect. The format of the date is yyyy-mm-dd.\n\nIf there is already a future-dated Update Product amendment on the subscription, the `specificUpdateDate` field will be used instead of this field to specify when the Update Product amendment takes effect.\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "customerAcceptanceDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date when the customer accepts the contract in yyyy-mm-dd format.\n\nIf this field is not set:\n\n* If the `serviceActivationDate` field is not set, the value of this field is set to be the contract effective date.\n* If the `serviceActivationDate` field is set, the value of this field is set to be the service activation date.\n\nThe billing trigger dates must follow this rule:\n\ncontractEffectiveDate <= serviceActivationDate <= contractAcceptanceDate\n"
        },
        "ratePlanId" : {
          "type" : "string",
          "description" : "ID of a rate plan for this subscription.\n"
        },
        "serviceActivationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date when the update amendment is activated in yyyy-mm-dd format.\n\nYou must specify a Service Activation date if the Customer Acceptance date is set. If the Customer Acceptance date is not set, the value of the `serviceActivationDate` field defaults to be the Contract Effective Date.\n\nThe billing trigger dates must follow this rule:\n\ncontractEffectiveDate <= serviceActivationDate <= contractAcceptanceDate\n"
        },
        "specificUpdateDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date when the Update Product amendment takes effect. This field is only applicable if there is already a future-dated Update Product amendment on the subscription. The format of the date is yyyy-mm-dd.\n\nRequired only for Update Product amendments if there is already a future-dated Update Product amendment on the subscription.\n"
        }
      },
      "title" : "update"
    },
    "PUTSubscriptionPreviewInvoiceItemsType" : {
      "type" : "object",
      "properties" : {
        "chargeAmount" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "The amount of the charge. This amount doesn't include taxes unless the charge's tax mode is inclusive.\n"
        },
        "chargeDescription" : {
          "type" : "string",
          "description" : "Description of the charge.\n"
        },
        "chargeName" : {
          "type" : "string",
          "description" : "Name of the charge\n"
        },
        "productName" : {
          "type" : "string",
          "description" : "Name of the product associated with this item.\n"
        },
        "productRatePlanChargeId" : {
          "type" : "string",
          "description" : ""
        },
        "quantity" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Quantity of this item.\n"
        },
        "serviceEndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "End date of the service period for this item, i.e., the last day of the period, as yyyy-mm-dd.\n"
        },
        "serviceStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Service start date as yyyy-mm-dd. If the charge is a one-time fee, this is the date of that charge.\n"
        },
        "unitOfMeasure" : {
          "type" : "string",
          "description" : ""
        }
      },
      "title" : "invoiceItems"
    },
    "PUTSubscriptionResponseType" : {
      "type" : "object",
      "properties" : {
        "amount" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Invoice amount. Preview mode only.\n"
        },
        "amountWithoutTax" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Invoice amount minus tax. Preview mode only.\n"
        },
        "chargeMetrics" : {
          "$ref" : "#/definitions/PUTSubscriptionResponseType_chargeMetrics"
        },
        "invoiceId" : {
          "type" : "string",
          "description" : "Invoice ID, if an invoice is generated during the update.\n"
        },
        "invoiceItems" : {
          "type" : "array",
          "description" : "Container for invoice items.\n",
          "items" : {
            "$ref" : "#/definitions/PUTSubscriptionPreviewInvoiceItemsType"
          }
        },
        "invoiceTargetDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date through which charges are calculated on the invoice, as yyyy-mm-dd. Preview mode only.\n"
        },
        "paidAmount" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Payment amount, if a payment is collected\n"
        },
        "paymentId" : {
          "type" : "string",
          "description" : "Payment ID, if a payment is collected.\n"
        },
        "previewChargeMetricsResponse" : {
          "type" : "string",
          "description" : ""
        },
        "subscriptionId" : {
          "type" : "string",
          "description" : "The ID of the resulting new subscription.\n"
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        },
        "taxAmount" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Tax amount on the invoice.\n"
        },
        "totalDeltaMrr" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Change in the subscription monthly recurring revenue as a result of the update.\n"
        },
        "totalDeltaTcv" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Change in the total contracted value of the subscription as a result of the update.\n"
        }
      }
    },
    "PUTSubscriptionResumeResponseType" : {
      "type" : "object",
      "properties" : {
        "invoiceId" : {
          "type" : "string",
          "description" : "Invoice ID, if an invoice is generated during the subscription process.\n"
        },
        "paidAmount" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Payment amount, if a payment is collected.\n"
        },
        "paymentId" : {
          "type" : "string",
          "description" : "Payment ID, if a payment is collected.\n"
        },
        "resumeDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date when subscription resumption takes effect, as yyyy-mm-dd.\n"
        },
        "subscriptionId" : {
          "type" : "string",
          "description" : "The subscription ID.\n"
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        },
        "termEndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date when the new subscription term ends, as yyyy-mm-dd.\n"
        },
        "totalDeltaTcv" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Change in the total contracted value of the subscription as a result of the update.\n"
        }
      }
    },
    "PUTSubscriptionResumeType" : {
      "type" : "object",
      "required" : [ "resumePolicy" ],
      "properties" : {
        "applyCreditBalance" : {
          "type" : "boolean",
          "description" : "Applies a credit balance to an invoice.\n\nIf the value is `true`, the credit balance is applied to the invoice. If the value is `false`, no action is taken.\n\nPrerequisite: `invoice` must be `true`. \n\nTo view the credit balance adjustment, retrieve the details of the invoice using the Get Invoices method.\n"
        },
        "collect" : {
          "type" : "boolean",
          "description" : "Collects an automatic payment for a subscription. The collection generated in this operation is only for this subscription, not for the entire customer account.\n\nIf the value is `true`, the automatic payment is collected. If the value is `false`, no action is taken.\n\nThe default value is false.\n\nThis field is in Zuora REST API version control. Supported minor versions are 196.0 or later. To use this field in the method, you must set the `zuora-version` parameter to the minor version number in the request header.\n\nPrerequisite: `invoice` must be `true`.\n"
        },
        "contractEffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date when the customer notifies you that they want to resume their subscription.\n"
        },
        "extendsTerm" : {
          "type" : "boolean",
          "description" : "Whether to extend the subscription term by the length of time the suspension is in effect.\n\nValues: `true`, `false`.\n"
        },
        "invoice" : {
          "type" : "boolean",
          "description" : "Creates an invoice for a subscription. The invoice generated in this operation is only for this subscription, not for the entire customer account.\n\nIf the value is `true`, an invoice is created. If the value is `false`, no action is taken.\n\nThe default value is `false`.\n\nThis field is in Zuora REST API version control. Supported minor versions are 196.0 or later. To use this field in the method, you must set the `zuora-version` parameter to the minor version number in the request header.\n"
        },
        "invoiceCollect" : {
          "type" : "boolean",
          "description" : "**Note:** This field has been replaced by the `invoice` field and the `collect` field. `invoiceCollect` is available only for backward compatibility.\n\nIf `true`, an invoice is generated and payment collected automatically during the subscription process. If `false` (default), no invoicing or payment takes place.  The invoice generated in this operation is only for this subscription, not for the entire customer account.\n\nThis field is in Zuora REST API version control. Supported minor versions are 186.0, 187.0, 188.0, 189.0, and 196.0. "
        },
        "invoiceTargetDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "If an invoice is to be generated, the date through which to calculate the charges, as yyyy-mm-dd.\n"
        },
        "resumePeriods" : {
          "type" : "string",
          "description" : "The length of the period used to specify when the subscription is resumed. The subscription resumption takes effect after a specified period based on the suspend date or today's date. You must use this field together with the `resumePeriodsType` field to specify the period.\n\n**Note:** This field is only applicable when the `suspendPolicy` field is set to `FixedPeriodsFromToday` or `FixedPeriodsFromSuspendDate`.\n"
        },
        "resumePeriodsType" : {
          "type" : "string",
          "description" : "The period type used to define when the subscription resumption takes effect. The subscription resumption takes effect after a specified period based on the suspend date or today's date. You must use this field together with the `resumePeriods` field to specify the period.\n\nValues: `Day`, `Week`, `Month`, `Year`\n\n**Note:** This field is only applicable when the `suspendPolicy` field is set to `FixedPeriodsFromToday` or `FixedPeriodsFromSuspendDate`.\n"
        },
        "resumePolicy" : {
          "type" : "string",
          "description" : "Resume methods. Specify a way to resume a subscription.\n\nValues:\n\n* `Today`: The subscription resumption takes effect on today's date.\n\n* `FixedPeriodsFromSuspendDate`: The subscription resumption takes effect after a specified period based on the suspend date. You must specify the `resumePeriods` and `resumePeriodsType` fields to define the period.\n\n* `SpecificDate`: The subscription resumption takes effect on a specific date. You must define the specific date in the `resumeSpecificDate` field.\n\n* `FixedPeriodsFromToday`: The subscription resumption takes effect after a specified period based on the today's date. You must specify the `resumePeriods` and `resumePeriodsType` fields to define the period.\n"
        },
        "resumeSpecificDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "A specific date when the subscription resumption takes effect, in the format yyyy-mm-dd.\n\n**Note:** This field is only applicable only when the `resumePolicy` field is set to `SpecificDate`.\n\nThe value should not be earlier than the subscription suspension date.\n"
        }
      },
      "example" : {
        "collect" : false,
        "contractEffectiveDate" : "2019-02-01",
        "extendsTerm" : true,
        "invoice" : true,
        "resumePolicy" : "SpecificDate",
        "resumeSpecificDate" : "2019-10-01"
      }
    },
    "PUTSubscriptionSuspendResponseType" : {
      "type" : "object",
      "properties" : {
        "invoiceId" : {
          "type" : "string",
          "description" : "Invoice ID, if an invoice is generated during the subscription process.\n"
        },
        "paidAmount" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Payment amount, if a payment is collected.\n"
        },
        "paymentId" : {
          "type" : "string",
          "description" : "Payment ID, if a payment is collected.\n"
        },
        "resumeDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date when subscription resumption takes effect, in the format yyyy-mm-dd.\n"
        },
        "subscriptionId" : {
          "type" : "string",
          "description" : "The subscription ID.\n"
        },
        "success" : {
          "type" : "boolean",
          "description" : "Returns `true` if the request was processed successfully.\n"
        },
        "suspendDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date when subscription suspension takes effect, in the format yyyy-mm-dd.\n"
        },
        "termEndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date when the new subscription term ends, in the format yyyy-mm-dd.\n"
        },
        "totalDeltaTcv" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Change in the total contracted value of the subscription as a result of the update.\n"
        }
      }
    },
    "PUTSubscriptionSuspendType" : {
      "type" : "object",
      "required" : [ "suspendPolicy" ],
      "properties" : {
        "applyCreditBalance" : {
          "type" : "boolean",
          "description" : "Applies a credit balance to an invoice.\n\nIf the value is `true`, the credit balance is applied to the invoice. If the value is `false`, no action is taken.\n\nPrerequisite: `invoice` must be `true`. \n\nTo view the credit balance adjustment, retrieve the details of the invoice using the Get Invoices method.\n"
        },
        "collect" : {
          "type" : "boolean",
          "description" : "Collects an automatic payment for a subscription. The collection generated in this operation is only for this subscription, not for the entire customer account.\n\nIf the value is `true`, the automatic payment is collected. If the value is `false`, no action is taken.\n\nThe default value is `false`.\n\nPrerequisite: `invoice` must be `true`. \n\n**Note:** This field is in Zuora REST API version control. Supported minor versions are 196.0 or later. To use this field in the method, you must set the `zuora-version` field to the minor version number in the request \n"
        },
        "contractEffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date when the customer notifies you that they want to amend their subscription.\n"
        },
        "extendsTerm" : {
          "type" : "boolean",
          "description" : "Whether to extend the subscription term by the length of time the suspension is in effect. Values: `true`, `false`.\n"
        },
        "invoice" : {
          "type" : "boolean",
          "description" : "Creates an invoice for a subscription. The invoice generated in this operation is only for this subscription, not for the entire customer account.\n\nIf the value is `true`, an invoice is created. If the value is `false`, no action is taken.\nThe default value is `false`. \n\n**Note:** This field is in Zuora REST API version control. Supported minor versions are 196.0 or later. To use this field in the method, you must set the `zuora-version` field to the minor version number in the request header.\n"
        },
        "invoiceCollect" : {
          "type" : "boolean",
          "description" : "**Note:** This field has been replaced by the `invoice` field and the `collect` field. `invoiceCollect` is available only for backward compatibility.\n\nThis field is in Zuora REST API version control. Supported minor versions are 186.0, 187.0, 188.0, 189.0, and 196.0.\n"
        },
        "invoiceTargetDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "If an invoice is to be generated, the date through which to calculate the charges, as yyyy-mm-dd.\n"
        },
        "resume" : {
          "type" : "boolean",
          "description" : "Whether to set when to resume a subscription when creating a suspend amendment. Values: `true`, `false`.\n"
        },
        "resumePeriods" : {
          "type" : "string",
          "description" : "The length of the period used to specify when the subscription is resumed. The subscription resumption takes effect after a specified period based on the suspend date or today's date. You must use this field together with the `resumePeriodsType` field to specify the period.\n\n**Note:** This field is only applicable when the `suspendPolicy` field is set to `FixedPeriodsFromToday` or `FixedPeriodsFromSuspendDate`.\n"
        },
        "resumePeriodsType" : {
          "type" : "string",
          "description" : "The period type used to define when the subscription resumption takes effect. The subscription resumption takes effect after a specified period based on the suspend date or today's date. You must use this field together with the resumePeriods field to specify the period.\n\nValues: `Day`, `Week`, `Month`, `Year`\n\n**Note:** This field is only applicable when the `suspendPolicy` field is set to `FixedPeriodsFromToday` or `FixedPeriodsFromSuspendDate`.\n"
        },
        "resumePolicy" : {
          "type" : "string",
          "description" : "Resume methods. Specify a way to resume a subscription. Values:\n\n* `Today`: The subscription resumption takes effect on today's date.\n\n* `FixedPeriodsFromSuspendDate`: The subscription resumption takes effect after a specified period based on the suspend date. You must specify the `resumePeriods` and `resumePeriodsType` fields to define the period.\n\n* `SpecificDate`: The subscription resumption takes effect on a specific date. You must define the specific date in the `resumeSpecificDate` field.\n\n* `FixedPeriodsFromToday`: The subscription resumption takes effect after a specified period based on the today's date. You must specify the `resumePeriods` and `resumePeriodsType` fields to define the period.\n"
        },
        "resumeSpecificDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "A specific date when the subscription resumption takes effect, in the format yyyy-mm-dd.\n\n**Note:** This field is only applicable only when the `resumePolicy` field is set to `SpecificDate`.\n\nThe value should not be earlier than the subscription suspension date.\n"
        },
        "suspendPeriods" : {
          "type" : "string",
          "description" : "The length of the period used to specify when the subscription suspension takes effect. The subscription suspension takes effect after a specified period based on today's date. You must use this field together with the `suspendPeriodsType` field to specify the period.\n\n**Note:** This field is only applicable only when the suspendPolicy field is set to FixedPeriodsFromToday.\n"
        },
        "suspendPeriodsType" : {
          "type" : "string",
          "description" : "The period type used to define when the subscription suspension takes effect. The subscription suspension takes effect after a specified period based on today's date. You must use this field together with the suspendPeriods field to specify the period.\n\nType: string (enum)\n\nValues: `Day`, `Week`, `Month`, `Year`\n\n**Note:** This field is only applicable only when the suspendPolicy field is set to FixedPeriodsFromToday.\n"
        },
        "suspendPolicy" : {
          "type" : "string",
          "description" : "Suspend methods. Specify a way to suspend a subscription. \n\nValue:\n\n* `Today`: The subscription suspension takes effect on today's date.\n* `EndOfLastInvoicePeriod`: The subscription suspension takes effect at the end of the last invoice period. The suspend date defaults to a date that is one day after the last invoiced period. You can choose this option to avoid any negative invoices (credits) issued back to the customer after the subscription suspension. \n* `SpecificDate`: The subscription suspension takes effect on a specific date. You must define the specific date in the `suspendSpecificDate` field.\n* `FixedPeriodsFromToday`: The subscription suspension takes effect after a specified period based on today's date. You must specify the `suspendPeriods` and `suspendPeriodsType` fields to define the period.\n"
        },
        "suspendSpecificDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "A specific date when the subscription suspension takes effect, in the format yyyy-mm-dd.\n\n**Note:** This field is only applicable only when the suspendPolicy field is set to SpecificDate.\n\nThe value should not be earlier than the subscription contract effective date, later than the subscription term end date, or within a period for which the customer has been invoiced.\n"
        }
      },
      "example" : {
        "collect" : false,
        "contractEffectiveDate" : "2019-02-01",
        "extendsTerm" : true,
        "invoice" : true,
        "resume" : true,
        "resumePolicy" : "SpecificDate",
        "resumeSpecificDate" : "2019-06-01",
        "suspendPeriods" : 10,
        "suspendPeriodsType" : "Day",
        "suspendPolicy" : "FixedPeriodsFromToday"
      }
    },
    "PUTSubscriptionType" : {
      "type" : "object",
      "properties" : {
        "CpqBundleJsonId__QT" : {
          "type" : "string",
          "description" : ""
        },
        "OpportunityCloseDate__QT" : {
          "type" : "string",
          "description" : "The closing date of the Opportunity. This field is populated when the subscription originates from Zuora Quotes.\n\nThis field is used only for reporting subscription metrics. \n\n"
        },
        "OpportunityName__QT" : {
          "type" : "string",
          "description" : "The unique identifier of the Opportunity. This field is populated when the subscription originates from Zuora Quotes.\n\nThis field is used only for reporting subscription metrics. \n\n"
        },
        "QuoteBusinessType__QT" : {
          "type" : "string",
          "description" : "The specific identifier for the type of business transaction the Quote represents such as `New`, `Upsell`, `Downsell`, `Renewal`, or `Churn`. This field is populated when the subscription originates from Zuora Quotes.\n          \nThis field is used only for reporting subscription metrics. \n\n"
        },
        "QuoteNumber__QT" : {
          "type" : "string",
          "description" : "The unique identifier of the Quote. This field is populated when the subscription originates from Zuora Quotes.\n          \nThis field is used only for reporting subscription metrics. \n\n"
        },
        "QuoteType__QT" : {
          "type" : "string",
          "description" : "The Quote type that represents the subscription lifecycle stage such as `New`, `Amendment`, `Renew`, or `Cancel`. This field is populated when the subscription originates from Zuora Quotes.\n          \nThis field is used only for reporting subscription metrics. \n\n"
        },
        "add" : {
          "type" : "array",
          "description" : "Container for adding one or more rate plans.\n",
          "items" : {
            "$ref" : "#/definitions/PUTSrpAddType"
          }
        },
        "applyCreditBalance" : {
          "type" : "boolean",
          "description" : "Applies a credit balance to an invoice.\n\nIf the value is `true`, the credit balance is applied to the invoice. If the value is `false`, no action is taken.\n\n**Prerequisite:** `invoice` must be true. \n\n**Note:** If you are using the field `invoiceCollect` rather than the field `invoice`, the `invoiceCollect` value must be true.\n\nTo view the credit balance adjustment, retrieve the details of the invoice using the Get Invoices method.\n"
        },
        "autoRenew" : {
          "type" : "boolean",
          "description" : "If `true`, this subscription automatically renews at the end of the subscription term. Default is `false`.\n"
        },
        "currentTerm" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The length of the period for the current subscription term. If `termType` is `TERMED`, this field is required and must be greater than `0`. If `termType` is `EVERGREEN`, this value is ignored. Default is `0`.\n"
        },
        "currentTermPeriodType" : {
          "type" : "string",
          "description" : "The period type for the current subscription term.\n\nThis field is used with the `CurrentTerm` field to specify the current subscription term.\n\nValues are:\n\n* `Month` (default)\n* `Year`\n* `Day`\n* `Week`\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "includeExistingDraftInvoiceItems" : {
          "type" : "boolean",
          "description" : "Specifies whether to include draft invoice items in amendment previews.\n\nValues: \n\n* `true` (default). Includes draft invoice items in amendment previews. \n* `false`. Excludes draft invoice items in amendment previews.\n"
        },
        "invoice" : {
          "type" : "boolean",
          "description" : "Creates an invoice for a subscription. The invoice generated in this operation is only for this subscription, not for the entire customer account.\n\nIf the value is `true`, an invoice is created. If the value is `false`, no action is taken.\n\nThe default value is `false`. \n\nThis field is in Zuora REST API version control. Supported minor versions are 196.0 or later. To use this field in the method, you must set the `zuora-version` parameter to the minor version number in the request header.\n"
        },
        "invoiceCollect" : {
          "type" : "boolean",
          "description" : "**Note:** This field has been replaced by the `invoice` field and the `collect` field. `invoiceCollect` is available only for backward compatibility.\n\nIf `true`, an invoice is generated and payment collected automatically during the subscription process. If `false` (default), no invoicing or payment takes place.  The invoice generated in this operation is only for this subscription, not for the entire customer account.\n\nThis field is in Zuora REST API version control. Supported minor versions are 186.0, 187.0, 188.0, 189.0, and 196.0. "
        },
        "invoiceSeparately" : {
          "type" : "boolean",
          "description" : "Separates a single subscription from other subscriptions and invoices the charge independently. \n\nIf the value is `true`, the subscription is billed separately from other subscriptions. If the value is `false`, the subscription is included with other subscriptions in the account invoice.\n\nThe default value is `false`.\nPrerequisite: The default subscription setting Enable Subscriptions to be Invoiced Separately must be set to Yes.\n"
        },
        "invoiceTargetDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date through which to calculate charges if an invoice is generated, as yyyy-mm-dd. Default is current date.\n"
        },
        "notes" : {
          "type" : "string",
          "description" : "String of up to 500 characters.\n"
        },
        "preview" : {
          "type" : "boolean",
          "description" : "If `true` the update is made in preview mode. The default setting is `false`.\n"
        },
        "previewType" : {
          "type" : "string",
          "description" : "\nThe type of preview you will receive. The possible values are `InvoiceItem`, `ChargeMetrics`, or `InvoiceItemChargeMetrics`. The default is `InvoiceItem`.\n"
        },
        "remove" : {
          "type" : "array",
          "description" : "Container for removing one or more rate plans.\n",
          "items" : {
            "$ref" : "#/definitions/PUTSrpRemoveType"
          }
        },
        "renewalSetting" : {
          "type" : "string",
          "description" : "Specifies whether a termed subscription will remain `TERMED` or change to `EVERGREEN` when it is renewed. \n\nValues are:\n\n* `RENEW_WITH_SPECIFIC_TERM` (default)\n* `RENEW_TO_EVERGREEN`\n"
        },
        "renewalTerm" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The length of the period for the subscription renewal term. Default is `0`.\n"
        },
        "renewalTermPeriodType" : {
          "type" : "string",
          "description" : "\nThe period type for the subscription renewal term.\n\nThis field is used with the `renewalTerm` field to specify the subscription renewal term.\n\nValues are:\n\n* `Month` (default)\n* `Year`\n* `Day`\n* `Week`\n"
        },
        "termStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date the subscription term begins, as yyyy-mm-dd. If this is a renewal subscription, this date is different from the subscription start date. \n"
        },
        "termType" : {
          "type" : "string",
          "description" : "Possible values are: `TERMED`, `EVERGREEN`.\n"
        },
        "update" : {
          "type" : "array",
          "description" : "Container for updating one or more rate plans.\n",
          "items" : {
            "$ref" : "#/definitions/PUTSrpUpdateType"
          }
        }
      },
      "example" : {
        "autoRenew" : false,
        "collect" : false,
        "currentTerm" : "10",
        "currentTermPeriodType" : "Month",
        "invoice" : true,
        "myCustomField__c" : "test",
        "notes" : "Test UPDATE subscription from z-ruby-sdk",
        "renewalSetting" : "RENEW_WITH_SPECIFIC_TERM",
        "renewalTerm" : "4",
        "renewalTermPeriodType" : "Month",
        "termType" : "TERMED",
        "update" : [ {
          "chargeUpdateDetails" : [ {
            "quantity" : 12,
            "ratePlanChargeId" : "2c92c8f83dcbd8b1013dcce0eb510075"
          } ],
          "contractEffectiveDate" : "2013-04-28",
          "ratePlanId" : "2c92c8f83dcbd8b1013dcce0ea7e006f"
        } ]
      }
    },
    "PUT_BasicSummaryJournalEntryType" : {
      "type" : "object",
      "properties" : {
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "journalEntryItems" : {
          "type" : "array",
          "description" : "Key name that represents the list of journal entry items.\n",
          "items" : {
            "$ref" : "#/definitions/PUTJournalEntryItemType"
          }
        },
        "notes" : {
          "type" : "string",
          "description" : "Additional information about this record.\n\n***Character limit:*** 2,000\n"
        },
        "transferredToAccounting" : {
          "type" : "string",
          "description" : "Status shows whether the journal entry has been transferred to an accounting system. The possible values are `No`, `Processing`, `Yes`, `Error`, `Ignore`.\n  \nThis field cannot be changed after the summary journal entry has been canceled.\n  \n**Note:** The Zuora Finance ***Override Transferred to Accounting*** permission is required to change `transferredToAccounting` from `Yes` to any other value.\n"
        }
      },
      "example" : {
        "cf_issueNumberc" : "1000001",
        "journalEntryItems" : [ {
          "accountingCodeName" : "Accounts Receivable",
          "cf_phasesc" : "Phase 1",
          "type" : "Credit"
        }, {
          "accountingCodeName" : "",
          "cf_phases__c" : "Phase 1",
          "type" : "Debit"
        } ],
        "notes" : "Transfer to accounting system",
        "transferredToAccounting" : "Yes"
      }
    },
    "PaymentMethod" : {
      "type" : "object",
      "properties" : {
        "AccountId" : {
          "type" : "string",
          "description" : " The ID of the customer account associated with this payment method. "
        },
        "AchAbaCode" : {
          "type" : "string",
          "description" : " The nine-digit routing number or ABA number used by banks. Use this field for ACH payment methods.\n\n\n**Character limit**: 9\n\n\n**Values**: a string of 9 characters or fewer "
        },
        "AchAccountName" : {
          "type" : "string",
          "description" : " The name of the account holder, which can be either a person or a company. Use this field for ACH payment methods.\n\n\n**Character limit**: 70\n\n\n**Values**: a string of 70 characters or fewer "
        },
        "AchAccountNumber" : {
          "type" : "string",
          "description" : " The bank account number associated with the ACH payment. Use this field for ACH payment methods.\n\n\n**Character limit**: 30\n\n\n**Values**: a string of 30 numeric characters or fewer "
        },
        "AchAccountNumberMask" : {
          "type" : "string",
          "description" : " This is a masked displayable version of the ACH account number, used for security purposes. For example: `XXXXXXXXX54321`. Use this field for ACH payment methods.\n\n\n**Character limit**: 32\n\n\n**Values**: automatically generated "
        },
        "AchAccountType" : {
          "type" : "string",
          "description" : " The type of bank account associated with the ACH payment. Use this field for ACH payment methods.\n\n\n**Character limit**: 16\n\n\n**Values**:\n\n- `BusinessChecking`\n- `Checking`\n- `Saving`\n"
        },
        "AchAddress1" : {
          "type" : "string",
          "description" : " Line 1 for the ACH address. Required on create for the Vantiv payment gateway. Optional for other gateways.\n**Character limit:** **Values:** an address "
        },
        "AchAddress2" : {
          "type" : "string",
          "description" : " Line 2 for the ACH address. Required on create for the Vantiv payment gateway. Optional for other gateways.\n**Character limit:** **Values:** an address "
        },
        "AchBankName" : {
          "type" : "string",
          "description" : " The name of the bank where the ACH payment account is held. Use this field for ACH payment methods.\n\n\n**Character limit**: 70\n\n\n**Values**: a string of 70 characters or fewer "
        },
        "Active" : {
          "type" : "boolean",
          "description" : " Specifies whether a payment method is available in Zuora. The default value is `false`.\n\n\n**Character limit**: 5\n\n\n**Values**: `true`, `false` "
        },
        "BankBranchCode" : {
          "type" : "string",
          "description" : " The branch code of the bank used for direct debit. Use this field for direct debit payment methods.\n\n\n**Character limit**: 10\n\n\n**Values**:  string of 10 characters or fewer "
        },
        "BankCheckDigit" : {
          "type" : "string",
          "description" : "The check digit in the international bank account number, which confirms the validity of the account. Use this field for direct debit payment methods.\n\n**Character limit**: 4\n\n\n**Values**:  string of 4 characters or fewer "
        },
        "BankCity" : {
          "type" : "string",
          "description" : " The city of the direct debit bank. Use this field for direct debit payment methods.\n\n\n**Character limit**:70\n\n\n**Values**:  string of 70 characters or fewer "
        },
        "BankCode" : {
          "type" : "string",
          "description" : " The sort code or number that identifies the bank. This is also known as the sort code. This field is required for direct debit payment methods.\n\n\n**Character limit**: 18\n\n\n**Values**:  string of 18 characters or fewer "
        },
        "BankIdentificationNumber" : {
          "type" : "string",
          "description" : " The first six digits of the payment method's number, such as the credit card number or account number. Banks use this number to identify a payment method.\n\n\n**Character limit**: 6\n\n\n**Values**:  string of 6 characters or fewer "
        },
        "BankName" : {
          "type" : "string",
          "description" : " The name of the direct debit bank. Use this field for direct debit payment methods.\n\n\n**Character limit**:80\n\n\n**Values**:  string of 80 characters or fewer "
        },
        "BankPostalCode" : {
          "type" : "string",
          "description" : " The zip code or postal code of the direct debit bank. Use this field for direct debit payment methods.\n\n\n**Character limit**:20\n\n\n**Values**:  string of 20 characters or fewer "
        },
        "BankStreetName" : {
          "type" : "string",
          "description" : " The name of the street of the direct debit bank. Use this field for direct debit payment methods.\n\n\n**Character limit**:60\n\n\n**Values**:  string of 60 characters or fewer "
        },
        "BankStreetNumber" : {
          "type" : "string",
          "description" : " The number of the direct debit bank. Use this field for direct debit payment methods.\n\n\n**Character limit**:10\n\n\n**Values**:  string of 10 characters or fewer "
        },
        "BankTransferAccountName" : {
          "type" : "string",
          "description" : " The name on the direct debit bank account. Use this field for direct debit payment methods.\n\n\n**Character limit**: 60\n\n\n**Values**:  string of 60 characters or fewer "
        },
        "BankTransferAccountNumber" : {
          "type" : "string",
          "description" : " The number of the customer's bank account. Use this field for direct debit payment methods.\n\n\n**Character limit**:30\n\n\n**Values**:  string of 30 characters or fewer "
        },
        "BankTransferAccountNumberMask" : {
          "type" : "string",
          "description" : " This is a masked displayable version of the ACH account number, used for security purposes. For example: `XXXXXXXXX54321`.\n\n\n**Character limit**: 32\n\n\n**Values**: automatically generated "
        },
        "BankTransferAccountType" : {
          "type" : "string",
          "description" : " The type of the customer's bank account. Use this field for direct debit payment methods.\n\n\n**Character limit**: 11\n\n\n**Values**: `DirectDebit` "
        },
        "BankTransferType" : {
          "type" : "string",
          "description" : " Specifies the type of direct debit transfer. The value of this field is dependent on the country of the user. Use this field is used for direct debit payment methods.\n\n\n**Character limit**: 20\n\n\n**Values**:\n\n- `AutomatischIncasso` (NL)\n- `LastschriftDE` (Germany)\n- `LastschriftAT` (Austria)\n- `DemandeDePrelevement` (FR)\n- `DirectDebitUK` (UK)\n- `Domicil` (Belgium)\n- `LastschriftCH` (CH)\n- `RID` (Italy)\n- `OrdenDeDomiciliacion` (Spain)\n"
        },
        "BusinessIdentificationCode" : {
          "type" : "string",
          "description" : " The business identification code for Swiss direct payment methods that use the Global Collect payment gateway. Use this field only for direct debit payments in Switzerland with Global Collect.\n\n\n**Character limit**: 11\n\n\n**Values**: string of 11 characters or fewer "
        },
        "City" : {
          "type" : "string",
          "description" : " The city of the customer's address. Use this field for direct debit payment methods.\n\n\n**Character limit**:80\n\n\n**Values**:  string of 80 characters or fewer "
        },
        "Country" : {
          "type" : "string",
          "description" : " The two-letter country code of the customer's address. Use this field for direct debit payment methods.\n\n\n**Character limit**: 2\n\n\n**Values**: a valid country code "
        },
        "CreatedById" : {
          "type" : "string",
          "description" : " The user ID of the person who created the `PaymentMethod` object when there is a login user in the user session. In Hosted Payment Method and Z-Checkout pages, this field is set to 3 as there is no login user to initiate a user session.\n\n\n**Character limit**: 32\n\n\n**Values**: automatically generated "
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the `PaymentMethod` object was created in the Zuora system.\n\n\n**Character limit**: 29\n\n\n**Values**: automatically generated "
        },
        "CreditCardAddress1" : {
          "type" : "string",
          "description" : " The first line of the card holder's address, which is often a street address or business name. Use this field for credit card and direct debit payment methods.\n\n\n**Character limit**: 255\n\n\n**Values**: a string of 255 characters or fewer "
        },
        "CreditCardAddress2" : {
          "type" : "string",
          "description" : " The second line of the card holder's address. Use this field for credit card and direct debit payment methods.\n\n\n**Character limit**: 255\n\n\n**Values**: a string of 255 characters or fewer "
        },
        "CreditCardCity" : {
          "type" : "string",
          "description" : " The city of the card holder's address. Use this field for credit card and direct debit payment methods\n\n**Character limit**: 40\n\n\n**Values**: a string of 40 characters or fewer "
        },
        "CreditCardCountry" : {
          "type" : "string",
          "description" : " The country of the card holder's address."
        },
        "CreditCardExpirationMonth" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " The expiration month of the credit card or debit card. Use this field for credit card and direct debit payment methods.\n\n\n**Character limit**: 2\n\n\n**Values**: a two-digit number, 01 - 12 "
        },
        "CreditCardExpirationYear" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " The expiration month of the credit card or debit card. Use this field for credit card and direct debit payment methods.\n\n\n**Character limit**: 4\n\n\n**Values**: a four-digit number "
        },
        "CreditCardHolderName" : {
          "type" : "string",
          "description" : " The full name of the card holder. Use this field for credit card and direct debit payment methods.\n\n\n**Character limit**: 50\n\n\n**Values**: a string of 50 characters or fewer "
        },
        "CreditCardMaskNumber" : {
          "type" : "string",
          "description" : " A masked version of the credit or debit card number.\n\n\n**Character limit**: 32\n\n\n**Values**: automatically generated "
        },
        "CreditCardNumber" : {
          "type" : "string",
          "description" : " The credit card or debit card number. This is an insert-only field; it cannot be updated nor queried for security purposes. This field is required only when you define a debit card or credit card payment.\n\n\n**Character limit**: 16\n\n\n**Values**: a string of 16 characters or fewer "
        },
        "CreditCardPostalCode" : {
          "type" : "string",
          "description" : " The billing address's zip code. This field is required only when you define a debit card or credit card payment.\n\n\n**Character limit**: 20\n\n\n**Values**: a string of 20 characters or fewer "
        },
        "CreditCardSecurityCode" : {
          "type" : "string",
          "description" : " The CVV or CVV2 security code. See [How do I control what information Zuora sends over to the Payment Gateway?](https://knowledgecenter.zuora.com/kb/How_do_I_control_information_sent_to_payment_gateways_when_verifying_payment_methods%3F) for more information. To ensure PCI compliance, this value is not stored and cannot be queried.\n\n\n**Character limit**:\n\n\n**Values**: a valid CVV or CVV2 security code "
        },
        "CreditCardState" : {
          "type" : "string",
          "description" : " The billing address's state. Use this field is if the `CreditCardCountry` value is either Canada or the US. State names must be spelled in full. "
        },
        "CreditCardType" : {
          "type" : "string",
          "description" : " The type of credit card or debit card. This field is required only when you define a debit card or credit card payment.\n\n\n**Character limit**: 32\n\n\n**Values**: `AmericanExpress`, `Discover`, `MasterCard`, `Visa` "
        },
        "DeviceSessionId" : {
          "type" : "string",
          "description" : " The session ID of the user when the `PaymentMethod` was created or updated. Some gateways use this field for fraud prevention. If this field is passed to Zuora, then Zuora passes this field to supported gateways. Currently only Verifi supports this field.\n\n\n**Character limit**: 255\n\n\n**Values**: "
        },
        "Email" : {
          "type" : "string",
          "description" : " An email address for the payment method in addition to the bill to contact email address.\n\n\n**Character limit**: 80\n\n\n**Values**: a string of 80 characters or fewer "
        },
        "ExistingMandate" : {
          "type" : "string",
          "description" : " Indicates if the customer has an existing mandate or a new mandate. A mandate is a signed authorization for UK and NL customers. When you are migrating mandates from another system, be sure to set this field correctly. If you indicate that a new mandate is an existing mandate or vice-versa, then transactions fail. This field is used only for the direct debit payment method.\n\n\n**Character limit**: 3\n\n\n**Values**: `Yes`, `No` "
        },
        "FirstName" : {
          "type" : "string",
          "description" : " The customer's first name. This field is used only for the direct debit payment method.\n\n\n**Character limit**: 30\n\n\n**Values**: a string of 30 characters or fewer "
        },
        "GatewayOptionData" : {
          "type" : "array",
          "description" : " Use this field to pass gateway options.\n\n\n**Character limit**: 255\n\n\n**Values**: GatewayOption ",
          "items" : {
            "$ref" : "#/definitions/GatewayOptionData"
          }
        },
        "IBAN" : {
          "type" : "string",
          "description" : " The International Bank Account Number. This field is used only for the direct debit payment method.\n\n\n**Character limit**: 42\n\n\n**Values**: a string of 42 characters or fewer "
        },
        "IPAddress" : {
          "type" : "string",
          "description" : " The IP address of the user when the payment method was created or updated. Some gateways use this field for fraud prevention. If this field is passed to Zuora, then Zuora passes this field to supported gateways. Currently PayPal, CyberSource, Authorize.Net, and Verifi support this field.\n\n\n**Character limit**: 15\n\n\n**Values**: a string of 15 characters or fewer "
        },
        "Id" : {
          "type" : "string",
          "description" : " The ID of this object. Upon creation, the ID of this object is `PaymentMethodId`.\n\n\n**Character limit**: 32\n\n\n**Values**: automatically generated "
        },
        "LastFailedSaleTransactionDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date of the last failed attempt to collect payment with this payment method.\n\n\n**Character limit**: 29\n\n\n**Values**: automatically generated "
        },
        "LastName" : {
          "type" : "string",
          "description" : " The customer's last name. This field is used only for the direct debit payment method.\n\n\n**Character limit**: 70\n\n\n**Values**: a string of 70 characters or fewer "
        },
        "LastTransactionDateTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date of the most recent transaction.\n\n\n**Character limit**: 29\n\n\n**Values**: [a valid date and time value](/CB_Billing/WA_Dates_in_Zuora/A_Date_Format_and_Datetimes_in_Zuora) "
        },
        "LastTransactionStatus" : {
          "type" : "string",
          "description" : " The status of the most recent transaction.\n\n\n**Character limit**: 39\n\n\n**Values**: automatically generated "
        },
        "MandateCreationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the mandate was created. A mandate is a signed authorization for UK and NL customers. This field is used only for the direct debit payment method.\n\n\n**Character limit**: 29\n\n\n**Values**: [a valid date and time value](/CB_Billing/WA_Dates_in_Zuora/A_Date_Format_and_Datetimes_in_Zuora) "
        },
        "MandateID" : {
          "type" : "string",
          "description" : " The ID of the mandate. A mandate is a signed authorization for UK and NL customers. This field is used only for the direct debit payment method.\n\n\n**Character limit**: 36\n\n\n**Values**: a string of 36 characters or fewer "
        },
        "MandateReceived" : {
          "type" : "string",
          "description" : " Indicates if  the mandate was received. A mandate is a signed authorization for UK and NL customers. This field is used only for the direct debit payment method.\n\n\n**Character limit**: 3\n\n\n**Values**: `Yes`, `No `(case-sensitive) "
        },
        "MandateUpdateDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the mandate was last updated. A mandate is a signed authorization for UK and NL customers. This field is used only for the direct debit payment method.\n\n\n**Character limit**: 29\n\n\n**Values**: [a valid date and time value](/CB_Billing/WA_Dates_in_Zuora/A_Date_Format_and_Datetimes_in_Zuora) "
        },
        "MaxConsecutivePaymentFailures" : {
          "type" : "integer",
          "description" : " Specifies the number of allowable consecutive failures Zuora attempts with the payment method before stopping.\n\n\n\n**Values**: a valid number "
        },
        "Name" : {
          "type" : "string",
          "description" : " Create Query Delete Filter "
        },
        "NumConsecutiveFailures" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " The number of consecutive failed payment for this payment method. It is reset to 0 upon successful payment. You can use the API to update the field value to 0.\n\n\n**Character limit**:\n\n\n**Values**: a positive whole number "
        },
        "PaymentMethodStatus" : {
          "type" : "string",
          "description" : " Specifies the status of the payment method. It is set to Active on creation.\n\n\n**Character limit**: 6\n\n\n**Values**: `Active` or `Closed` PaymentMethodStatus should not be used in the `create\n` call. You can only set this field to **Closed** via the `update\n` call. "
        },
        "PaymentRetryWindow" : {
          "type" : "integer",
          "description" : " The retry interval setting, which prevents making a payment attempt if the last failed attempt was within the last specified number of hours. This field is required if the `UseDefaultRetryRule` field value is set to `false`.\n\n\n**Character limit**: 4\n\n\n**Values**: a whole number between 1 and 1000, exclusive "
        },
        "PaypalBaid" : {
          "type" : "string",
          "description" : " The PayPal billing agreement ID, which is a contract between two PayPal accounts. Typically, the selling party initiates a request to create a BAID, and sends it to buying party for acceptance. The seller can keep track of the BAID and use it for future charges against the buyer. This field is required when defining a PayPal payment method.\n\n\n**Character limit**: 64\n\n\n**Values**: a string of 64 characters or fewer "
        },
        "PaypalEmail" : {
          "type" : "string",
          "description" : " The email address associated with the account holder's PayPal account or of the PayPal account of the person paying for the service. This field is required only when you define a PayPal payment method.\n\n\n**Character limit**: 80\n\n\n**Values**: a string of 80 characters or fewer "
        },
        "PaypalPreapprovalKey" : {
          "type" : "string",
          "description" : " PayPal's Adaptive Payments API key. Zuora does not create this key, nor does it call PayPal to generate it. You must use PayPal's Adaptive Payments' API to generate this key, and then pass it to Zuora. Zuora uses this key to authorize future payments to PayPal's Adaptive Payments API. This field is required when you use PayPal Adaptive Payments gateway.\n\n\n**Character limit**: 32\n\n\n**Values**: a valid PayPal Adaptive Payment pre-approval key "
        },
        "PaypalType" : {
          "type" : "string",
          "description" : " Specifies the PayPal gateway: PayFlow Pro (Express Checkout) or Adaptive Payments. This field is required when you use PayPal Adaptive Payments or Payflow Pro (Express Checkout) gateways.\n\n\n**Character limit**: 32\n\n\n**Values**: `ExpressCheckout`, `AdaptivePayments` "
        },
        "Phone" : {
          "type" : "string",
          "description" : " The phone number that the account holder registered with the bank. This field is used for credit card validation when passing to a gateway.\n\n\n**Character limit**: 40\n\n\n**Values**: a string of 40 characters or fewer "
        },
        "PostalCode" : {
          "type" : "string",
          "description" : " The zip code of the customer's address. This field is used only for the direct debit payment method.\n\n\n**Character limit**: 20\n\n\n**Values**: a string of 20 characters or fewer "
        },
        "SecondTokenId" : {
          "type" : "string",
          "description" : " A gateway unique identifier that replaces sensitive payment method data. SecondTokenId is conditionally required only when TokenID is being used to represent a gateway customer profile. SecondTokenId is used in the CC Reference Transaction payment method.\n\n**Character limit**: 64\n\n\n**Values**: a string of 64 characters or fewer "
        },
        "SkipValidation" : {
          "type" : "boolean",
          "description" : " Creates the payment method even if authorization fails with the payment gateway.\n\n\n**Character limit**: 5\n\n\n**Values**: `t``rue`, `false` "
        },
        "State" : {
          "type" : "string",
          "description" : " The state of the customer's address. This field is used only for the direct debit payment method.\n\n\n**Character limit**: 70\n\n\n**Values**: a string of 70 characters or fewer "
        },
        "StreetName" : {
          "type" : "string",
          "description" : " The street name of the customer's address. This field is used only for the direct debit payment method.\n\n\n**Character limit**: 100\n\n\n**Values**: a string of 100 characters or fewer "
        },
        "StreetNumber" : {
          "type" : "string",
          "description" : " The street number of the customer's address. This field is used only for the direct debit payment method.\n\n\n**Character limit**: 30\n\n\n**Values**: a string of 30 characters or fewer "
        },
        "TokenId" : {
          "type" : "string",
          "description" : " A gateway unique identifier that replaces sensitive payment method data or represents a gateway's unique customer profile. When TokenId is used to represent a customer profile, then SecondTokenId is conditionally required for representing the underlying tokenized payment method. TokenId is required for the CC Reference Transaction payment method.\n\n\n**Character limit**: 255\n\n\n**Values**: a string of 255 characters or fewer "
        },
        "TotalNumberOfErrorPayments" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " The number of error payments that used this payment method.\n\n\n**Character limit**:\n\n\n**Values**: automatically generated "
        },
        "TotalNumberOfProcessedPayments" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " The number of successful payments that used this payment method.\n\n\n**Character limit**:\n\n\n**Values**: automatically generated "
        },
        "Type" : {
          "type" : "string",
          "description" : " Create Query Update Delete Filter "
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : " The ID of the user who last updated the payment method.\n\n\n**Character limit**: 32\n\n\n**Values**: automatically generated "
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the payment method was last updated.\n\n\n**Character limit**: 29\n\n\n**Values**: automatically generated "
        },
        "UseDefaultRetryRule" : {
          "type" : "boolean",
          "description" : " Determines whether to use the default retry rules configured in the [Z-Payments settings](https://knowledgecenter.zuora.com/CB_Billing/L_Payment_Methods/H_Configure_Payment_Method_Retry_Rules). Set this to `true` to use the default retry rules. Set this to `false` to set the specific rules for this payment method. If you set this value to `false`, then the fields, `PaymentRetryWindow` and `MaxConsecutivePaymentFailures`, are required.\n\n\n**Character limit**: 5\n\n\n**Values**: `t``rue`, `false` "
        }
      }
    },
    "PreviewOptions" : {
      "type" : "object",
      "properties" : {
        "EnablePreviewMode" : {
          "type" : "boolean",
          "description" : " Determines whether to create an amendment or display a preview of the change."
        },
        "IncludeExistingDraftInvoiceItems" : {
          "type" : "boolean",
          "description" : " Specifies whether to include draft invoice items in amendment previews."
        },
        "NumberOfPeriods" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " Indicates the number of invoice periods to show in a preview."
        },
        "PreviewThroughTermEnd" : {
          "type" : "boolean",
          "description" : " Request to preview the charge through the end of the subscription term."
        },
        "PreviewType" : {
          "type" : "string",
          "description" : " The type of preview you will receive from a preview request."
        }
      }
    },
    "ProxyActionamendRequest" : {
      "type" : "object",
      "properties" : {
        "requests" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/AmendRequest"
          }
        }
      },
      "example" : {
        "requests" : [ {
          "AmendOptions" : {
            "GenerateInvoice" : false,
            "InvoiceProcessingOptions" : { },
            "ProcessPayments" : false
          },
          "Amendments" : [ {
            "ContractEffectiveDate" : "2016-10-20",
            "CurrentTerm" : 3,
            "CurrentTermPeriodType" : "Day",
            "CustomerAcceptanceDate" : "2016-10-20",
            "Description" : "AM7j4i2rsxb9",
            "EffectiveDate" : "2016-10-20",
            "Name" : "AM7j4i2rsxb9",
            "RatePlanData" : {
              "RatePlan" : {
                "ProductRatePlanId" : "2c93808457d787030157e02e250e1e9a"
              },
              "RatePlanChargeData" : [ {
                "RatePlanCharge" : {
                  "ProductRatePlanChargeId" : "2c93808457d787030157e02e26701e9d"
                }
              } ]
            },
            "RenewalSetting" : "RENEW_TO_EVERGREEN",
            "RenewalTerm" : 2,
            "RenewalTermPeriodType" : "Day",
            "ServiceActivationDate" : "2016-10-20",
            "Status" : "Completed",
            "SubscriptionId" : "2c93808457d787030157e02e23911e8d",
            "TermStartDate" : "2016-10-20",
            "TermType" : "TERMED",
            "Type" : "NewProduct"
          } ],
          "PreviewOptions" : {
            "EnablePreviewMode" : false
          }
        } ]
      }
    },
    "ProxyActionamendResponse" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/AmendResult"
          }
        }
      }
    },
    "ProxyActioncreateRequest" : {
      "type" : "object",
      "properties" : {
        "objects" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/zObject"
          }
        },
        "type" : {
          "type" : "string",
          "description" : ""
        }
      },
      "example" : {
        "objects" : [ {
          "AccountingCode" : "Accounts Receivable",
          "AdjustmentDate" : "2016-10-20",
          "Amount" : 1.2,
          "Comment" : "this is comments",
          "InvoiceId" : "2c93808457d787030157e03248c75142",
          "InvoiceNumber" : "INV00000001",
          "ReferenceId" : "refid-1476935174845",
          "SourceId" : "2c93808457d787030157e03248c95144",
          "SourceType" : "InvoiceDetail",
          "Type" : "Credit"
        } ],
        "type" : "InvoiceItemAdjustment"
      }
    },
    "ProxyActioncreateResponse" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/SaveResult"
          }
        }
      }
    },
    "ProxyActiondeleteRequest" : {
      "type" : "object",
      "properties" : {
        "ids" : {
          "type" : "string",
          "description" : "A list of one or more IDs for the objects you want to delete.\n"
        },
        "type" : {
          "type" : "string",
          "description" : "The type of object that you are deleting.\n"
        }
      },
      "example" : {
        "ids" : [ "2c93808457d787030157e031fcd34e19" ],
        "type" : "ProductRatePlanCharge"
      }
    },
    "ProxyActiondeleteResponse" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/DeleteResult"
          }
        }
      }
    },
    "ProxyActionexecuteRequest" : {
      "type" : "object",
      "properties" : {
        "ids" : {
          "type" : "string",
          "description" : "The ID of the object. **Values:** a valid InvoiceSplit object ID.\n"
        },
        "synchronous" : {
          "type" : "boolean",
          "description" : "Indicates if the call is synchronous or asynchronous. **Values:** `false`\n"
        },
        "type" : {
          "type" : "string",
          "description" : "Specifies the type of executed item. **Values:** `invoicesplit`\n"
        }
      },
      "example" : {
        "ids" : [ "2c93808457d787030157e031d5844c53" ],
        "synchronous" : false,
        "type" : "InvoiceSplit"
      }
    },
    "ProxyActionexecuteResponse" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/ExecuteResult"
          }
        }
      }
    },
    "ProxyActiongenerateRequest" : {
      "type" : "object",
      "properties" : {
        "objects" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/zObject"
          }
        },
        "type" : {
          "type" : "string",
          "description" : ""
        }
      },
      "example" : {
        "objects" : [ {
          "AccountId" : "2c93808457d787030157e0306be53a75",
          "InvoiceDate" : "2016-10-20",
          "TargetDate" : "2016-10-20"
        } ],
        "type" : "Invoice"
      }
    },
    "ProxyActiongenerateResponse" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/SaveResult"
          }
        }
      }
    },
    "ProxyActionqueryMoreRequest" : {
      "type" : "object",
      "properties" : {
        "queryLocator" : {
          "type" : "string",
          "description" : ""
        }
      }
    },
    "ProxyActionqueryMoreResponse" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/QueryResult"
          }
        }
      }
    },
    "ProxyActionqueryRequest" : {
      "type" : "object",
      "properties" : {
        "queryString" : {
          "type" : "string",
          "description" : "ZOQL expression that specifies the object to query, the fields to retrieve, and any filters.\n"
        }
      },
      "example" : {
        "queryString" : "select AccountId, AccountingCode, AdjustmentDate, AdjustmentNumber, Amount, CancelledById, CancelledDate, Comment, CreatedById, CreatedDate, InvoiceId, InvoiceItemName, InvoiceNumber, ReferenceId, ServiceEndDate, ServiceStartDate, SourceId, SourceType, Status, TransferredToAccounting, Type, UpdatedById, UpdatedDate, ReasonCode from InvoiceItemAdjustment where Id = '2c93808457d787030157e0324aea5158'"
      }
    },
    "ProxyActionqueryResponse" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/QueryResult"
          }
        }
      }
    },
    "ProxyActionsubscribeRequest" : {
      "type" : "object",
      "properties" : {
        "subscribes" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/SubscribeRequest"
          }
        }
      },
      "example" : {
        "subscribes" : [ {
          "Account" : {
            "AccountNumber" : "AN_1476935174239",
            "AutoPay" : false,
            "Batch" : "Batch1",
            "BillCycleDay" : 1,
            "Currency" : "USD",
            "Name" : "AC_1476935174239",
            "PaymentTerm" : "Due Upon Receipt",
            "Status" : "Draft"
          },
          "BillToContact" : {
            "Address1" : "312 2nd Ave W",
            "City" : "Seattle",
            "Country" : "United States",
            "FirstName" : "FN1476935174239",
            "LastName" : "LN1476935174239",
            "PersonalEmail" : "person@test.com",
            "PostalCode" : "98119",
            "State" : "Washington",
            "WorkEmail" : "work@test.com"
          },
          "PaymentMethod" : {
            "CreditCardAddress1" : "312 2nd Ave W",
            "CreditCardCity" : "Seattle",
            "CreditCardCountry" : "United States",
            "CreditCardExpirationMonth" : 12,
            "CreditCardExpirationYear" : 2020,
            "CreditCardHolderName" : "Somebody",
            "CreditCardNumber" : "4111111111111111",
            "CreditCardPostalCode" : "98119",
            "CreditCardState" : "Washington",
            "CreditCardType" : "Visa",
            "Type" : "CreditCard"
          },
          "PreviewOptions" : {
            "EnablePreviewMode" : false,
            "NumberOfPeriods" : 3
          },
          "SubscribeOptions" : {
            "GenerateInvoice" : true,
            "ProcessPayments" : false,
            "SubscribeInvoiceProcessingOptions" : { }
          },
          "SubscriptionData" : {
            "RatePlanData" : [ {
              "RatePlan" : {
                "ProductRatePlanId" : "2c93808457d787030157e0324735512b"
              },
              "RatePlanChargeData" : [ {
                "RatePlanCharge" : {
                  "ProductRatePlanChargeId" : "2c93808457d787030157e03247c2512d"
                }
              } ]
            } ],
            "Subscription" : {
              "AutoRenew" : false,
              "ContractAcceptanceDate" : "2016-10-20",
              "ContractEffectiveDate" : "2016-10-20",
              "InitialTerm" : 12,
              "Name" : "S_1476935174239",
              "Notes" : "this is notes",
              "RenewalTerm" : 12,
              "ServiceActivationDate" : "2016-10-20",
              "TermStartDate" : "2016-10-20",
              "TermType" : "TERMED"
            }
          }
        } ]
      }
    },
    "ProxyActionsubscribeResponse" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/SubscribeResult"
          }
        }
      }
    },
    "ProxyActionupdateRequest" : {
      "type" : "object",
      "properties" : {
        "objects" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/zObject_update"
          }
        }
      },
      "example" : {
        "objects" : [ {
          "AccountNumber" : "AN_1476935163869",
          "AutoPay" : true,
          "Batch" : "Batch1",
          "BillCycleDay" : 1,
          "BillToId" : "2c93808457d787030157e03220684fac",
          "CrmId" : "crmid",
          "Currency" : "USD",
          "DefaultPaymentMethodId" : "2c93808457d787030157e03220ec4fad",
          "Id" : "2c93808457d787030157e0321fdf4fab",
          "InvoiceTemplateId" : "2c93808457d787030157e03208864f97",
          "Name" : "AC_1476935163869",
          "Notes" : "this is notes",
          "PaymentTerm" : "Due Upon Receipt",
          "SoldToId" : "2c93808457d787030157e03220684fac",
          "Status" : "Active"
        } ],
        "type" : "Account"
      }
    },
    "ProxyActionupdateResponse" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/SaveResult"
          }
        }
      }
    },
    "ProxyBadRequestResponse" : {
      "type" : "object",
      "properties" : {
        "Errors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProxyBadRequestResponse_Errors"
          }
        },
        "Success" : {
          "type" : "boolean",
          "description" : ""
        }
      }
    },
    "ProxyCreateAccount" : {
      "type" : "object",
      "required" : [ "Balance", "BcdSettingOption", "BillCycleDay", "CreditBalance", "Currency", "Name", "Status", "TotalInvoiceBalance" ],
      "properties" : {
        "AccountNumber" : {
          "type" : "string",
          "description" : "Unique account number assigned to the account. **Character limit**: 50 **Values**: one of the following:\n\n- null to auto-generate\n- a string of 50 characters or fewer that doesn't begin with the default account number prefix\n"
        },
        "AdditionalEmailAddresses" : {
          "type" : "string",
          "description" : "List of additional email addresses to receive emailed invoices. **Character limit**: 120 **Values**: comma-separated list of email addresses "
        },
        "AllowInvoiceEdit" : {
          "type" : "boolean",
          "description" : " Indicates if associated invoices can be edited.\n**Character limit**: 5 **Values**: `true`, `false` (default if left null) "
        },
        "AutoPay" : {
          "type" : "boolean",
          "description" : " Indicates if future payments are automatically collected when they're due during a Payment Run.\n**Character limit**: 5 **Values**: `true`, `false` (default) "
        },
        "Balance" : {
          "type" : "number",
          "format" : "double",
          "description" : "Current outstanding balance for the account. **Character limit**: 16 **Values**: automatically generated "
        },
        "Batch" : {
          "type" : "string",
          "description" : " Organizes your customer accounts into groups to optimize your billing and payment operations. Required if use the Subscribe call\n**Character limit**: 20 **Values**:any system-defined batch (`Batch1` - `Batch50 `or by name). "
        },
        "BcdSettingOption" : {
          "type" : "string",
          "description" : "Billing cycle day setting option. **Character limit**: 9 **Values**: `AutoSet`, `ManualSet` "
        },
        "BillCycleDay" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Billing cycle day (BCD) on which bill runs generate invoices for the account. **Character limit**: 2 **Values**: any activated system-defined bill cycle day (`1` - `31`) "
        },
        "BillToId" : {
          "type" : "string",
          "description" : "ID of the person to bill for the account. **Character limit**: 32 **Values**: a valid contact ID for the account "
        },
        "CommunicationProfileId" : {
          "type" : "string",
          "description" : "Associates the account with a specified communication profile. **Character limit**: 32 **Values**: a valid communication profile ID "
        },
        "CreditBalance" : {
          "type" : "number",
          "format" : "double",
          "description" : "Total credit balance for the account. **Character limit**: 16 **Values**: automatically generated "
        },
        "CrmId" : {
          "type" : "string",
          "description" : "CRM account ID for the account. A CRM is a customer relationship management system, such as Salesforce.com. **Character limit**: 100 **Values**: a string of 100 characters or fewer "
        },
        "Currency" : {
          "type" : "string",
          "description" : " Currency that the customer is billed in. "
        },
        "CustomerServiceRepName" : {
          "type" : "string",
          "description" : "Name of the account's customer service representative, if applicable. **Character limit**: 50 **Values**: a string of 50 characters or fewer "
        },
        "DefaultPaymentMethodId" : {
          "type" : "string",
          "description" : "ID of the default payment method for the account. This field is required if the AutoPay field is set to `true`. **Character limit**: 32 **Values**: a valid ID for an existing payment method "
        },
        "InvoiceDeliveryPrefsEmail" : {
          "type" : "boolean",
          "description" : "Indicates if the customer wants to receive invoices through email.  **Character limit**: 5 **Values**: `true`, `false` (default if left null) "
        },
        "InvoiceDeliveryPrefsPrint" : {
          "type" : "boolean",
          "description" : "Indicates if the customer wants to receive printed invoices, such as through postal mail. **Character limit**: 5 **Values**: `true`, `false` (default if left null) "
        },
        "InvoiceTemplateId" : {
          "type" : "string",
          "description" : "The ID of the invoice template. Each customer account can use a specific invoice template for invoice generation. **Character limit**: 32 **Values**: a valid template ID configured in Zuora Billing Settings "
        },
        "Name" : {
          "type" : "string",
          "description" : "Name of the account as displayed in the Zuora UI. **Character limit**: 255 **Values**: a string of 255 characters or fewer "
        },
        "Notes" : {
          "type" : "string",
          "description" : " Comments about the account. **Character limit**: 65,535 **Values**: a string of 65,535 characters "
        },
        "ParentId" : {
          "type" : "string",
          "description" : "Identifier of the parent customer account for this Account object. Use this field if you have customer hierarchy enabled. **Character limit**: 32 **Values**: a valid account ID "
        },
        "PaymentGateway" : {
          "type" : "string",
          "description" : "Gateway used for processing electronic payments and refunds. **Character limit**: 40 **Values**: one of the following:\n\n- a valid configured gateway name\n- Null to inherit the default value set in Zuora Payment Settings\n"
        },
        "PaymentTerm" : {
          "type" : "string",
          "description" : "Indicates when the customer pays for subscriptions. **Character limit**: 100 **Values**: a valid, active payment term defined in the web-based UI administrative settings "
        },
        "PurchaseOrderNumber" : {
          "type" : "string",
          "description" : "The number of the purchase order associated with this account. Purchase order information generally comes from customers. **Character limit**: 100 **Values**: a string of 100 characters or fewer "
        },
        "SalesRepName" : {
          "type" : "string",
          "description" : "The name of the sales representative associated with this account, if applicable. **Character limit**: 50 **Values**: a string of 50 characters or fewer "
        },
        "SoldToId" : {
          "type" : "string",
          "description" : "ID of the person who bought the subscription associated with the account. **Character limit**: 32 **Values**: a valid contact ID for the account "
        },
        "Status" : {
          "type" : "string",
          "description" : "Status of the account in the system. **Character limit**: 8 **Values**: one of the following:\n\n- leave null if you're using The Subscribe call\n- if you're using Create:\n- `Draft`\n- `Active`\n- `Canceled`\n"
        },
        "TaxCompanyCode" : {
          "type" : "string",
          "description" : " Unique code that identifies a company account in Avalara. Use this field to calculate taxes based on origin and sold-to addresses in Avalara.\nThis feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).\n\n**Character limit**: 50 **Values**: a valid company code "
        },
        "TaxExemptCertificateID" : {
          "type" : "string",
          "description" : "ID of your customer's tax exemption certificate. **Character limit**: 32 **Values**: a string of 32 characters or fewer "
        },
        "TaxExemptCertificateType" : {
          "type" : "string",
          "description" : "Type of the tax exemption certificate that your customer holds.  **Character limit**: 32 **Values**: a string of 32 characters or fewer "
        },
        "TaxExemptDescription" : {
          "type" : "string",
          "description" : "Description of the tax exemption certificate that your customer holds. **Character limit**: 500 **Values**: a string of 500 characters or fewer "
        },
        "TaxExemptEffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date when the the customer's tax exemption starts. **Character limit**: 29 **Version notes**: requires Zuora Tax "
        },
        "TaxExemptExpirationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date when the customer's tax exemption certificate expires  **Character limit**: 29 **Version notes**: requires Zuora Tax "
        },
        "TaxExemptIssuingJurisdiction" : {
          "type" : "string",
          "description" : "Indicates the jurisdiction in which the customer's tax exemption certificate was issued. **Character limit**: 32 **Values**: a string of 32 characters or fewer "
        },
        "TaxExemptStatus" : {
          "type" : "string",
          "description" : " Status of the account's tax exemption. Required if you use Zuora Tax.\n**Character limit**: 19 **Values**: one of the following:\n\n- `Yes`\n- `No`\n- `PendingVerification`\n"
        },
        "TotalInvoiceBalance" : {
          "type" : "number",
          "format" : "double",
          "description" : "Total balance of the account's invoices. **Character limit**: 16 **Values**: a valid currency value "
        },
        "VATId" : {
          "type" : "string",
          "description" : " EU Value Added Tax ID.\nThis feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).\n\n**Character limit**: 25 **Values**: a valid Value Added Tax ID "
        }
      },
      "example" : {
        "AccountNumber" : "AN_1476935163869",
        "AutoPay" : false,
        "Batch" : "Batch1",
        "BillCycleDay" : 1,
        "CrmId" : "crmid",
        "Currency" : "USD",
        "InvoiceTemplateId" : "2c93808457d787030157e03208864f97",
        "Name" : "AC_1476935163869",
        "Notes" : "this is notes",
        "PaymentTerm" : "Due Upon Receipt",
        "Status" : "Draft"
      }
    },
    "ProxyCreateAmendment" : {
      "type" : "object",
      "required" : [ "RenewalSetting" ],
      "properties" : {
        "AutoRenew" : {
          "type" : "boolean",
          "description" : " Determines whether the subscription is automatically renewed, or whether it expires at the end of the term and needs to be manually renewed. **Required:** For amendment of type TermsAndConditions when changing the automatic renewal status of a subscription.\n**Values**: true, false "
        },
        "ContractEffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the amendment's changes become effective for billing purposes.\n**Version notes**: -- "
        },
        "CurrentTerm" : {
          "type" : "integer",
          "format" : "int64",
          "description" : " The length of the period for the current subscription term. This field can be updated when Status is `Draft`.\n**Required**: Only if the value of the Type field is set to `TermsAndConditions` and TermType is set to `TERMED`. This field is not required if TermType is set to `EVERGREEN`.\n**Character limit**: **Values**: a valid number\n"
        },
        "CurrentTermPeriodType" : {
          "type" : "string",
          "description" : " The period type for the current subscription term. **Values**:\n\n- `Month` (default)\n- `Year`\n- `Day`\n- `Week`\n**Note**:\n\n- This field can be updated when Status is `Draft`.\n- This field is used with the CurrentTerm field to specify the current subscription term.\n"
        },
        "CustomerAcceptanceDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the customer accepts the amendment's changes to the subscription. **Required**: Only if the value of the Status field is set to PendingAcceptance.\n**Version notes**: -- "
        },
        "Description" : {
          "type" : "string",
          "description" : " A description of the amendment.\n**Character limit**: 500 **Values**: maximum 500 characters "
        },
        "EffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the amendment's changes take effective. This field validates that the amendment's changes are within valid ranges of products and product rate plans.\n**Required**: For the cancellation amendments. Optional for other types of amendments.\n**Version notes**: -- "
        },
        "Name" : {
          "type" : "string",
          "description" : " The name of the amendment.\n**Character limit**: 100 **Values**: a string of 100 characters or fewer "
        },
        "RenewalSetting" : {
          "type" : "string",
          "description" : " Specifies whether a termed subscription will remain termed or change to evergreen when it is renewed.\n**Required**: If TermType is Termed **Values**: RENEW_WITH_SPECIFIC_TERM (default), RENEW_TO_EVERGREEN "
        },
        "RenewalTerm" : {
          "type" : "integer",
          "format" : "int64",
          "description" : " The term of renewal for the amended subscription. This field can be updated when Status is `Draft`.\n**Required**: Only if the value of the Type field is set to `TermsAndConditions`.\n**Character limit**: **Values:** a valid number "
        },
        "RenewalTermPeriodType" : {
          "type" : "string",
          "description" : " The period type for the subscription renewal term. This field can be updated when Status is `Draft`.\n**Required**: Only if the value of the Type field is set to `TermsAndConditions`. This field is used with the RenewalTerm field to specify the subscription renewal term.\n**Values**:\n\n- `Month` (default)\n- `Year`\n- `Day`\n- `Week`\n"
        },
        "ServiceActivationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when service is activated.\n**Required**: Only if the value of the Status field is set to PendingActivation.\n**Version notes**: -- "
        },
        "SpecificUpdateDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the UpdateProduct amendment takes effect. This field is only applicable if there is already a future-dated UpdateProduct amendment on the subscription.\n**Required**: Only for the UpdateProduct amendments if there is already a future-dated UpdateProduct amendment on the subscription.\n"
        },
        "Status" : {
          "type" : "string",
          "description" : " The status of the amendment. Type: string (enum) **Character limit**: 17 **Values**: one of the following:\n\n- Draft (default, if left null)\n- Pending Activation\n- Pending Acceptance\n- Completed\n"
        },
        "SubscriptionId" : {
          "type" : "string",
          "description" : " The ID of the subscription that the amendment changes.\n**Character limit**: 32 **Values**: a valid subscription ID "
        },
        "TermStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the new terms and conditions take effect.\n**Required**: Only if the value of the Type field is set to TermsAndConditions.\n**Version notes**: -- "
        },
        "TermType" : {
          "type" : "string",
          "description" : " Indicates if the subscription isTERMED or EVERGREEN.\n\n- A TERMED subscription has an expiration date, and must be manually renewed.\n- An EVERGREEN subscription doesn't have an expiration date, and must be manually ended.\n\n**Required**: Only when as part of an amendment of type TermsAndConditions &#65279;to change the term type of a subscription. Type: string **Character limit**: 9 **Values**: TERMED, EVERGREEN "
        },
        "Type" : {
          "type" : "string",
          "description" : " The type of amendment.\n**Character limit**: 18 **Values**: one of the following:\n\n- Cancellation\n- NewProduct\n- OwnerTransfer\n- RemoveProduct\n- Renewal\n- UpdateProduct\n- TermsAndConditions\n- SuspendSubscription (This value is in **Limited Availability**.)\n- ResumeSubscription (This value is in **Limited Availability**.)\n"
        }
      },
      "example" : {
        "ContractEffectiveDate" : "2016-10-20",
        "CustomerAcceptanceDate" : "2016-10-20",
        "Description" : "AMpqvyqhhzpg",
        "EffectiveDate" : "2016-10-20",
        "Name" : "AMpqvyqhhzpg",
        "RatePlanData" : {
          "RatePlan" : {
            "ProductRatePlanId" : "2c93808457d787030157e02ec2202584"
          },
          "RatePlanChargeData" : [ {
            "RatePlanCharge" : {
              "ProductRatePlanChargeId" : "2c93808457d787030157e02ec34d2587"
            }
          } ]
        },
        "ServiceActivationDate" : "2016-10-20",
        "SubscriptionId" : "2c93808457d787030157e02ec3f9258e",
        "Type" : "NewProduct"
      }
    },
    "ProxyCreateContact" : {
      "type" : "object",
      "required" : [ "AccountId", "FirstName", "LastName" ],
      "properties" : {
        "AccountId" : {
          "type" : "string",
          "description" : " The Zuora account ID associated with this contact. This field is not required when you use the Subscribe call. This field is required for all other calls.\n**Character limit: **32 **Values: **a valid account ID "
        },
        "Address1" : {
          "type" : "string",
          "description" : " The first line of the contact's address, which is often a street address or business name.\n**Character limit**: 255 **Values**: a string of 255 characters or fewer "
        },
        "Address2" : {
          "type" : "string",
          "description" : " The second line of the contact's address.\n**Character limit**: 255 **Values**: a string of 255 characters or fewer "
        },
        "City" : {
          "type" : "string",
          "description" : " The city of the contact's address.\n**Character limit**: 40 **Values: **a string of 40 characters or fewer "
        },
        "Country" : {
          "type" : "string",
          "description" : " The country of the contact's address. "
        },
        "County" : {
          "type" : "string",
          "description" : " The country. May optionally be used by Zuora Tax to calculate county tax.\n**Character limit**: 32 **Values**: a string of 32 characters or fewer "
        },
        "Description" : {
          "type" : "string",
          "description" : " A description for the contact.\n**Character limit**: 100 **Values**: a string of 100 characters or fewer "
        },
        "Fax" : {
          "type" : "string",
          "description" : " The contact's fax number.\n**Character limit**: 40 **Values**: a string of 40 characters or fewer "
        },
        "FirstName" : {
          "type" : "string",
          "description" : " The contact's first name.\n**Character limit**: 100 **Values**: a string of the contact's first name "
        },
        "HomePhone" : {
          "type" : "string",
          "description" : " The contact's home phone number.\n**Character limit**: 40 **Values**: a string of 40 characters or fewer "
        },
        "LastName" : {
          "type" : "string",
          "description" : " The contact's last name.\n**Character limit**: 100 **Values**: a string of 100 characters or fewer "
        },
        "MobilePhone" : {
          "type" : "string",
          "description" : " The contact's mobile phone number.\n**Character limit**: 40 **Values**: a string of 40 characters or fewer "
        },
        "NickName" : {
          "type" : "string",
          "description" : " A nickname for the contact.\n**Character limit**: 100 **Values**: a string of 100 characters or fewer "
        },
        "OtherPhone" : {
          "type" : "string",
          "description" : " An additional phone number for the contact.\n**Character limit**: 40 **Values**: a string of 40 characters or fewer "
        },
        "OtherPhoneType" : {
          "type" : "string",
          "description" : "The type of the `OtherPhone`. **Character limit**: 20 **Values**: `Work`, `Mobile`, `Home`, `Other` "
        },
        "PersonalEmail" : {
          "type" : "string",
          "description" : " The contact's personal email address.\n**Character limit**: 80 **Values**: a string of 80 characters or fewer "
        },
        "PostalCode" : {
          "type" : "string",
          "description" : " The zip code for the contact's address.\n**Character limit:** 20 **Values: **a string of 20 characters or fewer "
        },
        "State" : {
          "type" : "string",
          "description" : " The state or province of the contact's address. "
        },
        "TaxRegion" : {
          "type" : "string",
          "description" : "If using Zuora Tax rules "
        },
        "WorkEmail" : {
          "type" : "string",
          "description" : " The contact's business email address.\n**Character limit**: 80 **Values**: a string of 80 characters or fewer "
        },
        "WorkPhone" : {
          "type" : "string",
          "description" : " The contact's business phone number.\n**Character limit**: 40 **notes**: -- **Values**: a string of 40 characters or fewer "
        }
      },
      "example" : {
        "AccountId" : "2c93808457d787030157e0321fdf4fab",
        "Address1" : "312 2nd Ave W",
        "City" : "Seattle",
        "Country" : "United States",
        "Description" : "desc",
        "Fax" : "123456",
        "FirstName" : "FN1476935164020",
        "HomePhone" : "86123456789",
        "LastName" : "LN1476935164020",
        "MobilePhone" : "8613312345678",
        "NickName" : "this is nick name",
        "OtherPhone" : "11111111111111111",
        "OtherPhoneType" : "Work",
        "PersonalEmail" : "person@test.com",
        "PostalCode" : "98119",
        "State" : "Washington",
        "TaxRegion" : "CA",
        "WorkEmail" : "work@test.com"
      }
    },
    "ProxyCreateExport" : {
      "type" : "object",
      "required" : [ "Format", "Query", "Size", "Zip" ],
      "properties" : {
        "ConvertToCurrencies" : {
          "type" : "string",
          "description" : " The currencies that you want to convert transaction amounts into. You can specify any number of currencies. Specify the currencies using their Foreign Currency Conversion enabled to use this field.\n**Character limit**: **Values**: a list of valid currency codes "
        },
        "Encrypted" : {
          "type" : "boolean",
          "description" : " Exports a secure version of encrypted data source fields. such as the AchAccountNumber field of the PaymentMethod object and the DefaultPaymentMethod data souce objects.\n**Character limit**: 5 **Values:** true, false "
        },
        "FileId" : {
          "type" : "string",
          "description" : " The ID of the file generated by an export query. This fiel is automatically generated when an Export object is created. Use this file ID when you download the export file.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "Format" : {
          "type" : "string",
          "description" : " The format that you want the export file to use.\n**Character limit**: 4 **Values**: csv, html "
        },
        "Name" : {
          "type" : "string",
          "description" : " The name of the export.\n**Character limit**: 255 **Values**: a string of 255 characters or fewer "
        },
        "Query" : {
          "type" : "string",
          "description" : "optional"
        },
        "Size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " The number of records or rows exported. This field value is null until the export status is Completed.\n**Character limit**: **Values**: automatically generated "
        },
        "Status" : {
          "type" : "string",
          "description" : " The status of the export. Type: string (enum) **Character limit**: 10 **Values**: automatically generated to be one of the following values:\n\n- Pending\n- Processing\n- Completed\n- Canceled\n- Failed\n"
        },
        "StatusReason" : {
          "type" : "string",
          "description" : " The reason for the given status. Use this information to help ascertain why an export failed.\n**Character limi**t: 255 **Values**: automatically generated "
        },
        "Zip" : {
          "type" : "boolean",
          "description" : " Indicates if you want the resulting export file to be compressed into a zip file.\n**Character limit**: **Values**: true, false (default) "
        }
      },
      "example" : {
        "Format" : "csv",
        "Name" : "test_Export_1476935164445",
        "Query" : "select * from account",
        "Status" : "Processing",
        "Zip" : true
      }
    },
    "ProxyCreateInvoice" : {
      "type" : "object",
      "required" : [ "AccountId", "AdjustmentAmount", "Body", "CreditBalanceAdjustmentAmount", "PaymentAmount", "RefundAmount", "TaxAmount", "TaxExemptAmount" ],
      "properties" : {
        "AccountId" : {
          "type" : "string",
          "description" : ""
        },
        "AdjustmentAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The amount of the invoice adjustments associated with the invoice. **Character limi**t: 16 **Values**: a valid currency amount "
        },
        "Body" : {
          "type" : "string",
          "description" : " Required "
        },
        "CreditBalanceAdjustmentAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The currency amount of the adjustment applied to the customer's credit balance.\n**Character limit**: 16 **Values**: a valid currency amount This field is only available if the [Zuora Global Support](http://support.zuora.com/) to enable this feature.\n\n\n"
        },
        "IncludesOneTime" : {
          "type" : "boolean",
          "description" : " Specifies whether the invoice includes one-time charges. You can use this field only with the Generate call for the Invoice object.\n**Character limit**: 5 **Values**: automatically generated from one of the following: `True` (default), `False` "
        },
        "IncludesRecurring" : {
          "type" : "boolean",
          "description" : " Specifies whether the invoice includes recurring charges. You can use this field only with the Generate call for the Invoice object.\n**Character limit**: 5 **Values**: automatically generated from one of the following: `True` (default), `False` "
        },
        "IncludesUsage" : {
          "type" : "boolean",
          "description" : " Specifies whether the invoice includes usage charges. You can use this field only with the Generate call for the Invoice object.\n**Character limit**: 5 **Values**: automatically generated from one of the following: `True `(default), `False` "
        },
        "InvoiceDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " Specifies the date on which to generate the invoice.\n**Character limit**: 29 **Version notes**: -- "
        },
        "PaymentAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The amount of payments applied to the invoice.\n**Character limit**: 16 **Value**s: automatically generated "
        },
        "RefundAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : " Specifies the amount of a refund that was applied against an earlier payment on the invoice.\n**Character limit**: 16 **Values**: automatically generated "
        },
        "TargetDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " This date is used to determine which charges are to be billed. All charges that are to be billed on this date or prior will be included in this bill run.\n**Character limit**: 29 **Version notes**: -- "
        },
        "TaxAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The total amount of the taxes applied to the invoice.\n**Character limit**: 16 **Values**: automatically generated "
        },
        "TaxExemptAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The total amount of the invoice that is exempt from taxation.\n**Character limit**: 16 **Values**: automatically generated "
        }
      },
      "example" : {
        "AccountId" : "2c93808457d787030157e031d2704c28",
        "InvoiceDate" : "2016-10-20",
        "TargetDate" : "2016-10-20"
      }
    },
    "ProxyCreateInvoiceAdjustment" : {
      "type" : "object",
      "required" : [ "AccountId", "AdjustmentNumber", "Amount", "CustomerName", "CustomerNumber", "ImpactAmount", "Status", "Type" ],
      "properties" : {
        "AccountId" : {
          "type" : "string",
          "description" : " The ID of the account that owns the invoice.\n**Character limit**: 32 **Values**: inherited from Account.ID for the invoice owner "
        },
        "AccountingCode" : {
          "type" : "string",
          "description" : "The accounting code for the invoice adjustment. "
        },
        "AdjustmentDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the invoice adjustment is applied. This date must be the same as the invoice's date or later.\n**Character limit**: 29 **Values**: Leave null to automatically generate the current date "
        },
        "AdjustmentNumber" : {
          "type" : "string",
          "description" : " A unique string to identify an individual invoice adjustment.\n**Character limit**: 255 **Values**: automatically generated "
        },
        "Amount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The amount of the invoice adjustment.\n**Character limit**: 16 **Values**: a valid currency amount "
        },
        "Comments" : {
          "type" : "string",
          "description" : " Use this field to record comments about the invoice adjustment.\n**Character limit**: 255 **Values**: a string of 255 characters or fewer "
        },
        "CustomerName" : {
          "type" : "string",
          "description" : " The name of the account that owns the associated invoice.\n**Character limit**: 50 **Values**: inherited from Account.Name "
        },
        "CustomerNumber" : {
          "type" : "string",
          "description" : " The unique account number of the customer's account.\n**Character limit**: 70 **Values**: inherited from Account.AccountNumber "
        },
        "ImpactAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The amount that changes the balance of the associated invoice.\n**Character limit**: 16 **Values**: automatically calculated "
        },
        "InvoiceId" : {
          "type" : "string",
          "description" : " The ID of the invoice associated with the adjustment. This field is required if you don't specify a value for the `InvoiceNumber` field.\n**Character limit**: 32 **Values**: a valid invoice ID "
        },
        "InvoiceNumber" : {
          "type" : "string",
          "description" : " The unique identification number for the associated invoice. This field is required if you don't specify a value for the `InvoiceId` field.\n**Character limit**: 32 **Values**: a valid invoice number "
        },
        "ReasonCode" : {
          "type" : "string",
          "description" : " A code identifying the reason for the transaction. Must be an existing reason code or empty. If you do not specify a value, Zuora uses the default reason code.\n**Character limit**: 32 **V****alues**: a valid reason code "
        },
        "ReferenceId" : {
          "type" : "string",
          "description" : " A code to reference an object external to Zuora. For example, you can use this field to reference a case number in an external system.\n**Character limit**: 60 **Values**: a string of 60 characters or fewer "
        },
        "Status" : {
          "type" : "string",
          "description" : " The status of the invoice adjustment. This field is required in the Query call, but is automatically generated in other calls.\n**Character limit**: 9 **Values**: `Canceled`, `Processed` "
        },
        "Type" : {
          "type" : "string",
          "description" : " Indicates whether the adjustment credits or debits the invoice amount.\n**Character limit**: 6 **Values**: `Credit`, `Charge` "
        }
      },
      "example" : {
        "AccountingCode" : "Accounts Receivable",
        "AdjustmentDate" : "2016-10-20",
        "Amount" : 1.2,
        "Comments" : "this is comments",
        "InvoiceId" : "2c93808457d787030157e030d10f3f64",
        "InvoiceNumber" : "INV00000001",
        "ReferenceId" : "refid-1476935078657",
        "Type" : "Credit"
      }
    },
    "ProxyCreateInvoicePayment" : {
      "type" : "object",
      "required" : [ "Amount", "InvoiceId" ],
      "properties" : {
        "Amount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The amount of the payment.\n**Character limit**: 16 **Values**: a valid currency amount "
        },
        "InvoiceId" : {
          "type" : "string",
          "description" : " The unique ID of the invoice associated with this invoice payment.\n**Character limit**: 32 **Values**: a valid invoice ID "
        },
        "PaymentId" : {
          "type" : "string",
          "description" : " The unique ID of the payment associated with this invoice payment.\n**Character limit**: 32 **V****alues**: a valid payment ID "
        }
      },
      "example" : {
        "Amount" : 10,
        "InvoiceId" : "2c93808457d787030157e02deadb1b6d",
        "PaymentId" : "2c93808457d787030157e02de5fc1b57"
      }
    },
    "ProxyCreateOrModifyResponse" : {
      "type" : "object",
      "properties" : {
        "Id" : {
          "type" : "string",
          "description" : ""
        },
        "Success" : {
          "type" : "boolean",
          "description" : ""
        }
      }
    },
    "ProxyCreatePayment" : {
      "type" : "object",
      "required" : [ "AccountId", "Amount", "AppliedCreditBalanceAmount", "EffectiveDate", "GatewayResponse", "GatewayResponseCode", "GatewayState", "PaymentNumber", "Status", "Type" ],
      "properties" : {
        "AccountId" : {
          "type" : "string",
          "description" : " The unique account ID for the customer that the payment is for.\n**Character limit**: 32 **Values**: a valid account ID "
        },
        "AccountingCode" : {
          "type" : "string",
          "description" : " The Chart of Accounts "
        },
        "Amount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The amount of the payment.\n**Character limit**: 16 **Values**: a valid currency value "
        },
        "AppliedCreditBalanceAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The amount of the payment to apply to a credit balance. This field is required in the Create call when the `AppliedInvoiceAmount` field value is null.\n**Character limit**: 16 **Values**: a valid currency value "
        },
        "AuthTransactionId" : {
          "type" : "string",
          "description" : " The authorization transaction ID from the payment gateway. Use this field for electronic payments, such as credit cards.\n**Character limit**: 50 **Values**: a string of 50 characters or fewer "
        },
        "Comment" : {
          "type" : "string",
          "description" : " Additional information related to the payment.\n**Character limit**: 255 **Values**: a string of 255 characters or fewer "
        },
        "EffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the payment takes effect.\n**Character limit**: 29 **Values**: a valid date and time value "
        },
        "Gateway" : {
          "type" : "string",
          "description" : " Name of the gateway instance that processes the payment. When creating a Payment, this must be a valid gateway instance name and this gateway must support the specific payment method. If not specified, the default gateway on the Account will be used. "
        },
        "GatewayOrderId" : {
          "type" : "string",
          "description" : " A merchant-specified natural key value that can be passed to the electronic payment gateway when a payment is created. If not specified, the PaymentNumber will be passed in instead.\n**Character limit**: 70 **Values**: a string of 70 characters or fewer "
        },
        "GatewayResponse" : {
          "type" : "string",
          "description" : " The message returned from the payment gateway for the payment. This message is gateway-dependent.\n**Character limit**: 500 **Values**: automatically generated "
        },
        "GatewayResponseCode" : {
          "type" : "string",
          "description" : " The code returned from the payment gateway for the payment. This code is gateway-dependent.\n**Character limit**: 20 **Values**: automatically generated "
        },
        "GatewayState" : {
          "type" : "string",
          "description" : " The status of the payment in the gateway; use for reconciliation.\n**Character limit**: 19 **Values**: automatically generated "
        },
        "PaymentMethodId" : {
          "type" : "string",
          "description" : " The ID of the payment method used for the payment. Required for Create.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "PaymentNumber" : {
          "type" : "string",
          "description" : " The unique identification number of a payment. For example: P-00000028.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "ReferenceId" : {
          "type" : "string",
          "description" : " The transaction ID returned by the payment gateway. Use this field to reconcile payments between your gateway and Z-Payments.\n**Character limit**: 60 **Values**: a string of 60 characters or fewer "
        },
        "SoftDescriptor" : {
          "type" : "string",
          "description" : " A payment gateway-specific field that maps to Zuora for the gateways, Orbital, Vantiv and Verifi. **Character limit**: 35 **Values**: `[SDMerchantName]*[SDProductionInfo]` "
        },
        "SoftDescriptorPhone" : {
          "type" : "string",
          "description" : " A payment gateway-specific field that maps to Zuora for the gateways, Orbital, Vantiv and Verifi. **Character limit**: 20 **Values**: `[SDPhone]` "
        },
        "Status" : {
          "type" : "string",
          "description" : " The status of the payment in Zuora. The value depends on the type of payment.\n**Character limit**: 11 **Values**: one of the following:\n\n-  Electronic payments: `Processed`, `Error`, `Voided`\n\n-  External payments: `Processed`, `Canceled`\n\n* Update of status can change value from `Processed` to `Canceled` when the payment type is external. "
        },
        "Type" : {
          "type" : "string",
          "description" : " Indicates if the payment is external or electronic.\n**Character limit**: 10 **Values**: `External`, `Electronic` "
        }
      },
      "example" : {
        "AccountId" : "2c93808457d787030157e03190e748ea",
        "Amount" : 2,
        "AppliedCreditBalanceAmount" : 0,
        "AppliedInvoiceAmount" : 2,
        "EffectiveDate" : "2016-10-20",
        "InvoiceId" : "2c93808457d787030157e03195604902",
        "PaymentMethodId" : "2c93808457d787030157e03196d1490e",
        "Status" : "Processed",
        "Type" : "Electronic"
      }
    },
    "ProxyCreatePaymentMethod" : {
      "type" : "object",
      "required" : [ "TotalNumberOfErrorPayments", "TotalNumberOfProcessedPayments", "Type", "UseDefaultRetryRule" ],
      "properties" : {
        "AccountId" : {
          "type" : "string",
          "description" : " The ID of the customer account associated with this payment method. This field is not required for the account ID. "
        },
        "AchAbaCode" : {
          "type" : "string",
          "description" : " The nine-digit routing number or ABA number used by banks. Use this field for ACH payment methods.\n**Character limit**: 9 **Values**: a string of 9 characters or fewer "
        },
        "AchAccountName" : {
          "type" : "string",
          "description" : " The name of the account holder, which can be either a person or a company. Use this field for ACH payment methods.\n**Character limit**: 70 **Values**: a string of 70 characters or fewer "
        },
        "AchAccountType" : {
          "type" : "string",
          "description" : " The type of bank account associated with the ACH payment. Use this field for ACH payment methods.\n**Character limit**: 16 **Values**:\n\n- `BusinessChecking`\n- `Checking`\n- `Saving`\n"
        },
        "AchAddress1" : {
          "type" : "string",
          "description" : " Line 1 for the ACH address. Required on create for the Vantiv payment gateway. Optional for other gateways.\n**Character limit:** **Values:** an address "
        },
        "AchAddress2" : {
          "type" : "string",
          "description" : " Line 2 for the ACH address. Required on create for the Vantiv payment gateway. Optional for other gateways.\n**Character limit:** **Values:** an address "
        },
        "AchBankName" : {
          "type" : "string",
          "description" : " The name of the bank where the ACH payment account is held. Use this field for ACH payment methods.\n**Character limit**: 70 **Values**: a string of 70 characters or fewer "
        },
        "BankBranchCode" : {
          "type" : "string",
          "description" : " The branch code of the bank used for direct debit. Use this field for direct debit payment methods.\n**Character limit**: 10 **Values**:  string of 10 characters or fewer "
        },
        "BankCheckDigit" : {
          "type" : "string",
          "description" : "The check digit in the international bank account number, which confirms the validity of the account. Use this field for direct debit payment methods. **Character limit**: 4 **Values**:  string of 4 characters or fewer "
        },
        "BankCity" : {
          "type" : "string",
          "description" : " The city of the direct debit bank. Use this field for direct debit payment methods.\n**Character limit**:70 **Values**:  string of 70 characters or fewer "
        },
        "BankCode" : {
          "type" : "string",
          "description" : " The sort code or number that identifies the bank. This is also known as the sort code. This field is required for direct debit payment methods.\n**Character limit**: 18 **Values**:  string of 18 characters or fewer "
        },
        "BankName" : {
          "type" : "string",
          "description" : " The name of the direct debit bank. Use this field for direct debit payment methods.\n**Character limit**:80 **Values**:  string of 80 characters or fewer "
        },
        "BankPostalCode" : {
          "type" : "string",
          "description" : " The zip code or postal code of the direct debit bank. Use this field for direct debit payment methods.\n**Character limit**:20 **Values**:  string of 20 characters or fewer "
        },
        "BankStreetName" : {
          "type" : "string",
          "description" : " The name of the street of the direct debit bank. Use this field for direct debit payment methods.\n**Character limit**:60 **Values**:  string of 60 characters or fewer "
        },
        "BankStreetNumber" : {
          "type" : "string",
          "description" : " The number of the direct debit bank. Use this field for direct debit payment methods.\n**Character limit**:10 **Values**:  string of 10 characters or fewer "
        },
        "BankTransferAccountName" : {
          "type" : "string",
          "description" : " The name on the direct debit bank account. Use this field for direct debit payment methods.\n**Character limit**: 60 **Values**:  string of 60 characters or fewer "
        },
        "BankTransferAccountType" : {
          "type" : "string",
          "description" : " The type of the customer's bank account. Use this field for direct debit payment methods.\n**Character limit**: 11 **Values**: `DirectDebit` "
        },
        "BankTransferType" : {
          "type" : "string",
          "description" : " Specifies the type of direct debit transfer. The value of this field is dependent on the country of the user. Use this field is used for direct debit payment methods.\n**Character limit**: 20 **Values**:\n\n- `AutomatischIncasso` (NL)\n- `LastschriftDE` (Germany)\n- `LastschriftAT` (Austria)\n- `DemandeDePrelevement` (FR)\n- `DirectDebitUK` (UK)\n- `Domicil` (Belgium)\n- `LastschriftCH` (CH)\n- `RID` (Italy)\n- `OrdenDeDomiciliacion` (Spain)\n"
        },
        "BusinessIdentificationCode" : {
          "type" : "string",
          "description" : " The business identification code for Swiss direct payment methods that use the Global Collect payment gateway. Use this field only for direct debit payments in Switzerland with Global Collect.\n**Character limit**: 11 **Values**: string of 11 characters or fewer "
        },
        "City" : {
          "type" : "string",
          "description" : " The city of the customer's address. Use this field for direct debit payment methods.\n**Character limit**:80 **Values**:  string of 80 characters or fewer "
        },
        "Country" : {
          "type" : "string",
          "description" : " The two-letter country code of the customer's address. Use this field for direct debit payment methods.\n**Character limit**: 2 **Values**: a valid country code "
        },
        "CreditCardAddress1" : {
          "type" : "string",
          "description" : " The first line of the card holder's address, which is often a street address or business name. Use this field for credit card and direct debit payment methods.\n**Character limit**: 255 **Values**: a string of 255 characters or fewer "
        },
        "CreditCardAddress2" : {
          "type" : "string",
          "description" : " The second line of the card holder's address. Use this field for credit card and direct debit payment methods.\n**Character limit**: 255 **Values**: a string of 255 characters or fewer "
        },
        "CreditCardCity" : {
          "type" : "string",
          "description" : " The city of the card holder's address. Use this field for credit card and direct debit payment methods **Character limit**: 40 **Values**: a string of 40 characters or fewer "
        },
        "CreditCardCountry" : {
          "type" : "string",
          "description" : " The country of the card holder's address. "
        },
        "CreditCardExpirationMonth" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " The expiration month of the credit card or debit card. Use this field for credit card and direct debit payment methods.\n**Character limit**: 2 **Values**: a two-digit number, 01 - 12 "
        },
        "CreditCardExpirationYear" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " The expiration month of the credit card or debit card. Use this field for credit card and direct debit payment methods.\n**Character limit**: 4 **Values**: a four-digit number "
        },
        "CreditCardHolderName" : {
          "type" : "string",
          "description" : " The full name of the card holder. Use this field for credit card and direct debit payment methods.\n**Character limit**: 50 **Values**: a string of 50 characters or fewer "
        },
        "CreditCardPostalCode" : {
          "type" : "string",
          "description" : " The billing address's zip code. This field is required only when you define a debit card or credit card payment.\n**Character limit**: 20 **Values**: a string of 20 characters or fewer "
        },
        "CreditCardState" : {
          "type" : "string",
          "description" : " The billing address's state. Use this field is if the `CreditCardCountry` value is either Canada or the US. State names must be spelled in full. "
        },
        "CreditCardType" : {
          "type" : "string",
          "description" : " The type of credit card or debit card. This field is required only when you define a debit card or credit card payment.\n**Character limit**: 32 **Values**: `AmericanExpress`, `Discover`, `MasterCard`, `Visa` "
        },
        "DeviceSessionId" : {
          "type" : "string",
          "description" : " The session ID of the user when the `PaymentMethod` was created or updated. Some gateways use this field for fraud prevention. If this field is passed to Zuora, then Zuora passes this field to supported gateways. Currently only Verifi supports this field.\n**Character limit**: 255 **Values**: "
        },
        "Email" : {
          "type" : "string",
          "description" : " An email address for the payment method in addition to the bill to contact email address.\n**Character limit**: 80 **Values**: a string of 80 characters or fewer "
        },
        "ExistingMandate" : {
          "type" : "string",
          "description" : " Indicates if the customer has an existing mandate or a new mandate. A mandate is a signed authorization for UK and NL customers. When you are migrating mandates from another system, be sure to set this field correctly. If you indicate that a new mandate is an existing mandate or vice-versa, then transactions fail. This field is used only for the direct debit payment method.\n**Character limit**: 3 **Values**: `Yes`, `No` "
        },
        "FirstName" : {
          "type" : "string",
          "description" : " The customer's first name. This field is used only for the direct debit payment method.\n**Character limit**: 30 **Values**: a string of 30 characters or fewer "
        },
        "IBAN" : {
          "type" : "string",
          "description" : " The International Bank Account Number. This field is used only for the direct debit payment method.\n**Character limit**: 42 **Values**: a string of 42 characters or fewer "
        },
        "IPAddress" : {
          "type" : "string",
          "description" : " The IP address of the user when the payment method was created or updated. Some gateways use this field for fraud prevention. If this field is passed to Zuora, then Zuora passes this field to supported gateways. Currently PayPal, CyberSource, Authorize.Net, and Verifi support this field.\n**Character limit**: 15 **Values**: a string of 15 characters or fewer "
        },
        "LastName" : {
          "type" : "string",
          "description" : " The customer's last name. This field is used only for the direct debit payment method.\n**Character limit**: 70 **Values**: a string of 70 characters or fewer "
        },
        "LastTransactionDateTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date of the most recent transaction.\n**Character limit**: 29 **Values**: a valid date and time value "
        },
        "LastTransactionStatus" : {
          "type" : "string",
          "description" : " The status of the most recent transaction.\n**Character limit**: 39 **Values**: automatically generated "
        },
        "MandateCreationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the mandate was created. A mandate is a signed authorization for UK and NL customers. This field is used only for the direct debit payment method.\n**Character limit**: 29 **Values**: a valid date and time value "
        },
        "MandateID" : {
          "type" : "string",
          "description" : " The ID of the mandate. A mandate is a signed authorization for UK and NL customers. This field is used only for the direct debit payment method.\n**Character limit**: 36 **Values**: a string of 36 characters or fewer "
        },
        "MandateReceived" : {
          "type" : "string",
          "description" : " Indicates if  the mandate was received. A mandate is a signed authorization for UK and NL customers. This field is used only for the direct debit payment method.\n**Character limit**: 3 **Values**: `Yes`, `No `(case-sensitive) "
        },
        "MandateUpdateDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the mandate was last updated. A mandate is a signed authorization for UK and NL customers. This field is used only for the direct debit payment method.\n**Character limit**: 29 **Values**: a valid date and time value "
        },
        "MaxConsecutivePaymentFailures" : {
          "type" : "integer",
          "description" : " Specifies the number of allowable consecutive failures Zuora attempts with the payment method before stopping.\n**Values**: a valid number "
        },
        "PaymentRetryWindow" : {
          "type" : "integer",
          "description" : " The retry interval setting, which prevents making a payment attempt if the last failed attempt was within the last specified number of hours. This field is required if the `UseDefaultRetryRule` field value is set to `false`.\n**Character limit**: 4 **Values**: a whole number between 1 and 1000, exclusive "
        },
        "PaypalBaid" : {
          "type" : "string",
          "description" : " The PayPal billing agreement ID, which is a contract between two PayPal accounts. Typically, the selling party initiates a request to create a BAID, and sends it to buying party for acceptance. The seller can keep track of the BAID and use it for future charges against the buyer. This field is required when defining a PayPal payment method.\n**Character limit**: 64 **Values**: a string of 64 characters or fewer "
        },
        "PaypalEmail" : {
          "type" : "string",
          "description" : " The email address associated with the account holder's PayPal account or of the PayPal account of the person paying for the service. This field is required only when you define a PayPal payment method.\n**Character limit**: 80 **Values**: a string of 80 characters or fewer "
        },
        "PaypalPreapprovalKey" : {
          "type" : "string",
          "description" : " PayPal's Adaptive Payments API key. Zuora does not create this key, nor does it call PayPal to generate it. You must use PayPal's Adaptive Payments' API to generate this key, and then pass it to Zuora. Zuora uses this key to authorize future payments to PayPal's Adaptive Payments API. This field is required when you use PayPal Adaptive Payments gateway.\n**Character limit**: 32 **Values**: a valid PayPal Adaptive Payment pre-approval key "
        },
        "PaypalType" : {
          "type" : "string",
          "description" : " Specifies the PayPal gateway: PayFlow Pro (Express Checkout) or Adaptive Payments. This field is required when you use PayPal Adaptive Payments or Payflow Pro (Express Checkout) gateways.\n**Character limit**: 32 **Values**: `ExpressCheckout`, `AdaptivePayments` "
        },
        "Phone" : {
          "type" : "string",
          "description" : " The phone number that the account holder registered with the bank. This field is used for credit card validation when passing to a gateway.\n**Character limit**: 40 **Values**: a string of 40 characters or fewer "
        },
        "PostalCode" : {
          "type" : "string",
          "description" : " The zip code of the customer's address. This field is used only for the direct debit payment method.\n**Character limit**: 20 **Values**: a string of 20 characters or fewer "
        },
        "SecondTokenId" : {
          "type" : "string",
          "description" : " A gateway unique identifier that replaces sensitive payment method data. SecondTokenId is conditionally required only when TokenID is being used to represent a gateway customer profile. SecondTokenId is used in the CC Reference Transaction payment method. **Character limit**: 64 **Values**: a string of 64 characters or fewer "
        },
        "State" : {
          "type" : "string",
          "description" : " The state of the customer's address. This field is used only for the direct debit payment method.\n**Character limit**: 70 **Values**: a string of 70 characters or fewer "
        },
        "StreetName" : {
          "type" : "string",
          "description" : " The street name of the customer's address. This field is used only for the direct debit payment method.\n**Character limit**: 100 **Values**: a string of 100 characters or fewer "
        },
        "StreetNumber" : {
          "type" : "string",
          "description" : " The street number of the customer's address. This field is used only for the direct debit payment method.\n**Character limit**: 30 **Values**: a string of 30 characters or fewer "
        },
        "TokenId" : {
          "type" : "string",
          "description" : " A gateway unique identifier that replaces sensitive payment method data or represents a gateway's unique customer profile. When TokenId is used to represent a customer profile, then SecondTokenId is conditionally required for representing the underlying tokenized payment method. TokenId is required for the CC Reference Transaction payment method.\n**Character limit**: 255 **Values**: a string of 255 characters or fewer "
        },
        "TotalNumberOfErrorPayments" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " The number of error payments that used this payment method.\n**Character limit**: **Values**: automatically generated "
        },
        "TotalNumberOfProcessedPayments" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " The number of successful payments that used this payment method.\n**Character limit**: **Values**: automatically generated "
        },
        "Type" : {
          "type" : "string",
          "description" : " Create Query Update Delete Filter "
        },
        "UseDefaultRetryRule" : {
          "type" : "boolean",
          "description" : " Determines whether to use the default retry rules configured in the Zuora Payments settings. Set this to `true` to use the default retry rules. Set this to `false` to set the specific rules for this payment method. If you set this value to `false`, then the fields, `PaymentRetryWindow` and `MaxConsecutivePaymentFailures`, are required.\n**Character limit**: 5 **Values**: `t``rue`, `false` "
        }
      },
      "example" : {
        "AccountId" : "2c93808457d787030157e0321fdf4fab",
        "CreditCardAddress1" : "312 2nd Ave W",
        "CreditCardCity" : "Seattle",
        "CreditCardCountry" : "United States",
        "CreditCardExpirationMonth" : 12,
        "CreditCardExpirationYear" : 2020,
        "CreditCardHolderName" : "Somebody",
        "CreditCardNumber" : "4111111111111111",
        "CreditCardPostalCode" : "98119",
        "CreditCardState" : "Washington",
        "CreditCardType" : "Visa",
        "MaxConsecutivePaymentFailures" : 10,
        "PaymentRetryWindow" : 3,
        "Type" : "CreditCard"
      }
    },
    "ProxyCreateProduct" : {
      "type" : "object",
      "required" : [ "EffectiveEndDate", "EffectiveStartDate", "Name" ],
      "properties" : {
        "AllowFeatureChanges" : {
          "type" : "boolean",
          "description" : " Controls whether to allow your users to add or remove features while creating or amending a subscription.\n**Character** **limit**: n/a\n**Values**: true, false (default) "
        },
        "Category" : {
          "type" : "string",
          "description" : " Category of the product. Used by Zuora Quotes Guided Product Selector.\n**Character** **limit**: 100\n**Values**: One of the following:\n\n- Base Products\n- Add On Services\n- Miscellaneous Products\n"
        },
        "Description" : {
          "type" : "string",
          "description" : " A descriptionof the product. **Character limit**: 500 **Values**: a string of 500 characters or fewer "
        },
        "EffectiveEndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date when the product expires and can't be subscribed to anymore. **Character limit**: 29 **Values**: a valid date and time value "
        },
        "EffectiveStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date when the product becomes available and can be subscribed to. **Character limit**: 29 **Values**: a valid date and time value "
        },
        "Name" : {
          "type" : "string",
          "description" : "The name of the product. This information is displayed in the product catalog pages in the web-based UI. **Character limit**: 100 **Values**: a string of 100 characters or fewer "
        },
        "SKU" : {
          "type" : "string",
          "description" : "The unique SKU for the product. **Character limit**: 50 **Values**: one of the following:\n\n- leave null for automatic generated\n- an alphanumeric string of 50 characters or fewer\n"
        }
      },
      "example" : {
        "Description" : "Create product via API",
        "EffectiveEndDate" : "2066-10-20",
        "EffectiveStartDate" : "1966-10-20",
        "Name" : "P_1476935173677",
        "SKU" : "API-SKU1476935173677"
      }
    },
    "ProxyCreateProductRatePlan" : {
      "type" : "object",
      "required" : [ "Name" ],
      "properties" : {
        "Description" : {
          "type" : "string",
          "description" : "A description of the product rate plan. **Character limit**: 500 **Values**: a string of 500 characters or fewer "
        },
        "EffectiveEndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the product rate plan expires and can't be subscribed to.\n**Character limit**: 29 **Values**: a valid date and time value "
        },
        "EffectiveStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the product rate plan becomes available and can be subscribed to.\n**Character limit**: 29 **Values**: a valid date and time value "
        },
        "Name" : {
          "type" : "string",
          "description" : "The name of the product rate plan. The name doesn't have to be unique in a Product Catalog, but the name has to be unique within a product. **Character limit**: 100 **Values**: a string of 100 characters or fewer "
        },
        "ProductId" : {
          "type" : "string",
          "description" : "The ID of the product that contains the product rate plan. **Character limit**: 32 **Values**: a string of 32 characters or fewer "
        }
      },
      "example" : {
        "Description" : "Test create product rateplan via API",
        "EffectiveEndDate" : "2066-10-20",
        "EffectiveStartDate" : "1966-10-20",
        "Name" : "ProductRatePlan1476935173957",
        "ProductId" : "2c93808457d787030157e03246ae5129"
      }
    },
    "ProxyCreateRefund" : {
      "type" : "object",
      "required" : [ "GatewayState", "Type" ],
      "properties" : {
        "AccountId" : {
          "type" : "string",
          "description" : " The ID of the account associated with this refund. Specify a value for this field only if you're creating an electronic non-referenced refund. Don't specify a value for any other type of refund; Zuora associates the refund automatically with the account from the associated payment.\n**Character limit**: 32 **Values**: a valid account ID "
        },
        "Amount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The amount of the refund. The amount can't exceed the amount of the associated payment. If the original payment was applied to a single invoice, then you can create a partial refund. However, if the payment was applies to multiple invoices, then you can only make a partial refund through the web-based UI, not through the API.\n**Character limit**: 16 **Values**: a valid currency amount "
        },
        "Comment" : {
          "type" : "string",
          "description" : " Use this field to record comments about the refund.\n**Character limit**: 255 **Values**: a string of 255 characters or fewer "
        },
        "GatewayState" : {
          "type" : "string",
          "description" : " The status of the payment in the gateway.\n**Character limit**: 19 **Values**: automatically generated "
        },
        "MethodType" : {
          "type" : "string",
          "description" : " Indicates how an external refund was issued to a customer. This field is required for an external refund. You can issue an external refund on an electronic payment. **Character limit**: 30 **Values**:\n\n- `ACH`\n- `Cash`\n- `Check`\n- `CreditCard`\n- `Other`\n- `PayPal`\n- `WireTransfer`\n- `DebitCard`\n- `CreditCardReferenceTransaction`\n"
        },
        "PaymentMethodId" : {
          "type" : "string",
          "description" : " The unique ID of the payment method that the customer used to make the payment. Specify a value for this field only if you're creating an electronic non-referenced refund.\n**Character limit**: 32 **V****alues**: a valid payment method ID "
        },
        "ReasonCode" : {
          "type" : "string",
          "description" : " A code identifying the reason for the transaction. Must be an existing reason code or empty. If you do not specify a value, Zuora uses the default reason code.\n**Character limit**: 32 **V****alues**: a valid reason code "
        },
        "RefundDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date of the refund. The date of the refund cannot be before the payment date. Specify this field only for external refunds. Zuora automatically generates this field for electronic refunds.\n**Character limit**: 29 **Values**: a valid date and time value "
        },
        "SoftDescriptor" : {
          "type" : "string",
          "description" : " A payment gateway-specific field that maps Zuora to other gateways . **Character limit**: 35 **Values**:\n\n- 3-byte company identifier &quot;*&quot; 18-byte descriptor\n- 7-byte company identifier &quot;*&quot; 14-byte descriptor\n- 12-byte company identifier &quot;*&quot; 9-byte descriptor\n"
        },
        "SoftDescriptorPhone" : {
          "type" : "string",
          "description" : " A payment gateway-specific field that maps Zuora to other gateways . **Character limit**: 20 **Values**:\n\n- Customer service phone number formatted as: `NNN-NNN-NNNN` or `NNN-AAAAAAA`\n- URL (non-e-Commerce): Transactions sent with a URL do not qualify for the best interchange rate\n- Email address\n"
        },
        "SourceType" : {
          "type" : "string",
          "description" : " Specifies whether the refund is a refund payment or a credit balance. This field is required when creating an non-referenced refund. If you creating an non-referenced refund, then set this value to `CreditBalance`.\n**Character limit**: 13 **Values**:\n\n- `Payment`\n- `CreditBalance`\n"
        },
        "Type" : {
          "type" : "string",
          "description" : " Specifies if the refund is electronic or external.\n**Character limit**: 10 **Values**:\n\n- `Electronic`\n- External\n"
        }
      },
      "example" : {
        "AccountId" : "2c93808457d787030157e03190e748ea",
        "Amount" : 1.1,
        "Comment" : "this is comments",
        "PaymentId" : "2c93808457d787030157e03197714910",
        "ReasonCode" : "Standard Refund",
        "RefundInvoicePaymentData" : {
          "RefundInvoicePayment" : [ {
            "InvoiceId" : "2c93808457d787030157e03195604902",
            "RefundAmount" : 1.1
          } ]
        },
        "SoftDescriptor" : "thisSD",
        "SoftDescriptorPhone" : "a@a.com",
        "SourceType" : "Payment",
        "Type" : "Electronic"
      }
    },
    "ProxyCreateTaxationItem" : {
      "type" : "object",
      "required" : [ "ExemptAmount", "TaxAmount", "TaxRate" ],
      "properties" : {
        "AccountingCode" : {
          "type" : "string",
          "description" : " The Chart of Accounts "
        },
        "ExemptAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The amount of taxes or VAT for which the customer has an exemption.\n**Character limit**: 16 **Values**: a decimal value "
        },
        "InvoiceItemId" : {
          "type" : "string",
          "description" : " The ID of the specific invoice item that the taxation information applies to.\n**Character limit**: 32 **Values**: a valid invoice item ID "
        },
        "Jurisdiction" : {
          "type" : "string",
          "description" : " The jurisdiction that applies the tax or VAT. This value is typically a state, province, county, or city.\n**Character limit**: 32 **Values**: a string of 32 characterrs or fewer "
        },
        "LocationCode" : {
          "type" : "string",
          "description" : " The identifier for the location based on the value of the `TaxCode` field.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "Name" : {
          "type" : "string",
          "description" : " The name of the tax rate, such as sales tax or GST. This name is displayed on invoices.\n**Character limit**: 128 **Values**: a string of 128 characters or fewer "
        },
        "TaxAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The amount of the tax applied to the charge.\n**Character limit**: 16 **Values**: a decimal value "
        },
        "TaxCode" : {
          "type" : "string",
          "description" : " The tax code identifies which tax rules and tax rates to apply to a specific charge.\n**Character limit**: 32 **Values**: a string of 32 characters or fewer "
        },
        "TaxCodeDescription" : {
          "type" : "string",
          "description" : " The description for the tax code.\n**Character limit**: 255 **Values**: a string of 255 characters or fewer "
        },
        "TaxDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date that the tax is applied to the charge.\n**Character limit**: 29 **Values**: a valid date and time value "
        },
        "TaxRate" : {
          "type" : "number",
          "format" : "double",
          "description" : " The tax rate applied to the charge.\n**Character limit**: 16 **Values**: a valid decimal value "
        },
        "TaxRateDescription" : {
          "type" : "string",
          "description" : " The description of the tax rate.\n**Character limit**: 255 **Values**: a string of 255 characters or fewer "
        },
        "TaxRateType" : {
          "type" : "string",
          "description" : " The type of the tax rate applied to the charge.\n**Character limit**: 10 **Values**: `Percentage`, `FlatFee` "
        }
      },
      "example" : {
        "AccountingCode" : "Usage Revenue",
        "ExemptAmount" : 50,
        "InvoiceItemId" : "2c93808457d787030157e0306cd43a88",
        "Jurisdiction" : "test",
        "LocationCode" : "code - 001",
        "Name" : "test",
        "TaxAmount" : 3,
        "TaxCode" : "taxcode",
        "TaxCodeDescription" : "description",
        "TaxDate" : "2016-10-20",
        "TaxMode" : "TaxExclusive",
        "TaxRate" : 3,
        "TaxRateDescription" : "test",
        "TaxRateType" : "FlatFee"
      }
    },
    "ProxyCreateUnitOfMeasure" : {
      "type" : "object",
      "required" : [ "UomName" ],
      "properties" : {
        "Active" : {
          "type" : "boolean",
          "description" : " Indicates if the UOM is available for new product rate plans. The default value is `true`.\n**Character limit**: 5 **Values**: `true`, `false ` "
        },
        "DecimalPlaces" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The number of digits to the right of the decimal point that you want to measure for the unit. To use whole numbers only, set this value to 0. You can't change this value after this `UOM` is used in any product, subscription, or usage. **Character limit**: 1 **Values**: an integer between 0 and 9, exclusive "
        },
        "DisplayedAs" : {
          "type" : "string",
          "description" : "The name of the UOM that you want displayed on invoices. The default value is the `UomName` field value. **Character limit**: 50 **Values**: A string of 50 characters or fewer "
        },
        "RoundingMode" : {
          "type" : "string",
          "description" : " Specifies whether to round the UOM value up or down when the value exceeds the `DecimalPlaces` field value. The default value is `Up`.\n**Character limit**: 4 **Values**: `Up`, `Down` "
        },
        "UomName" : {
          "type" : "string",
          "description" : " The name of the UOM, such as license or GB. This name is displayed in query results and in the web-based UI labels. If you want a different name to be displayed on invoices, then use the `DisplayedAs` field to provide the invoice label.\n**Character limit**: 50 **Values**: a string of 50 characters or fewer "
        }
      },
      "example" : {
        "Active" : true,
        "DecimalPlaces" : 9,
        "DisplayedAs" : "name_display_name_1476935033519",
        "RoundingMode" : "UP",
        "UomName" : "name_1476935033519"
      }
    },
    "ProxyCreateUsage" : {
      "type" : "object",
      "properties" : {
        "AccountId" : {
          "type" : "string",
          "description" : " The ID of the account associated with the usage data. This field is required if no value is specified for the `AccountNumber` field.\n**Character limit**: 32 **Values**: a valid account ID. "
        },
        "AccountNumber" : {
          "type" : "string",
          "description" : " The number of the account associated with the usage data. This field is required if no value is specified for the `AccountId` field.\n**Character limit**: 50 **Values**: a valid account number. "
        },
        "ChargeId" : {
          "type" : "string",
          "description" : " The OrginalId of the rate plan charge related to the usage record, e.g., `2c9081a03c63c94c013c6873357a0117` **Character limit**: 32 **Values**: a valid rate plan charge OriginalID. "
        },
        "EndDateTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The end date and time of a range of time when usage is tracked. Use this field for reporting; this field doesn't affect usage calculation.\n**Character limit**: 29 **Values**: a valid date and time value. "
        },
        "Quantity" : {
          "type" : "number",
          "format" : "double",
          "description" : " Indicates the number of units used.\n**Character limit**: 16 **Values**: a valid decimal amount equal to or greater than 0 "
        },
        "RbeStatus" : {
          "type" : "string",
          "description" : " Indicates if the rating and billing engine (RBE) processed usage data for an invoice.\n**Character limit**: 9 **Values**: automatically generated to be one of the following values: `Importing`, `Pending`, `Processed` "
        },
        "StartDateTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The start date and time of a range of time when usage is tracked. Zuora uses this field value to determine the usage date. Unlike the `EndDateTime`, the `StartDateTime` field does affect usage calculation.\n**Character limit**: 29 **Values**: a valid date and time value "
        },
        "SubmissionDateTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when usage was submitted.\n**Character limit**: 29 **Values**: automatically generated "
        },
        "SubscriptionId" : {
          "type" : "string",
          "description" : " The ID of the subscription that contains the fees related to the usage data.\n**Character limit**: 32 **Values**: a valid subscription ID "
        },
        "UOM" : {
          "type" : "string",
          "description" : " Specifies the units to measure usage. Units of measure are configured in the web-based UI. Your values depend on your configuration in **Billing Settings**.\n**Character limit**: **Values**: a valid unit of measure "
        }
      },
      "example" : {
        "AccountId" : "2c93808457d787030157e02e07991cfc",
        "AccountNumber" : "AN_1476934895501",
        "ChargeId" : "2c93808457d787030157e02e07cc1d04",
        "ChargeNumber" : "C-00000001",
        "Description" : "this is desc",
        "EndDateTime" : "2016-11-20T04:41:36.000+01:00",
        "Quantity" : 9.9,
        "StartDateTime" : "2016-10-20T05:41:36.000+02:00",
        "SubscriptionId" : "2c93808457d787030157e02e07b11cff",
        "SubscriptionNumber" : "S_1476934895501",
        "UOM" : "Each"
      }
    },
    "ProxyDeleteResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : ""
        },
        "success" : {
          "type" : "boolean",
          "description" : ""
        }
      }
    },
    "ProxyGetAccount" : {
      "type" : "object",
      "properties" : {
        "AccountNumber" : {
          "type" : "string",
          "description" : "Unique account number assigned to the account. **Character limit**: 50 **Values**: one of the following:\n\n- null to auto-generate\n- a string of 50 characters or fewer that doesn't begin with the default account number prefix\n"
        },
        "AdditionalEmailAddresses" : {
          "type" : "string",
          "description" : "List of additional email addresses to receive emailed invoices. **Character limit**: 120 **Values**: comma-separated list of email addresses "
        },
        "AllowInvoiceEdit" : {
          "type" : "boolean",
          "description" : " Indicates if associated invoices can be edited.\n**Character limit**: 5 **Values**: `true`, `false` (default if left null) "
        },
        "AutoPay" : {
          "type" : "boolean",
          "description" : " Indicates if future payments are automatically collected when they're due during a Payment Run.\n**Character limit**: 5 **Values**: `true`, `false` (default) "
        },
        "Balance" : {
          "type" : "number",
          "format" : "double",
          "description" : "Current outstanding balance for the account. **Character limit**: 16 **Values**: automatically generated "
        },
        "Batch" : {
          "type" : "string",
          "description" : " Organizes your customer accounts into groups to optimize your billing and payment operations. Required if you use the Subscribe call\n**Character limit**: 20 **Values**:any system-defined batch (`Batch1` - `Batch50 `or by name). "
        },
        "BcdSettingOption" : {
          "type" : "string",
          "description" : "Billing cycle day setting option. **Character limit**: 9 **Values**: `AutoSet`, `ManualSet` "
        },
        "BillCycleDay" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Billing cycle day (BCD) on which bill runs generate invoices for the account. **Character limit**: 2 **Values**: any activated system-defined bill cycle day (`1` - `31`) "
        },
        "BillToId" : {
          "type" : "string",
          "description" : "ID of the person to bill for the account. **Character limit**: 32 **Values**: a valid contact ID for the account "
        },
        "CommunicationProfileId" : {
          "type" : "string",
          "description" : "Associates the account with a specified communication profile. **Character limit**: 32 **Values**: a valid communication profile ID "
        },
        "CreatedById" : {
          "type" : "string",
          "description" : "ID of the Zuora user who created the Account object. **Character limit**: 32 **Values**: automatically generated "
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date when the Account object was created. **Character limit**: 29 **Values**: automatically generated "
        },
        "CreditBalance" : {
          "type" : "number",
          "format" : "double",
          "description" : "Total credit balance for the account. **Character limit**: 16 **Values**: automatically generated "
        },
        "CrmId" : {
          "type" : "string",
          "description" : "CRM account ID for the account. A CRM is a customer relationship management system, such as Salesforce.com. **Character limit**: 100 **Values**: a string of 100 characters or fewer "
        },
        "Currency" : {
          "type" : "string",
          "description" : " Currency that the customer is billed in. "
        },
        "CustomerServiceRepName" : {
          "type" : "string",
          "description" : "Name of the account's customer service representative, if applicable. **Character limit**: 50 **Values**: a string of 50 characters or fewer "
        },
        "DefaultPaymentMethodId" : {
          "type" : "string",
          "description" : "ID of the default payment method for the account. This field is required if the AutoPay field is set to `true`. **Character limit**: 32 **Values**: a valid ID for an existing payment method "
        },
        "Id" : {
          "type" : "string",
          "description" : "Object identifier."
        },
        "InvoiceDeliveryPrefsEmail" : {
          "type" : "boolean",
          "description" : "Indicates if the customer wants to receive invoices through email.  **Character limit**: 5 **Values**: `true`, `false` (default if left null) "
        },
        "InvoiceDeliveryPrefsPrint" : {
          "type" : "boolean",
          "description" : "Indicates if the customer wants to receive printed invoices, such as through postal mail. **Character limit**: 5 **Values**: `true`, `false` (default if left null) "
        },
        "InvoiceTemplateId" : {
          "type" : "string",
          "description" : "The ID of the invoice template. Each customer account can use a specific invoice template for invoice generation. **Character limit**: 32 **Values**: a valid template ID configured in Zuora Billing Settings "
        },
        "LastInvoiceDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the previous invoice was generated for the account. The field value is null if no invoice has ever been generated for the account.\n**Character limit**: 29 **Values**: automatically generated "
        },
        "Name" : {
          "type" : "string",
          "description" : "Name of the account as displayed in the Zuora UI. **Character limit**: 255 **Values**: a string of 255 characters or fewer "
        },
        "Notes" : {
          "type" : "string",
          "description" : " Comments about the account. **Character limit**: 65,535 **Values**: a string of 65,535 characters "
        },
        "ParentId" : {
          "type" : "string",
          "description" : "Identifier of the parent customer account for this Account object. Use this field if you have customer hierarchy enabled. **Character limit**: 32 **Values**: a valid account ID "
        },
        "PaymentGateway" : {
          "type" : "string",
          "description" : "Gateway used for processing electronic payments and refunds. **Character limit**: 40 **Values**: one of the following:\n\n- a valid configured gateway name\n- Null to inherit the default value set in Payment Settings\n"
        },
        "PaymentTerm" : {
          "type" : "string",
          "description" : "Indicates when the customer pays for subscriptions. **Character limit**: 100 **Values**: a valid, active payment term defined in the web-based UI administrative settings "
        },
        "PurchaseOrderNumber" : {
          "type" : "string",
          "description" : "The number of the purchase order associated with this account. Purchase order information generally comes from customers. **Character limit**: 100 **Values**: a string of 100 characters or fewer "
        },
        "SalesRepName" : {
          "type" : "string",
          "description" : "The name of the sales representative associated with this account, if applicable. **Character limit**: 50 **Values**: a string of 50 characters or fewer "
        },
        "SoldToId" : {
          "type" : "string",
          "description" : "ID of the person who bought the subscription associated with the account. **Character limit**: 32 **Values**: a valid contact ID for the account "
        },
        "Status" : {
          "type" : "string",
          "description" : "Status of the account in the system. **Character limit**: 8 **Values**: one of the following:\n\n- leave null if you're using the Subscribe call\n- if you're using `create()`:\n- `Draft`\n- `Active`\n- `Canceled`\n"
        },
        "TaxCompanyCode" : {
          "type" : "string",
          "description" : " Unique code that identifies a company account in Avalara. Use this field to calculate taxes based on origin and sold-to addresses in Avalara.\nThis feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).\n\n**Character limit**: 50 **Values**: a valid company code "
        },
        "TaxExemptCertificateID" : {
          "type" : "string",
          "description" : "ID of your customer's tax exemption certificate. **Character limit**: 32 **Values**: a string of 32 characters or fewer "
        },
        "TaxExemptCertificateType" : {
          "type" : "string",
          "description" : "Type of the tax exemption certificate that your customer holds.  **Character limit**: 32 **Values**: a string of 32 characters or fewer "
        },
        "TaxExemptDescription" : {
          "type" : "string",
          "description" : "Description of the tax exemption certificate that your customer holds. **Character limit**: 500 **Values**: a string of 500 characters or fewer "
        },
        "TaxExemptEffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date when the the customer's tax exemption starts. **Character limit**: 29 **Version notes**: requires Zuora Tax "
        },
        "TaxExemptExpirationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date when the customer's tax exemption certificate expires  **Character limit**: 29 **Version notes**: requires Zuora Tax "
        },
        "TaxExemptIssuingJurisdiction" : {
          "type" : "string",
          "description" : "Indicates the jurisdiction in which the customer's tax exemption certificate was issued. **Character limit**: 32 **Values**: a string of 32 characters or fewer "
        },
        "TaxExemptStatus" : {
          "type" : "string",
          "description" : " Status of the account's tax exemption. Required if you use Zuora Tax.\n**Character limit**: 19 **Values**: one of the following:\n\n- `Yes`\n- `No`\n- `PendingVerification`\n"
        },
        "TotalInvoiceBalance" : {
          "type" : "number",
          "format" : "double",
          "description" : "Total balance of the account's invoices. **Character limit**: 16 **Values**: a valid currency value "
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : "ID of the user who last updated the account. **Character limit**: 32 **Values**: automatically generated "
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date when the account was last updated. **Character limit**: 29 **Values**: automatically generated "
        },
        "VATId" : {
          "type" : "string",
          "description" : " EU Value Added Tax ID.\nThis feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).\n\n**Character limit**: 25 **Values**: a valid Value Added Tax ID "
        }
      }
    },
    "ProxyGetAmendment" : {
      "type" : "object",
      "properties" : {
        "AutoRenew" : {
          "type" : "boolean",
          "description" : " Determines whether the subscription is automatically renewed, or whether it expires at the end of the term and needs to be manually renewed. **Required:** For amendment of type TermsAndConditions when changing the automatic renewal status of a subscription.\n**Values**: true, false "
        },
        "Code" : {
          "type" : "string",
          "description" : " A unique alphanumeric string that identifies the amendment.\n**Character limit**: 50 **Values**: one of the following:\n\n- `null` generates a value automatically\n- A string\n"
        },
        "ContractEffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the amendment's changes become effective for billing purposes.\n**Version notes**: -- "
        },
        "CreatedById" : {
          "type" : "string",
          "description" : " The user ID of the person who created the amendment.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the amendment was created.\n**Values**: automatically generated "
        },
        "CurrentTerm" : {
          "type" : "integer",
          "format" : "int64",
          "description" : " The length of the period for the current subscription term. This field can be updated when Status is `Draft`.\n**Required**: Only if the value of the Type field is set to `TermsAndConditions` and TermType is set to `TERMED`. This field is not required if TermType is set to `EVERGREEN`.\n**Character limit**: **Values**: a valid number "
        },
        "CurrentTermPeriodType" : {
          "type" : "string",
          "description" : " The period type for the current subscription term. **Values**:\n\n- `Month` (default)\n- `Year`\n- `Day`\n- `Week`\n**Note**:\n\n- This field can be updated when Status is `Draft`.\n- This field is used with the CurrentTerm field to specify the current subscription term.\n"
        },
        "CustomerAcceptanceDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the customer accepts the amendment's changes to the subscription. **Required**: Only if the value of the Status field is set to PendingAcceptance.\n**Version notes**: -- "
        },
        "Description" : {
          "type" : "string",
          "description" : " A description of the amendment.\n**Character limit**: 500 **Values**: maximum 500 characters "
        },
        "EffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the amendment's changes take effective. This field validates that the amendment's changes are within valid ranges of products and product rate plans.\n**Required**: For the cancellation amendments. Optional for other types of amendments.\n**Version notes**: -- "
        },
        "Id" : {
          "type" : "string",
          "description" : "Object identifier."
        },
        "Name" : {
          "type" : "string",
          "description" : " The name of the amendment.\n**Character limit**: 100 **Values**: a string of 100 characters or fewer "
        },
        "RenewalSetting" : {
          "type" : "string",
          "description" : " Specifies whether a termed subscription will remain termed or change to evergreen when it is renewed.\n**Required**: If TermType is Termed **Values**: RENEW_WITH_SPECIFIC_TERM (default), RENEW_TO_EVERGREEN "
        },
        "RenewalTerm" : {
          "type" : "integer",
          "format" : "int64",
          "description" : " The term of renewal for the amended subscription. This field can be updated when Status is `Draft`.\n**Required**: Only if the value of the Type field is set to `TermsAndConditions`.\n**Character limit**: **Values:** a valid number "
        },
        "RenewalTermPeriodType" : {
          "type" : "string",
          "description" : " The period type for the subscription renewal term. This field can be updated when Status is `Draft`.\n**Required**: Only if the value of the Type field is set to `TermsAndConditions`. This field is used with the RenewalTerm field to specify the subscription renewal term.\n**Values**:\n\n- `Month` (default)\n- `Year`\n- `Day`\n- `Week`\n"
        },
        "ServiceActivationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when service is activated.\n**Required**: Only if the value of the Status field is set to PendingActivation.\n**Version notes**: -- "
        },
        "SpecificUpdateDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the UpdateProduct amendment takes effect. This field is only applicable if there is already a future-dated UpdateProduct amendment on the subscription.\n**Required**: Only for the UpdateProduct amendments if there is already a future-dated UpdateProduct amendment on the subscription.\n**Version notes**: -- "
        },
        "Status" : {
          "type" : "string",
          "description" : " The status of the amendment. Type: string (enum) **Character limit**: 17 **Values**: one of the following:\n\n- Draft (default, if left null)\n- Pending Activation\n- Pending Acceptance\n- Completed\n"
        },
        "SubscriptionId" : {
          "type" : "string",
          "description" : " The ID of the subscription that the amendment changes.\n**Character limit**: 32 **Values**: a valid subscription ID "
        },
        "TermStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the new terms and conditions take effect.\n**Required**: Only if the value of the Type field is set to TermsAndConditions.\n**Version notes**: -- "
        },
        "TermType" : {
          "type" : "string",
          "description" : " Indicates if the subscription isTERMED or EVERGREEN.\n\n- A TERMED subscription has an expiration date, and must be manually renewed.\n- An EVERGREEN subscription doesn't have an expiration date, and must be manually ended.\n\n**Required**: Only when as part of an amendment of type TermsAndConditions &#65279;to change the term type of a subscription. Type: string **Character limit**: 9 **Values**: TERMED, EVERGREEN "
        },
        "Type" : {
          "type" : "string",
          "description" : " The type of amendment.\n**Character limit**: 18 **Values**: one of the following:\n\n- Cancellation\n- NewProduct\n- OwnerTransfer\n- RemoveProduct\n- Renewal\n- UpdateProduct\n- TermsAndConditions\n- SuspendSubscription (This value is in **Limited Availability**.)\n- ResumeSubscription (This value is in **Limited Availability**.)\n"
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : " The ID of the user who last updated the amendment.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the amendment was last updated.\n**Values**: automatically generated "
        }
      }
    },
    "ProxyGetCommunicationProfile" : {
      "type" : "object",
      "properties" : {
        "CreatedById" : {
          "type" : "string",
          "description" : ""
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : ""
        },
        "Description" : {
          "type" : "string",
          "description" : ""
        },
        "Id" : {
          "type" : "string",
          "description" : "Object identifier."
        },
        "ProfileName" : {
          "type" : "string",
          "description" : ""
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : ""
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : ""
        }
      }
    },
    "ProxyGetContact" : {
      "type" : "object",
      "properties" : {
        "AccountId" : {
          "type" : "string",
          "description" : " The Zuora account ID associated with this contact. This field is not required when you use the Subscribe call. This field is required for all other calls.\n**Character limit: **32 **Values: **a valid account ID "
        },
        "Address1" : {
          "type" : "string",
          "description" : " The first line of the contact's address, which is often a street address or business name.\n**Character limit**: 255 **Values**: a string of 255 characters or fewer "
        },
        "Address2" : {
          "type" : "string",
          "description" : " The second line of the contact's address.\n**Character limit**: 255 **Values**: a string of 255 characters or fewer "
        },
        "City" : {
          "type" : "string",
          "description" : " The city of the contact's address.\n**Character limit**: 40 **Values: **a string of 40 characters or fewer "
        },
        "Country" : {
          "type" : "string",
          "description" : " The country of the contact's address. "
        },
        "County" : {
          "type" : "string",
          "description" : " The country. May optionally be used by Zuora Tax to calculate county tax.\n**Character limit**: 32 **Values**: a string of 32 characters or fewer "
        },
        "CreatedById" : {
          "type" : "string",
          "description" : "The ID of the Zuora user who created the contact. **Character limit**: 32 **Values**: automatically generated "
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date when the contact was created. **Character limit**: 29 **Values**: automatically generated "
        },
        "Description" : {
          "type" : "string",
          "description" : " A description for the contact.\n**Character limit**: 100 **Values**: a string of 100 characters or fewer "
        },
        "Fax" : {
          "type" : "string",
          "description" : " The contact's fax number.\n**Character limit**: 40 **Values**: a string of 40 characters or fewer "
        },
        "FirstName" : {
          "type" : "string",
          "description" : " The contact's first name.\n**Character limit**: 100 **Values**: a string of the contact's first name "
        },
        "HomePhone" : {
          "type" : "string",
          "description" : " The contact's home phone number.\n**Character limit**: 40 **Values**: a string of 40 characters or fewer "
        },
        "Id" : {
          "type" : "string",
          "description" : "Object identifier."
        },
        "LastName" : {
          "type" : "string",
          "description" : " The contact's last name.\n**Character limit**: 100 **Values**: a string of 100 characters or fewer "
        },
        "MobilePhone" : {
          "type" : "string",
          "description" : " The contact's mobile phone number.\n**Character limit**: 40 **Values**: a string of 40 characters or fewer "
        },
        "NickName" : {
          "type" : "string",
          "description" : " A nickname for the contact.\n**Character limit**: 100 **Values**: a string of 100 characters or fewer "
        },
        "OtherPhone" : {
          "type" : "string",
          "description" : " An additional phone number for the contact.\n**Character limit**: 40 **Values**: a string of 40 characters or fewer "
        },
        "OtherPhoneType" : {
          "type" : "string",
          "description" : "The type of the `OtherPhone`. **Character limit**: 20 **Values**: `Work`, `Mobile`, `Home`, `Other` "
        },
        "PersonalEmail" : {
          "type" : "string",
          "description" : " The contact's personal email address.\n**Character limit**: 80 **Values**: a string of 80 characters or fewer "
        },
        "PostalCode" : {
          "type" : "string",
          "description" : " The zip code for the contact's address.\n**Character limit:** 20 **Values: **a string of 20 characters or fewer "
        },
        "State" : {
          "type" : "string",
          "description" : " The state or province of the contact's address. "
        },
        "TaxRegion" : {
          "type" : "string",
          "description" : "If using Zuora Tax rules "
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : " The ID of the user who lasted updated the contact.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the contact was last updated.\n**Character limit**: 29 **Values**: automatically generated "
        },
        "WorkEmail" : {
          "type" : "string",
          "description" : " The contact's business email address.\n**Character limit**: 80 **Values**: a string of 80 characters or fewer "
        },
        "WorkPhone" : {
          "type" : "string",
          "description" : " The contact's business phone number.\n**Character limit**: 40 **notes**: -- **Values**: a string of 40 characters or fewer "
        }
      }
    },
    "ProxyGetCreditBalanceAdjustment" : {
      "type" : "object",
      "properties" : {
        "AccountId" : {
          "type" : "string",
          "description" : " The account ID of the credit balance's account. Zuora generates this value from the source transaction.\n**Character limit**: 32 **V****alues**: automatically generated from:\n\n- CreditBalanceAdjustment.SourceTransactionId or\n- CreditBalanceAdjustment.SourceTransactionNumber\n"
        },
        "AccountingCode" : {
          "type" : "string",
          "description" : " The Chart of Accounts "
        },
        "AdjustmentDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the credit balance adjustment is applied.\n**Character limit**: 29 **Values**: automatically generated "
        },
        "Amount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The amount of the adjustment.\n**Character limit**: 16 **Values**: a valid currency amount "
        },
        "CancelledOn" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the credit balance adjustment was canceled.\n**Character limit**: 29 **Values**: automatically generated "
        },
        "Comment" : {
          "type" : "string",
          "description" : " Use this field to record comments about the credit balance adjustment.\n**Character limit**: 255 **Values**: a string of 255 characters or fewer "
        },
        "CreatedById" : {
          "type" : "string",
          "description" : " The user ID of the person who created the credit balance adjustment.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the credit balance adjustmentwas generated.\n**Character limit**: 29 **Values**: automatically generated "
        },
        "Id" : {
          "type" : "string",
          "description" : "Object identifier."
        },
        "IntegrationId__NS" : {
          "type" : "string",
          "description" : ""
        },
        "IntegrationStatus__NS" : {
          "type" : "string",
          "description" : ""
        },
        "Number" : {
          "type" : "string",
          "description" : " A unique identifier for the credit balance adjustment. Zuora generates this number in the format, <em>CBA-xxxxxxxx</em>, such as CBA-00375919.\n**Character limit**: 255 **Values**: automatically generated "
        },
        "ReasonCode" : {
          "type" : "string",
          "description" : " A code identifying the reason for the transaction. Must be an existing reason code or empty. If you do not specify a value, Zuora uses the default reason code.\n**Character limit**: 32 **V****alues**: a valid reason code "
        },
        "ReferenceId" : {
          "type" : "string",
          "description" : " The ID of the payment that the credit balance adjustment is for.\n**Character limit**: 32 **Values**: a string of 60 characters or fewer "
        },
        "SourceTransactionId" : {
          "type" : "string",
          "description" : " The ID of the object that the credit balance adjustment is applied to. You must specify a value for either the `SourceTransactionId` field or the `SourceTransactionNumber` field.\n**Character limit**: 32 **Values**: one of the following:\n\n- InvoiceId\n- PaymentId\n- RefundId\n"
        },
        "SourceTransactionNumber" : {
          "type" : "string",
          "description" : " The number of the object that the credit balance adjustment is applied to. You must specify a value for either the `SourceTransactionId` field or the `SourceTransactionNumber` field.\n**Character limit**: 50 **Values**: one of the following:\n\n- InvoiceNumber\n- PaymentNumber\n- RefundNumber\n"
        },
        "SourceTransactionType" : {
          "type" : "string",
          "description" : " The source of the credit balance adjustment.\n**Character limit**: **Values**: automatically generated; one of the following:\n\n- Invoice\n- Payment\n- Refund\n"
        },
        "Status" : {
          "type" : "string",
          "description" : " The status of the credit balance adjustment.\n**Character limit**: 9 **Values**: automatically generated; one of the following:\n\n- Processed\n- Canceled\n"
        },
        "SyncDate__NS" : {
          "type" : "string",
          "description" : ""
        },
        "TransferredToAccounting" : {
          "type" : "string",
          "description" : " Indicates the status of the credit balance adjustment's transfer to an external accounting system, such as NetSuite.\n**Character limit**: **Values**: one of the following:\n\n- Processing\n- Yes\n- Error\n- Ignore\n"
        },
        "Type" : {
          "type" : "string",
          "description" : "Create Query Filter"
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : " The ID of the user who last updated the credit balance adjustment.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the credit balance adjustment was last updated.\n**Character limit**: 29 **Values**: automatically generated "
        }
      }
    },
    "ProxyGetExport" : {
      "type" : "object",
      "properties" : {
        "ConvertToCurrencies" : {
          "type" : "string",
          "description" : " The currencies that you want to convert transaction amounts into. You can specify any number of currencies. Specify the currencies using their Foreign Currency Conversion enabled to use this field.\n**Character limit**: **Values**: a list of valid currency codes "
        },
        "CreatedById" : {
          "type" : "string",
          "description" : " The user ID of the person who created the export.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the import was created.\n**Character limit**: 29 **Values**: automatically generated "
        },
        "Encrypted" : {
          "type" : "boolean",
          "description" : " Exports a secure version of encrypted data source fields. such as the AchAccountNumber field of the PaymentMethod object and the DefaultPaymentMethod data souce objects.\n**Character limit**: 5 **Values:** true, false "
        },
        "FileId" : {
          "type" : "string",
          "description" : " The ID of the file generated by an export query. This fiel is automatically generated when an Export object is created. Use this file ID when you download the export file.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "Format" : {
          "type" : "string",
          "description" : " The format that you want the export file to use.\n**Character limit**: 4 **Values**: csv, html "
        },
        "Id" : {
          "type" : "string",
          "description" : "Object identifier."
        },
        "Name" : {
          "type" : "string",
          "description" : " The name of the export.\n**Character limit**: 255 **Values**: a string of 255 characters or fewer "
        },
        "Query" : {
          "type" : "string",
          "description" : "optional"
        },
        "Size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " The number of records or rows exported. This field value is null until the export status is Completed.\n**Character limit**: **Values**: automatically generated "
        },
        "Status" : {
          "type" : "string",
          "description" : " The status of the export. Type: string (enum) **Character limit**: 10 **Values**: automatically generated to be one of the following values:\n\n- Pending\n- Processing\n- Completed\n- Canceled\n- Failed\n"
        },
        "StatusReason" : {
          "type" : "string",
          "description" : " The reason for the given status. Use this information to help ascertain why an export failed.\n**Character limi**t: 255 **Values**: automatically generated "
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : " The ID of the user who last updated the export.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the expotr was last updated.\n**Character limit**: 29 **Values**: automatically generated "
        },
        "Zip" : {
          "type" : "boolean",
          "description" : " Indicates if you want the resulting export file to be compressed into a zip file.\n**Character limit**: **Values**: true, false (default) "
        }
      }
    },
    "ProxyGetFeature" : {
      "type" : "object",
      "properties" : {
        "CreatedById" : {
          "type" : "string",
          "description" : " Internal Zuora ID of the user who created the feature **Character limit**: 32 "
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " Date and time when the feature was created **Character limit**: 29 "
        },
        "Description" : {
          "type" : "string",
          "description" : " Description of the feature **Character limit**: 1000 "
        },
        "FeatureCode" : {
          "type" : "string",
          "description" : " Unique code of the feature **Character limit**: 255 "
        },
        "Id" : {
          "type" : "string",
          "description" : "Object identifier."
        },
        "Name" : {
          "type" : "string",
          "description" : " Name of the feature **Character limit**: 255 "
        },
        "Status" : {
          "type" : "string",
          "description" : " Status of the feature, Active or Inactive **Character limit**: 8 "
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : " Internal Zuora ID of the user who last updated the feature **Character limit**: 32 "
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " Date and time when the feature was last updated **Character limit**: 29 "
        }
      }
    },
    "ProxyGetImport" : {
      "type" : "object",
      "properties" : {
        "CreatedById" : {
          "type" : "string",
          "description" : " The user ID of the person who created the import.\n\n**Character limit**: 32\n\n**Values**: automatically generated "
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the import was created.\n\n**Character limit**: 29\n\n**Values**: automatically generated "
        },
        "Id" : {
          "type" : "string",
          "description" : "Object identifier."
        },
        "ImportType" : {
          "type" : "string",
          "description" : " The type of item imported.\n\n**Character limit**: 7\n\n**Values**: Usage "
        },
        "ImportedCount" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of records successfully imported.\n\n**Values**: automatically generated "
        },
        "Md5" : {
          "type" : "string",
          "description" : " A check to validate the import file's integrity.\n\n**Character limit:** 32\n\n**System-generated:** no\n\n**Values**: a string of 32 characters or fewer "
        },
        "Name" : {
          "type" : "string",
          "description" : " A descriptive name for the import.\n\n**Character limit:** 100\n\n**Values:** one of the following:\n\n- a string of 100 characters or fewer\n- if NULL default is: `import <ImportType_value>`\n"
        },
        "OriginalResourceUrl" : {
          "type" : "string",
          "description" : " The URL for your import file, which contains your records for upload. When you upload the file, Zuora assigns it to this address.\n\n**Values:** automatic dynamically-generated URL "
        },
        "ResultResourceUrl" : {
          "type" : "string",
          "description" : " The URL for the import result file, which is a zipped CSV file.\n\n**Values**: automatic dynamically-generated URL "
        },
        "Status" : {
          "type" : "string",
          "description" : "The status of the import process.\n\n**Values**: automatically generated using one of the following values:\n\n- Pending\n- Processing\n- Completed\n- Failed\n"
        },
        "StatusReason" : {
          "type" : "string",
          "description" : " The reason for the system-generated status. Use this information if the import fails.\n\n**Character limit**: 2000\n\n**Values**: automatically generated error message "
        },
        "TotalCount" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " The number of records in the import file.\n\n**Character limit**:\n\n**Values**: automatically generated "
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : " The ID of the user who last updated the import.\n\n**Character limit**: 32\n\n**Values**: automatically generated "
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the import was last updated.\n**Character limit**: 29 **Values**: automatically generated "
        }
      }
    },
    "ProxyGetInvoice" : {
      "type" : "object",
      "properties" : {
        "AccountId" : {
          "type" : "string",
          "description" : ""
        },
        "AdjustmentAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The amount of the invoice adjustments associated with the invoice. **Character limi**t: 16 **Values**: a valid currency amount "
        },
        "Amount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The sum of all charges and taxes associated with the invoice.\n**Character limit**: 16 **Values**: automatically generated "
        },
        "AmountWithoutTax" : {
          "type" : "number",
          "format" : "double",
          "description" : " The sum of all charges associated with the invoice. Taxes are excluded from this value.\n**Character limit**: 16 **Values**: automatically generated "
        },
        "Balance" : {
          "type" : "number",
          "format" : "double",
          "description" : " The remaining balance of the invoice after all payments, adjustments, and refunds are applied.\n**Character limit**: 16 **Values**: automatically generated "
        },
        "Body" : {
          "type" : "string",
          "description" : " Required "
        },
        "Comments" : {
          "type" : "string",
          "description" : " Additional information related to the invoice that a Zuora user added to the invoice.\n**Character limit**: 255 **Values:** a string of 255 characters or fewer "
        },
        "CreatedById" : {
          "type" : "string",
          "description" : " The user ID of the person who created the invoice. If a bill run generated the invoice, then the value is the user ID of person who created the bill run.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the invoice was generated.\n**Character limit**: 29 **Values**: automatically generated "
        },
        "CreditBalanceAdjustmentAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The currency amount of the adjustment applied to the customer's credit balance.\n**Character limit**: 16 **Values**: a valid currency amount This field is only available if the [Zuora Global Support](http://support.zuora.com/) to enable this feature.\n\n\n"
        },
        "DueDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date by which the payment for this invoice is due.\n**Character limit**: 29 **Version notes**: -- "
        },
        "Id" : {
          "type" : "string",
          "description" : "Object identifier."
        },
        "IncludesOneTime" : {
          "type" : "boolean",
          "description" : " Specifies whether the invoice includes one-time charges. You can use this field only with the Generate call for the Invoice object.\n**Character limit**: 5 **Values**: automatically generated from one of the following: `True` (default), `False` "
        },
        "IncludesRecurring" : {
          "type" : "boolean",
          "description" : " Specifies whether the invoice includes recurring charges. You can use this field only with the Generate call for the Invoice object.\n**Character limit**: 5 **Values**: automatically generated from one of the following: `True` (default), `False` "
        },
        "IncludesUsage" : {
          "type" : "boolean",
          "description" : " Specifies whether the invoice includes usage charges. You can use this field only with the Generate call for the Invoice object.\n**Character limit**: 5 **Values**: automatically generated from one of the following: `True `(default), `False` "
        },
        "InvoiceDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " Specifies the date on which to generate the invoice.\n**Character limit**: 29 **Version notes**: -- "
        },
        "InvoiceNumber" : {
          "type" : "string",
          "description" : " The unique identification number for the invoice. This number is returned as a string.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "LastEmailSentDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the invoice was last emailed.\n**Character limit**: 29 **Values**: automatically generated "
        },
        "PaymentAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The amount of payments applied to the invoice.\n**Character limit**: 16 **Value**s: automatically generated "
        },
        "PostedBy" : {
          "type" : "string",
          "description" : " The user ID of the person who moved the invoice to Posted status.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "PostedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the invoice was posted.\n**Character limit:** 29 **Values**: automatically generated "
        },
        "RefundAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : " Specifies the amount of a refund that was applied against an earlier payment on the invoice.\n**Character limit**: 16 **Values**: automatically generated "
        },
        "Status" : {
          "type" : "string",
          "description" : " The status of the invoice in the system. This status is not the status of the payment of the invoice, just the status of the invoice itself.\n**Character limit**: 8 **Values**: one of the following:\n\n-  Draft (default, automatically set upon invoice creation)\n\n-  Posted\n\n-  Canceled\n\n"
        },
        "TargetDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " This date is used to determine which charges are to be billed. All charges that are to be billed on this date or prior will be included in this bill run.\n**Character limit**: 29 **Version notes**: -- "
        },
        "TaxAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The total amount of the taxes applied to the invoice.\n**Character limit**: 16 **Values**: automatically generated "
        },
        "TaxExemptAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The total amount of the invoice that is exempt from taxation.\n**Character limit**: 16 **Values**: automatically generated "
        },
        "TransferredToAccounting" : {
          "type" : "string",
          "description" : " Specifies whether or not the invoice was transferred to an external accounting system, such as NetSuite.\n**Character limit**: 10 **Values**: Processing, Yes, Error, Ignore "
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : ""
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the invoice was last updated.\n**Character limit**: 29 **Values**: automatically generated "
        }
      }
    },
    "ProxyGetInvoiceAdjustment" : {
      "type" : "object",
      "properties" : {
        "AccountId" : {
          "type" : "string",
          "description" : " The ID of the account that owns the invoice.\n**Character limit**: 32 **Values**: inherited from Account.ID for the invoice owner "
        },
        "AccountingCode" : {
          "type" : "string",
          "description" : "The accounting code for the invoice adjustment. "
        },
        "AdjustmentDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the invoice adjustment is applied. This date must be the same as the invoice's date or later.\n**Character limit**: 29 **Values**: Leave null to automatically generate the current date "
        },
        "AdjustmentNumber" : {
          "type" : "string",
          "description" : " A unique string to identify an individual invoice adjustment.\n**Character limit**: 255 **Values**: automatically generated "
        },
        "Amount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The amount of the invoice adjustment.\n**Character limit**: 16 **Values**: a valid currency amount "
        },
        "CancelledById" : {
          "type" : "string",
          "description" : " The ID of the Zuora user who canceled the invoice adjustment. Zuora generates this read-only field only if the adjustment is canceled.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "CancelledOn" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the invoice adjustment is canceled. Zuora generates this read-only field if this adjustment is canceled.\n**Character limit**: 29 **Values**: automatically generated "
        },
        "Comments" : {
          "type" : "string",
          "description" : " Use this field to record comments about the invoice adjustment.\n**Character limit**: 255 **Values**: a string of 255 characters or fewer "
        },
        "CreatedById" : {
          "type" : "string",
          "description" : " The user ID of the person who created the invoice adjustment.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date the invoice adjustment was created.\n**Character limit**: 29 **Values**: automatically generated "
        },
        "CustomerName" : {
          "type" : "string",
          "description" : " The name of the account that owns the associated invoice.\n\n**Character limit**: 50\n\n**Values**: inherited from `Account.Name`\n\n**Note**: This value changes if `Account.Name` is updated. The values of `UpdatedById` and `UpdatedDate` for the `InvoiceAdjustment` do not change when `Account.Name` is updated. "
        },
        "CustomerNumber" : {
          "type" : "string",
          "description" : " The unique account number of the customer's account.\n\n**Character limit**: 70\n\n**Values**: inherited from `Account.AccountNumber`\n\n**Note**: This value changes if `Account.AccountNumber` is updated. The values of `UpdatedById` and `UpdatedDate` for the `InvoiceAdjustment` do not change when `Account.AccountNumber` is updated. "
        },
        "Id" : {
          "type" : "string",
          "description" : "Object identifier."
        },
        "ImpactAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The amount that changes the balance of the associated invoice.\n**Character limit**: 16 **Values**: automatically calculated "
        },
        "InvoiceId" : {
          "type" : "string",
          "description" : " The ID of the invoice associated with the adjustment. This field is required if you don't specify a value for the `InvoiceNumber` field.\n**Character limit**: 32 **Values**: a valid invoice ID "
        },
        "InvoiceNumber" : {
          "type" : "string",
          "description" : " The unique identification number for the associated invoice. This field is required if you don't specify a value for the `InvoiceId` field.\n**Character limit**: 32 **Values**: a valid invoice number "
        },
        "ReasonCode" : {
          "type" : "string",
          "description" : " A code identifying the reason for the transaction. Must be an existing reason code or empty. If you do not specify a value, Zuora uses the default reason code.\n**Character limit**: 32 **V****alues**: a valid reason code "
        },
        "ReferenceId" : {
          "type" : "string",
          "description" : " A code to reference an object external to Zuora. For example, you can use this field to reference a case number in an external system.\n**Character limit**: 60 **Values**: a string of 60 characters or fewer "
        },
        "Status" : {
          "type" : "string",
          "description" : " The status of the invoice adjustment. This field is required in the Query call, but is automatically generated in other calls.\n**Character limit**: 9 **Values**: `Canceled`, `Processed` "
        },
        "TransferredToAccounting" : {
          "type" : "string",
          "description" : " Indicates the status of the adjustment's transfer to an external accounting system, such as NetSuite.\n**Character limit**: 10 **Values**: `Processing`, `Yes`, `Error`, `Ignore` "
        },
        "Type" : {
          "type" : "string",
          "description" : " Indicates whether the adjustment credits or debits the invoice amount.\n**Character limit**: 6 **Values**: `Credit`, `Charge` "
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : " The ID of the user who last updated the invoice.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the invoice was last updated.\n**Character limit**: 29 **Values**: automatically generated "
        }
      }
    },
    "ProxyGetInvoiceItem" : {
      "type" : "object",
      "properties" : {
        "AccountingCode" : {
          "type" : "string",
          "description" : " The accounting code for the item's charge. Accounting codes group transactions that contain similar accounting attributes.\n**Character limit**: 100 **Values**: inherited from `RatePlanCharge.AccountingCode` "
        },
        "AppliedToInvoiceItemId" : {
          "type" : "string",
          "description" : " Associates a discount invoice item to a specific invoice item.\n\n**Character limit**: 32\n\n**Values**: inherited from `InvoiceItem.Id` for the invoice item that the discount charge is applied to "
        },
        "ChargeAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The amount being charged for the invoice item. This amount doesn't include taxes regardless if the charge's tax mode is inclusive or exclusive.\n**Character limit**: **Values**: automatically calculated from multiple fields in multiple objects "
        },
        "ChargeDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the Invoice Item is created .\n**Character limit**: 29 **Values**: automatically generated "
        },
        "ChargeName" : {
          "type" : "string",
          "description" : " The name of the invoice item's charge.\n**Character limi**t: 50 **Values: **inherited from `RatePlanCharge.Name` "
        },
        "CreatedById" : {
          "type" : "string",
          "description" : " The user ID of the person who created the invoice item.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date the invoice item was created.\n**Character limit:** 29 **Values**: automatically generated "
        },
        "Id" : {
          "type" : "string",
          "description" : "Object identifier."
        },
        "InvoiceId" : {
          "type" : "string",
          "description" : " The ID of the invoice that's associated with this invoice item.\n**Character limit**: 32 **Values**: inherited from `Invoice.Id` "
        },
        "ProcessingType" : {
          "type" : "number",
          "format" : "double",
          "description" : " Identifies the kind of charge where 0 is a charge, 1 is a discount, 2 is a prepayment, and 3 is a tax. The returned value is text not decimal on data sources.\n**Character limit**: **Values: **\n\n- 0: charge\n- 1: discount\n- 2: prepayment\n- 3: tax\n"
        },
        "ProductDescription" : {
          "type" : "string",
          "description" : " A description of the product associated with this invoice item.\n\n**Character limit**: 500\n\n**Values**: inherited from `Product.Description`\n\n**Note**: This value changes if `Product.Description` is updated. The values of `UpdatedById` and `UpdatedDate` for the `InvoiceItem` do not change when `Product.Description` is updated. "
        },
        "ProductName" : {
          "type" : "string",
          "description" : " The name of the product associated with this invoice item.\n\n**Character limit**: 255\n\n**Values**: inherited from `Product.Name`\n\n**Note**: This value changes if `Product.Name` is updated. The values of `UpdatedById` and `UpdatedDate` for the `InvoiceItem` do not change when `Product.Name` is updated. "
        },
        "Quantity" : {
          "type" : "number",
          "format" : "double",
          "description" : " The number of units for this invoice item.\n**Values**: inherited from `RatePlanCharge.Quantity` "
        },
        "RatePlanChargeId" : {
          "type" : "string",
          "description" : " The ID of the rate plan charge that's associated with this invoice item.\n**Character limit**: 32 **Values**: inherited from `RatePlanCharge.Id` "
        },
        "RevRecStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when revenue recognition is triggered.\n**Character limit**: 29 **Values**: generated from `InvoiceItem.RevRecTriggerCondition` "
        },
        "SKU" : {
          "type" : "string",
          "description" : " The unique SKU for the product associated with this invoice item.\n**Character limit**: 255 **Values**: inherited from `Product.SKU` "
        },
        "ServiceEndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The end date of the service period associated with this invoice item. Service ends one second before the date in this value.\n**Character limit**: 29 **Values**: automatically generated "
        },
        "ServiceStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The start date of the service period associated with this invoice item. If the associated charge is a one-time fee, then this date is the date of that charge.\n**Character limit:** 29 **Values**: automatically generated "
        },
        "SubscriptionId" : {
          "type" : "string",
          "description" : " The ID of the subscription associated with the invoice item.\n**Character limit**: 32 **Values**: inherited from `Subscription.Id` "
        },
        "TaxAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The amount of tax applied to the invoice item's charge.\n**Character limit**: **Values**: calculated from multiple fields in the ProductRatePlanCharge object "
        },
        "TaxCode" : {
          "type" : "string",
          "description" : " Specifies the tax code for taxation rules.\n**Character limit**: 6 **Values**: inherited from `ProductRatePlanCharge.TaxCode` "
        },
        "TaxExemptAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The amount of the invoice item's charge that's tax exempt.\n**Character limit**: **Values**: calculated from multiple fields in the ProductRatePlanCharge object "
        },
        "TaxMode" : {
          "type" : "string",
          "description" : " The tax mode of the invoice item.\n**Character limit**: 12 **Values**: `TaxExclusive`, `TaxInclusive` "
        },
        "UOM" : {
          "type" : "string",
          "description" : " Specifies the units to measure usage. **Character limit**: **Values**: inherited from `ProductRatePlanCharge.UOM` "
        },
        "UnitPrice" : {
          "type" : "number",
          "format" : "double",
          "description" : " The per-unit price of the invoice item.\n**Character limit**: **Values**: calculated from multiple fields in ProductRatePlanCharge and ProductRatePlanChargeTier objets "
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : " The ID of the user who last updated the invoice item.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the invoice item was last updated.\n**Character limit**: 29 **Values**: automatically generated "
        }
      }
    },
    "ProxyGetInvoiceItemAdjustment" : {
      "type" : "object",
      "properties" : {
        "AccountId" : {
          "type" : "string",
          "description" : " The ID of the account that owns the invoice.\n**Values**: inherited from `Account.ID` for the invoice owner "
        },
        "AccountingCode" : {
          "type" : "string",
          "description" : " The accounting code for the invoice item. Accounting codes group transactions that contain similar accounting attributes.\n**Character limit**: 100 **Values**: inherited from `InvoiceItem.AccountingCode` "
        },
        "AdjustmentDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the invoice item adjustment is applied. This date must be the same as the invoice's date or later.\n**Character limit**: 29 **Values**: a valid date and time value "
        },
        "AdjustmentNumber" : {
          "type" : "string",
          "description" : " A unique string to identify an individual invoice item adjustment.\n**Character limit**: 255 **Values**: automatically generated "
        },
        "Amount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The amount of the invoice item adjustment. The value of Amount must be positive. Use the required parameter Type to either credit or charge (debit) this amount on the invoice. **Character limit**: 16 **Values**: a valid currency amount "
        },
        "CancelledById" : {
          "type" : "string",
          "description" : " The ID of the Zuora user who canceled the invoice item adjustment. Zuora generates this read-only field only if the adjustment is canceled.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "CancelledDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the invoice item adjustment is canceled. Zuora generates this read-only field if this adjustment is canceled.\n**Character limit**: 29 **Values**: automatically generated "
        },
        "Comment" : {
          "type" : "string",
          "description" : " Use this field to record comments about the invoice item adjustment.\n**Character limit**: 255 **Values**: a string of 255 characters or fewer "
        },
        "CreatedById" : {
          "type" : "string",
          "description" : " The user ID of the person who created the invoice item.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date the invoice item was created.\n**Character limit**: 29 **Values**: automatically generated "
        },
        "CustomerName" : {
          "type" : "string",
          "description" : " The name of the account that owns the associated invoice.\n\n**Character limit**: 50\n\n**Values**: inherited from `Account.Name`\n\n**Note**: This value changes if `Account.Name` is updated. The values of `UpdatedById` and `UpdatedDate` for the `InvoiceItemAdjustment` do not change when `Account.Name` is updated. "
        },
        "CustomerNumber" : {
          "type" : "string",
          "description" : " The unique account number of the customer's account.\n\n**Character limit**: 50\n\n**Values**: inherited from `Account.AccountNumber`\n\n**Note**: This value changes if `Account.AccountNumber` is updated. The values of `UpdatedById` and `UpdatedDate` for the `InvoiceItemAdjustment` do not change when `Account.AccountNumber` is updated. "
        },
        "Id" : {
          "type" : "string",
          "description" : "Object identifier."
        },
        "InvoiceId" : {
          "type" : "string",
          "description" : " The ID of the invoice associated with the adjustment. The adjustment invoice item is in this invoice. This field is optional if you specify a value for the `InvoiceNumber` field.\n**Character limit**: 3 **Values**: a valid invoice ID "
        },
        "InvoiceItemName" : {
          "type" : "string",
          "description" : " The name of the invoice item's charge. This field is required in the Query call, but is inherited in other calls.\n**Character limit**: 255 **Values**: inherited from `InvoiceItem.ChargeName` "
        },
        "InvoiceNumber" : {
          "type" : "string",
          "description" : " The unique identification number for the invoice that contains the invoice item. This field is optional if you specify a value for the `InvoiceId` field.\n**Character limit**: 32 **Values**: a valid invoice number "
        },
        "ReasonCode" : {
          "type" : "string",
          "description" : " A code identifying the reason for the transaction. Must be an existing reason code or empty. If you do not specify a value, Zuora uses the default reason code.\n**Character limit**: 32 **V****alues**: a valid reason code "
        },
        "ReferenceId" : {
          "type" : "string",
          "description" : " A code to reference an object external to Zuora. For example, you can use this field to reference a case number in an external system.\n**Character limit**: 60 **Values**: a string of 60 characters or fewer "
        },
        "ServiceEndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The end date of the service period associated with the invoice item. Service ends one second before the date in this value.\n\n**Character limit**: 29 "
        },
        "ServiceStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The start date of the service period associated with the invoice item. Service ends one second before the date in this value.\n\n**Character limit**: 29 "
        },
        "SourceId" : {
          "type" : "string",
          "description" : " The ID of the item specified in the SourceType field.\n**Character limit**: 32 **Values**: a valid invoice item ID or taxation item ID "
        },
        "SourceType" : {
          "type" : "string",
          "description" : " The type of adjustment.\n**Character limit**: 13 **Values**: InvoiceDetail, Tax "
        },
        "Status" : {
          "type" : "string",
          "description" : " The status of the invoice item adjustment. This field is required in the Query call, but is automatically generated in other calls.\n**Character limit**: 9 **Values**: Canceled, Processed "
        },
        "TransferredToAccounting" : {
          "type" : "string",
          "description" : " Indicates the status of the adjustment's transfer to an external accounting system, such as NetSuite.\n**Character limit**: 10 **Values**: Processing, Yes, Error, Ignore "
        },
        "Type" : {
          "type" : "string",
          "description" : " Query Filter "
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : " The ID of the user who last updated the invoice item.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the invoice item was last updated.\n**Character limit**: 29 **Values**: automatically generated "
        }
      }
    },
    "ProxyGetInvoicePayment" : {
      "type" : "object",
      "properties" : {
        "Amount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The amount of the payment.\n**Character limit**: 16 **Values**: a valid currency amount "
        },
        "CreatedById" : {
          "type" : "string",
          "description" : " The user ID of the person who created the invoice payment.\n**Character limit**: 32 **V****alues**: automatically generated "
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the invoice payment was generated.\n**Character limit**: 29 **V****alues**: automatically generated "
        },
        "Id" : {
          "type" : "string",
          "description" : "Object identifier."
        },
        "InvoiceId" : {
          "type" : "string",
          "description" : " The unique ID of the invoice associated with this invoice payment.\n**Character limit**: 32 **Values**: a valid invoice ID "
        },
        "PaymentId" : {
          "type" : "string",
          "description" : " The unique ID of the payment associated with this invoice payment.\n**Character limit**: 32 **V****alues**: a valid payment ID "
        },
        "RefundAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : "Specifies the amount of a refund applied against this InvoicePayment. **Character limit**: 16 **Values**: automatically generated "
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : " The ID of the user who last updated the invoice payment.\n**Character limit**: 32 **V****alues**: automatically generated "
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the invoice payment was last updated.\n**Character limit**: 29 **V****alues**: automatically generated "
        }
      }
    },
    "ProxyGetInvoiceSplit" : {
      "type" : "object",
      "properties" : {
        "CreatedById" : {
          "type" : "string",
          "description" : "The ID of the Zuora user who created the InvoiceSplit object. **Character limit**: 32 **Values**: automatically generated "
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date when the InvoiceSplit object was created. **Character limit**: 29 **Values**: automatically generated "
        },
        "Id" : {
          "type" : "string",
          "description" : "Object identifier."
        },
        "InvoiceId" : {
          "type" : "string",
          "description" : " The ID of the original invoice that the InvoiceSplit object splits. This field becomes read-only after the InvoiceSplit object is created.\n**Character limit**: 32 **Values**: a valid invoice ID "
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : "The ID of the Zuora user who last updated the invoice split. **Character limit**: 32 **Values**: automatically generated "
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date when the invoice split was last updated. **Values**: automatically generated "
        }
      }
    },
    "ProxyGetInvoiceSplitItem" : {
      "type" : "object",
      "properties" : {
        "CreatedById" : {
          "type" : "string",
          "description" : " The ID of the Zuora user who created the InvoiceSplitItem object.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the InvoiceSplitItem was created.\n**Values**: automatically generated "
        },
        "Id" : {
          "type" : "string",
          "description" : "Object identifier."
        },
        "InvoiceDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The generation date of the new split invoice.\n**Character limit**: 29 **Values**: a valid date and time value "
        },
        "InvoiceId" : {
          "type" : "string",
          "description" : " The new invoice after the split.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "InvoiceSplitId" : {
          "type" : "string",
          "description" : " The ID of the invoice split associated with the individual invoice split item.\n**Character limit**: 32 **Values**: a valid invoice split ID "
        },
        "PaymentTerm" : {
          "type" : "string",
          "description" : " Indicates when the customer pays the split invoice.\n**Values**: a valid, active payment term "
        },
        "SplitPercentage" : {
          "type" : "number",
          "format" : "double",
          "description" : " Specifies the percentage of the original invoice that you want to be the balance of the split invoice. The total of the SplitPercentage field values for all of the InvoiceSplitItem objects in an InvoiceSplit object must equal 100.\n**Values**:\n"
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : " The ID of the Zuora user who last updated the invoice split.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the invoice split was last updated.\n**Values**: automatically generated "
        }
      }
    },
    "ProxyGetPayment" : {
      "type" : "object",
      "properties" : {
        "AccountId" : {
          "type" : "string",
          "description" : " The unique account ID for the customer that the payment is for.\n**Character limit**: 32 **Values**: a valid account ID "
        },
        "AccountingCode" : {
          "type" : "string",
          "description" : " The Chart of Accounts "
        },
        "Amount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The amount of the payment.\n**Character limit**: 16 **Values**: a valid currency value "
        },
        "AppliedCreditBalanceAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The amount of the payment to apply to a credit balance. This field is required in the Create call when the `AppliedInvoiceAmount` field value is null.\n**Character limit**: 16 **Values**: a valid currency value "
        },
        "AuthTransactionId" : {
          "type" : "string",
          "description" : " The authorization transaction ID from the payment gateway. Use this field for electronic payments, such as credit cards.\n**Character limit**: 50 **Values**: a string of 50 characters or fewer "
        },
        "BankIdentificationNumber" : {
          "type" : "string",
          "description" : " The first six digits of the credit card or debit card used for the payment, when applicable.\n**Character limit**: 6 **Values**: automatically generated "
        },
        "CancelledOn" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the payment was canceled.\n**Character limit**: 29 **Values**: automatically generated "
        },
        "Comment" : {
          "type" : "string",
          "description" : " Additional information related to the payment.\n**Character limit**: 255 **Values**: a string of 255 characters or fewer "
        },
        "CreatedById" : {
          "type" : "string",
          "description" : " The user ID of the person who created the `Payment` object.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the Payment object was created in the Zuora system.\n**Character limit**: 29 **Values** automatically generated "
        },
        "EffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the payment takes effect.\n**Character limit**: 29 **Values**: a valid date and time value "
        },
        "Gateway" : {
          "type" : "string",
          "description" : " Name of the gateway instance that processes the payment. When creating a Payment, this must be a valid gateway instance name and this gateway must support the specific payment method. If not specified, the default gateway on the Account will be used. "
        },
        "GatewayOrderId" : {
          "type" : "string",
          "description" : " A merchant-specified natural key value that can be passed to the electronic payment gateway when a payment is created. If not specified, the PaymentNumber will be passed in instead.\n**Character limit**: 70 **Values**: a string of 70 characters or fewer "
        },
        "GatewayResponse" : {
          "type" : "string",
          "description" : " The message returned from the payment gateway for the payment. This message is gateway-dependent.\n**Character limit**: 500 **Values**: automatically generated "
        },
        "GatewayResponseCode" : {
          "type" : "string",
          "description" : " The code returned from the payment gateway for the payment. This code is gateway-dependent.\n**Character limit**: 20 **Values**: automatically generated "
        },
        "GatewayState" : {
          "type" : "string",
          "description" : " The status of the payment in the gateway; use for reconciliation.\n**Character limit**: 19 **Values**: automatically generated "
        },
        "Id" : {
          "type" : "string",
          "description" : "Object identifier."
        },
        "MarkedForSubmissionOn" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when a payment was marked and waiting for batch submission to the payment process. **Character limit**: 29 **Values**: automatically generated "
        },
        "PaymentMethodId" : {
          "type" : "string",
          "description" : " The ID of the payment method used for the payment. Required for Create.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "PaymentMethodSnapshotId" : {
          "type" : "string",
          "description" : " The unique ID of the payment method snapshot which is a copy of the particular Payment Method used in a transaction.\n**Character limit**: 32 **Values**: a valid payment method snapshot ID "
        },
        "PaymentNumber" : {
          "type" : "string",
          "description" : " The unique identification number of a payment. For example: P-00000028.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "ReferenceId" : {
          "type" : "string",
          "description" : " The transaction ID returned by the payment gateway. Use this field to reconcile payments between your gateway and Z-Payments.\n**Character limit**: 60 **Values**: a string of 60 characters or fewer "
        },
        "RefundAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The amount of the payment that is refunded. This field is null if no refund is made against the payment.\n**Character limit**: 16 **Values**: automatically generated "
        },
        "SecondPaymentReferenceId" : {
          "type" : "string",
          "description" : " The transaction ID returned by the payment gateway if there is an additional transaction for the payment. Use this field to reconcile payments between your gateway and Zuora Payments.\n**Character limit**: 60 **Values**: a string of 60 characters or fewer "
        },
        "SettledOn" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the payment was settled in the payment processor. This field is used by the Spectrum gateway only and not applicable to other gateways.\n**Character limit**: 29 **Values**: automatically generated "
        },
        "SoftDescriptor" : {
          "type" : "string",
          "description" : " A payment gateway-specific field that maps to Zuora for the gateways, Orbital, Vantiv and Verifi. **Character limit**: 35 **Values**: `[SDMerchantName]*[SDProductionInfo]` "
        },
        "SoftDescriptorPhone" : {
          "type" : "string",
          "description" : " A payment gateway-specific field that maps to Zuora for the gateways, Orbital, Vantiv and Verifi. **Character limit**: 20 **Values**: `[SDPhone]` "
        },
        "Source" : {
          "type" : "string",
          "description" : " Indicates how the payment was created, whether through API, manually, import, or payment run.\n**Character limit**: **Values**: Payment Run, Import, Manually, and API "
        },
        "SourceName" : {
          "type" : "string",
          "description" : " Name of the source.\n**Character limit**: **Values**: Payment Run number or a file name. "
        },
        "Status" : {
          "type" : "string",
          "description" : " The status of the payment in Zuora. The value depends on the type of payment.\n**Character limit**: 11 **Values**: one of the following:\n\n-  Electronic payments: `Processed`, `Error`, `Voided`\n\n-  External payments: `Processed`, `Canceled`\n* Update of status can change value from `Processed` to `Canceled` when the payment type is external. "
        },
        "SubmittedOn" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the payment was submitted.\n**Character limit:** 29 **Values**: automatically generated "
        },
        "TransferredToAccounting" : {
          "type" : "string",
          "description" : " Indicates if the payment was transferred to an external accounting system. Use this field for integration with accounting systems, such as NetSuite.\n**Character limit**: 11 **Values**: `Processing`, `Yes`, `Error`, `Ignore` "
        },
        "Type" : {
          "type" : "string",
          "description" : " Indicates if the payment is external or electronic.\n**Character limit**: 10 **Values**: `External`, `Electronic` "
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : " The ID of the user who last updated the payment.\n**Character limit**: **Values**: automatically generated "
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the payment was last updated.\n**Character limit**: **Values** **Values**: automatically generated "
        }
      }
    },
    "ProxyGetPaymentMethod" : {
      "type" : "object",
      "properties" : {
        "AccountId" : {
          "type" : "string",
          "description" : " The ID of the customer account associated with this payment method. This field is not required for the account ID. "
        },
        "AchAbaCode" : {
          "type" : "string",
          "description" : " The nine-digit routing number or ABA number used by banks. Use this field for ACH payment methods.\n**Character limit**: 9 **Values**: a string of 9 characters or fewer "
        },
        "AchAccountName" : {
          "type" : "string",
          "description" : " The name of the account holder, which can be either a person or a company. Use this field for ACH payment methods.\n**Character limit**: 70 **Values**: a string of 70 characters or fewer "
        },
        "AchAccountNumberMask" : {
          "type" : "string",
          "description" : " This is a masked displayable version of the ACH account number, used for security purposes. For example: `XXXXXXXXX54321`. Use this field for ACH payment methods.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "AchAccountType" : {
          "type" : "string",
          "description" : " The type of bank account associated with the ACH payment. Use this field for ACH payment methods.\n**Character limit**: 16 **Values**:\n\n- `BusinessChecking`\n- `Checking`\n- `Saving`\n"
        },
        "AchAddress1" : {
          "type" : "string",
          "description" : " Line 1 for the ACH address. Required on create for the Vantiv payment gateway. Optional for other gateways.\n**Character limit:** **Values:** an address "
        },
        "AchAddress2" : {
          "type" : "string",
          "description" : " Line 2 for the ACH address. Required on create for the Vantiv payment gateway. Optional for other gateways.\n**Character limit:** **Values:** an address "
        },
        "AchBankName" : {
          "type" : "string",
          "description" : " The name of the bank where the ACH payment account is held. Use this field for ACH payment methods.\n**Character limit**: 70 **Values**: a string of 70 characters or fewer "
        },
        "Active" : {
          "type" : "boolean",
          "description" : " Specifies whether a payment method is available in Zuora. The default value is `false`.\n**Character limit**: 5 **Values**: `true`, `false` "
        },
        "BankBranchCode" : {
          "type" : "string",
          "description" : " The branch code of the bank used for direct debit. Use this field for direct debit payment methods.\n**Character limit**: 10 **Values**:  string of 10 characters or fewer "
        },
        "BankCheckDigit" : {
          "type" : "string",
          "description" : "The check digit in the international bank account number, which confirms the validity of the account. Use this field for direct debit payment methods. **Character limit**: 4 **Values**:  string of 4 characters or fewer "
        },
        "BankCity" : {
          "type" : "string",
          "description" : " The city of the direct debit bank. Use this field for direct debit payment methods.\n**Character limit**:70 **Values**:  string of 70 characters or fewer "
        },
        "BankCode" : {
          "type" : "string",
          "description" : " The sort code or number that identifies the bank. This is also known as the sort code. This field is required for direct debit payment methods.\n**Character limit**: 18 **Values**:  string of 18 characters or fewer "
        },
        "BankIdentificationNumber" : {
          "type" : "string",
          "description" : " The first six digits of the payment method's number, such as the credit card number or account number. Banks use this number to identify a payment method.\n**Character limit**: 6 **Values**:  string of 6 characters or fewer "
        },
        "BankName" : {
          "type" : "string",
          "description" : " The name of the direct debit bank. Use this field for direct debit payment methods.\n**Character limit**:80 **Values**:  string of 80 characters or fewer "
        },
        "BankPostalCode" : {
          "type" : "string",
          "description" : " The zip code or postal code of the direct debit bank. Use this field for direct debit payment methods.\n**Character limit**:20 **Values**:  string of 20 characters or fewer "
        },
        "BankStreetName" : {
          "type" : "string",
          "description" : " The name of the street of the direct debit bank. Use this field for direct debit payment methods.\n**Character limit**:60 **Values**:  string of 60 characters or fewer "
        },
        "BankStreetNumber" : {
          "type" : "string",
          "description" : " The number of the direct debit bank. Use this field for direct debit payment methods.\n**Character limit**:10 **Values**:  string of 10 characters or fewer "
        },
        "BankTransferAccountName" : {
          "type" : "string",
          "description" : " The name on the direct debit bank account. Use this field for direct debit payment methods.\n**Character limit**: 60 **Values**:  string of 60 characters or fewer "
        },
        "BankTransferAccountNumberMask" : {
          "type" : "string",
          "description" : " This is a masked displayable version of the ACH account number, used for security purposes. For example: `XXXXXXXXX54321`.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "BankTransferAccountType" : {
          "type" : "string",
          "description" : " The type of the customer's bank account. Use this field for direct debit payment methods.\n**Character limit**: 11 **Values**: `DirectDebit` "
        },
        "BankTransferType" : {
          "type" : "string",
          "description" : " Specifies the type of direct debit transfer. The value of this field is dependent on the country of the user. Use this field is used for direct debit payment methods.\n**Character limit**: 20 **Values**:\n\n- `AutomatischIncasso` (NL)\n- `LastschriftDE` (Germany)\n- `LastschriftAT` (Austria)\n- `DemandeDePrelevement` (FR)\n- `DirectDebitUK` (UK)\n- `Domicil` (Belgium)\n- `LastschriftCH` (CH)\n- `RID` (Italy)\n- `OrdenDeDomiciliacion` (Spain)\n"
        },
        "BusinessIdentificationCode" : {
          "type" : "string",
          "description" : " The business identification code for Swiss direct payment methods that use the Global Collect payment gateway. Use this field only for direct debit payments in Switzerland with Global Collect.\n**Character limit**: 11 **Values**: string of 11 characters or fewer "
        },
        "City" : {
          "type" : "string",
          "description" : " The city of the customer's address. Use this field for direct debit payment methods.\n**Character limit**:80 **Values**:  string of 80 characters or fewer "
        },
        "Country" : {
          "type" : "string",
          "description" : " The two-letter country code of the customer's address. Use this field for direct debit payment methods.\n**Character limit**: 2 **Values**: a valid country code "
        },
        "CreatedById" : {
          "type" : "string",
          "description" : " The user ID of the person who created the `PaymentMethod` object when there is a login user in the user session. In Hosted Payment Method and Zuora Checkout pages, this field is set to 3 as there is no login user to initiate a user session.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the `PaymentMethod` object was created in the Zuora system.\n**Character limit**: 29 **Values**: automatically generated "
        },
        "CreditCardAddress1" : {
          "type" : "string",
          "description" : " The first line of the card holder's address, which is often a street address or business name. Use this field for credit card and direct debit payment methods.\n**Character limit**: 255 **Values**: a string of 255 characters or fewer "
        },
        "CreditCardAddress2" : {
          "type" : "string",
          "description" : " The second line of the card holder's address. Use this field for credit card and direct debit payment methods.\n**Character limit**: 255 **Values**: a string of 255 characters or fewer "
        },
        "CreditCardCity" : {
          "type" : "string",
          "description" : " The city of the card holder's address. Use this field for credit card and direct debit payment methods **Character limit**: 40 **Values**: a string of 40 characters or fewer "
        },
        "CreditCardCountry" : {
          "type" : "string",
          "description" : " The country of the card holder's address. "
        },
        "CreditCardExpirationMonth" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " The expiration month of the credit card or debit card. Use this field for credit card and direct debit payment methods.\n**Character limit**: 2 **Values**: a two-digit number, 01 - 12 "
        },
        "CreditCardExpirationYear" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " The expiration month of the credit card or debit card. Use this field for credit card and direct debit payment methods.\n**Character limit**: 4 **Values**: a four-digit number "
        },
        "CreditCardHolderName" : {
          "type" : "string",
          "description" : " The full name of the card holder. Use this field for credit card and direct debit payment methods.\n**Character limit**: 50 **Values**: a string of 50 characters or fewer "
        },
        "CreditCardMaskNumber" : {
          "type" : "string",
          "description" : " A masked version of the credit or debit card number.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "CreditCardPostalCode" : {
          "type" : "string",
          "description" : " The billing address's zip code. This field is required only when you define a debit card or credit card payment.\n**Character limit**: 20 **Values**: a string of 20 characters or fewer "
        },
        "CreditCardState" : {
          "type" : "string",
          "description" : " The billing address's state. Use this field is if the `CreditCardCountry` value is either Canada or the US. State names must be spelled in full. "
        },
        "CreditCardType" : {
          "type" : "string",
          "description" : " The type of credit card or debit card. This field is required only when you define a debit card or credit card payment.\n**Character limit**: 32 **Values**: `AmericanExpress`, `Discover`, `MasterCard`, `Visa` "
        },
        "DeviceSessionId" : {
          "type" : "string",
          "description" : " The session ID of the user when the `PaymentMethod` was created or updated. Some gateways use this field for fraud prevention. If this field is passed to Zuora, then Zuora passes this field to supported gateways. Currently only Verifi supports this field.\n**Character limit**: 255 **Values**: "
        },
        "Email" : {
          "type" : "string",
          "description" : " An email address for the payment method in addition to the bill to contact email address.\n**Character limit**: 80 **Values**: a string of 80 characters or fewer "
        },
        "ExistingMandate" : {
          "type" : "string",
          "description" : " Indicates if the customer has an existing mandate or a new mandate. A mandate is a signed authorization for UK and NL customers. When you are migrating mandates from another system, be sure to set this field correctly. If you indicate that a new mandate is an existing mandate or vice-versa, then transactions fail. This field is used only for the direct debit payment method.\n**Character limit**: 3 **Values**: `Yes`, `No` "
        },
        "FirstName" : {
          "type" : "string",
          "description" : " The customer's first name. This field is used only for the direct debit payment method.\n**Character limit**: 30 **Values**: a string of 30 characters or fewer "
        },
        "IBAN" : {
          "type" : "string",
          "description" : " The International Bank Account Number. This field is used only for the direct debit payment method.\n**Character limit**: 42 **Values**: a string of 42 characters or fewer "
        },
        "IPAddress" : {
          "type" : "string",
          "description" : " The IP address of the user when the payment method was created or updated. Some gateways use this field for fraud prevention. If this field is passed to Zuora, then Zuora passes this field to supported gateways. Currently PayPal, CyberSource, Authorize.Net, and Verifi support this field.\n**Character limit**: 15 **Values**: a string of 15 characters or fewer "
        },
        "Id" : {
          "type" : "string",
          "description" : "Object identifier."
        },
        "LastFailedSaleTransactionDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date of the last failed attempt to collect payment with this payment method.\n**Character limit**: 29 **Values**: automatically generated "
        },
        "LastName" : {
          "type" : "string",
          "description" : " The customer's last name. This field is used only for the direct debit payment method.\n**Character limit**: 70 **Values**: a string of 70 characters or fewer "
        },
        "LastTransactionDateTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date of the most recent transaction.\n**Character limit**: 29 **Values**: [a valid date and time value](/CB_Billing/WA_Dates_in_Zuora/A_Date_Format_and_Datetimes_in_Zuora) "
        },
        "LastTransactionStatus" : {
          "type" : "string",
          "description" : " The status of the most recent transaction.\n**Character limit**: 39 **Values**: automatically generated "
        },
        "MandateCreationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the mandate was created. A mandate is a signed authorization for UK and NL customers. This field is used only for the direct debit payment method.\n**Character limit**: 29 **Values**: a valid date and time value "
        },
        "MandateID" : {
          "type" : "string",
          "description" : " The ID of the mandate. A mandate is a signed authorization for UK and NL customers. This field is used only for the direct debit payment method.\n**Character limit**: 36 **Values**: a string of 36 characters or fewer "
        },
        "MandateReceived" : {
          "type" : "string",
          "description" : " Indicates if  the mandate was received. A mandate is a signed authorization for UK and NL customers. This field is used only for the direct debit payment method.\n**Character limit**: 3 **Values**: `Yes`, `No `(case-sensitive) "
        },
        "MandateUpdateDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the mandate was last updated. A mandate is a signed authorization for UK and NL customers. This field is used only for the direct debit payment method.\n**Character limit**: 29 **Values**: a valid date and time value "
        },
        "MaxConsecutivePaymentFailures" : {
          "type" : "integer",
          "description" : " Specifies the number of allowable consecutive failures Zuora attempts with the payment method before stopping.\n**Values**: a valid number "
        },
        "Name" : {
          "type" : "string",
          "description" : " Create Query Delete Filter "
        },
        "NumConsecutiveFailures" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " The number of consecutive failed payment for this payment method. It is reset to 0 upon successful payment. You can use the API to update the field value to 0.\n**Character limit**: **Values**: a positive whole number "
        },
        "PaymentMethodStatus" : {
          "type" : "string",
          "description" : " Specifies the status of the payment method. It is set to Active on creation.\n**Character limit**: 6 **Values**: `Active` or `Closed`\n"
        },
        "PaymentRetryWindow" : {
          "type" : "integer",
          "description" : " The retry interval setting, which prevents making a payment attempt if the last failed attempt was within the last specified number of hours. This field is required if the `UseDefaultRetryRule` field value is set to `false`.\n**Character limit**: 4 **Values**: a whole number between 1 and 1000, exclusive "
        },
        "PaypalBaid" : {
          "type" : "string",
          "description" : " The PayPal billing agreement ID, which is a contract between two PayPal accounts. Typically, the selling party initiates a request to create a BAID, and sends it to buying party for acceptance. The seller can keep track of the BAID and use it for future charges against the buyer. This field is required when defining a PayPal payment method.\n**Character limit**: 64 **Values**: a string of 64 characters or fewer "
        },
        "PaypalEmail" : {
          "type" : "string",
          "description" : " The email address associated with the account holder's PayPal account or of the PayPal account of the person paying for the service. This field is required only when you define a PayPal payment method.\n**Character limit**: 80 **Values**: a string of 80 characters or fewer "
        },
        "PaypalPreapprovalKey" : {
          "type" : "string",
          "description" : " PayPal's Adaptive Payments API key. Zuora does not create this key, nor does it call PayPal to generate it. You must use PayPal's Adaptive Payments' API to generate this key, and then pass it to Zuora. Zuora uses this key to authorize future payments to PayPal's Adaptive Payments API. This field is required when you use PayPal Adaptive Payments gateway.\n**Character limit**: 32 **Values**: a valid PayPal Adaptive Payment pre-approval key "
        },
        "PaypalType" : {
          "type" : "string",
          "description" : " Specifies the PayPal gateway: PayFlow Pro (Express Checkout) or Adaptive Payments. This field is required when you use PayPal Adaptive Payments or Payflow Pro (Express Checkout) gateways.\n**Character limit**: 32 **Values**: `ExpressCheckout`, `AdaptivePayments` "
        },
        "Phone" : {
          "type" : "string",
          "description" : " The phone number that the account holder registered with the bank. This field is used for credit card validation when passing to a gateway.\n**Character limit**: 40 **Values**: a string of 40 characters or fewer "
        },
        "PostalCode" : {
          "type" : "string",
          "description" : " The zip code of the customer's address. This field is used only for the direct debit payment method.\n**Character limit**: 20 **Values**: a string of 20 characters or fewer "
        },
        "SecondTokenId" : {
          "type" : "string",
          "description" : " A gateway unique identifier that replaces sensitive payment method data. SecondTokenId is conditionally required only when TokenID is being used to represent a gateway customer profile. SecondTokenId is used in the CC Reference Transaction payment method. **Character limit**: 64 **Values**: a string of 64 characters or fewer "
        },
        "State" : {
          "type" : "string",
          "description" : " The state of the customer's address. This field is used only for the direct debit payment method.\n**Character limit**: 70 **Values**: a string of 70 characters or fewer "
        },
        "StreetName" : {
          "type" : "string",
          "description" : " The street name of the customer's address. This field is used only for the direct debit payment method.\n**Character limit**: 100 **Values**: a string of 100 characters or fewer "
        },
        "StreetNumber" : {
          "type" : "string",
          "description" : " The street number of the customer's address. This field is used only for the direct debit payment method.\n**Character limit**: 30 **Values**: a string of 30 characters or fewer "
        },
        "TokenId" : {
          "type" : "string",
          "description" : " A gateway unique identifier that replaces sensitive payment method data or represents a gateway's unique customer profile. When TokenId is used to represent a customer profile, then SecondTokenId is conditionally required for representing the underlying tokenized payment method. TokenId is required for the CC Reference Transaction payment method.\n**Character limit**: 255 **Values**: a string of 255 characters or fewer "
        },
        "TotalNumberOfErrorPayments" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " The number of error payments that used this payment method.\n**Character limit**: **Values**: automatically generated "
        },
        "TotalNumberOfProcessedPayments" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " The number of successful payments that used this payment method.\n**Character limit**: **Values**: automatically generated "
        },
        "Type" : {
          "type" : "string",
          "description" : " Create Query Update Delete Filter "
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : " The ID of the user who last updated the payment method.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the payment method was last updated.\n**Character limit**: 29 **Values**: automatically generated "
        },
        "UseDefaultRetryRule" : {
          "type" : "boolean",
          "description" : " Determines whether to use the default retry rules configured in the Zuora Payments settings. Set this to `true` to use the default retry rules. Set this to `false` to set the specific rules for this payment method. If you set this value to `false`, then the fields, `PaymentRetryWindow` and `MaxConsecutivePaymentFailures`, are required.\n**Character limit**: 5 **Values**: `t``rue`, `false` "
        }
      }
    },
    "ProxyGetPaymentMethodSnapshot" : {
      "type" : "object",
      "properties" : {
        "AccountId" : {
          "type" : "string",
          "description" : ""
        },
        "AchAbaCode" : {
          "type" : "string",
          "description" : ""
        },
        "AchAccountName" : {
          "type" : "string",
          "description" : ""
        },
        "AchAccountNumberMask" : {
          "type" : "string",
          "description" : ""
        },
        "AchAccountType" : {
          "type" : "string",
          "description" : ""
        },
        "AchBankName" : {
          "type" : "string",
          "description" : ""
        },
        "BankBranchCode" : {
          "type" : "string",
          "description" : ""
        },
        "BankCheckDigit" : {
          "type" : "string",
          "description" : ""
        },
        "BankCity" : {
          "type" : "string",
          "description" : ""
        },
        "BankCode" : {
          "type" : "string",
          "description" : ""
        },
        "BankIdentificationNumber" : {
          "type" : "string",
          "description" : ""
        },
        "BankName" : {
          "type" : "string",
          "description" : ""
        },
        "BankPostalCode" : {
          "type" : "string",
          "description" : ""
        },
        "BankStreetName" : {
          "type" : "string",
          "description" : ""
        },
        "BankStreetNumber" : {
          "type" : "string",
          "description" : ""
        },
        "BankTransferAccountName" : {
          "type" : "string",
          "description" : ""
        },
        "BankTransferAccountNumberMask" : {
          "type" : "string",
          "description" : ""
        },
        "BankTransferAccountType" : {
          "type" : "string",
          "description" : ""
        },
        "BankTransferType" : {
          "type" : "string",
          "description" : ""
        },
        "BusinessIdentificationCode" : {
          "type" : "string",
          "description" : ""
        },
        "City" : {
          "type" : "string",
          "description" : ""
        },
        "Country" : {
          "type" : "string",
          "description" : ""
        },
        "CreditCardAddress1" : {
          "type" : "string",
          "description" : ""
        },
        "CreditCardAddress2" : {
          "type" : "string",
          "description" : ""
        },
        "CreditCardCity" : {
          "type" : "string",
          "description" : ""
        },
        "CreditCardCountry" : {
          "type" : "string",
          "description" : ""
        },
        "CreditCardExpirationMonth" : {
          "type" : "integer",
          "format" : "int32",
          "description" : ""
        },
        "CreditCardExpirationYear" : {
          "type" : "integer",
          "format" : "int32",
          "description" : ""
        },
        "CreditCardHolderName" : {
          "type" : "string",
          "description" : ""
        },
        "CreditCardMaskNumber" : {
          "type" : "string",
          "description" : ""
        },
        "CreditCardPostalCode" : {
          "type" : "string",
          "description" : ""
        },
        "CreditCardState" : {
          "type" : "string",
          "description" : ""
        },
        "CreditCardType" : {
          "type" : "string",
          "description" : ""
        },
        "DeviceSessionId" : {
          "type" : "string",
          "description" : ""
        },
        "Email" : {
          "type" : "string",
          "description" : ""
        },
        "ExistingMandate" : {
          "type" : "string",
          "description" : ""
        },
        "FirstName" : {
          "type" : "string",
          "description" : ""
        },
        "IBAN" : {
          "type" : "string",
          "description" : ""
        },
        "IPAddress" : {
          "type" : "string",
          "description" : ""
        },
        "Id" : {
          "type" : "string",
          "description" : "Object identifier."
        },
        "LastFailedSaleTransactionDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : ""
        },
        "LastName" : {
          "type" : "string",
          "description" : ""
        },
        "LastTransactionDateTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : ""
        },
        "LastTransactionStatus" : {
          "type" : "string",
          "description" : ""
        },
        "MandateCreationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : ""
        },
        "MandateID" : {
          "type" : "string",
          "description" : ""
        },
        "MandateReceived" : {
          "type" : "string",
          "description" : ""
        },
        "MandateUpdateDate" : {
          "type" : "string",
          "format" : "date",
          "description" : ""
        },
        "MaxConsecutivePaymentFailures" : {
          "type" : "integer",
          "description" : ""
        },
        "Name" : {
          "type" : "string",
          "description" : ""
        },
        "NumConsecutiveFailures" : {
          "type" : "integer",
          "format" : "int32",
          "description" : ""
        },
        "PaymentMethodId" : {
          "type" : "string",
          "description" : ""
        },
        "PaymentMethodStatus" : {
          "type" : "string",
          "description" : ""
        },
        "PaymentRetryWindow" : {
          "type" : "integer",
          "description" : ""
        },
        "PaypalBaid" : {
          "type" : "string",
          "description" : ""
        },
        "PaypalEmail" : {
          "type" : "string",
          "description" : ""
        },
        "PaypalPreapprovalKey" : {
          "type" : "string",
          "description" : ""
        },
        "PaypalType" : {
          "type" : "string",
          "description" : ""
        },
        "Phone" : {
          "type" : "string",
          "description" : ""
        },
        "PostalCode" : {
          "type" : "string",
          "description" : ""
        },
        "SecondTokenId" : {
          "type" : "string",
          "description" : ""
        },
        "State" : {
          "type" : "string",
          "description" : ""
        },
        "StreetName" : {
          "type" : "string",
          "description" : ""
        },
        "StreetNumber" : {
          "type" : "string",
          "description" : ""
        },
        "TokenId" : {
          "type" : "string",
          "description" : ""
        },
        "TotalNumberOfErrorPayments" : {
          "type" : "integer",
          "format" : "int32",
          "description" : ""
        },
        "TotalNumberOfProcessedPayments" : {
          "type" : "integer",
          "format" : "int32",
          "description" : ""
        },
        "Type" : {
          "type" : "string",
          "description" : ""
        },
        "UseDefaultRetryRule" : {
          "type" : "boolean",
          "description" : ""
        }
      }
    },
    "ProxyGetPaymentMethodTransactionLog" : {
      "type" : "object",
      "properties" : {
        "Gateway" : {
          "type" : "string",
          "description" : ""
        },
        "GatewayReasonCode" : {
          "type" : "string",
          "description" : ""
        },
        "GatewayReasonCodeDescription" : {
          "type" : "string",
          "description" : ""
        },
        "GatewayTransactionType" : {
          "type" : "string",
          "description" : ""
        },
        "Id" : {
          "type" : "string",
          "description" : "Object identifier."
        },
        "PaymentMethodId" : {
          "type" : "string",
          "description" : ""
        },
        "PaymentMethodType" : {
          "type" : "string",
          "description" : ""
        },
        "RequestString" : {
          "type" : "string",
          "description" : ""
        },
        "ResponseString" : {
          "type" : "string",
          "description" : ""
        },
        "TransactionDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : ""
        },
        "TransactionId" : {
          "type" : "string",
          "description" : ""
        }
      }
    },
    "ProxyGetPaymentTransactionLog" : {
      "type" : "object",
      "properties" : {
        "AVSResponseCode" : {
          "type" : "string",
          "description" : ""
        },
        "BatchId" : {
          "type" : "string",
          "description" : ""
        },
        "CVVResponseCode" : {
          "type" : "string",
          "description" : ""
        },
        "Gateway" : {
          "type" : "string",
          "description" : ""
        },
        "GatewayReasonCode" : {
          "type" : "string",
          "description" : ""
        },
        "GatewayReasonCodeDescription" : {
          "type" : "string",
          "description" : ""
        },
        "GatewayState" : {
          "type" : "string",
          "description" : ""
        },
        "GatewayTransactionType" : {
          "type" : "string",
          "description" : ""
        },
        "Id" : {
          "type" : "string",
          "description" : "Object identifier."
        },
        "PaymentId" : {
          "type" : "string",
          "description" : ""
        },
        "RequestString" : {
          "type" : "string",
          "description" : ""
        },
        "ResponseString" : {
          "type" : "string",
          "description" : ""
        },
        "TransactionDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : ""
        },
        "TransactionId" : {
          "type" : "string",
          "description" : ""
        }
      }
    },
    "ProxyGetProduct" : {
      "type" : "object",
      "properties" : {
        "AllowFeatureChanges" : {
          "type" : "boolean",
          "description" : " Controls whether to allow your users to add or remove features while creating or amending a subscription.\n**Character** **limit**: n/a\n**Values**: true, false (default) "
        },
        "Category" : {
          "type" : "string",
          "description" : " Category of the product. Used by Zuora Quotes Guided Product Selector.\n**Character** **limit**: 100\n**Values**: One of the following:\n\n- Base Products\n- Add On Services\n- Miscellaneous Products\n"
        },
        "CreatedById" : {
          "type" : "string",
          "description" : "The ID of the Zuora user who created the `Product` object. **Character limit**: 32 **Values**: automatically generated "
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the `Product` object was created.\n**Character limit**: n/a **Values**: automatically generated "
        },
        "Description" : {
          "type" : "string",
          "description" : " A descriptionof the product. **Character limit**: 500 **Values**: a string of 500 characters or fewer "
        },
        "EffectiveEndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date when the product expires and can't be subscribed to anymore. **Character limit**: 29 **Values**: a valid date and time value "
        },
        "EffectiveStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date when the product becomes available and can be subscribed to. **Character limit**: 29 **Values**: a valid date and time value "
        },
        "Id" : {
          "type" : "string",
          "description" : "Object identifier."
        },
        "Name" : {
          "type" : "string",
          "description" : "The name of the product. This information is displayed in the product catalog pages in the web-based UI. **Character limit**: 100 **Values**: a string of 100 characters or fewer "
        },
        "SKU" : {
          "type" : "string",
          "description" : "The unique SKU for the product. **Character limit**: 50 **Values**: one of the following:\n\n- leave null for automatic generated\n- an alphanumeric string of 50 characters or fewer\n"
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : "The ID of the last user to update the object. **Character limit**: 32 **Values**: automatically generated "
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date when the object was last updated. **Character limit**: 29 **Values**: automatically generated "
        }
      }
    },
    "ProxyGetProductFeature" : {
      "type" : "object",
      "properties" : {
        "CreatedById" : {
          "type" : "string",
          "description" : "The ID of the Zuora user who created the Account object. **Character limit**: 32 **Values**: automatically generated "
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date when the Account object was created. **Character limit**: 29 **Values**: automatically generated "
        },
        "FeatureId" : {
          "type" : "string",
          "description" : " Internal Zuora ID of the product feature. This field is not editable.\n**Character limit**: 32 **Values**: a string of 32 characters or fewer "
        },
        "Id" : {
          "type" : "string",
          "description" : "Object identifier."
        },
        "ProductId" : {
          "type" : "string",
          "description" : " Id of the product to which the feature belongs. This field is not editable.\n**Character limit**: 32 **Values**: a string of 32 characters or fewer "
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : "The ID of the user who last updated the account. **Character limit**: 32 **Values**: automatically generated "
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date when the account was last updated. **Character limit**: 29 **Values**: automatically generated "
        }
      }
    },
    "ProxyGetProductRatePlan" : {
      "type" : "object",
      "properties" : {
        "CreatedById" : {
          "type" : "string",
          "description" : "The ID of the Zuora user who created the `ProductRatePlan` object. **Character limit**: 32 **Values**: automatically generated "
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the `ProductRatePlan` object was created.\n**Character limit**: 29 **Values**: automatically generated "
        },
        "Description" : {
          "type" : "string",
          "description" : "A description of the product rate plan. **Character limit**: 500 **Values**: a string of 500 characters or fewer "
        },
        "EffectiveEndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the product rate plan expires and can't be subscribed to.\n**Character limit**: 29 **Values**: a valid date and time value "
        },
        "EffectiveStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the product rate plan becomes available and can be subscribed to.\n**Character limit**: 29 **Values**: a valid date and time value "
        },
        "Id" : {
          "type" : "string",
          "description" : "Object identifier."
        },
        "Name" : {
          "type" : "string",
          "description" : "The name of the product rate plan. The name doesn't have to be unique in a Product Catalog, but the name has to be unique within a product. **Character limit**: 100 **Values**: a string of 100 characters or fewer "
        },
        "ProductId" : {
          "type" : "string",
          "description" : "The ID of the product that contains the product rate plan. **Character limit**: 32 **Values**: a string of 32 characters or fewer "
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : "The ID of the last user to update the object. **Character limit**: 32 **Values**: automatically generated "
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date when the object was last updated. **Character limit**: 29 **Values**: automatically generated "
        }
      }
    },
    "ProxyGetProductRatePlanCharge" : {
      "type" : "object",
      "properties" : {
        "AccountingCode" : {
          "type" : "string",
          "description" : "The accounting code for the charge. Accounting codes group transactions that contain similar accounting attributes. **Character limit**: 100 **Values**: an active accounting code in your Zuora Chart of Accounts "
        },
        "ApplyDiscountTo" : {
          "type" : "string",
          "description" : "Specifies the type of charges that you want a specific discount to apply to. All field values are case sensitive: note that these values are in all-caps. **Character limit**: 21 **Values**: one of the following:\n\n- `ONETIME (1)`\n- `RECURRING (2)`\n- `USAGE (4)`\n- `ONETIMERECURRING (3)`\n- `ONETIMEUSAGE (5)`\n- `RECURRINGUSAGE (6)`\n- `ONETIMERECURRINGUSAGE (7)`\n"
        },
        "BillCycleDay" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " Sets the bill cycle day (BCD) for the charge. The BCD determines which day of the month customer is billed. The BCD value in the account can override the BCD in this object.\n**Character limit**: 2 **Values**: a valid BCD integer, 1 - 31 "
        },
        "BillCycleType" : {
          "type" : "string",
          "description" : " Specifies how to determine the billing day for the charge. **Character limit**: 20 **Values**: one of the following:\n\n- `DefaultFromCustomer`\n- `SpecificDayofMonth:`\n- `SubscriptionStartDay`\n- `ChargeTriggerDay`\n- `SpecificDayofWeek`\n**Note**:\n\n- If you set this field to `SpecificDayofMonth`, you must specify which day of the month as the billing day for the charge in the BillCycleDay field.\n- If you set this field to `SpecificDayofWeek`, you must specify which day of the week as the billing day for the charge in the WeeklyBillCycleDay field.\n"
        },
        "BillingPeriod" : {
          "type" : "string",
          "description" : " The billing period for the charge. The start day of the billing period is also called the bill cycle day (BCD).\n**Character limit**: 15 **Values**: one of the following\n\n- `Month`\n- `Quarter`\n- `Annual`\n- `Semi-Annual`\n- `Specific Months`\n- `Subscription Term` (This value is in **Limited Availability**.)\n- `Week`\n- `Specific Weeks`\n**Note**: Specify the number of months or weeks in the SpecificBillingPeriod field if you set this field to `Specific Months` or `Specific Weeks`. "
        },
        "BillingPeriodAlignment" : {
          "type" : "string",
          "description" : " Aligns charges within the same subscription if multiple charges begin on different dates.\n**Character limit**: 24 **Values**: one of the following:\n\n- `AlignToCharge`\n- `AlignToSubscriptionStart`\n- `AlignToTermStart`\n"
        },
        "BillingTiming" : {
          "type" : "string",
          "description" : " The billing timing for the charge. You can choose to bill in advance or in arrears for recurring charge types. This field is not used in one-time or usage based charge types.\n**Character limit**: **Values**: one of the following:\n\n- `In Advance`\n- `In Arrears`\n\nThis feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).\n\n"
        },
        "ChargeModel" : {
          "type" : "string",
          "description" : " Determines how to calculate charges. Charge models must be individually activated in Zuora Billing administration.\n**Character limit**: 27 **Values**: one of the following:\n\n- `Discount-Fixed Amount`\n- `Discount-Percentage`\n- `Flat Fee Pricing`\n- `Per Unit Pricing`\n- `Overage Pricing`\n- `Tiered Pricing`\n- `Tiered with Overage Pricing`\n- `Volume Pricing`\n"
        },
        "ChargeType" : {
          "type" : "string",
          "description" : " Specifies the type of charge.\n**Character limit**: 9 **Values**: one of the following:\n\n- `OneTime`\n- `Recurring`\n- `Usage`\n"
        },
        "CreatedById" : {
          "type" : "string",
          "description" : "The ID of the Zuora user who created the `ProductRatePlanCharge` object. **Character limit**: 32 **Values**: automatically generated "
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the  `ProductRatePlanCharge` object was created.\n**Character limit**: 29 **Values**: automatically generated "
        },
        "DefaultQuantity" : {
          "type" : "number",
          "format" : "double",
          "description" : " The default quantity of units, such as the number of authors in a hosted wiki service. This field is required if you use a per-unit pricing model.\n**Character limit**: 16 **Values**: a valid quantity value "
        },
        "DeferredRevenueAccount" : {
          "type" : "string",
          "description" : " The name of the deferred revenue account for this charge.\n**Character limit**: 100 **Values**: an active accounting code in your Zuora Chart of Accounts\nThis feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).\n\n"
        },
        "Description" : {
          "type" : "string",
          "description" : "A description of the charge. **Character limit**: 500 **Values**: a string of 500 characters or fewer "
        },
        "DiscountLevel" : {
          "type" : "string",
          "description" : " Specifies if the discount applies to just the product rate plan, the entire subscription, or to any activity in the account.\n**Character limit**: 12 **Values**: one of the following:\n\n- `rateplan`\n- `subscription`, `account`\n"
        },
        "EndDateCondition" : {
          "type" : "string",
          "description" : " Defines when the charge ends after the charge trigger date.\n**Values**: one of the following:\n\n- `SubscriptionEnd`: The charge ends on the subscription end date after a specified period based on the trigger date of the charge. This is the default value.\n- `FixedPeriod`: The charge ends after a specified period based on the trigger date of the charge. If you set this field to `FixedPeriod`, you must specify the length of the period and a period type by defining the `UpToPeriods` and `UpToPeriodsType` fields.\n**Note**: If the subscription ends before the charge end date, the charge ends when the subscription ends. But if the subscription end date is subsequently changed through a Renewal, or Terms and Conditions amendment, the charge will end on the charge end date. "
        },
        "Id" : {
          "type" : "string",
          "description" : "Object identifier."
        },
        "IncludedUnits" : {
          "type" : "number",
          "format" : "double",
          "description" : "Specifies the number of units in the base set of units. **Character limit**: 16 **Values**: a positive decimal value "
        },
        "LegacyRevenueReporting" : {
          "type" : "boolean",
          "description" : ""
        },
        "ListPriceBase" : {
          "type" : "string",
          "description" : "The list price base for the product rate plan charge. **Values**: one of the following:\n\n- `Per Month`\n- `Per Billing Period`\n- `Per Week`\n"
        },
        "MaxQuantity" : {
          "type" : "number",
          "format" : "double",
          "description" : " Specifies the maximum number of units for this charge. Use this field and the `MinQuantity` field to create a range of units allowed in a product rate plan charge.\n**Character limit**: 16 **Values**: a positive decimal value "
        },
        "MinQuantity" : {
          "type" : "number",
          "format" : "double",
          "description" : "Specifies the minimum number of units for this charge. Use this field and the `MaxQuantity` field to create a range of units allowed in a product rate plan charge. **Character limit**: 16 **Values**: a positive decimal value "
        },
        "Name" : {
          "type" : "string",
          "description" : "The name of the product rate plan charge. **Character limit**: 100 **Values**: a string of 100 characters or fewer "
        },
        "NumberOfPeriod" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Specifies the number of periods to use when calculating charges in an overage smoothing charge model. **Character limit**: **Values**: a positive whole number "
        },
        "OverageCalculationOption" : {
          "type" : "string",
          "description" : "Determines when to calculate overage charges. If the value of the SmoothingMode field is not specified, the value of this field is ignored. **Character limit**: 20 **Values**: one of the following:\n\n- `EndOfSmoothingPeriod`: This option is used by default. The overage is charged at the end of the smoothing period.\n- `PerBillingPeriod`: The overage is charged on-demand rather than waiting until the end of the smoothing period.\n"
        },
        "OverageUnusedUnitsCreditOption" : {
          "type" : "string",
          "description" : " Determines whether to credit the customer with unused units of usage.\n**Character limit**: 20 **Values**: one of the following:\n\n- `NoCredit`\n- `CreditBySpecificRate`\n"
        },
        "PriceChangeOption" : {
          "type" : "string",
          "description" : " Applies an automatic price change when a termed subscription is renewed.\n**Character limit**: **Values**: one of the following:\n\n- `NoChange` (default)\n- `SpecificPercentageValue`\n- `UseLatestProductCatalogPricing`\n"
        },
        "PriceIncreasePercentage" : {
          "type" : "number",
          "format" : "double",
          "description" : " Specifies the percentage to increase or decrease the price of a termed subscription's renewal. Use this field if you set the value to `SpecificPercentageValue`.\n**Character limit**: 16 **Values**: a decimal value between -100 and 100 "
        },
        "ProductRatePlanId" : {
          "type" : "string",
          "description" : " The ID of the product rate plan associated with this product rate plan charge.\n**Character limit**: 32 **Values**: a valid product rate plan ID "
        },
        "RecognizedRevenueAccount" : {
          "type" : "string",
          "description" : " The name of the recognized revenue account for this charge.\n\n- Required when the Allow Blank Accounting Code setting is No.\n- Optional when the Allow Blank Accounting Code setting is Yes.\n\n**Character limit**: 100 **Values**: an active accounting code in your Zuora Chart of Accounts\nThis feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).\n\n"
        },
        "RevRecCode" : {
          "type" : "string",
          "description" : "Associates this product rate plan charge with a specific revenue recognition code. **Character limit**: 70 **Values**: a valid revenue recognition code "
        },
        "RevRecTriggerCondition" : {
          "type" : "string",
          "description" : " Specifies when revenue recognition begins.\n**Character limit**: 22 **Values**: one of the following:\n\n- `ContractEffectiveDate`\n- `ServiceActivationDate`\n- `CustomerAcceptanceDate`\n"
        },
        "RevenueRecognitionRuleName" : {
          "type" : "string",
          "description" : "Determines when to recognize the revenue for this charge. **Character limit**: 25 **Values**: one of the following:\n\n- `Recognize upon invoicing`\n- `Recognize daily over time`\n"
        },
        "SmoothingModel" : {
          "type" : "string",
          "description" : " Specifies the smoothing model for an overage smoothing charge model.\n**Character limit**: 22 **Values**: one of the following:\n\n- `RollingWindow`\n- `Rollover`\n"
        },
        "SpecificBillingPeriod" : {
          "type" : "integer",
          "format" : "int64",
          "description" : " Customizes the number of months or weeks for the charges billing period. This field is required if you set the value of the BillingPeriod field to `Specific Months` or `Specific Weeks`.\n**Values**: a positive integer "
        },
        "TaxCode" : {
          "type" : "string",
          "description" : " Specifies the tax code for taxation rules. Required when the Taxable field is set to `True`.\n\n**Character limit**: 64\n\n**Values**: a valid tax code\n\n**Note**: This value affects the tax calculation of rate plan charges that come from the `ProductRatePlanCharge`. "
        },
        "TaxMode" : {
          "type" : "string",
          "description" : " Determines how to define taxation for the charge. Required when the Taxable field is set to `True`.\n\n**Character limit**: 12\n\n**Values**: one of the following:\n\n- `TaxExclusive`\n- `TaxInclusive`\n\n**Note**: This value affects the tax calculation of rate plan charges that come from the `ProductRatePlanCharge`. "
        },
        "Taxable" : {
          "type" : "boolean",
          "description" : " Determines whether the charge is taxable. When set to `True`, the TaxMode and TaxCode fields are required when creating or updating th ProductRatePlanCharge object.\n\n**Character limit**: 5\n\n**Values**: `True`, `False`\n\n**Note**: This value affects the tax calculation of rate plan charges that come from the `ProductRatePlanCharge`. "
        },
        "TriggerEvent" : {
          "type" : "string",
          "description" : " Specifies when to start billing the customer for the charge.\n**Character limit**: 18 **Values**: one of the following:\n\n- `ContractEffective` is the date when the subscription's contract goes into effect and the charge is ready to be billed.\n- `ServiceActivation` is the date when the services or products for a subscription have been activated and the customers have access.\n- `CustomerAcceptance` is when the customer accepts the services or products for a subscription.\n"
        },
        "UOM" : {
          "type" : "string",
          "description" : " Specifies the units to measure usage.\n**Character limit**: 25 **Values**: a configured unit of measure **Note**: You must specify this field when creating the following charge models:\n\n- Per Unit Pricing\n- Volume Pricing\n- Overage Pricing\n- Tiered Pricing\n- Tiered with Overage Pricing\n"
        },
        "UpToPeriods" : {
          "type" : "integer",
          "format" : "int64",
          "description" : " Specifies the length of the period during which the charge is active. If this period ends before the subscription ends, the charge ends when this period ends.\n**Character limit**: 5 **Values**: a whole number between 0 and 65535, exclusive **Note**:\n\n- You must use this field together with the `UpToPeriodsType` field to specify the time period. This field is applicable only when the `EndDateCondition` field is set to `FixedPeriod`.\n- If the subscription end date is subsequently changed through a Renewal, or Terms and Conditions amendment, the charge end date will change accordingly up to the original period end.\n"
        },
        "UpToPeriodsType" : {
          "type" : "string",
          "description" : " The period type used to define when the charge ends.\n**Character limit**: -- **Values**: one of the following:\n\n- `Billing Periods` (default)\n- `Days`\n- `Weeks`\n- `Months`\n- Years\n**Note**:\n\n- You must use this field together with the `UpToPeriods` field to specify the time period.\n- This field is applicable only when the `EndDateCondition` field is set to `FixedPeriod`.\n"
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : "The ID of the last user to update the object. **Character limit**: 32 **Values**: automatically generated "
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date when the object was last updated. **Character limit**: 29 **Values**: automatically generated "
        },
        "UseDiscountSpecificAccountingCode" : {
          "type" : "boolean",
          "description" : "Determines whether to define a new accounting code for the new discount charge. **Character limit**: 5 **Values**: `True`, `False` "
        },
        "UseTenantDefaultForPriceChange" : {
          "type" : "boolean",
          "description" : " Applies the tenant-level percentage uplift value for an automatic price change to a termed subscription's renewal. **Character limit**: 5 **Values**: `true`, `false` "
        },
        "WeeklyBillCycleDay" : {
          "type" : "string",
          "description" : " Specifies which day of the week as the bill cycle day (BCD) for the charge.\nThis feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).\n\n**Values**: one of the following:\n\n- `Sunday`\n- `Monday`\n- `Tuesday`\n- `Wednesday`\n- `Thursday`\n- `Friday`\n- `Saturday`\n"
        }
      }
    },
    "ProxyGetProductRatePlanChargeTier" : {
      "type" : "object",
      "properties" : {
        "CreatedById" : {
          "type" : "string",
          "description" : "The ID of the Zuora user who created the ProductRatePlanChargeTier object. **Character limit**: 32 **Values**: automatically generated "
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date when the ProductRatePlanChargeTier object was created. **Character limit**: 29 **Values**: automatically generated "
        },
        "Currency" : {
          "type" : "string",
          "description" : "The code corresponding to the currency for the tier's price. **Character limit**: 3 **Values**: a valid currency code "
        },
        "EndingUnit" : {
          "type" : "number",
          "format" : "double",
          "description" : "The end number of a range of units for the tier. **Character limit**: 16 **Values**: any positive decimal value "
        },
        "Id" : {
          "type" : "string",
          "description" : "Object identifier."
        },
        "Price" : {
          "type" : "number",
          "format" : "double",
          "description" : " The price of the tier if the charge is a flat fee, or the price of each unit in the tier if the charge model is tiered pricing.\n**Character limit**: 16 **Values**: a valid currency value "
        },
        "PriceFormat" : {
          "type" : "string",
          "description" : "Indicates if pricing is a flat fee or is per unit. This field is for tiered and volume pricing models only. **Character limit**: 8 **Values**: `FlatFee`, `PerUnit` **Note:** The values `Flat Fee` and `Per Unit` (with spaces) is valid for create or update calls. "
        },
        "StartingUnit" : {
          "type" : "number",
          "format" : "double",
          "description" : " The starting number of a range of units for the tier.\n**Character limit**: 16 **Values**: any positive decimal value "
        },
        "Tier" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " A unique number that identifies the tier that the price applies to.\n**Character limit**: 20 **Values**: automatically generated "
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : " The ID of the user who last updated the product rate plan charge tier.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the product rate plan charge tier was last updated.\n**Character limit**: 29 **Values**: automatically generated "
        }
      }
    },
    "ProxyGetRatePlan" : {
      "type" : "object",
      "properties" : {
        "AmendmentId" : {
          "type" : "string",
          "description" : " The ID of the amendment associated with the rate plan. This field only applies to amendment rate plans.\n**Character limit**: 32 **Values**: a valid amendment ID "
        },
        "AmendmentType" : {
          "type" : "string",
          "description" : "The type of amendment associated with the rate plan. This field only applies to amendment rate plans. "
        },
        "CreatedById" : {
          "type" : "string",
          "description" : "The ID of the Zuora user who created the RatePlan object. **Character limit**: 32 **Values**: automatically generated "
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date when the `RatePlan` object was last updated. **Character limit**: 29 **Values**: automatically generated "
        },
        "Id" : {
          "type" : "string",
          "description" : "Object identifier."
        },
        "Name" : {
          "type" : "string",
          "description" : "The name of the rate plan.\n\n**Values**: inherited from `ProductRatePlan.Name` "
        },
        "SubscriptionId" : {
          "type" : "string",
          "description" : "The ID of the subscription that the rate plan belongs to. **Character limit**: 32 **Values**: a valid subscription ID "
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : " The ID of the user who last updated the rate plan.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the rate plan was last updated.\n**Character limit**: 29 **Values**: automatically generated "
        }
      }
    },
    "ProxyGetRatePlanCharge" : {
      "type" : "object",
      "properties" : {
        "AccountingCode" : {
          "type" : "string",
          "description" : "The accounting code for the charge. Accounting codes group transactions that contain similar accounting attributes.\n\n**Character limit**: 100\n\n**Values**: inherited from `ProductRatePlanCharge.AccountingCode`\n\n**Note**: This value changes if `ProductRatePlanCharge.AccountingCode` is updated. The values of `UpdatedById` and `UpdatedDate` for the `RatePlanCharge` do not change when `ProductRatePlanCharge.AccountingCode` is updated. "
        },
        "ApplyDiscountTo" : {
          "type" : "string",
          "description" : " Specifies the type of charges a specific discount applies to. **Character limit**: 21 **Values**: inherited from `ProductRatePlanCharge.ApplyDiscountTo` "
        },
        "BillCycleDay" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " Indicates the charge's billing cycle day (BCD), which is when bill runs generate invoices for charges associated with the product rate plan charge or the account.\n**Character limit**: 2 **Values**: inherited from `ProductRatePlanCharge.BillCycleDay` "
        },
        "BillCycleType" : {
          "type" : "string",
          "description" : " Specifies how to determine the billing day for the charge.\n**Character limit**: 20 **Values**: inherited from `ProductRatePlanCharge.BillCycleType` **Note:** You can override the value inherited from the Product Rate Plan Charge, but only when creating a new subscription or a New Product amendment. "
        },
        "BillingPeriod" : {
          "type" : "string",
          "description" : " Allows billing period to be overridden on rate plan charge.\n****Values**: **inherited from `ProductRatePlanCharge.BillingPeriod` **Note:** You can override the value inherited from the Product Rate Plan Charge, but only when creating a new subscription or a New Product amendment. "
        },
        "BillingPeriodAlignment" : {
          "type" : "string",
          "description" : " Aligns charges within the same subscription if multiple charges begin on different dates.\n**Character limit**: 24 **Values**: inherited from `ProductRatePlanCharge.BillingPeriodAlignment` "
        },
        "BillingTiming" : {
          "type" : "string",
          "description" : " The billing timing for the charge. You can choose to bill in advance or in arrears for recurring charge types. This field is not used in one-time or usage based charge types.\n**Character limit**: **Values**: one of the following:\n\n- `In Advance`\n- `In Arrears`\n**Note:** You can override the value inherited from the Product Rate Plan Charge when a subscription has a recurring charge type.\nThis feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).\n\n"
        },
        "ChargeModel" : {
          "type" : "string",
          "description" : " Determines how to evaluate charges. Charge models must be individually activated in the web-based UI.\n**Character limit**: 29 **Values**: inherited from `ProductRatePlanCharge.ChargeModel` "
        },
        "ChargeNumber" : {
          "type" : "string",
          "description" : " A unique number that identifies the charge. This number is returned as a string.\n**Character limit**: 50 **Values**: one of the following:\n\n- automatically generated if left null\n- a unique number of 50 characters or fewer\n"
        },
        "ChargeType" : {
          "type" : "string",
          "description" : " Specifies the type of charge.\n**Character limit**: 9 **Values**: inherited from `ProductRatePlanCharge.ChargeType` "
        },
        "ChargedThroughDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date through which a customer has been billed for the charge.\n**Character limit**: 29 **Values**: automatically generated "
        },
        "CreatedById" : {
          "type" : "string",
          "description" : "The ID of the Zuora user who created the `RatePlanCharge` object. **Character limit**: 32 **Values**: automatically generated "
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the `RatePlanCharge` object was created.\n**Character limit**: 29 **Values**: automatically generated "
        },
        "DMRC" : {
          "type" : "number",
          "format" : "double",
          "description" : "A delta monthly recurring charge is the change in monthly recurring revenue caused by an amendment or a new subscription. **Character limit**: 16 **Values**: automatically generated "
        },
        "DTCV" : {
          "type" : "number",
          "format" : "double",
          "description" : " After an Amendment, the change in the total contract value (TCV) amount for this charge, compared with its previous value.\n**Character limit**: 16 **Values**: automatically generated "
        },
        "Description" : {
          "type" : "string",
          "description" : " A description of the charge.\n**Character limit**: 500 **Values**: inherited from `ProductRatePlanCharge.Description` "
        },
        "DiscountLevel" : {
          "type" : "string",
          "description" : "Specifies if the discount applies to just the product rate plan, the entire subscription, or to any activity in the account. **Character limit**: 12 **Values**: inherited from `ProductRatePlanCharge.DiscountLevel` "
        },
        "EffectiveEndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the segmented charge ends or ended.\n**Character limit**: 16 **Values**: automatically generated "
        },
        "EffectiveStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the segmented charge starts or started.\n**Character limit**: 16 **Values**: automatically generated "
        },
        "EndDateCondition" : {
          "type" : "string",
          "description" : " Defines when the charge ends after the charge trigger date. This field can be updated when **Status** is `Draft`.\n**Values**: one of the following:\n\n- `SubscriptionEnd`: The charge ends on the subscription end date after the charge trigger date. This is the default value.\n- `FixedPeriod`: The charge ends after a specified period based on the trigger date of the charge. If you set this field to `FixedPeriod`, you must specify the length of the period and a period type by defining the `UpToPeriods` and `UpToPeriodsType` fields.\n- `SpecificEndDate`: The specific date on which the charge ends. If you set this field to `SpecificEndDate`, you must specify the specific date by defining the `SpecificEndDate` field.\n\n**Note**: If the subscription ends before the charge end date, the charge ends when the subscription ends. But if the subscription end date is subsequently changed through a Renewal, or Terms and Conditions amendment, the charge will end on the charge end date. "
        },
        "Id" : {
          "type" : "string",
          "description" : "Object identifier."
        },
        "IsLastSegment" : {
          "type" : "boolean",
          "description" : "Indicates if the segment of the rate plan charge is the most recent segment. **Character limit**: 5 **Values**: automatically generated: `true`, `false` "
        },
        "ListPriceBase" : {
          "type" : "string",
          "description" : "The list price base for the product rate plan charge. **Values**: one of the following:\n\n- `Per Month`\n- `Per Billing Period`\n- `Per Week`\n"
        },
        "MRR" : {
          "type" : "number",
          "format" : "double",
          "description" : "Monthly recurring revenue (MRR) is the amount of recurring charges in a given month. The MRR calculation doesn't include one-time charges nor usage charges. **Character limit**: 16 **Values**: automatically generated "
        },
        "Name" : {
          "type" : "string",
          "description" : "The name of the rate plan charge. **Character limit**: 100 **Values**: automatically generated "
        },
        "NumberOfPeriods" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Specifies the number of periods to use when calculating charges in an overage smoothing charge model. **Character limit**: 5 **Values**: inherited from `ProductRatePlanCharge.NumberOfPeriod` "
        },
        "OriginalId" : {
          "type" : "string",
          "description" : "The original ID of the rate plan charge. **Character limit**: 32 **Values**: automatically generated "
        },
        "OverageCalculationOption" : {
          "type" : "string",
          "description" : "Determines when to calculate overage charges. If the value of the SmoothingMode field is null (not specified and not inherited from ProductRatePlanCharge.SmoothingMode), the value of this field is ignored. **Character limit**: 20 **Values**: inherited from `ProductRatePlanCharge.OverageCalculationOption` "
        },
        "OverageUnusedUnitsCreditOption" : {
          "type" : "string",
          "description" : " Determines whether to credit the customer with unused units of usage.\n**Character limit**: 20 **Values**: inherited from `ProductRatePlanCharge.OverageUnusedUnitsCreditOption` "
        },
        "PriceChangeOption" : {
          "type" : "string",
          "description" : " Applies an automatic price change when a termed subscription is renewed.\n**Character limit**: **Values**: one of the following:\n\n- `NoChange` (default)\n- `SpecificPercentageValue`\n- `UseLatestProductCatalogPricing`\n"
        },
        "PriceIncreasePercentage" : {
          "type" : "number",
          "format" : "double",
          "description" : " Specifies the percentage to increase or decrease the price of renewed subscriptions.\n**Character limit**: 16 **Values**: a decimal value between -100 and 100 "
        },
        "ProcessedThroughDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date until when charges have been processed. When billing in arrears, such as usage, this field value is the the same as the `ChargedThroughDate` value. This date is the earliest date when a charge can be amended.\n**Character limit**: 29 **Values**: automatically generated "
        },
        "Quantity" : {
          "type" : "number",
          "format" : "double",
          "description" : " The default quantity of units, such as the number of authors in a hosted wiki service. Valid for all charge models except for Flat Fee pricing.\n**Character limit**: 16 **Values**: a valid quantity value "
        },
        "RatePlanId" : {
          "type" : "string",
          "description" : " The ID of the rate plan associated with the rate plan charge.\n**Character limit**: 32 **Values**: inherited from `RatePlan.Id` "
        },
        "RevRecCode" : {
          "type" : "string",
          "description" : " Associates this product rate plan charge with a specific revenue recognition code.\n\n**Character limit**: 70\n\n**Values**: inherited from `ProductRatePlanCharge.RevRecCode` or a valid revenue recognition code\n\n**Note**: Unless overridden, this value changes if `ProductRatePlanCharge.RevRecCode` is updated. The values of `UpdatedById` and `UpdatedDate` for the `RatePlanCharge` do not change when `ProductRatePlanCharge.RevRecCode` is updated. "
        },
        "RevRecTriggerCondition" : {
          "type" : "string",
          "description" : " Specifies when revenue recognition begins.\n\n**Character limit**: 22\n\n**Values**: inherited from `ProductRatePlanCharge.RevRecTriggerCondition` or one of the following:\n\n-  `ContractEffectiveDate`\n\n-  `ServiceActivationDate`\n\n-  `CustomerAcceptanceDate`\n\nNote: Unless overridden, this value changes if `ProductRatePlanCharge.RevRecTriggerCondition` is updated. The values of `UpdatedById` and `UpdatedDate` for the `RatePlanCharge` do not change when `ProductRatePlanCharge.RevRecTriggerCondition` is updated. "
        },
        "RevenueRecognitionRuleName" : {
          "type" : "string",
          "description" : " Specifies the Revenue Recognition Rule that you want the Rate Plan Charge to use. This field can be updated when **Status** is `Draft`. By default, the Revenue Recognition Rule is inherited from the Product Rate Plan Charge. For Amend calls, you can use this field only for NewProduct amendments. For Update calls, you can use this field only to update subscriptions in draft status. Note that if you use this field to specify a Revenue Recognition Rule for the Rate Plan Charge, the rule will remain as specified even if you later change the rule used by the corresponding Product Rate Plan Charge.\n\n**Character limit**: n/a\n\n**Values**: inherited from `ProductRatePlanCharge.RevenueRecognitionRuleName` or the name of an active Revenue Recognition Rule\n\n**Note**: Unless overridden, this value changes if `ProductRatePlanCharge.RevenueRecognitionRuleName` is updated. The values of `UpdatedById` and `UpdatedDate` for the `RatePlanCharge` do not change when `ProductRatePlanCharge.RevenueRecognitionRuleName` is updated. "
        },
        "Segment" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " The identifying number of the subscription rate plan segment. Segments are numbered sequentially, starting with 1.\n**Character limit**: 2 **Values**: automatically generated "
        },
        "SpecificBillingPeriod" : {
          "type" : "integer",
          "format" : "int64",
          "description" : " Customizes the number of months or weeks for the charges billing period. This field is required if you set the value of the BillingPeriod field to `Specific Months` or `Specific Weeks`.\n**Character limit**: 5 **Values**: inherited from `ProductRatePlanCharge.BillingPeriod` **Note:** You can override the value inherited from the Product Rate Plan Charge, but only when creating a new subscription or a New Product amendment. "
        },
        "SpecificEndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The specific date on which the charge ends.\n**Character limit**: 29 **Values**: a valid date and time value **Note**:\n\n- This field is only applicable when the `EndDateCondition` field is set to `SpecificEndDate`.\n- If the subscription ends before the specific end date, the charge ends when the subscription ends. But if the subscription end date is subsequently changed through a Renewal, or Terms and Conditions amendment, the charge will end on the specific end date.\n"
        },
        "TCV" : {
          "type" : "number",
          "format" : "double",
          "description" : " The total contract value (TCV) is the value of a single rate plan charge in a subscription over the lifetime of the subscription. This value does not represent all charges on the subscription. The TCV includes recurring charges and one-time charges, but it doesn't include usage charge.\n**Character limit**: 16 **Values**: automatically generated "
        },
        "TriggerDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the charge becomes effective, and billing begins. This field is required if the `TriggerEvent` field value is `SpecificDate`.\n**Character limit**: 29 **Values**: a valid date and time value "
        },
        "TriggerEvent" : {
          "type" : "string",
          "description" : " Specifies when to start billing the customer for the charge.\n**Note: **This field can be passed through the Subscribe and Amend calls and will override the default value set on the Product Rate Plan Charge.\n**Character limit**: 18 **Values**: inherited from `ProductRatePlanCharge.TriggerEvent` and can be one of the following values:\n\n- `ContractEffective `is the date when the subscription's contract goes into effect and the charge is ready to be billed.\n- `ServiceActivationDate `is when the services or products for a subscription have been activated and the customers have access.\n- `CustomerAcceptance `is when the customer accepts the services or products for a subscription.\n- SpecificDate is valid only on the RatePlanCharge.\n"
        },
        "UOM" : {
          "type" : "string",
          "description" : " Specifies the units to measure usage.\n**Character limit**: 25 **Values**: inherited from `ProductRatePlanCharge.UOM` "
        },
        "UpToPeriods" : {
          "type" : "integer",
          "format" : "int64",
          "description" : " Specifies the length of the period during which the charge is active. If this period ends before the subscription ends, the charge ends when this period ends.\n**Character limit**: 5 **Values**: inherited from `ProductRatePlanCharge.UpToPeriods` **Note**:\n\n- You must use this field together with the `UpToPeriodsType` field to specify the time period. This field is only applicable only when the `EndDateCondition` field is set to `FixedPeriod`.\n- You can override the value inherited from the Product Rate Plan Charge, but only when creating a new subscription or a New Product amendment.\n- Use this field to override the value in `ProductRatePlanCharge.UpToPeriod`.\n- If you override the value in this field, enter a whole number between 0 and 65535, exclusive.\n- If the subscription end date is subsequently changed through a Renewal, or Terms and Conditions amendment, the charge end date will change accordingly up to the original period end.\n"
        },
        "UpToPeriodsType" : {
          "type" : "string",
          "description" : " The period type used to define when the charge ends. This field can be updated when **Status** is `Draft`. **Values**: one of the following:\n\n- `Billing Periods` (default)\n- `Days`\n- `Weeks`\n- `Months`\n- `Years`\n**Note**:\n\n- You must use this field together with the `UpToPeriods` field to specify the time period.\n- This field is only applicable only when the `EndDateCondition` field is set to `FixedPeriod`.\n"
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : "The ID of the last user to update the object. **Character limit**: 32 **Values**: automatically generated "
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the object was last updated.\n**Character limit**: 29 **Values**: automatically generated "
        },
        "Version" : {
          "type" : "integer",
          "format" : "int64",
          "description" : " The version of the rate plan charge. Each time a charge is amended, Zuora creates a new version of the rate plan charge. **Character limit**: 5 **Values**: automatically generated "
        },
        "WeeklyBillCycleDay" : {
          "type" : "string",
          "description" : " Specifies which day of the week as the bill cycle day (BCD) for the charge.\nThis feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).\n\n**Values**: one of the following:\n\n- `Sunday`\n- `Monday`\n- `Tuesday`\n- `Wednesday`\n- `Thursday`\n- `Friday`\n- `Saturday`\n"
        }
      }
    },
    "ProxyGetRatePlanChargeTier" : {
      "type" : "object",
      "properties" : {
        "CreatedById" : {
          "type" : "string",
          "description" : "The ID of the Zuora user who created the RatePlanChargeTier object. **Character limit**: 32 **Values**: automatically generated "
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the RatePlanChargeTier object was created.\n**Character limit**: 29 **Values**: automatically generated "
        },
        "EndingUnit" : {
          "type" : "number",
          "format" : "double",
          "description" : " The end number of a range of units for the tier.\n**Character limit**: 16 **Values**: any positive decimal value "
        },
        "Id" : {
          "type" : "string",
          "description" : "Object identifier."
        },
        "Price" : {
          "type" : "number",
          "format" : "double",
          "description" : " The price of the tier if the charge is a flat fee, or the price of each unit in the tier if the change model is tiered pricing.\n**Character limit**: 16 **Values**: any positive decimal value "
        },
        "PriceFormat" : {
          "type" : "string",
          "description" : " Indicates if the price is a flat fee or is per unit.\n**Character limit**: 8 **Values**: `Flat Fee`, `Per Unit` "
        },
        "RatePlanChargeId" : {
          "type" : "string",
          "description" : " The ID of the subscription or amendment rate plan charge associated with this tier. You can't create an unassociated tier.\n**Character limit**: 32 **Values**: inherited from `RatePlanCharge.Id`. "
        },
        "StartingUnit" : {
          "type" : "number",
          "format" : "double",
          "description" : " The start number of a range of units for the tier.\n**Character limit**: 16 **Values**: any positive decimal value "
        },
        "Tier" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " A unique number that identifies the tier that the price applies to.\n**Character limit**: 20 **Values**: automatically generated "
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : "The ID of the last user to update the object. **Character limit**: 32 **Values**: automatically generated "
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the object was last updated.\n**Character limit**: 29 **Values**: automatically generated "
        }
      }
    },
    "ProxyGetRefund" : {
      "type" : "object",
      "properties" : {
        "AccountId" : {
          "type" : "string",
          "description" : " The ID of the account associated with this refund. Specify a value for this field only if you're creating an electronic non-referenced refund. Don't specify a value for any other type of refund; Zuora associates the refund automatically with the account from the associated payment.\n**Character limit**: 32 **Values**: a valid account ID "
        },
        "AccountingCode" : {
          "type" : "string",
          "description" : " The accounting code for the payment or invoice line item that the refund applies to. If there is no accounting code, then this value is null. Accounting codes group transactions that contain similar accounting attributes.\n**Character limit**: 50 **Values**: automatically generated "
        },
        "Amount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The amount of the refund. The amount can't exceed the amount of the associated payment. If the original payment was applied to a single invoice, then you can create a partial refund. However, if the payment was applies to multiple invoices, then you can only make a partial refund through the web-based UI, not through the API.\n**Character limit**: 16 **Values**: a valid currency amount "
        },
        "CancelledOn" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date the refund was cancelled.\n**Values**: automatically generated "
        },
        "Comment" : {
          "type" : "string",
          "description" : " Use this field to record comments about the refund.\n**Character limit**: 255 **Values**: a string of 255 characters or fewer "
        },
        "CreatedById" : {
          "type" : "string",
          "description" : " The ID of the Zuora user who created the `Refund` object.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the `Refund` object was created.\n**Character limit**: 29 **Values**: automatically generated "
        },
        "Gateway" : {
          "type" : "string",
          "description" : " The gateway that processed the original payment. Zuora uses this same gateway for the corresponding refund. If this payment gateway is no longer active, then the electronic refund fails. A gateway is an online service provider that connects an online shopping cart to a payment processor.\n**Values**: automatically inherited from the `Payment` object "
        },
        "GatewayResponse" : {
          "type" : "string",
          "description" : " The message returned from the payment gateway for the refund. This message is gateway-dependent.\n**Character limit**: 500 **Values**: automatically generated "
        },
        "GatewayResponseCode" : {
          "type" : "string",
          "description" : " The code returned from the payment gateway for the payment. This code is gateway-dependent.\n**Character limit**: 20 **System****Values**: automatically generated "
        },
        "GatewayState" : {
          "type" : "string",
          "description" : " The status of the payment in the gateway.\n**Character limit**: 19 **Values**: automatically generated "
        },
        "Id" : {
          "type" : "string",
          "description" : "Object identifier."
        },
        "MarkedForSubmissionOn" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when a payment was marked and waiting for batch submission to the payment process. **Character limit**: 29 **Values**: automatically generated "
        },
        "MethodType" : {
          "type" : "string",
          "description" : " Indicates how an external refund was issued to a customer. This field is required for an external refund. You can issue an external refund on an electronic payment. **Character limit**: 30 **Values**:\n\n- `ACH`\n- `Cash`\n- `Check`\n- `CreditCard`\n- `Other`\n- `PayPal`\n- `WireTransfer`\n- `DebitCard`\n- `CreditCardReferenceTransaction`\n"
        },
        "PaymentMethodId" : {
          "type" : "string",
          "description" : " The unique ID of the payment method that the customer used to make the payment. Specify a value for this field only if you're creating an electronic non-referenced refund.\n**Character limit**: 32 **V****alues**: a valid payment method ID "
        },
        "PaymentMethodSnapshotId" : {
          "type" : "string",
          "description" : " The unique ID of the payment method snapshot which is a copy of the particular Payment Method used in a transaction.\n**Character limit**: 32 **V****alues**: a valid payment method snapshot ID "
        },
        "ReasonCode" : {
          "type" : "string",
          "description" : " A code identifying the reason for the transaction. Must be an existing reason code or empty. If you do not specify a value, Zuora uses the default reason code.\n**Character limit**: 32 **V****alues**: a valid reason code "
        },
        "ReferenceID" : {
          "type" : "string",
          "description" : " The transaction ID returned by the payment gateway for an electronic refund. Use this field to reconcile refunds between your gateway and Zuora Payments.\n**Character limit**: 60 **Values**: a string of 60 characters or fewer "
        },
        "RefundDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date of the refund. The date of the refund cannot be before the payment date. Specify this field only for external refunds. Zuora automatically generates this field for electronic refunds.\n**Character limit**: 29 **Values**: a valid date and time value "
        },
        "RefundNumber" : {
          "type" : "string",
          "description" : " The unique identifier of the refund.\n**Character limit**: 50 **Values**: automatically generated "
        },
        "RefundTransactionTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date and time when the refund was issued.\n**Character limit**: 29 **Values**: automatically generated "
        },
        "SecondRefundReferenceId" : {
          "type" : "string",
          "description" : " The transaction ID returned by the payment gateway if there is an additional transaction for the payment. Use this field to reconcile payments between your gateway and Zuora Payments.\n**Character limit**: 60 **Values**: a string of 60 characters or fewer "
        },
        "SettledOn" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the payment was settled in the payment processor. This field is used by the Spectrum gateway only and not applicable to other gateways.\n**Character limit**: 29 **Values**: automatically generated "
        },
        "SoftDescriptor" : {
          "type" : "string",
          "description" : " A payment gateway-specific field that maps Zuora to other gateways . **Character limit**: 35 **Values**:\n\n- 3-byte company identifier &quot;*&quot; 18-byte descriptor\n- 7-byte company identifier &quot;*&quot; 14-byte descriptor\n- 12-byte company identifier &quot;*&quot; 9-byte descriptor\n"
        },
        "SoftDescriptorPhone" : {
          "type" : "string",
          "description" : " A payment gateway-specific field that maps Zuora to other gateways . **Character limit**: 20 **Values**:\n\n- Customer service phone number formatted as: `NNN-NNN-NNNN` or `NNN-AAAAAAA`\n- URL (non-e-Commerce): Transactions sent with a URL do not qualify for the best interchange rate\n- Email address\n"
        },
        "SourceType" : {
          "type" : "string",
          "description" : " Specifies whether the refund is a refund payment or a credit balance. This field is required when creating an non-referenced refund. If you creating an non-referenced refund, then set this value to `CreditBalance`.\n**Character limit**: 13 **Values**:\n\n- `Payment`\n- `CreditBalance`\n"
        },
        "Status" : {
          "type" : "string",
          "description" : " The status of the refund.\n**Character limit**: 10 **Values**: automatically generated:\n\n- `Canceled`\n- `Error`\n- `Processed`\n- `Processing`\n"
        },
        "SubmittedOn" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the payment was submitted.\n**Character limit**: 29 **Values**: automatically generated "
        },
        "TransferredToAccounting" : {
          "type" : "string",
          "description" : " Specifies whether or not the object has been transferred to an external accounting system. Use this field for integrations with accounting systems such as NetSuite.\n**Character limit**: 10 **Values**: automatically generated:\n\n- `Processing`\n- `Yes`\n- `Error`\n- `Ignore`\n"
        },
        "Type" : {
          "type" : "string",
          "description" : " Specifies if the refund is electronic or external.\n**Character limit**: 10 **Values**:\n\n- `Electronic`\n- External\n"
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : " The ID of the last user to update the object.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the object was last updated.\n**Character limit**: 29 **Values**: automatically generated "
        }
      }
    },
    "ProxyGetRefundInvoicePayment" : {
      "type" : "object",
      "properties" : {
        "CreatedById" : {
          "type" : "string",
          "description" : " The ID of the Zuora user who created the RefundInvoicePayment object.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the RefundInvoicePayment object was created.\n**Character limit**: 29 **Values**: automatically generated "
        },
        "Id" : {
          "type" : "string",
          "description" : "Object identifier."
        },
        "InvoiceId" : {
          "type" : "string",
          "description" : " The unique ID of the invoice associated with this refund invoice payment.\n**Character limit**: 32 **Values**: a valid invoice ID "
        },
        "InvoicePaymentId" : {
          "type" : "string",
          "description" : " The ID of the `InvoicePayment.Id` "
        },
        "RefundAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : "Specifies the amount of a refund applied against a payment. **Character limit**: 16 **Values**: automatically generated "
        },
        "RefundId" : {
          "type" : "string",
          "description" : " The ID of the Refund object\n**Character limit**: 32 **Values**: inherited from `Refund.Id` "
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : " The ID of the last user to update the object.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the object was last updated.\n**Character limit**: 29 **Values**: automatically generated "
        }
      }
    },
    "ProxyGetRefundTransactionLog" : {
      "type" : "object",
      "properties" : {
        "BatchId" : {
          "type" : "string",
          "description" : ""
        },
        "Gateway" : {
          "type" : "string",
          "description" : ""
        },
        "GatewayReasonCode" : {
          "type" : "string",
          "description" : ""
        },
        "GatewayReasonCodeDescription" : {
          "type" : "string",
          "description" : ""
        },
        "GatewayState" : {
          "type" : "string",
          "description" : ""
        },
        "GatewayTransactionType" : {
          "type" : "string",
          "description" : ""
        },
        "Id" : {
          "type" : "string",
          "description" : "Object identifier."
        },
        "RefundId" : {
          "type" : "string",
          "description" : ""
        },
        "RequestString" : {
          "type" : "string",
          "description" : ""
        },
        "ResponseString" : {
          "type" : "string",
          "description" : ""
        },
        "TransactionDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : ""
        },
        "TransactionId" : {
          "type" : "string",
          "description" : ""
        }
      }
    },
    "ProxyGetSubscription" : {
      "type" : "object",
      "properties" : {
        "AccountId" : {
          "type" : "string",
          "description" : " This field can be updated when **Status** is `Draft`. The ID of a valid account ID. "
        },
        "AutoRenew" : {
          "type" : "boolean",
          "description" : " This field can be updated when **Status** is `Draft`. Indicates if the subscription automatically renews at the end of the term.\n**Values**: `true`, `false` "
        },
        "CancelledDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date on which the subscription was canceled. "
        },
        "ContractAcceptanceDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the customer accepts the contract. This field can be updated when **Status** is `Draft`. "
        },
        "ContractEffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the contract takes effect. This field can be updated when **Status** is `Draft`.\n**Note**: This field is required in the subscribe call. If you set the value of this field to null and both the ServiceActivationDate and ContractAcceptanceDate fields are not required, the subscribe call still returns success, but the new subscription is in `DRAFT` status. To activate the subscription, you must set a valid date to this field. "
        },
        "CpqBundleJsonId__QT" : {
          "type" : "string",
          "description" : " The Bundle product structures from Zuora Quotes if you utilize Bundling in Salesforce. Do not change the value in this field.\n**Character limit**: 32 **Values**: N/A "
        },
        "CreatedById" : {
          "type" : "string",
          "description" : "The user ID of the person who created the subscription. **Character limit**: 32 **Values**: automatically generated "
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date the subscription was created. This value is the same as the OriginalCreatedDate value until the subscription is amended.\n**Values**: automatically generated "
        },
        "CreatorAccountId" : {
          "type" : "string",
          "description" : " The account ID that created the subscription or the amended subscription.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "CreatorInvoiceOwnerId" : {
          "type" : "string",
          "description" : " The account ID that owns the invoices associated with the subscription or the amended subscription.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "CurrentTerm" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " The length of the period for the current subscription term. If TermType is set to `TERMED`, this field is required and must be greater than `0`. If TermType is set to `EVERGREEN`, this value is ignored. Default is `0`.\n**Character limit**: 20 **Values**: automatically generated "
        },
        "CurrentTermPeriodType" : {
          "type" : "string",
          "description" : " The period type for the current subscription term. This field is used with the CurrentTerm field to specify the current subscription term.\n**Values**:\n\n- `Month` (default)\n- `Year`\n- `Day`\n- `Week`\n"
        },
        "Id" : {
          "type" : "string",
          "description" : "Object identifier."
        },
        "InitialTerm" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " The length of the period for the first subscription term. This field can be updated when Status is `Draft`.\n**Required**: If TermType is Termed **Character limit**: 20 **Values**: any valid number. The default value is 0. "
        },
        "InitialTermPeriodType" : {
          "type" : "string",
          "description" : " The period type for the first subscription term.\n**Values**:\n\n- `Month` (default)\n- `Year`\n- `Day`\n- `Week`\n**Note**:\n\n- This field can be updated when Status is `Draft`.\n- This field is used with the InitialTerm field to specify the initial subscription term.\n"
        },
        "InvoiceOwnerId" : {
          "type" : "string",
          "description" : " This field can be updated when **Status** is `Draft`. A valid account ID. "
        },
        "IsInvoiceSeparate" : {
          "type" : "boolean",
          "description" : " Determines if the subscription is invoiced separately. If `TRUE`, then all charges for this subscription are collected into the subscription's own invoice.\n**V****alues**: `TRUE`, `FALSE `(default) "
        },
        "Name" : {
          "type" : "string",
          "description" : " The unique identifier of the subscription. If you don't specify a value, then Zuora generates a name automatically. Whether auto-generated or manually specified, the subscription name must be unique. Otherwise an error will occur.\n**Character limit**: 100 **Values**: one of the following:\n\n- leave null to automatically generate\n- a string of 100 characters or fewer\n"
        },
        "Notes" : {
          "type" : "string",
          "description" : " Use this field to record comments about the subscription.\n**Character limit**: 500 **Values**: a string of 500 characters or fewer "
        },
        "OpportunityCloseDate__QT" : {
          "type" : "string",
          "format" : "date",
          "description" : " The closing date of the Opportunity. This field is used in Zuora Reporting Data Sources to report on Subscription metrics. If the subscription was originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.\n**Character limit**: **Values**: populated by Zuora Quotes "
        },
        "OpportunityName__QT" : {
          "type" : "string",
          "description" : " The unique identifier of the Opportunity. This field is used in the Zuora Reporting Data Sources to report on Subscription metrics. If the subscription was originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.\n**Character limit**: 100 **Values**: populated by Zuora Quotes "
        },
        "OriginalCreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the subscription was originally created. This value is the same as the CreatedDate value until the subscription is amended.\n**Values**: automatically generated "
        },
        "OriginalId" : {
          "type" : "string",
          "description" : " The original ID of this subscription.\n**Values**: automatically generated "
        },
        "PreviousSubscriptionId" : {
          "type" : "string",
          "description" : " The subscription ID immediately prior to the current subscription.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "QuoteBusinessType__QT" : {
          "type" : "string",
          "description" : " The specific identifier for the type of business transaction the Quote represents such as New, Upsell, Downsell, Renewal or Churn. This field is used in the Zuora Reporting Data Sources to report on Subscription metrics. If the subscription was originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.\n**Character limit**: 32 **Values**: populated by Zuora Quotes "
        },
        "QuoteNumber__QT" : {
          "type" : "string",
          "description" : " The unique identifier of the Quote. This field is used in the Zuora Reporting Data Sources to report on Subscription metrics. If the subscription was originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.\n**Character limit**: 32 **Values**: populated by Zuora Quotes "
        },
        "QuoteType__QT" : {
          "type" : "string",
          "description" : " The Quote type that represents the subscription lifecycle stage such as New, Amendment, Renew or Cancel. This field is used in the Zuora Reporting Data Sources to report on Subscription metrics. If the subscription was originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.\n**Character limit**: 32 **Values**: populated by Zuora Quotes "
        },
        "RenewalSetting" : {
          "type" : "string",
          "description" : " This field can be updated when **Status** is `Draft`. Specifies whether a termed subscription will remain termed or change to evergreen when it is renewed.\n**Required**: If TermType is Termed **Values**: `RENEW_WITH_SPECIFIC_TERM `(default), `RENEW_TO_EVERGREEN` "
        },
        "RenewalTerm" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " The length of the period for the subscription renewal term. This field can be updated when **Status** is `Draft`.\n**Required**: If TermType is Termed.\n**Character limit**: 20 **Values**: one of the following:\n\n- leave null to default to `0`\n- any number\n"
        },
        "RenewalTermPeriodType" : {
          "type" : "string",
          "description" : " The period type for the subscription renewal term.\n**Values**:\n\n- `Month` (default)\n- `Year`\n- `Day`\n- `Week`\n**Note**:\n\n- This field is used with the RenewalTerm field to specify the subscription renewal term.\n- This field can be updated when Status is `Draft`.\n"
        },
        "ServiceActivationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the subscription is activated. This field can be updated when **Status** is `Draft`. "
        },
        "Status" : {
          "type" : "string",
          "description" : " The status of the subscription.\n**Character limit**: 17 **Values**: automatically generated **Possible values**: one of the following:\n\n- `Draft`\n- `PendingActivation`\n- `PendingAcceptance`\n- `Active`\n- `Cancelled`\n- `Expired`\n- `Suspended` (This value is in **Limited Availability**.)\n"
        },
        "SubscriptionEndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the subscription term ends, where the subscription ends at midnight the day before. For example, if the SubscriptionEndDate is 12/31/2016, the subscriptions ends at midnight (00:00:00 hours) on 12/30/2016. This date is the same as the term end date or the cancelation date, as appropriate.\n**Character limit**: 29 **Values**: automatically generated "
        },
        "SubscriptionStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the subscription term starts. This date is the same as the start date of the original term, which isn't necessarily the start date of the current or new term.\n**Character limit**: 29 **Values**: automatically generated "
        },
        "TermEndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " This field can be updated when **Status** is `Draft`. The date when the subscription term ends. If the subscription is evergreen, the TermEndDate value is null or is the cancelation date, as appropriate. **Character limit**: 29 **Values**: automatically generated "
        },
        "TermStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " This field can be updated when **Status** is `Draft`. The date when the subscription term begins. If this is a renewal subscription, then this date is different from the subscription start date.\n**Character limit**: 29 **Version notes**: -- "
        },
        "TermType" : {
          "type" : "string",
          "description" : " This field can be updated when **Status** is `Draft`. Indicates if a subscription is termed or evergreen.\n**Character limit**: 9 **Values**: `TERMED`, `EVERGREEN` "
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : " The ID of the user who last updated the subscription.\n**Character limit:** 32 **Values: **automatically generated "
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the subscription was last updated.\n**Character limit:** 29 **Values**: automatically generated "
        },
        "Version" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " The version number of the subscription.\n**Values**: automatically generated "
        }
      }
    },
    "ProxyGetSubscriptionProductFeature" : {
      "type" : "object",
      "properties" : {
        "CreatedById" : {
          "type" : "string",
          "description" : ""
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " Date and time when the product feature was added to the subscription.\n**Character limit**: 29 **Values**: "
        },
        "Description" : {
          "type" : "string",
          "description" : " Description of the subscription product feature.\n**Character limit**: 500 **Values**: "
        },
        "FeatureCode" : {
          "type" : "string",
          "description" : " Unique code of the feature.\n**Character limit**: 255 **Values**: "
        },
        "FeatureId" : {
          "type" : "string",
          "description" : " Internal Zuora ID of the feature.\n**Character limit**: 32 **Values**: "
        },
        "Id" : {
          "type" : "string",
          "description" : "Object identifier."
        },
        "Name" : {
          "type" : "string",
          "description" : " Name of the feature.\n**Character limit**: 255 **Values**: "
        },
        "RatePlanId" : {
          "type" : "string",
          "description" : " Id of the product rate plan to which the feature belongs.\n**Character limit**: 32 **Values**: "
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : " Internal Zuora ID of the user who last updated the subscription product feature.\n**Character limit**: 32 **Values**: "
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " Date and time when the subscription product feature was last updated.\n**Character limit**: 29 **Values**: "
        }
      }
    },
    "ProxyGetTaxationItem" : {
      "type" : "object",
      "properties" : {
        "AccountingCode" : {
          "type" : "string",
          "description" : " The Chart of Accounts "
        },
        "CreatedById" : {
          "type" : "string",
          "description" : " The ID of the user who created the taxation item.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the payment was created in the Zuora system.\n**Character limit**: 29 **Values**: automatically generated "
        },
        "ExemptAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The amount of taxes or VAT for which the customer has an exemption.\n**Character limit**: 16 **Values**: a decimal value "
        },
        "Id" : {
          "type" : "string",
          "description" : "Object identifier."
        },
        "InvoiceItemId" : {
          "type" : "string",
          "description" : " The ID of the specific invoice item that the taxation information applies to.\n**Character limit**: 32 **Values**: a valid invoice item ID "
        },
        "Jurisdiction" : {
          "type" : "string",
          "description" : " The jurisdiction that applies the tax or VAT. This value is typically a state, province, county, or city.\n**Character limit**: 32 **Values**: a string of 32 characterrs or fewer "
        },
        "LocationCode" : {
          "type" : "string",
          "description" : " The identifier for the location based on the value of the `TaxCode` field.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "Name" : {
          "type" : "string",
          "description" : " The name of the tax rate, such as sales tax or GST. This name is displayed on invoices.\n**Character limit**: 128 **Values**: a string of 128 characters or fewer "
        },
        "TaxAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The amount of the tax applied to the charge.\n**Character limit**: 16 **Values**: a decimal value "
        },
        "TaxCode" : {
          "type" : "string",
          "description" : " The tax code identifies which tax rules and tax rates to apply to a specific charge.\n**Character limit**: 32 **Values**: a string of 32 characters or fewer "
        },
        "TaxCodeDescription" : {
          "type" : "string",
          "description" : " The description for the tax code.\n**Character limit**: 255 **Values**: a string of 255 characters or fewer "
        },
        "TaxDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date that the tax is applied to the charge.\n**Character limit**: 29 **Values**: a valid date and time value "
        },
        "TaxRate" : {
          "type" : "number",
          "format" : "double",
          "description" : " The tax rate applied to the charge.\n**Character limit**: 16 **Values**: a valid decimal value "
        },
        "TaxRateDescription" : {
          "type" : "string",
          "description" : " The description of the tax rate.\n**Character limit**: 255 **Values**: a string of 255 characters or fewer "
        },
        "TaxRateType" : {
          "type" : "string",
          "description" : " The type of the tax rate applied to the charge.\n**Character limit**: 10 **Values**: `Percentage`, `FlatFee` "
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : " The ID of the user who last updated the taxation item.\n**Character limit**: **Values**: automatically generated "
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date when the taxation item was last updated. **Character limit**: **Values**: automatically generated "
        }
      }
    },
    "ProxyGetUnitOfMeasure" : {
      "type" : "object",
      "properties" : {
        "Active" : {
          "type" : "boolean",
          "description" : " Indicates if the UOM is available for new product rate plans. The default value is `true`.\n**Character limit**: 5 **Values**: `true`, `false ` "
        },
        "CreatedById" : {
          "type" : "string",
          "description" : " The ID of the Zuora user who created the UOM.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the UOM was created.\n**Character limit**: 29 **Values**: automatically generated "
        },
        "DecimalPlaces" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The number of digits to the right of the decimal point that you want to measure for the unit. To use whole numbers only, set this value to 0. You can't change this value after this `UOM` is used in any product, subscription, or usage. **Character limit**: 1 **Values**: an integer between 0 and 9, exclusive "
        },
        "DisplayedAs" : {
          "type" : "string",
          "description" : "The name of the UOM that you want displayed on invoices. The default value is the `UomName` field value. **Character limit**: 50 **Values**: A string of 50 characters or fewer "
        },
        "Id" : {
          "type" : "string",
          "description" : "Object identifier."
        },
        "RoundingMode" : {
          "type" : "string",
          "description" : " Specifies whether to round the UOM value up or down when the value exceeds the `DecimalPlaces` field value. The default value is `Up`.\n**Character limit**: 4 **Values**: `Up`, `Down` "
        },
        "UomName" : {
          "type" : "string",
          "description" : " The name of the UOM, such as license or GB. This name is displayed in query results and in the web-based UI labels. If you want a different name to be displayed on invoices, then use the `DisplayedAs` field to provide the invoice label.\n**Character limit**: 50 **Values**: a string of 50 characters or fewer "
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : "The ID of the user who lasted updated the UOM. **Character limit**: 32 **Values**: automatically generated "
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the UOM was last updated.\n**Character limit**: 29 **Values**: automatically generated "
        }
      }
    },
    "ProxyGetUsage" : {
      "type" : "object",
      "properties" : {
        "AccountId" : {
          "type" : "string",
          "description" : " The ID of the account associated with the usage data. This field is required if no value is specified for the `AccountNumber` field.\n**Character limit**: 32 **Values**: a valid account ID "
        },
        "AccountNumber" : {
          "type" : "string",
          "description" : " The number of the account associated with the usage data. This field is required if no value is specified for the `AccountId` field.\n**Character limit**: 50 **Values**: a valid account number "
        },
        "ChargeId" : {
          "type" : "string",
          "description" : " The OrginalId of the rate plan charge related to the usage record, e.g., `2c9081a03c63c94c013c6873357a0117` **Character limit**: 32 **Values**: a valid rate plan charge OriginalID "
        },
        "CreatedById" : {
          "type" : "string",
          "description" : " The user ID of the person who uploaded the usage records.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the invoice was generated.\n**Character limit**: 29 **Values**: automatically generated "
        },
        "EndDateTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The end date and time of a range of time when usage is tracked. Use this field for reporting; this field doesn't affect usage calculation.\n**Character limit**: 29 **Values**: a valid date and time value "
        },
        "Id" : {
          "type" : "string",
          "description" : "Object identifier."
        },
        "Quantity" : {
          "type" : "number",
          "format" : "double",
          "description" : " Indicates the number of units used.\n**Character limit**: 16 **Values**: a valid decimal amount equal to or greater than 0 "
        },
        "RbeStatus" : {
          "type" : "string",
          "description" : " Indicates if the rating and billing engine (RBE) processed usage data for an invoice.\n**Character limit**: 9 **Values**: automatically generated to be one of the following values: `Importing`, `Pending`, `Processed` "
        },
        "SourceType" : {
          "type" : "string",
          "description" : " Indicates if the usage records were imported from the web-based UI or the API.\n**Character limit**: 6 **Values**: automatically generated to be one of the following values: `API`, `Import` "
        },
        "StartDateTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The start date and time of a range of time when usage is tracked. Zuora uses this field value to determine the usage date. Unlike the `EndDateTime`, the `StartDateTime` field does affect usage calculation.\n**Character limit**: 29 **Values**: a valid date and time value "
        },
        "SubmissionDateTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when usage was submitted.\n**Character limit**: 29 **Values**: automatically generated "
        },
        "SubscriptionId" : {
          "type" : "string",
          "description" : " The ID of the subscription that contains the fees related to the usage data.\n**Character limit**: 32 **Values**: a valid subscription ID "
        },
        "UOM" : {
          "type" : "string",
          "description" : " Specifies the units to measure usage. Units of measure are configured in the web-based UI. Your values depend on your configuration in **Billing Settings**.\n**Character limit**: **Values**: a valid unit of measure "
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : " The ID of the user who last updated the usage upload.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the usage upload was last updated.\n**Character limit**: 29 **Values**: automatically generated "
        }
      }
    },
    "ProxyModifyAccount" : {
      "type" : "object",
      "properties" : {
        "AccountNumber" : {
          "type" : "string",
          "description" : "Unique account number assigned to the account. **Character limit**: 50 **Values**: one of the following:\n\n- null to auto-generate\n- a string of 50 characters or fewer that doesn't begin with the default account number prefix\n"
        },
        "AdditionalEmailAddresses" : {
          "type" : "string",
          "description" : "List of additional email addresses to receive emailed invoices. **Character limit**: 120 **Values**: comma-separated list of email addresses "
        },
        "AllowInvoiceEdit" : {
          "type" : "boolean",
          "description" : " Indicates if associated invoices can be edited.\n**Character limit**: 5 **Values**: `true`, `false` (default if left null) "
        },
        "AutoPay" : {
          "type" : "boolean",
          "description" : " Indicates if future payments are automatically collected when they're due during a Payment Run.\n**Character limit**: 5 **Values**: `true`, `false` (default) "
        },
        "Batch" : {
          "type" : "string",
          "description" : " Organizes your customer accounts into groups to optimize your billing and payment operations. Required if you use the Subscribe call.\n**Character limit**: 20 **Values**:any system-defined batch (`Batch1` - `Batch50 `or by name). "
        },
        "BcdSettingOption" : {
          "type" : "string",
          "description" : "Billing cycle day setting option. **Character limit**: 9 **Values**: `AutoSet`, `ManualSet` "
        },
        "BillCycleDay" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Billing cycle day (BCD) on which bill runs generate invoices for the account. **Character limit**: 2 **Values**: any activated system-defined bill cycle day (`1` - `31`) "
        },
        "BillToId" : {
          "type" : "string",
          "description" : "ID of the person to bill for the account. **Character limit**: 32 **Values**: a valid contact ID for the account "
        },
        "CommunicationProfileId" : {
          "type" : "string",
          "description" : "Associates the account with a specified communication profile. **Character limit**: 32 **Values**: a valid communication profile ID "
        },
        "CrmId" : {
          "type" : "string",
          "description" : "CRM account ID for the account. A CRM is a customer relationship management system, such as Salesforce.com. **Character limit**: 100 **Values**: a string of 100 characters or fewer "
        },
        "Currency" : {
          "type" : "string",
          "description" : " Currency that the customer is billed in. "
        },
        "CustomerServiceRepName" : {
          "type" : "string",
          "description" : "Name of the account's customer service representative, if applicable. **Character limit**: 50 **Values**: a string of 50 characters or fewer "
        },
        "DefaultPaymentMethodId" : {
          "type" : "string",
          "description" : "ID of the default payment method for the account. This field is required if the AutoPay field is set to `true`. **Character limit**: 32 **Values**: a valid ID for an existing payment method "
        },
        "InvoiceDeliveryPrefsEmail" : {
          "type" : "boolean",
          "description" : "Indicates if the customer wants to receive invoices through email.  **Character limit**: 5 **Values**: `true`, `false` (default if left null) "
        },
        "InvoiceDeliveryPrefsPrint" : {
          "type" : "boolean",
          "description" : "Indicates if the customer wants to receive printed invoices, such as through postal mail. **Character limit**: 5 **Values**: `true`, `false` (default if left null) "
        },
        "InvoiceTemplateId" : {
          "type" : "string",
          "description" : "The ID of the invoice template. Each customer account can use a specific invoice template for invoice generation. **Character limit**: 32 **Values**: a valid template ID configured in Zuora Billing Settings "
        },
        "Name" : {
          "type" : "string",
          "description" : "Name of the account as displayed in the Zuora UI. **Character limit**: 255 **Values**: a string of 255 characters or fewer "
        },
        "Notes" : {
          "type" : "string",
          "description" : " Comments about the account. **Character limit**: 65,535 **Values**: a string of 65,535 characters "
        },
        "ParentId" : {
          "type" : "string",
          "description" : "Identifier of the parent customer account for this Account object. Use this field if you have customer hierarchy enabled. **Character limit**: 32 **Values**: a valid account ID "
        },
        "PaymentGateway" : {
          "type" : "string",
          "description" : "Gateway used for processing electronic payments and refunds. **Character limit**: 40 **Values**: one of the following:\n\n- a valid configured gateway name\n- Null to inherit the default value set in Zuora Payment Settings\n"
        },
        "PaymentTerm" : {
          "type" : "string",
          "description" : "Indicates when the customer pays for subscriptions. **Character limit**: 100 **Values**: a valid, active payment term defined in the web-based UI administrative settings "
        },
        "PurchaseOrderNumber" : {
          "type" : "string",
          "description" : "The number of the purchase order associated with this account. Purchase order information generally comes from customers. **Character limit**: 100 **Values**: a string of 100 characters or fewer "
        },
        "SalesRepName" : {
          "type" : "string",
          "description" : "The name of the sales representative associated with this account, if applicable. **Character limit**: 50 **Values**: a string of 50 characters or fewer "
        },
        "SoldToId" : {
          "type" : "string",
          "description" : "ID of the person who bought the subscription associated with the account. **Character limit**: 32 **Values**: a valid contact ID for the account "
        },
        "Status" : {
          "type" : "string",
          "description" : "Status of the account in the system. **Character limit**: 8 **Values**: one of the following:\n\n- leave null if you're using the Subscribe call\n- if you're using the Create call:\n- `Draft`\n- `Active`\n- `Canceled`\n"
        },
        "TaxCompanyCode" : {
          "type" : "string",
          "description" : " Unique code that identifies a company account in Avalara. Use this field to calculate taxes based on origin and sold-to addresses in Avalara.\nThis feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).\n\n**Character limit**: 50 **Values**: a valid company code "
        },
        "TaxExemptCertificateID" : {
          "type" : "string",
          "description" : "ID of your customer's tax exemption certificate. **Character limit**: 32 **Values**: a string of 32 characters or fewer "
        },
        "TaxExemptCertificateType" : {
          "type" : "string",
          "description" : "Type of the tax exemption certificate that your customer holds.  **Character limit**: 32 **Values**: a string of 32 characters or fewer "
        },
        "TaxExemptDescription" : {
          "type" : "string",
          "description" : "Description of the tax exemption certificate that your customer holds. **Character limit**: 500 **Values**: a string of 500 characters or fewer "
        },
        "TaxExemptEffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date when the the customer's tax exemption starts. **Character limit**: 29 **Version notes**: requires Zuora Tax "
        },
        "TaxExemptExpirationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date when the customer's tax exemption certificate expires  **Character limit**: 29 **Version notes**: requires Zuora Tax "
        },
        "TaxExemptIssuingJurisdiction" : {
          "type" : "string",
          "description" : "Indicates the jurisdiction in which the customer's tax exemption certificate was issued. **Character limit**: 32 **Values**: a string of 32 characters or fewer "
        },
        "TaxExemptStatus" : {
          "type" : "string",
          "description" : " Status of the account's tax exemption. Required if you use Zuora Tax.\n**Character limit**: 19 **Values**: one of the following:\n\n- `Yes`\n- `No`\n- `PendingVerification`\n"
        },
        "VATId" : {
          "type" : "string",
          "description" : " EU Value Added Tax ID.\nThis feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).\n\n**Character limit**: 25 **Values**: a valid Value Added Tax ID "
        }
      },
      "example" : {
        "AccountNumber" : "AN_1476935163869",
        "AutoPay" : true,
        "Batch" : "Batch1",
        "BillCycleDay" : 1,
        "BillToId" : "2c93808457d787030157e03220684fac",
        "CrmId" : "crmid",
        "Currency" : "USD",
        "DefaultPaymentMethodId" : "2c93808457d787030157e03220ec4fad",
        "Id" : "2c93808457d787030157e0321fdf4fab",
        "InvoiceTemplateId" : "2c93808457d787030157e03208864f97",
        "Name" : "AC_1476935163869",
        "Notes" : "this is notes",
        "PaymentTerm" : "Due Upon Receipt",
        "SoldToId" : "2c93808457d787030157e03220684fac",
        "Status" : "Active"
      }
    },
    "ProxyModifyAmendment" : {
      "type" : "object",
      "properties" : {
        "AutoRenew" : {
          "type" : "boolean",
          "description" : " Determines whether the subscription is automatically renewed, or whether it expires at the end of the term and needs to be manually renewed. **Required:** For amendment of type TermsAndConditions when changing the automatic renewal status of a subscription.\n**Values**: true, false "
        },
        "ContractEffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the amendment's changes become effective for billing purposes.\n**Version notes**: -- "
        },
        "CurrentTerm" : {
          "type" : "integer",
          "format" : "int64",
          "description" : " The length of the period for the current subscription term. This field can be updated when Status is `Draft`.\n**Required**: Only if the value of the Type field is set to `TermsAndConditions` and TermType is set to `TERMED`. This field is not required if TermType is set to `EVERGREEN`.\n**Character limit**: **Values**: a valid number "
        },
        "CurrentTermPeriodType" : {
          "type" : "string",
          "description" : " The period type for the current subscription term. **Values**:\n\n- `Month` (default)\n- `Year`\n- `Day`\n- `Week`\n**Note**:\n\n- This field can be updated when Status is `Draft`.\n- This field is used with the CurrentTerm field to specify the current subscription term.\n"
        },
        "CustomerAcceptanceDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the customer accepts the amendment's changes to the subscription. **Required**: Only if the value of the Status field is set to PendingAcceptance.\n**Version notes**: -- "
        },
        "Description" : {
          "type" : "string",
          "description" : " A description of the amendment.\n**Character limit**: 500 **Values**: maximum 500 characters "
        },
        "EffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the amendment's changes take effective. This field validates that the amendment's changes are within valid ranges of products and product rate plans.\n**Required**: For the cancellation amendments. Optional for other types of amendments.\n**Version notes**: -- "
        },
        "Name" : {
          "type" : "string",
          "description" : " The name of the amendment.\n**Character limit**: 100 **Values**: a string of 100 characters or fewer "
        },
        "RenewalSetting" : {
          "type" : "string",
          "description" : " Specifies whether a termed subscription will remain termed or change to evergreen when it is renewed.\n**Required**: If TermType is Termed **Values**: RENEW_WITH_SPECIFIC_TERM (default), RENEW_TO_EVERGREEN "
        },
        "RenewalTerm" : {
          "type" : "integer",
          "format" : "int64",
          "description" : " The term of renewal for the amended subscription. This field can be updated when Status is `Draft`.\n**Required**: Only if the value of the Type field is set to `TermsAndConditions`.\n**Character limit**: **Values:** a valid number "
        },
        "RenewalTermPeriodType" : {
          "type" : "string",
          "description" : " The period type for the subscription renewal term. This field can be updated when Status is `Draft`.\n**Required**: Only if the value of the Type field is set to `TermsAndConditions`. This field is used with the RenewalTerm field to specify the subscription renewal term.\n**Values**:\n\n- `Month` (default)\n- `Year`\n- `Day`\n- `Week`\n"
        },
        "ServiceActivationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when service is activated.\n**Required**: Only if the value of the Status field is set to PendingActivation.\n**Version notes**: -- "
        },
        "SpecificUpdateDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the UpdateProduct amendment takes effect. This field is only applicable if there is already a future-dated UpdateProduct amendment on the subscription.\n**Required**: Only for the UpdateProduct amendments if there is already a future-dated UpdateProduct amendment on the subscription.\n"
        },
        "Status" : {
          "type" : "string",
          "description" : " The status of the amendment. Type: string (enum) **Character limit**: 17 **Values**: one of the following:\n\n- Draft (default, if left null)\n- Pending Activation\n- Pending Acceptance\n- Completed\n"
        },
        "SubscriptionId" : {
          "type" : "string",
          "description" : " The ID of the subscription that the amendment changes.\n**Character limit**: 32 **Values**: a valid subscription ID "
        },
        "TermStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the new terms and conditions take effect.\n**Required**: Only if the value of the Type field is set to TermsAndConditions.\n**Version notes**: -- "
        },
        "TermType" : {
          "type" : "string",
          "description" : " Indicates if the subscription isTERMED or EVERGREEN.\n\n- A TERMED subscription has an expiration date, and must be manually renewed.\n- An EVERGREEN subscription doesn't have an expiration date, and must be manually ended.\n\n**Required**: Only when as part of an amendment of type TermsAndConditions &#65279;to change the term type of a subscription. Type: string **Character limit**: 9 **Values**: TERMED, EVERGREEN "
        },
        "Type" : {
          "type" : "string",
          "description" : " The type of amendment.\n**Character limit**: 18 **Values**: one of the following:\n\n- Cancellation\n- NewProduct\n- OwnerTransfer\n- RemoveProduct\n- Renewal\n- UpdateProduct\n- TermsAndConditions\n- SuspendSubscription (This value is in **Limited Availability**.)\n- ResumeSubscription (This value is in **Limited Availability**.)\n"
        }
      },
      "example" : {
        "Id" : "2c93808457d787030157e02e430c1f15",
        "Name" : "AMtssl1bnuq1_new"
      }
    },
    "ProxyModifyContact" : {
      "type" : "object",
      "properties" : {
        "AccountId" : {
          "type" : "string",
          "description" : " The Zuora account ID associated with this contact. This field is not required when you use the Subscribe call. This field is required for all other calls.\n**Character limit: **32 **Values: **a valid account ID "
        },
        "Address1" : {
          "type" : "string",
          "description" : " The first line of the contact's address, which is often a street address or business name.\n**Character limit**: 255 **Values**: a string of 255 characters or fewer "
        },
        "Address2" : {
          "type" : "string",
          "description" : " The second line of the contact's address.\n**Character limit**: 255 **Values**: a string of 255 characters or fewer "
        },
        "City" : {
          "type" : "string",
          "description" : " The city of the contact's address.\n**Character limit**: 40 **Values: **a string of 40 characters or fewer "
        },
        "Country" : {
          "type" : "string",
          "description" : " The country of the contact's address. "
        },
        "County" : {
          "type" : "string",
          "description" : " The country. May optionally be used by Zuora Tax to calculate county tax.\n**Character limit**: 32 **Values**: a string of 32 characters or fewer "
        },
        "Description" : {
          "type" : "string",
          "description" : " A description for the contact.\n**Character limit**: 100 **Values**: a string of 100 characters or fewer "
        },
        "Fax" : {
          "type" : "string",
          "description" : " The contact's fax number.\n**Character limit**: 40 **Values**: a string of 40 characters or fewer "
        },
        "FirstName" : {
          "type" : "string",
          "description" : " The contact's first name.\n**Character limit**: 100 **Values**: a string of the contact's first name "
        },
        "HomePhone" : {
          "type" : "string",
          "description" : " The contact's home phone number.\n**Character limit**: 40 **Values**: a string of 40 characters or fewer "
        },
        "LastName" : {
          "type" : "string",
          "description" : " The contact's last name.\n**Character limit**: 100 **Values**: a string of 100 characters or fewer "
        },
        "MobilePhone" : {
          "type" : "string",
          "description" : " The contact's mobile phone number.\n**Character limit**: 40 **Values**: a string of 40 characters or fewer "
        },
        "NickName" : {
          "type" : "string",
          "description" : " A nickname for the contact.\n**Character limit**: 100 **Values**: a string of 100 characters or fewer "
        },
        "OtherPhone" : {
          "type" : "string",
          "description" : " An additional phone number for the contact.\n**Character limit**: 40 **Values**: a string of 40 characters or fewer "
        },
        "OtherPhoneType" : {
          "type" : "string",
          "description" : "The type of the `OtherPhone`. **Character limit**: 20 **Values**: `Work`, `Mobile`, `Home`, `Other` "
        },
        "PersonalEmail" : {
          "type" : "string",
          "description" : " The contact's personal email address.\n**Character limit**: 80 **Values**: a string of 80 characters or fewer "
        },
        "PostalCode" : {
          "type" : "string",
          "description" : " The zip code for the contact's address.\n**Character limit:** 20 **Values: **a string of 20 characters or fewer "
        },
        "State" : {
          "type" : "string",
          "description" : " The state or province of the contact's address. "
        },
        "TaxRegion" : {
          "type" : "string",
          "description" : "If using Zuora Tax rules "
        },
        "WorkEmail" : {
          "type" : "string",
          "description" : " The contact's business email address.\n**Character limit**: 80 **Values**: a string of 80 characters or fewer "
        },
        "WorkPhone" : {
          "type" : "string",
          "description" : " The contact's business phone number.\n**Character limit**: 40 **notes**: -- **Values**: a string of 40 characters or fewer "
        }
      },
      "example" : {
        "FirstName" : "FN1476934918260_new",
        "Id" : "2c93808457d787030157e02e606e2095"
      }
    },
    "ProxyModifyInvoice" : {
      "type" : "object",
      "properties" : {
        "Status" : {
          "type" : "string",
          "description" : " The status of the invoice in the system. This status is not the status of the payment of the invoice, just the status of the invoice itself.\n**Character limit**: 8 **Values**: one of the following:\n\n-  Draft (default, automatically set upon invoice creation)\n\n-  Posted\n\n-  Canceled\n\n"
        },
        "TransferredToAccounting" : {
          "type" : "string",
          "description" : " Specifies whether or not the invoice was transferred to an external accounting system, such as NetSuite.\n**Character limit**: 10 **Values**: Processing, Yes, Error, Ignore "
        }
      },
      "example" : {
        "Id" : "2c93808457d787030157e031d86c4c57",
        "Status" : "Posted"
      }
    },
    "ProxyModifyInvoiceAdjustment" : {
      "type" : "object",
      "properties" : {
        "ReasonCode" : {
          "type" : "string",
          "description" : " A code identifying the reason for the transaction. Must be an existing reason code or empty. If you do not specify a value, Zuora uses the default reason code.\n**Character limit**: 32 **V****alues**: a valid reason code "
        },
        "Status" : {
          "type" : "string",
          "description" : " The status of the invoice adjustment. This field is required in the Query call, but is automatically generated in other calls.\n**Character limit**: 9 **Values**: `Canceled`, `Processed` "
        },
        "TransferredToAccounting" : {
          "type" : "string",
          "description" : " Indicates the status of the adjustment's transfer to an external accounting system, such as NetSuite.\n**Character limit**: 10 **Values**: `Processing`, `Yes`, `Error`, `Ignore` "
        }
      }
    },
    "ProxyModifyInvoicePayment" : {
      "type" : "object",
      "properties" : {
        "Amount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The amount of the payment.\n**Character limit**: 16 **Values**: a valid currency amount "
        }
      }
    },
    "ProxyModifyPayment" : {
      "type" : "object",
      "properties" : {
        "AccountId" : {
          "type" : "string",
          "description" : " The unique account ID for the customer that the payment is for.\n**Character limit**: 32 **Values**: a valid account ID "
        },
        "AccountingCode" : {
          "type" : "string",
          "description" : " The Chart of Accounts "
        },
        "Amount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The amount of the payment.\n**Character limit**: 16 **Values**: a valid currency value "
        },
        "Comment" : {
          "type" : "string",
          "description" : " Additional information related to the payment.\n**Character limit**: 255 **Values**: a string of 255 characters or fewer "
        },
        "EffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the payment takes effect.\n**Character limit**: 29 **Values**: a valid date and time value "
        },
        "PaymentMethodId" : {
          "type" : "string",
          "description" : " The ID of the payment method used for the payment. Required for Create.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "ReferenceId" : {
          "type" : "string",
          "description" : " The transaction ID returned by the payment gateway. Use this field to reconcile payments between your gateway and Zuora Payments.\n**Character limit**: 60 **Values**: a string of 60 characters or fewer "
        },
        "Status" : {
          "type" : "string",
          "description" : " The status of the payment in Zuora. The value depends on the type of payment.\n**Character limit**: 11 **Values**: one of the following:\n\n-  Electronic payments: `Processed`, `Error`, `Voided`\n\n-  External payments: `Processed`, `Canceled`\n\n* Update of status can change value from `Processed` to `Canceled` when the payment type is external. "
        },
        "TransferredToAccounting" : {
          "type" : "string",
          "description" : " Indicates if the payment was transferred to an external accounting system. Use this field for integration with accounting systems, such as NetSuite.\n**Character limit**: 11 **Values**: `Processing`, `Yes`, `Error`, `Ignore` "
        },
        "Type" : {
          "type" : "string",
          "description" : " Indicates if the payment is external or electronic.\n**Character limit**: 10 **Values**: `External`, `Electronic` "
        }
      }
    },
    "ProxyModifyPaymentMethod" : {
      "type" : "object",
      "properties" : {
        "AccountId" : {
          "type" : "string",
          "description" : " The ID of the customer account associated with this payment method. This field is not required for the account ID. "
        },
        "AchAbaCode" : {
          "type" : "string",
          "description" : " The nine-digit routing number or ABA number used by banks. Use this field for ACH payment methods.\n**Character limit**: 9 **Values**: a string of 9 characters or fewer "
        },
        "AchAccountName" : {
          "type" : "string",
          "description" : " The name of the account holder, which can be either a person or a company. Use this field for ACH payment methods.\n**Character limit**: 70 **Values**: a string of 70 characters or fewer "
        },
        "AchAccountType" : {
          "type" : "string",
          "description" : " The type of bank account associated with the ACH payment. Use this field for ACH payment methods.\n**Character limit**: 16 **Values**:\n\n- `BusinessChecking`\n- `Checking`\n- `Saving`\n"
        },
        "AchAddress1" : {
          "type" : "string",
          "description" : " Line 1 for the ACH address. Required on create for the Vantiv payment gateway. Optional for other gateways.\n**Character limit:** **Values:** an address "
        },
        "AchAddress2" : {
          "type" : "string",
          "description" : " Line 2 for the ACH address. Required on create for the Vantiv payment gateway. Optional for other gateways.\n**Character limit:** **Values:** an address "
        },
        "AchBankName" : {
          "type" : "string",
          "description" : " The name of the bank where the ACH payment account is held. Use this field for ACH payment methods.\n**Character limit**: 70 **Values**: a string of 70 characters or fewer "
        },
        "BankBranchCode" : {
          "type" : "string",
          "description" : " The branch code of the bank used for direct debit. Use this field for direct debit payment methods.\n**Character limit**: 10 **Values**:  string of 10 characters or fewer "
        },
        "BankCheckDigit" : {
          "type" : "string",
          "description" : "The check digit in the international bank account number, which confirms the validity of the account. Use this field for direct debit payment methods. **Character limit**: 4 **Values**:  string of 4 characters or fewer "
        },
        "BankCity" : {
          "type" : "string",
          "description" : " The city of the direct debit bank. Use this field for direct debit payment methods.\n**Character limit**:70 **Values**:  string of 70 characters or fewer "
        },
        "BankCode" : {
          "type" : "string",
          "description" : " The sort code or number that identifies the bank. This is also known as the sort code. This field is required for direct debit payment methods.\n**Character limit**: 18 **Values**:  string of 18 characters or fewer "
        },
        "BankName" : {
          "type" : "string",
          "description" : " The name of the direct debit bank. Use this field for direct debit payment methods.\n**Character limit**:80 **Values**:  string of 80 characters or fewer "
        },
        "BankPostalCode" : {
          "type" : "string",
          "description" : " The zip code or postal code of the direct debit bank. Use this field for direct debit payment methods.\n**Character limit**:20 **Values**:  string of 20 characters or fewer "
        },
        "BankStreetName" : {
          "type" : "string",
          "description" : " The name of the street of the direct debit bank. Use this field for direct debit payment methods.\n**Character limit**:60 **Values**:  string of 60 characters or fewer "
        },
        "BankStreetNumber" : {
          "type" : "string",
          "description" : " The number of the direct debit bank. Use this field for direct debit payment methods.\n**Character limit**:10 **Values**:  string of 10 characters or fewer "
        },
        "BankTransferAccountName" : {
          "type" : "string",
          "description" : " The name on the direct debit bank account. Use this field for direct debit payment methods.\n**Character limit**: 60 **Values**:  string of 60 characters or fewer "
        },
        "BusinessIdentificationCode" : {
          "type" : "string",
          "description" : " The business identification code for Swiss direct payment methods that use the Global Collect payment gateway. Use this field only for direct debit payments in Switzerland with Global Collect.\n**Character limit**: 11 **Values**: string of 11 characters or fewer "
        },
        "City" : {
          "type" : "string",
          "description" : " The city of the customer's address. Use this field for direct debit payment methods.\n**Character limit**:80 **Values**:  string of 80 characters or fewer "
        },
        "Country" : {
          "type" : "string",
          "description" : " The two-letter country code of the customer's address. Use this field for direct debit payment methods.\n**Character limit**: 2 **Values**: a valid country code "
        },
        "CreditCardAddress1" : {
          "type" : "string",
          "description" : " The first line of the card holder's address, which is often a street address or business name. Use this field for credit card and direct debit payment methods.\n**Character limit**: 255 **Values**: a string of 255 characters or fewer "
        },
        "CreditCardAddress2" : {
          "type" : "string",
          "description" : " The second line of the card holder's address. Use this field for credit card and direct debit payment methods.\n**Character limit**: 255 **Values**: a string of 255 characters or fewer "
        },
        "CreditCardCity" : {
          "type" : "string",
          "description" : " The city of the card holder's address. Use this field for credit card and direct debit payment methods **Character limit**: 40 **Values**: a string of 40 characters or fewer "
        },
        "CreditCardCountry" : {
          "type" : "string",
          "description" : " The country of the card holder's address. "
        },
        "CreditCardExpirationMonth" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " The expiration month of the credit card or debit card. Use this field for credit card and direct debit payment methods.\n**Character limit**: 2 **Values**: a two-digit number, 01 - 12 "
        },
        "CreditCardExpirationYear" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " The expiration month of the credit card or debit card. Use this field for credit card and direct debit payment methods.\n**Character limit**: 4 **Values**: a four-digit number "
        },
        "CreditCardHolderName" : {
          "type" : "string",
          "description" : " The full name of the card holder. Use this field for credit card and direct debit payment methods.\n**Character limit**: 50 **Values**: a string of 50 characters or fewer "
        },
        "CreditCardPostalCode" : {
          "type" : "string",
          "description" : " The billing address's zip code. This field is required only when you define a debit card or credit card payment.\n**Character limit**: 20 **Values**: a string of 20 characters or fewer "
        },
        "CreditCardState" : {
          "type" : "string",
          "description" : " The billing address's state. Use this field is if the `CreditCardCountry' value is either Canada or the US. State names must be spelled in full. "
        },
        "CreditCardType" : {
          "type" : "string",
          "description" : " The type of credit card or debit card. This field is required only when you define a debit card or credit card payment.\n**Character limit**: 32 **Values**: `AmericanExpress`, `Discover`, `MasterCard`, `Visa` "
        },
        "DeviceSessionId" : {
          "type" : "string",
          "description" : " The session ID of the user when the `PaymentMethod` was created or updated. Some gateways use this field for fraud prevention. If this field is passed to Zuora, then Zuora passes this field to supported gateways. Currently only Verifi supports this field.\n**Character limit**: 255 **Values**: "
        },
        "Email" : {
          "type" : "string",
          "description" : " An email address for the payment method in addition to the bill to contact email address.\n**Character limit**: 80 **Values**: a string of 80 characters or fewer "
        },
        "ExistingMandate" : {
          "type" : "string",
          "description" : " Indicates if the customer has an existing mandate or a new mandate. A mandate is a signed authorization for UK and NL customers. When you are migrating mandates from another system, be sure to set this field correctly. If you indicate that a new mandate is an existing mandate or vice-versa, then transactions fail. This field is used only for the direct debit payment method.\n**Character limit**: 3 **Values**: `Yes`, `No` "
        },
        "FirstName" : {
          "type" : "string",
          "description" : " The customer's first name. This field is used only for the direct debit payment method.\n**Character limit**: 30 **Values**: a string of 30 characters or fewer "
        },
        "IBAN" : {
          "type" : "string",
          "description" : " The International Bank Account Number. This field is used only for the direct debit payment method.\n**Character limit**: 42 **Values**: a string of 42 characters or fewer "
        },
        "IPAddress" : {
          "type" : "string",
          "description" : " The IP address of the user when the payment method was created or updated. Some gateways use this field for fraud prevention. If this field is passed to Zuora, then Zuora passes this field to supported gateways. Currently PayPal, CyberSource, Authorize.Net, and Verifi support this field.\n**Character limit**: 15 **Values**: a string of 15 characters or fewer "
        },
        "LastName" : {
          "type" : "string",
          "description" : " The customer's last name. This field is used only for the direct debit payment method.\n**Character limit**: 70 **Values**: a string of 70 characters or fewer "
        },
        "LastTransactionDateTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date of the most recent transaction.\n**Character limit**: 29 **Values**: a valid date and time value "
        },
        "LastTransactionStatus" : {
          "type" : "string",
          "description" : " The status of the most recent transaction.\n**Character limit**: 39 **Values**: automatically generated "
        },
        "MandateCreationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the mandate was created. A mandate is a signed authorization for UK and NL customers. This field is used only for the direct debit payment method.\n**Character limit**: 29 **Values**: a valid date and time value "
        },
        "MandateID" : {
          "type" : "string",
          "description" : " The ID of the mandate. A mandate is a signed authorization for UK and NL customers. This field is used only for the direct debit payment method.\n**Character limit**: 36 **Values**: a string of 36 characters or fewer "
        },
        "MandateReceived" : {
          "type" : "string",
          "description" : " Indicates if  the mandate was received. A mandate is a signed authorization for UK and NL customers. This field is used only for the direct debit payment method.\n**Character limit**: 3 **Values**: `Yes`, `No `(case-sensitive) "
        },
        "MandateUpdateDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the mandate was last updated. A mandate is a signed authorization for UK and NL customers. This field is used only for the direct debit payment method.\n**Character limit**: 29 **Values**: a valid date and time value "
        },
        "MaxConsecutivePaymentFailures" : {
          "type" : "integer",
          "description" : " Specifies the number of allowable consecutive failures Zuora attempts with the payment method before stopping.\n**Values**: a valid number "
        },
        "NumConsecutiveFailures" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " The number of consecutive failed payment for this payment method. It is reset to 0 upon successful payment. You can use the API to update the field value to 0.\n**Character limit**: **Values**: a positive whole number "
        },
        "PaymentMethodStatus" : {
          "type" : "string",
          "description" : " Specifies the status of the payment method. It is set to Active on creation.\n**Character limit**: 6 **Values**: `Active` or `Closed` "
        },
        "PaymentRetryWindow" : {
          "type" : "integer",
          "description" : " The retry interval setting, which prevents making a payment attempt if the last failed attempt was within the last specified number of hours. This field is required if the `UseDefaultRetryRule` field value is set to `false`.\n**Character limit**: 4 **Values**: a whole number between 1 and 1000, exclusive "
        },
        "Phone" : {
          "type" : "string",
          "description" : " The phone number that the account holder registered with the bank. This field is used for credit card validation when passing to a gateway.\n**Character limit**: 40 **Values**: a string of 40 characters or fewer "
        },
        "PostalCode" : {
          "type" : "string",
          "description" : " The zip code of the customer's address. This field is used only for the direct debit payment method.\n**Character limit**: 20 **Values**: a string of 20 characters or fewer "
        },
        "State" : {
          "type" : "string",
          "description" : " The state of the customer's address. This field is used only for the direct debit payment method.\n**Character limit**: 70 **Values**: a string of 70 characters or fewer "
        },
        "StreetName" : {
          "type" : "string",
          "description" : " The street name of the customer's address. This field is used only for the direct debit payment method.\n**Character limit**: 100 **Values**: a string of 100 characters or fewer "
        },
        "StreetNumber" : {
          "type" : "string",
          "description" : " The street number of the customer's address. This field is used only for the direct debit payment method.\n**Character limit**: 30 **Values**: a string of 30 characters or fewer "
        },
        "UseDefaultRetryRule" : {
          "type" : "boolean",
          "description" : " Determines whether to use the default retry rules configured in the Zuora Payments settings. Set this to `true` to use the default retry rules. Set this to `false` to set the specific rules for this payment method. If you set this value to `false`, then the fields, `PaymentRetryWindow` and `MaxConsecutivePaymentFailures`, are required.\n**Character limit**: 5 **Values**: `t``rue`, `false` "
        }
      },
      "example" : {
        "CreditCardAddress1" : "312 2nd Ave W_new",
        "Id" : "2c93808457d787030157e02fced332a2"
      }
    },
    "ProxyModifyProduct" : {
      "type" : "object",
      "properties" : {
        "AllowFeatureChanges" : {
          "type" : "boolean",
          "description" : " Controls whether to allow your users to add or remove features while creating or amending a subscription.\n**Character** **limit**: n/a\n**Values**: true, false (default) "
        },
        "Category" : {
          "type" : "string",
          "description" : " Category of the product. Used by Zuora Quotes Guided Product Selector.\n**Character** **limit**: 100\n**Values**: One of the following:\n\n- Base Products\n- Add On Services\n- Miscellaneous Products\n"
        },
        "Description" : {
          "type" : "string",
          "description" : " A descriptionof the product. **Character limit**: 500 **Values**: a string of 500 characters or fewer "
        },
        "EffectiveEndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date when the product expires and can't be subscribed to anymore. **Character limit**: 29 **Values**: a valid date and time value "
        },
        "EffectiveStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date when the product becomes available and can be subscribed to. **Character limit**: 29 **Values**: a valid date and time value "
        },
        "Name" : {
          "type" : "string",
          "description" : "The name of the product. This information is displayed in the product catalog pages in the web-based UI. **Character limit**: 100 **Values**: a string of 100 characters or fewer "
        },
        "SKU" : {
          "type" : "string",
          "description" : "The unique SKU for the product. **Character limit**: 50 **Values**: one of the following:\n\n- leave null for automatic generated\n- an alphanumeric string of 50 characters or fewer\n"
        }
      },
      "example" : {
        "Description" : "Create product via API_new",
        "EffectiveEndDate" : "2066-10-20",
        "EffectiveStartDate" : "1966-10-20",
        "Id" : "2c93808457d787030157e02e7be22210",
        "Name" : "P_1476934925293_new",
        "SKU" : "API-SKU1476934925293"
      }
    },
    "ProxyModifyProductRatePlan" : {
      "type" : "object",
      "properties" : {
        "Description" : {
          "type" : "string",
          "description" : "A description of the product rate plan. **Character limit**: 500 **Values**: a string of 500 characters or fewer "
        },
        "EffectiveEndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the product rate plan expires and can't be subscribed to.\n**Character limit**: 29 **Values**: a valid date and time value "
        },
        "EffectiveStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the product rate plan becomes available and can be subscribed to.\n**Character limit**: 29 **Values**: a valid date and time value "
        },
        "Name" : {
          "type" : "string",
          "description" : "The name of the product rate plan. The name doesn't have to be unique in a Product Catalog, but the name has to be unique within a product. **Character limit**: 100 **Values**: a string of 100 characters or fewer "
        },
        "ProductId" : {
          "type" : "string",
          "description" : "The ID of the product that contains the product rate plan. **Character limit**: 32 **Values**: a string of 32 characters or fewer "
        }
      },
      "example" : {
        "Id" : "2c93808457d787030157e02da0d91852",
        "Name" : "ProductRatePlan1476934869186_new"
      }
    },
    "ProxyModifyRefund" : {
      "type" : "object",
      "properties" : {
        "ReasonCode" : {
          "type" : "string",
          "description" : " A code identifying the reason for the transaction. Must be an existing reason code or empty. If you do not specify a value, Zuora uses the default reason code.\n**Character limit**: 32 **V****alues**: a valid reason code "
        },
        "Status" : {
          "type" : "string",
          "description" : " The status of the refund.\n**Character limit**: 10 **Values**: automatically generated:\n\n- `Canceled`\n- `Error`\n- `Processed`\n- `Processing`\n"
        },
        "TransferredToAccounting" : {
          "type" : "string",
          "description" : " Specifies whether or not the object has been transferred to an external accounting system. Use this field for integrations with accounting systems such as NetSuite.\n**Character limit**: 10 **Values**: automatically generated:\n\n- `Processing`\n- `Yes`\n- `Error`\n- `Ignore`\n"
        }
      },
      "example" : {
        "Id" : "2c93808457d787030157e03198c84918",
        "Status" : "Canceled"
      }
    },
    "ProxyModifySubscription" : {
      "type" : "object",
      "properties" : {
        "AccountId" : {
          "type" : "string",
          "description" : " This field can be updated when **Status** is `Draft`. The ID of a valid account ID. "
        },
        "AutoRenew" : {
          "type" : "boolean",
          "description" : " This field can be updated when **Status** is `Draft`. Indicates if the subscription automatically renews at the end of the term.\n**Values**: `true`, `false` "
        },
        "CancelledDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date of the Amendment object.\n**Values**: inherited from `Amendment.EffectiveDate` "
        },
        "ContractAcceptanceDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the customer accepts the contract. This field can be updated when **Status** is `Draft`. "
        },
        "ContractEffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the contract takes effect. This field can be updated when **Status** is `Draft`.\n**Note**: This field is required in the Subscribe call. If you set the value of this field to null and both the ServiceActivationDate and ContractAcceptanceDate fields are not required, the Subscribe call still returns success, but the new subscription is in `DRAFT` status. To activate the subscription, you must set a valid date to this field. "
        },
        "CpqBundleJsonId__QT" : {
          "type" : "string",
          "description" : " The Bundle product structures from Zuora Quotes if you utilize Bundling in Salesforce. Do not change the value in this field.\n**Character limit**: 32 **Values**: N/A "
        },
        "CurrentTermPeriodType" : {
          "type" : "string",
          "description" : " The period type for the current subscription term. This field is used with the CurrentTerm field to specify the current subscription term.\n**Values**:\n\n- `Month` (default)\n- `Year`\n- `Day`\n- `Week`\n"
        },
        "InitialTerm" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " The length of the period for the first subscription term. This field can be updated when Status is `Draft`.\n**Required**: If TermType is Termed **Character limit**: 20 **Values**: any valid number. The default value is 0. "
        },
        "InitialTermPeriodType" : {
          "type" : "string",
          "description" : " The period type for the first subscription term.\n**Values**:\n\n- `Month` (default)\n- `Year`\n- `Day`\n- `Week`\n**Note**:\n\n- This field can be updated when Status is `Draft`.\n- This field is used with the InitialTerm field to specify the initial subscription term.\n"
        },
        "InvoiceOwnerId" : {
          "type" : "string",
          "description" : " This field can be updated when **Status** is `Draft`. A valid account ID. "
        },
        "IsInvoiceSeparate" : {
          "type" : "boolean",
          "description" : " Determines if the subscription is invoiced separately. If `TRUE`, then all charges for this subscription are collected into the subscription's own invoice.\n**Values**: `TRUE`, `FALSE `(default) "
        },
        "Name" : {
          "type" : "string",
          "description" : " The unique identifier of the subscription. If you don't specify a value, then Zuora generates a name automatically. Whether auto-generated or manually specified, the subscription name must be unique. Otherwise an error will occur.\n**Character limit**: 100 **Values**: one of the following:\n\n- leave null to automatically generate\n- a string of 100 characters or fewer\n"
        },
        "Notes" : {
          "type" : "string",
          "description" : " Use this field to record comments about the subscription.\n**Character limit**: 500 **Values**: a string of 500 characters or fewer "
        },
        "OpportunityCloseDate__QT" : {
          "type" : "string",
          "format" : "date",
          "description" : " The closing date of the Opportunity. This field is used in Zuora Reporting Data Sources to report on Subscription metrics. If the subscription was originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.\n**Character limit**: **Values**: populated by Zuora Quotes "
        },
        "OpportunityName__QT" : {
          "type" : "string",
          "description" : " The unique identifier of the Opportunity. This field is used in the Zuora Reporting Data Sources to report on Subscription metrics. If the subscription was originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.\n**Character limit**: 100 **Values**: populated by Zuora Quotes "
        },
        "QuoteBusinessType__QT" : {
          "type" : "string",
          "description" : " The specific identifier for the type of business transaction the Quote represents such as New, Upsell, Downsell, Renewal or Churn. This field is used in the Zuora Reporting Data Sources to report on Subscription metrics. If the subscription was originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.\n**Character limit**: 32 **Values**: populated by Zuora Quotes "
        },
        "QuoteNumber__QT" : {
          "type" : "string",
          "description" : " The unique identifier of the Quote. This field is used in the Zuora Reporting Data Sources to report on Subscription metrics. If the subscription was originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.\n**Character limit**: 32 **Values**: populated by Zuora Quotes "
        },
        "QuoteType__QT" : {
          "type" : "string",
          "description" : " The Quote type that represents the subscription lifecycle stage such as New, Amendment, Renew or Cancel. This field is used in the Zuora Reporting Data Sources to report on Subscription metrics. If the subscription was originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.\n**Character limit**: 32 **Values**: populated by Zuora Quotes "
        },
        "RenewalSetting" : {
          "type" : "string",
          "description" : " This field can be updated when **Status** is `Draft`. Specifies whether a termed subscription will remain termed or change to evergreen when it is renewed.\n**Required**: If TermType is Termed **Values**: `RENEW_WITH_SPECIFIC_TERM `(default), `RENEW_TO_EVERGREEN` "
        },
        "RenewalTerm" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " The length of the period for the subscription renewal term. This field can be updated when **Status** is `Draft`. **Required**: If TermType is Termed.\n**Character limit**: 20 **Values**: one of the following:\n\n- leave null to default to `0`\n- any number\n"
        },
        "RenewalTermPeriodType" : {
          "type" : "string",
          "description" : " The period type for the subscription renewal term.\n**Values**:\n\n- `Month` (default)\n- `Year`\n- `Day`\n- `Week`\n**Note**:\n\n- This field is used with the RenewalTerm field to specify the subscription renewal term.\n- This field can be updated when Status is `Draft`.\n"
        },
        "ServiceActivationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the subscription is activated. This field can be updated when **Status** is `Draft`.\n**Character limit**: 29 "
        },
        "Status" : {
          "type" : "string",
          "description" : " The status of the subscription.\n**Character limit**: 17 **Values**: automatically generated **Possible values**: one of the following:\n\n- `Draft`\n- `PendingActivation`\n- `PendingAcceptance`\n- `Active`\n- `Cancelled`\n- `Expired`\n- `Suspended` (This value is in **Limited Availability**.)\n"
        },
        "TermStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " This field can be updated when **Status** is `Draft`. The date when the subscription term begins. If this is a renewal subscription, then this date is different from the subscription start date.\n**Character limit**: 29 **Version notes**: -- "
        },
        "TermType" : {
          "type" : "string",
          "description" : " This field can be updated when **Status** is `Draft`. Indicates if a subscription is termed or evergreen.\n**Character limit**: 9 **Values**: `TERMED`, `EVERGREEN` "
        },
        "Version" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " The version number of the subscription.\n**Values**: automatically generated "
        }
      },
      "example" : {
        "Id" : "2c93808457d787030157e02ea04123cf",
        "Name" : "S_1476934934547_name",
        "Notes" : "this is notes_new"
      }
    },
    "ProxyModifyTaxationItem" : {
      "type" : "object",
      "properties" : {
        "AccountingCode" : {
          "type" : "string",
          "description" : " The Chart of Accounts "
        },
        "ExemptAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The amount of taxes or VAT for which the customer has an exemption.\n**Character limit**: 16 **Values**: a decimal value "
        },
        "Jurisdiction" : {
          "type" : "string",
          "description" : " The jurisdiction that applies the tax or VAT. This value is typically a state, province, county, or city.\n**Character limit**: 32 **Values**: a string of 32 characterrs or fewer "
        },
        "LocationCode" : {
          "type" : "string",
          "description" : " The identifier for the location based on the value of the `TaxCode` field.\n**Character limit**: 32 **Values**: automatically generated "
        },
        "Name" : {
          "type" : "string",
          "description" : " The name of the tax rate, such as sales tax or GST. This name is displayed on invoices.\n**Character limit**: 128 **Values**: a string of 128 characters or fewer "
        },
        "TaxAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : " The amount of the tax applied to the charge.\n**Character limit**: 16 **Values**: a decimal value "
        },
        "TaxCode" : {
          "type" : "string",
          "description" : " The tax code identifies which tax rules and tax rates to apply to a specific charge.\n**Character limit**: 32 **Values**: a string of 32 characters or fewer "
        },
        "TaxCodeDescription" : {
          "type" : "string",
          "description" : " The description for the tax code.\n**Character limit**: 255 **Values**: a string of 255 characters or fewer "
        },
        "TaxDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date that the tax is applied to the charge.\n**Character limit**: 29 **Values**: a valid date and time value "
        },
        "TaxRate" : {
          "type" : "number",
          "format" : "double",
          "description" : " The tax rate applied to the charge.\n**Character limit**: 16 **Values**: a valid decimal value "
        },
        "TaxRateDescription" : {
          "type" : "string",
          "description" : " The description of the tax rate.\n**Character limit**: 255 **Values**: a string of 255 characters or fewer "
        },
        "TaxRateType" : {
          "type" : "string",
          "description" : " The type of the tax rate applied to the charge.\n**Character limit**: 10 **Values**: `Percentage`, `FlatFee` "
        }
      }
    },
    "ProxyModifyUnitOfMeasure" : {
      "type" : "object",
      "properties" : {
        "Active" : {
          "type" : "boolean",
          "description" : " Indicates if the UOM is available for new product rate plans. The default value is `true`.\n**Character limit**: 5 **Values**: `true`, `false ` "
        },
        "DecimalPlaces" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The number of digits to the right of the decimal point that you want to measure for the unit. To use whole numbers only, set this value to 0. You can't change this value after this `UOM` is used in any product, subscription, or usage. **Character limit**: 1 **Values**: an integer between 0 and 9, exclusive "
        },
        "DisplayedAs" : {
          "type" : "string",
          "description" : "The name of the UOM that you want displayed on invoices. The default value is the `UomName` field value. **Character limit**: 50 **Values**: A string of 50 characters or fewer "
        },
        "RoundingMode" : {
          "type" : "string",
          "description" : " Specifies whether to round the UOM value up or down when the value exceeds the `DecimalPlaces` field value. The default value is `Up`.\n**Character limit**: 4 **Values**: `Up`, `Down` "
        },
        "UomName" : {
          "type" : "string",
          "description" : " The name of the UOM, such as license or GB. This name is displayed in query results and in the web-based UI labels. If you want a different name to be displayed on invoices, then use the `DisplayedAs` field to provide the invoice label.\n**Character limit**: 50 **Values**: a string of 50 characters or fewer "
        }
      }
    },
    "ProxyModifyUsage" : {
      "type" : "object",
      "properties" : {
        "EndDateTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The end date and time of a range of time when usage is tracked. Use this field for reporting; this field doesn't affect usage calculation.\n**Character limit**: 29 **Values**: a valid date and time value "
        },
        "Quantity" : {
          "type" : "number",
          "format" : "double",
          "description" : " Indicates the number of units used.\n**Character limit**: 16 **Values**: a valid decimal amount equal to or greater than 0 "
        },
        "RbeStatus" : {
          "type" : "string",
          "description" : " Indicates if the rating and billing engine (RBE) processed usage data for an invoice.\n**Character limit**: 9 **Values**: automatically generated to be one of the following values: `Importing`, `Pending`, `Processed` "
        },
        "StartDateTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The start date and time of a range of time when usage is tracked. Zuora uses this field value to determine the usage date. Unlike the `EndDateTime`, the `StartDateTime` field does affect usage calculation.\n**Character limit**: 29 **Values**: a valid date and time value "
        },
        "SubmissionDateTime" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when usage was submitted.\n**Character limit**: 29 **Values**: automatically generated "
        },
        "UOM" : {
          "type" : "string",
          "description" : " Specifies the units to measure usage. Units of measure are configured in the web-based UI. Your values depend on your configuration in **Billing Settings**.\n**Character limit**: **Values**: a valid unit of measure "
        }
      }
    },
    "ProxyNoDataResponse" : {
      "type" : "object",
      "properties" : {
        "done" : {
          "type" : "boolean",
          "description" : ""
        },
        "records" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "type" : "object",
            "properties" : { }
          }
        },
        "size" : {
          "type" : "integer",
          "description" : ""
        }
      }
    },
    "QueryResult" : {
      "type" : "object",
      "properties" : {
        "done" : {
          "type" : "boolean",
          "description" : ""
        },
        "queryLocator" : {
          "type" : "string",
          "description" : ""
        },
        "records" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/zObject"
          }
        },
        "size" : {
          "type" : "integer",
          "format" : "int32",
          "description" : ""
        }
      }
    },
    "RatePlan" : {
      "type" : "object",
      "properties" : {
        "AmendmentId" : {
          "type" : "string",
          "description" : " The ID of the amendment associated with the rate plan. This field only applies to amendment rate plans.\n\n\n**Character limit**: 32\n\n\n**Values**: a valid amendment ID "
        },
        "AmendmentSubscriptionRatePlanId" : {
          "type" : "string",
          "description" : "The ID of the subscription rate plan modified by the amendment. This field only applies to amendment rate plans.\n\n**Character limit**: 32\n\n\n**Values**: a valid rate plan ID "
        },
        "AmendmentType" : {
          "type" : "string",
          "description" : "The type of amendment associated with the rate plan. This field only applies to amendment rate plans.\n\n**Character limit**: 18\n\n\n**Values**: inherited from `Amendment.Type` "
        },
        "CreatedById" : {
          "type" : "string",
          "description" : "The ID of the Zuora user who created the RatePlan object.\n\n**Character limit**: 32\n\n\n**Values**: automatically generated "
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date when the `RatePlan` object was last updated.\n\n**Character limit**: 29\n\n\n**Values**: automatically generated "
        },
        "Name" : {
          "type" : "string",
          "description" : "The name of the rate plan. Leave this null in a subscribe\ncall to to inherited the `ProductRatePlan.Name` field value.\n\n**Character limit**: 100\n\n\n**Values**: a string of 100 characters or fewer or inherited from ProductRatePlan.Name "
        },
        "ProductRatePlanId" : {
          "type" : "string",
          "description" : "The ID of the associated product rate plan.\n\n**Character limit**: 32\n\n\n**Values**: a valid product rate plan ID "
        },
        "SubscriptionId" : {
          "type" : "string",
          "description" : "The ID of the subscription that the rate plan belongs to.\n\n**Character limit**: 32\n\n\n**Values**: a valid subscription ID "
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : " The ID of the user who last updated the rate plan.\n\n\n**Character limit**: 32\n\n\n**Values**: automatically generated "
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the rate plan was last updated.\n\n\n**Character limit**: 29\n\n\n**Values**: automatically generated "
        }
      }
    },
    "RatePlanCharge" : {
      "type" : "object",
      "properties" : {
        "AccountingCode" : {
          "type" : "string",
          "description" : "The accounting code for the charge. Accounting codes group transactions that contain similar accounting attributes.\n\n**Character limit**: 100\n\n\n**Values**: inherited from `ProductRatePlanCharge.AccountingCode` "
        },
        "ApplyDiscountTo" : {
          "type" : "string",
          "description" : " Specifies the type of charges a specific discount applies to.\n\n**Character limit**: 21\n\n\n**Values**: inherited from `ProductRatePlanCharge.ApplyDiscountTo` "
        },
        "BillCycleDay" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " Indicates the charge's billing cycle day (BCD), which is when bill runs generate invoices for charges associated with the product rate plan charge or the account.\n\n\n**Character limit**: 2\n\n\n**Values**: inherited from `ProductRatePlanCharge.BillCycleDay` "
        },
        "BillCycleType" : {
          "type" : "string",
          "description" : " Specifies how to determine the billing day for the charge.\n\n\n**Character limit**: 20\n\n\n**Values**: inherited from `ProductRatePlanCharge.BillCycleType` **Note:** You can override the value inherited from the Product Rate Plan Charge, but only when creating a new subscription or a New Product amendment. "
        },
        "BillingPeriod" : {
          "type" : "string",
          "description" : " Allows billing period to be overridden on rate plan charge.\n\n\n\n**Values**: inherited from `ProductRatePlanCharge.BillingPeriod` **Note:** You can override the value inherited from the Product Rate Plan Charge, but only when creating a new subscription or a New Product amendment. "
        },
        "BillingPeriodAlignment" : {
          "type" : "string",
          "description" : " Aligns charges within the same subscription if multiple charges begin on different dates.\n\n\n**Character limit**: 24\n\n\n**Values**: inherited from `ProductRatePlanCharge.BillingPeriodAlignment` "
        },
        "BillingTiming" : {
          "type" : "string",
          "description" : " The billing timing for the charge. You can choose to bill in advance or in arrears for recurring charge types. This field is not used in one-time or usage based charge types.\n\n\n**Character limit**:\n\n\n**Values**: one of the following:\n\n- I`n Advance`\n- `In Arrears`\n**Note:** You can override the value inherited from the Product Rate Plan Charge when a subscription has a recurring charge type.\nThis feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).\n\n"
        },
        "ChargeModel" : {
          "type" : "string",
          "description" : " Determines how to evaluate charges. Charge models must be individually activated in the web-based UI.\n\n\n**Character limit**: 29\n\n\n**Values**: inherited from `ProductRatePlanCharge.ChargeModel` "
        },
        "ChargeNumber" : {
          "type" : "string",
          "description" : " A unique number that identifies the charge. This number is returned as a string.\n\n\n**Character limit**: 50\n\n\n**Values**: one of the following:\n\n- automatically generated if left null\n- a unique number of 50 characters or fewer\n"
        },
        "ChargeType" : {
          "type" : "string",
          "description" : " Specifies the type of charge.\n\n\n**Character limit**: 9\n\n\n**Values**: inherited from `ProductRatePlanCharge.ChargeType` "
        },
        "ChargedThroughDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date through which a customer has been billed for the charge.\n\n\n**Character limit**: 29\n\n\n**Values**: automatically generated "
        },
        "CreatedById" : {
          "type" : "string",
          "description" : "The ID of the Zuora user who created the `RatePlanCharge` object.\n\n**Character limit**: 32\n\n\n**Values**: automatically generated "
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the `RatePlanCharge` object was created.\n\n\n**Character limit**: 29\n\n\n**Values**: automatically generated "
        },
        "DMRC" : {
          "type" : "number",
          "format" : "double",
          "description" : "A delta monthly recurring charge is the change in monthly recurring revenue caused by an amendment or a new subscription.\n\n**Character limit**: 16\n\n\n**Values**: automatically generated "
        },
        "DTCV" : {
          "type" : "number",
          "format" : "double",
          "description" : " After an Amendment, the change in the total contract value (TCV) amount for this charge, compared with its previous value.\n\n\n**Character limit**: 16\n\n\n**Values**: automatically generated "
        },
        "Description" : {
          "type" : "string",
          "description" : " A description of the charge.\n\n\n**Character limit**: 500\n\n\n**Values**: inherited from `ProductRatePlanCharge.Description` "
        },
        "DiscountAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : " Specifies the amount of a fixed-amount discount. You can provide a value for this field if the `ChargeModel` field value is `Discount-Fixed Amount`. If this field is included in a query, the query will filter out the rate plans whose `ChargeModel` field is not of a Discount type. You cannot query this field with the following fields in a single query:\n\n- Price\n- IncludedUnits\n- DiscountPercentage\n- OveragePrice\n\n\n**Character limit**: 16\n\n\n**Values**: a valid currency amount "
        },
        "DiscountLevel" : {
          "type" : "string",
          "description" : "Specifies if the discount applies to just the product rate plan, the entire subscription, or to any activity in the account.\n\n**Character limit**: 12\n\n\n**Values**: inherited from `ProductRatePlanCharge.DiscountLevel` "
        },
        "DiscountPercentage" : {
          "type" : "number",
          "format" : "double",
          "description" : " Query Filter "
        },
        "EffectiveEndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the segmented charge ends or ended.\n\n\n**Character limit**: 16\n\n\n**Values**: automatically generated "
        },
        "EffectiveStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the segmented charge starts or started.\n\n\n**Character limit**: 16\n\n\n**Values**: automatically generated "
        },
        "EndDateCondition" : {
          "type" : "string",
          "description" : " Defines when the charge ends after the charge trigger date. This field can be updated when **Status** is `Draft`.\n\n\n\n**Values**: one of the following:\n\n- `SubscriptionEnd`: The charge ends on the subscription end date after the charge trigger date. This is the default value.\n- `FixedPeriod`: The charge ends after a specified period based on the trigger date of the charge. If you set this field to `FixedPeriod`, you must specify the length of the period and a period type by defining the `UpToPeriods` and `UpToPeriodsType` fields.\n- `SpecificEndDate`: The specific date on which the charge ends. If you set this field to `SpecificEndDate`, you must specify the specific date by defining the `SpecificEndDate` field.\n\n\n\n**Note**: If the subscription ends before the charge end date, the charge ends when the subscription ends. But if the subscription end date is subsequently changed through a Renewal, or Terms and Conditions amendment, the charge will end on the charge end date. "
        },
        "IncludedUnits" : {
          "type" : "number",
          "format" : "double",
          "description" : " Query Filter "
        },
        "IsLastSegment" : {
          "type" : "boolean",
          "description" : "Indicates if the segment of the rate plan charge is the most recent segment.\n\n**Character limit**: 5\n\n\n**Values**: automatically generated: `true`, `false` "
        },
        "ListPriceBase" : {
          "type" : "string",
          "description" : "The list price base for the product rate plan charge.\n\n\n**Values**: one of the following:\n\n- `Per Month`\n- `Per Billing Period`\n- `Per Week`\n"
        },
        "MRR" : {
          "type" : "number",
          "format" : "double",
          "description" : "Monthly recurring revenue (MRR) is the amount of recurring charges in a given month. The MRR calculation doesn't include one-time charges nor usage charges.\n\n**Character limit**: 16\n\n\n**Values**: automatically generated "
        },
        "Name" : {
          "type" : "string",
          "description" : "The name of the rate plan charge.\n\n**Character limit**: 100\n\n\n**Values**: automatically generated "
        },
        "NumberOfPeriods" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Specifies the number of periods to use when calculating charges in an overage smoothing charge model.\n\n**Character limit**: 5\n\n\n**Values**: inherited from `ProductRatePlanCharge.NumberOfPeriod` "
        },
        "OriginalId" : {
          "type" : "string",
          "description" : "The original ID of the rate plan charge.\n\n**Character limit**: 32\n\n\n**Values**: automatically generated "
        },
        "OverageCalculationOption" : {
          "type" : "string",
          "description" : "Determines when to calculate overage charges. If the value of the SmoothingMode field is null (not specified and not inherited from ProductRatePlanCharge.SmoothingMode), the value of this field is ignored.\n\n**Character limit**: 20\n\n\n**Values**: inherited from `ProductRatePlanCharge.OverageCalculationOption` "
        },
        "OveragePrice" : {
          "type" : "number",
          "format" : "double",
          "description" : " Query Filter "
        },
        "OverageUnusedUnitsCreditOption" : {
          "type" : "string",
          "description" : " Determines whether to credit the customer with unused units of usage.\n\n\n**Character limit**: 20\n\n\n**Values**: inherited from `ProductRatePlanCharge.OverageUnusedUnitsCreditOption` "
        },
        "Price" : {
          "type" : "number",
          "format" : "double",
          "description" : " Query Filter "
        },
        "PriceChangeOption" : {
          "type" : "string",
          "description" : " Applies an automatic price change when a termed subscription is renewed.\n\n\n**Character limit**:\n\n\n**Values**: one of the following:\n\n- `NoChange` (default)\n- `SpecificPercentageValue`\n- `UseLatestProductCatalogPricing`\n"
        },
        "PriceIncreasePercentage" : {
          "type" : "number",
          "format" : "double",
          "description" : " Specifies the percentage to increase or decrease the price of renewed subscriptions. Use this field if the `ProductRatePlanCharge`.`PriceChangeOption` value is set to `SpecificPercentageValue`.\n\n\n**Character limit**: 16\n\n\n**Values**: a decimal value between -100 and 100 "
        },
        "ProcessedThroughDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date until when charges have been processed. When billing in arrears, such as usage, this field value is the the same as the `ChargedThroughDate` value. This date is the earliest date when a charge can be amended.\n\n\n**Character limit**: 29\n\n\n**Values**: automatically generated "
        },
        "ProductRatePlanChargeId" : {
          "type" : "string",
          "description" : " The ID of the product rate plan charge associated with the subscription rate plan charge,\n\n**Character limit**: 32\n\n\n**Values**: inherited from `ProductRatePlanCharge.Id` "
        },
        "Quantity" : {
          "type" : "number",
          "format" : "double",
          "description" : " The default quantity of units, such as the number of authors in a hosted wiki service. Valid for all charge models except for Flat Fee pricing.\n\n\n**Character limit**: 16\n\n\n**Values**: a valid quantity value "
        },
        "RatePlanId" : {
          "type" : "string",
          "description" : " The ID of the rate plan associated with the rate plan charge.\n\n\n**Character limit**: 32\n\n\n**Values**: inherited from `RatePlan.Id` "
        },
        "RevRecCode" : {
          "type" : "string",
          "description" : " Associates this product rate plan charge with a specific revenue recognition code.\n\n\n**Character limit**: 70\n\n\n**Values**: a valid revenue recognition code "
        },
        "RevRecTriggerCondition" : {
          "type" : "string",
          "description" : " Specifies when revenue recognition begins.\n\n\n**Character limit**: 22\n\n\n**Values**: one of the following:\n\n-  `ContractEffectiveDate`\n\n-  `ServiceActivationDate`\n\n-  `CustomerAcceptanceDate`\n\n"
        },
        "RevenueRecognitionRuleName" : {
          "type" : "string",
          "description" : " Specifies the Revenue Recognition Rule that you want the Rate Plan Charge to use. This field can be updated when **Status** is `Draft`. By default, the Revenue Recognition Rule is inherited from the Product Rate Plan Charge. For Amend\ncalls, you can use this field only for NewProduct amendments. For Update\ncalls, you can use this field only to update subscriptions in draft status. Note that if you use this field to specify a Revenue Recognition Rule for the Rate Plan Charge, the rule will remain as specified even if you later change the rule used by the corresponding Product Rate Plan Charge. See [Z-Billing User Role](https://knowledgecenter.zuora.com/CF_Users_and_Administrators/A_Administrator_Settings/User_Roles/d_Billing_Roles) permission enabled to use this field.\n\n\n\n**Character limit**: n/a\n\n\n**Values**: name of an active Revenue Recognition Rule "
        },
        "RolloverBalance" : {
          "type" : "number",
          "format" : "double",
          "description" : " Specifies the number of units of measure (UOM) rolled over from previous periods. This field is applicable only to usage charges with overage models.\n\n\n**Character limit**: 16\n\n\n**Values**: automatically generated\n\n**Note**:\n\n- You cannot query or filter this field with other fields in a single query.\n- To query or filter this field, you must specify and only specify the rate plan charge Id in the condition.\n- You cannot use this field in the query or filter condition.\n"
        },
        "Segment" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " The identifying number of the subscription rate plan segment. Segments are numbered sequentially, starting with 1.\n\n\n**Character limit**: 2\n\n\n**Values**: automatically generated "
        },
        "SpecificBillingPeriod" : {
          "type" : "integer",
          "format" : "int64",
          "description" : " Customizes the number of months or weeks for the charges billing period. This field is required if you set the value of the BillingPeriod field to `Specific Months` or `Specific Weeks`.\n\n\n**Character limit**: 5\n\n\n**Values**: inherited from `ProductRatePlanCharge.BillingPeriod` **Note:** You can override the value inherited from the Product Rate Plan Charge, but only when creating a new subscription or a New Product amendment. "
        },
        "SpecificEndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The specific date on which the charge ends.\n\n\n**Character limit**: 29\n\n\n**Values**: a valid date and time value\n\n**Note**:\n\n- This field is only applicable when the `EndDateCondition` field is set to `SpecificEndDate`.\n- If the subscription ends before the specific end date, the charge ends when the subscription ends. But if the subscription end date is subsequently changed through a Renewal, or Terms and Conditions amendment, the charge will end on the specific end date.\n"
        },
        "TCV" : {
          "type" : "number",
          "format" : "double",
          "description" : " The total contract value (TCV) is the value of a single rate plan charge in a subscription over the lifetime of the subscription. This value does not represent all charges on the subscription. The TCV includes recurring charges and one-time charges, but it doesn't include usage charge.\n\n\n**Character limit**: 16\n\n\n**Values**: automatically generated "
        },
        "TriggerDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the charge becomes effective, and billing begins. This field is required if the `TriggerEvent` field value is `SpecificDate`.\n\n\n**Character limit**: 29\n\n\n**Values**: [a valid date and time value](/CB_Billing/WA_Dates_in_Zuora/A_Date_Format_and_Datetimes_in_Zuora) "
        },
        "TriggerEvent" : {
          "type" : "string",
          "description" : " Specifies when to start billing the customer for the charge.\n**Note: **This field can be passed through the subscribe\nand amend\ncalls and will override the default value set on the Product Rate Plan Charge.\n\n\n**Character limit**: 18\n\n\n**Values**: inherited from `ProductRatePlanCharge.TriggerEvent` and can be one of the following values:\n\n- `ContractEffective `is the date when the subscription's contract goes into effect and the charge is ready to be billed.\n- `ServiceActivationDate `is when the services or products for a subscription have been activated and the customers have access.\n- `CustomerAcceptance `is when the customer accepts the services or products for a subscription.\n- SpecificDate is valid only on the RatePlanCharge.\n"
        },
        "UOM" : {
          "type" : "string",
          "description" : " Specifies the units to measure usage. Units of measure are configured in the web-based UI: **Z-Billing > Settings**.\n\n\n**Character limit**: 25\n\n\n**Values**: inherited from `ProductRatePlanCharge.UOM` "
        },
        "UnusedUnitsCreditRates" : {
          "type" : "number",
          "format" : "double",
          "description" : " Specifies the rate to credit a customer for unused units of usage. This field is applicable only for overage charge models when the `OverageUnusedUnitsCreditOption` field value is CreditBySpecificRate.\n\n\n**Character limit**: 16\n\n\n**Values**: a valid decimal value "
        },
        "UpToPeriods" : {
          "type" : "integer",
          "format" : "int64",
          "description" : " Specifies the length of the period during which the charge is active. If this period ends before the subscription ends, the charge ends when this period ends.\n\n\n**Character limit**: 5\n\n\n**Values**: inherited from `ProductRatePlanCharge.UpToPeriods`\n\n**Note**:\n\n- You must use this field together with the `UpToPeriodsType` field to specify the time period. This field is only applicable only when the `EndDateCondition` field is set to `FixedPeriod`.\n- You can override the value inherited from the Product Rate Plan Charge, but only when creating a new subscription or a New Product amendment.\n- Use this field to override the value in `ProductRatePlanCharge.UpToPeriod`.\n- If you override the value in this field, enter a whole number between 0 and 65535, exclusive.\n- If the subscription end date is subsequently changed through a Renewal, or Terms and Conditions amendment, the charge end date will change accordingly up to the original period end.\n"
        },
        "UpToPeriodsType" : {
          "type" : "string",
          "description" : " The period type used to define when the charge ends. This field can be updated when **Status** is `Draft`.\n\n\n**Values**: one of the following:\n\n- `Billing Periods` (default)\n- `Days`\n- `Weeks`\n- `Months`\n- `Years`\n\n\n**Note**:\n\n- You must use this field together with the `UpToPeriods` field to specify the time period.\n- This field is only applicable only when the `EndDateCondition` field is set to `FixedPeriod`.\n"
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : "The ID of the last user to update the object.\n\n**Character limit**: 32\n\n\n**Values**: automatically generated "
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the object was last updated.\n\n\n**Character limit**: 29\n\n\n**Values**: automatically generated "
        },
        "UsageRecordRatingOption" : {
          "type" : "string",
          "description" : " Determines how Zuora processes usage records for per-unit usage charges.\n\n**Character limit**: 18\n\n\n**Values**: automatically generated "
        },
        "UseDiscountSpecificAccountingCode" : {
          "type" : "boolean",
          "description" : " Determines whether to define a new accounting code for the new discount charge.\n\n\n**Character limit**: 5\n\n\n**Values**: inherited from `ProductRatePlanCharge.UseDiscountSpecificAccountingCode` "
        },
        "Version" : {
          "type" : "integer",
          "format" : "int64",
          "description" : " The version of the rate plan charge. Each time a charge is amended, Zuora creates a new version of the rate plan charge.\n\n**Character limit**: 5\n\n\n**Values**: automatically generated "
        },
        "WeeklyBillCycleDay" : {
          "type" : "string",
          "description" : " Specifies which day of the week as the bill cycle day (BCD) for the charge.\nThis feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).\n\n\n\n\n**Values**: one of the following:\n\n- `Sunday`\n- `Monday`\n- `Tuesday`\n- `Wednesday`\n- `Thursday`\n- `Friday`\n- `Saturday`\n"
        }
      }
    },
    "RatePlanChargeData" : {
      "type" : "object",
      "properties" : {
        "RatePlanCharge" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/RatePlanCharge"
          }
        },
        "RatePlanChargeTier" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/RatePlanChargeTier"
          }
        }
      }
    },
    "RatePlanChargeTier" : {
      "type" : "object",
      "properties" : {
        "CreatedById" : {
          "type" : "string",
          "description" : "The ID of the Zuora user who created the RatePlanChargeTier object.\n\n**Character limit**: 32\n\n\n**Values**: automatically generated "
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the RatePlanChargeTier object was created.\n\n\n**Character limit**: 29\n\n\n**Values**: automatically generated "
        },
        "EndingUnit" : {
          "type" : "number",
          "format" : "double",
          "description" : " The end number of a range of units for the tier.\n\n\n**Character limit**: 16\n\n\n**Values**: any positive decimal value "
        },
        "IsOveragePrice" : {
          "type" : "boolean",
          "description" : " Indicates if the price is an overage price. An overage occurs when usage surpasses the last defined tier. This field is applicable only to tier pricing and volume pricing models.\n\n\n\n**Values**: true, false "
        },
        "Price" : {
          "type" : "number",
          "format" : "double",
          "description" : " The price of the tier if the charge is a flat fee, or the price of each unit in the tier if the change model is tiered pricing.\n\n\n**Character limit**: 16\n\n\n**Values**: any positive decimal value "
        },
        "PriceFormat" : {
          "type" : "string",
          "description" : " Indicates if the price is a flat fee or is per unit.\n\n\n**Character limit**: 8\n\n\n**Values**: `Flat Fee`, `Per Unit` "
        },
        "RatePlanChargeId" : {
          "type" : "string",
          "description" : " The ID of the subscription or amendment rate plan charge associated with this tier. You can't create an unassociated tier.\n\n\n**Character limit**: 32\n\n\n**Values**: inherited from `RatePlanCharge`.`Id` "
        },
        "StartingUnit" : {
          "type" : "number",
          "format" : "double",
          "description" : " The start number of a range of units for the tier.\n\n\n**Character limit**: 16\n\n\n**Values**: any positive decimal value "
        },
        "Tier" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " A unique number that identifies the tier that the price applies to.\n\n\n**Character limit**: 20\n\n\n**Values**: automatically generated "
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : "The ID of the last user to update the object.\n\n**Character limit**: 32\n\n\n**Values**: automatically generated "
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the object was last updated.\n\n\n**Character limit**: 29\n\n\n**Values**: automatically generated "
        }
      }
    },
    "RatePlanData" : {
      "type" : "object",
      "properties" : {
        "RatePlan" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/RatePlan"
          }
        },
        "RatePlanChargeData" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/RatePlanChargeData"
          }
        },
        "SubscriptionProductFeatureList" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/SubscriptionProductFeatureList"
          }
        }
      }
    },
    "RevenueScheduleItemType" : {
      "type" : "object",
      "required" : [ "accountingPeriodName" ],
      "properties" : {
        "accountingPeriodName" : {
          "type" : "string",
          "description" : "Name of the accounting period. The open-ended accounting period is named `Open-Ended`.\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        }
      },
      "title" : "revenueItems"
    },
    "SaveResult" : {
      "type" : "object",
      "properties" : {
        "Errors" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/Error"
          }
        },
        "Id" : {
          "type" : "string",
          "description" : ""
        },
        "Success" : {
          "type" : "boolean",
          "description" : ""
        }
      }
    },
    "SubscribeInvoiceProcessingOptions" : {
      "type" : "object",
      "properties" : {
        "InvoiceDate" : {
          "type" : "string",
          "format" : "date",
          "description" : ""
        },
        "InvoiceProcessingScope" : {
          "type" : "string",
          "description" : ""
        },
        "InvoiceTargetDate" : {
          "type" : "string",
          "format" : "date",
          "description" : ""
        }
      }
    },
    "SubscribeOptions" : {
      "type" : "object",
      "properties" : {
        "ApplyCreditBalance" : {
          "type" : "boolean",
          "description" : ""
        },
        "ElectronicPaymentOptions" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/ElectronicPaymentOptions"
          }
        },
        "ExternalPaymentOptions" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/ExternalPaymentOptions"
          }
        },
        "GenerateInvoice" : {
          "type" : "boolean",
          "description" : ""
        },
        "ProcessPayments" : {
          "type" : "boolean",
          "description" : ""
        },
        "SubscribeInvoiceProcessingOptions" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/SubscribeInvoiceProcessingOptions"
          }
        }
      }
    },
    "SubscribeRequest" : {
      "type" : "object",
      "properties" : {
        "Account" : {
          "type" : "array",
          "description" : " This is the Account object containing the information for this particular subscription. It has all the information needed to create an account for a subscription.\n\n**Values:** A valid account.",
          "items" : {
            "$ref" : "#/definitions/Account"
          }
        },
        "BillToContact" : {
          "type" : "array",
          "description" : " This is the object that contains the contact associated with this account in the Account's `BillToId` field.\nThis field is required only if the account does not exist.\nValues: A valid contact for the account.",
          "items" : {
            "$ref" : "#/definitions/Contact"
          }
        },
        "PaymentMethod" : {
          "type" : "array",
          "description" : " This is the object defining the payment details for the Account. The Account will be updated with this payment as the default payment method.\nUse this field if you are associating an electronic payment method with the account. A payment gateway must be enabled.\nValues: A valid electronic PaymentMethod.",
          "items" : {
            "$ref" : "#/definitions/PaymentMethod"
          }
        },
        "PreviewOptions" : {
          "type" : "array",
          "description" : " Specify true to call subscribe() with preview mode. After that is completed, the call system will roll back the subscription and return only the temporary invoice data. Specify false to call subscribe() without preview mode.\n\n**Values:** `true`, `false` ",
          "items" : {
            "$ref" : "#/definitions/PreviewOptions"
          }
        },
        "SoldToContact" : {
          "type" : "array",
          "description" : " Unless otherwise specified, this field defaults to the information in the `BillToContact` field.\n\n**Values:** A valid contact. ",
          "items" : {
            "$ref" : "#/definitions/Contact"
          }
        },
        "SubscribeOptions" : {
          "type" : "array",
          "description" : " This optional object specifies parameters related to invoicing - whether to immediately generate an invoice and collect payment, and whether the invoice should cover all subscriptions or just this new subscription.\nThe default behavior is to invoice immediately for all the account's subscriptions, with the current date as the target date, and immediately collect payment if the account's `AutoPay` flag is true.\n\n\n**Values:** A valid SubscribeOptions object. ",
          "items" : {
            "$ref" : "#/definitions/SubscribeOptions"
          }
        },
        "SubscriptionData" : {
          "type" : "array",
          "description" : " This object contains the information on the contract's dates and terms.\n\n\n**Values:** A valid SubscriptionData object. ",
          "items" : {
            "$ref" : "#/definitions/SubscriptionData"
          }
        }
      }
    },
    "SubscribeResult" : {
      "type" : "object",
      "properties" : {
        "AccountId" : {
          "type" : "string",
          "description" : ""
        },
        "AccountNumber" : {
          "type" : "string",
          "description" : ""
        },
        "ChargeMetricsData" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/ChargeMetricsData"
          }
        },
        "Errors" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/Error"
          }
        },
        "GatewayResponse" : {
          "type" : "string",
          "description" : ""
        },
        "GatewayResponseCode" : {
          "type" : "string",
          "description" : ""
        },
        "InvoiceData" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/InvoiceData"
          }
        },
        "InvoiceId" : {
          "type" : "string",
          "description" : ""
        },
        "InvoiceNumber" : {
          "type" : "string",
          "description" : ""
        },
        "InvoiceResult" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/InvoiceResult"
          }
        },
        "PaymentId" : {
          "type" : "string",
          "description" : ""
        },
        "PaymentTransactionNumber" : {
          "type" : "string",
          "description" : ""
        },
        "SubscriptionId" : {
          "type" : "string",
          "description" : ""
        },
        "SubscriptionNumber" : {
          "type" : "string",
          "description" : ""
        },
        "Success" : {
          "type" : "boolean",
          "description" : ""
        },
        "TotalMrr" : {
          "type" : "number",
          "format" : "double",
          "description" : ""
        },
        "TotalTcv" : {
          "type" : "number",
          "format" : "double",
          "description" : ""
        }
      }
    },
    "Subscription" : {
      "type" : "object",
      "properties" : {
        "AccountId" : {
          "type" : "string",
          "description" : " This field can be updated when `Status` is `Draft`. "
        },
        "AncestorAccountId" : {
          "type" : "string",
          "description" : " A filter option for querying all subscriptions under the same account hierarchy.\n\n\n**Character limit**: 32\n\n\n**Values**: a valid account ID "
        },
        "AutoRenew" : {
          "type" : "boolean",
          "description" : " This field can be updated when `Status` is `Draft`. Indicates if the subscription automatically renews at the end of the term.\n\n\n\n**Values**: `true`, `false` "
        },
        "CancelledDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date of the amendment that canceled the subscription.\n\n\n\n**Values**: inherited from `Amendment`.`EffectiveDate` "
        },
        "ContractAcceptanceDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the customer accepts the contract. This field can be updated when **Status** is `Draft`.\n\n\n**Note**: The service activation date is only required if the [Require Service Activation of Orders?](https://knowledgecenter.zuora.com/CB_Billing/Billing_Settings/Define_Default_Subscription_Settings#Require_Service_Activation_of_Orders.3F) Setting is set to `Yes`. If this setting is set to `Yes`:\n\n- If ContractAcceptanceDate field is required, you must set this field, ContractAcceptanceDate, and ContractEffectiveDate fields in the subscribe call to activate a subscription.\n- If ContractAcceptanceDate field is not required, you must set both this field and the ContractEffectiveDate field in the subscribe call to activate a subscription. If you only set a valid date in the ContractEffectiveDate field, the subscribe call still returns success, but the subscription is in `DRAT` status.\n"
        },
        "ContractEffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the contract takes effect. This field can be updated when **Status** is `Draft`.\n\n\n**Note**: This field is required in the subscribe call. If you set the value of this field to null and both the ServiceActivationDate and ContractAcceptanceDate fields are not required, the subscribe call still returns success, but the new subscription is in `DRAFT` status. To activate the subscription, you must set a valid date to this field. "
        },
        "CreatedById" : {
          "type" : "string",
          "description" : "The user ID of the person who created the subscription.\n\n**Character limit**: 32\n\n\n**Values**: automatically generated "
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date the subscription was created. This value is the same as the OriginalCreatedDate value until the subscription is amended.\n\n\n\n**Values**: automatically generated "
        },
        "CreatorAccountId" : {
          "type" : "string",
          "description" : " The account ID that created the subscription or the amended subscription.\n\n\n**Character limit**: 32\n\n\n**Values**: automatically generated "
        },
        "CreatorInvoiceOwnerId" : {
          "type" : "string",
          "description" : "The account ID that owns the invoices associated with the subscription or the amended subscription.\n\n\n**Character limit**: 32\n\n\n**Values**: automatically generated "
        },
        "CurrentTerm" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " The length of the period for the current subscription term. If TermType is set to `TERMED`, this field is required and must be greater than `0`. If TermType is set to `EVERGREEN`, this value is ignored. Default is `0`.\n\n\n**Character limit**: 20\n\n\n**Values**: automatically generated "
        },
        "CurrentTermPeriodType" : {
          "type" : "string",
          "description" : " The period type for the current subscription term. This field is used with the CurrentTerm field to specify the current subscription term.\n\n\n\n**Values**:\n\n- `Month` (default)\n- `Year`\n- `Day`\n- `Week`\n"
        },
        "InitialTerm" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " The length of the period for the first subscription term. This field can be updated when Status is `Draft`. If you use the subscribe\ncall, this field is required.\n\n\n**Required**: If TermType is Termed\n\n**Character limit**: 20\n\n\n**Values**: any valid number. The default value is 0. "
        },
        "InitialTermPeriodType" : {
          "type" : "string",
          "description" : " The period type for the first subscription term.\n\n\n\n**Values**:\n\n- `Month` (default)\n- `Year`\n- `Day`\n- `Week`\n\n\n**Note**:\n\n- This field can be updated when `Status` is `Draft`.\n- This field is used with the `InitialTerm` field to specify the initial subscription term.\n"
        },
        "InvoiceOwnerId" : {
          "type" : "string",
          "description" : " This field can be updated when `Status` is `Draft`. "
        },
        "IsInvoiceSeparate" : {
          "type" : "boolean",
          "description" : " Determines if the subscription is invoiced separately. If `TRUE`, then all charges for this subscription are collected into the subscription's own invoice.\n\n\n\n**Values**: `TRUE`, `FALSE `(default) "
        },
        "Name" : {
          "type" : "string",
          "description" : " The unique identifier of the subscription. If you don't specify a value, then Zuora generates a name automatically. Whether auto-generated or manually specified, the subscription name must be unique. Otherwise an error will occur. You can change this value only when the subscription is in `Draft` status. Once the subscription is activated, you can't change this value, nor can you use this value for a different subscription.\n\n\n**Character limit**: 100\n\n\n**Values**: one of the following:\n\n- leave null to automatically generate\n- a string of 100 characters or fewer\n"
        },
        "Notes" : {
          "type" : "string",
          "description" : " Use this field to record comments about the subscription.\n\n\n**Character limit**: 500\n\n\n**Values**: a string of 500 characters or fewer "
        },
        "OpportunityCloseDate__QT" : {
          "type" : "string",
          "format" : "date",
          "description" : " The closing date of the Opportunity. This field is used in Zuora Reporting Data Sources to report on Subscription metrics. If the subscription was originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.\n\n\n**Character limit**:\n\n\n**Values**: populated by Zuora Quotes "
        },
        "OpportunityName__QT" : {
          "type" : "string",
          "description" : " The unique identifier of the Opportunity. This field is used in the Zuora Reporting Data Sources to report on Subscription metrics. If the subscription was originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.\n\n\n**Character limit**: 100\n\n\n**Values**: populated by Zuora Quotes "
        },
        "OriginalCreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the subscription was originally created. This value is the same as the CreatedDate value until the subscription is amended.\n\n\n\n**Values**: automatically generated "
        },
        "OriginalId" : {
          "type" : "string",
          "description" : " The original ID of this subscription.\n\n\n\n**Values**: automatically generated "
        },
        "PreviousSubscriptionId" : {
          "type" : "string",
          "description" : " The subscription ID immediately prior to the current subscription.\n\n\n**Character limit**: 32\n\n\n**Values**: automatically generated "
        },
        "QuoteBusinessType__QT" : {
          "type" : "string",
          "description" : " The specific identifier for the type of business transaction the Quote represents such as New, Upsell, Downsell, Renewal or Churn. This field is used in the Zuora Reporting Data Sources to report on Subscription metrics. If the subscription was originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.\n\n\n**Character limit**: 32\n\n\n**Values**: populated by Zuora Quotes "
        },
        "QuoteNumber__QT" : {
          "type" : "string",
          "description" : " The unique identifier of the Quote. This field is used in the Zuora Reporting Data Sources to report on Subscription metrics. If the subscription was originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.\n\n\n**Character limit**: 32\n\n\n**Values**: populated by Zuora Quotes "
        },
        "QuoteType__QT" : {
          "type" : "string",
          "description" : " The Quote type that represents the subscription lifecycle stage such as New, Amendment, Renew or Cancel. This field is used in the Zuora Reporting Data Sources to report on Subscription metrics. If the subscription was originated from Zuora Quotes, the value is populated with the value from Zuora Quotes.\n\n\n**Character limit**: 32\n\n\n**Values**: populated by Zuora Quotes "
        },
        "RenewalSetting" : {
          "type" : "string",
          "description" : " This field can be updated when **Status** is `Draft`. Specifies whether a termed subscription will remain termed or change to evergreen when it is renewed.\n\n\n**Required**: If TermType is Termed\n\n\n**Values**: `RENEW_WITH_SPECIFIC_TERM `(default), `RENEW_TO_EVERGREEN` "
        },
        "RenewalTerm" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " The length of the period for the subscription renewal term. This field can be updated when **Status** is `Draft`. If you use the subscribe\ncall, this field is required.\n\n\n**Required**: If TermType is Termed.\n\n\n**Character limit**: 20\n\n\n**Values**: one of the following:\n\n- leave null to default to `0`\n- any number\n"
        },
        "RenewalTermPeriodType" : {
          "type" : "string",
          "description" : " The period type for the subscription renewal term.\n\n\n\n**Values**:\n\n- `Month` (default)\n- `Year`\n- `Day`\n- `Week`\n\n\n**Note**:\n\n- This field is used with the RenewalTerm field to specify the subscription renewal term.\n- This field can be updated when Status is `Draft`.\n"
        },
        "ServiceActivationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the subscription is activated. This field can be updated when **Status** is `Draft`.\n\n\n**Character limit**: 29\n\n**Note**: The service activation date is only required if the [Require Service Activation of Orders?](https://knowledgecenter.zuora.com/CB_Billing/Billing_Settings/Define_Default_Subscription_Settings#Require_Service_Activation_of_Orders.3F) Setting is set to `Yes`. If this setting is set to `Yes`:\n\n- If ContractAcceptanceDate field is required, you must set this field, ContractAcceptanceDate, and ContractEffectiveDate fields in the subscribe call to activate a subscription.\n- If ContractAcceptanceDate field is not required, you must set both this field and the ContractEffectiveDate field in the subscribe call to activate a subscription. If you only set a valid date in the ContractEffectiveDate field, the subscribe call still returns success, but the subscription is in `DRAT` status.\n"
        },
        "Status" : {
          "type" : "string",
          "description" : " The status of the subscription.\n\n\n**Character limit**: 17\n\n\n**Values**: automatically generated\n\n**Possible values**: one of the following:\n\n- `Draft`\n- `PendingActivation`\n- `PendingAcceptance`\n- `Active`\n- `Cancelled`\n- `Expired`\n- `Suspended` (This value is in **Limited Availability**.)\n"
        },
        "SubscriptionEndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the subscription term ends, where the subscription ends at midnight the day before. For example, if the SubscriptionEndDate is 12/31/2016, the subscriptions ends at midnight (00:00:00 hours) on 12/30/2016. This date is the same as the term end date or the cancelation date, as appropriate.\n\n\n**Character limit**: 29\n\n\n**Values**: automatically generated "
        },
        "SubscriptionStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " The date when the subscription term starts. This date is the same as the start date of the original term, which isn't necessarily the start date of the current or new term.\n\n\n**Character limit**: 29\n\n\n**Values**: automatically generated "
        },
        "TermEndDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " This field can be updated when **Status** is `Draft`. The date when the subscription term ends. If the subscription is evergreen, the TermEndDate value is null or is the cancelation date, as appropriate.\n\n**Character limit**: 29\n\n\n**Values**: automatically generated "
        },
        "TermStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : " This field can be updated when **Status** is `Draft`. The date when the subscription term begins. If this is a renewal subscription, then this date is different from the subscription start date.\n\n\n**Character limit**: 29 "
        },
        "TermType" : {
          "type" : "string",
          "description" : " This field can be updated when **Status** is `Draft`. Indicates if a subscription is [termed or evergreen](https://knowledgecenter.zuora.com/BC_Subscription_Management/Subscriptions#Termed_and_Evergreen_Subscriptions). A termed subscription has a specific end date and requires manual renewal. An evergreen subscription doesn't have an end date and doesn't need renewal. This field can be updated when the subscription status is Draft.\n\n\n**Character limit**: 9\n\n\n**Values**: `TERMED`, `EVERGREEN` "
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : " The ID of the user who last updated the subscription.\n**Character limit:** 32 **Values: **automatically generated "
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " The date when the subscription was last updated.\n**Character limit:** 29\n\n\n**Values**: automatically generated "
        },
        "Version" : {
          "type" : "integer",
          "format" : "int32",
          "description" : " The version number of the subscription.\n\n\n\n**Values**: automatically generated "
        }
      }
    },
    "SubscriptionData" : {
      "type" : "object",
      "properties" : {
        "RatePlanData" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/RatePlanData"
          }
        },
        "Subscription" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/Subscription"
          }
        }
      }
    },
    "SubscriptionProductFeature" : {
      "type" : "object",
      "properties" : {
        "CreatedById" : {
          "type" : "string",
          "description" : ""
        },
        "CreatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " Date and time when the product feature was added to the subscription.\n\n\n**Character limit**: 29\n\n\n**Values**: "
        },
        "Description" : {
          "type" : "string",
          "description" : " Description of the subscription product feature.\n\n\n**Character limit**: 500\n\n\n**Values**: "
        },
        "FeatureCode" : {
          "type" : "string",
          "description" : " Unique code of the feature.\n\n\n**Character limit**: 255\n\n\n**Values**: "
        },
        "FeatureId" : {
          "type" : "string",
          "description" : " Internal Zuora ID of the feature.\n\n\n**Character limit**: 32\n\n\n**Values**: "
        },
        "Name" : {
          "type" : "string",
          "description" : " Name of the feature.\n\n\n**Character limit**: 255\n\n\n**Values**: "
        },
        "RatePlanId" : {
          "type" : "string",
          "description" : " Id of the product rate plan to which the feature belongs.\n\n\n**Character limit**: 32\n\n\n**Values**: "
        },
        "UpdatedById" : {
          "type" : "string",
          "description" : " Internal Zuora ID of the user who last updated the subscription product feature.\n\n\n**Character limit**: 32\n\n\n**Values**: "
        },
        "UpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : " Date and time when the subscription product feature was last updated.\n\n\n**Character limit**: 29\n\n\n**Values**: "
        }
      }
    },
    "SubscriptionProductFeatureList" : {
      "type" : "object",
      "properties" : {
        "SubscriptionProductFeature" : {
          "type" : "array",
          "description" : "",
          "items" : {
            "$ref" : "#/definitions/SubscriptionProductFeature"
          }
        }
      }
    },
    "zObject" : {
      "type" : "object"
    },
    "zObject_update" : {
      "type" : "object",
      "properties" : {
        "Id" : {
          "type" : "string",
          "description" : ""
        },
        "fieldsToNull" : {
          "type" : "string",
          "description" : ""
        }
      },
      "title" : "zObject"
    },
    "GETAccountSummaryType_basicInfo_defaultPaymentMethod" : {
      "properties" : {
        "creditCardExpirationMonth" : {
          "type" : "string",
          "description" : "Two-digit numeric card expiration month as `mm`.\n"
        },
        "creditCardExpirationYear" : {
          "type" : "string",
          "description" : "Four-digit card expiration year as `yyyy`.\n"
        },
        "creditCardNumber" : {
          "type" : "string",
          "description" : "Credit card number, 16 characters or less, displayed in masked format (e.g., ************1234).\n"
        },
        "creditCardType" : {
          "type" : "string",
          "description" : "Possible values are: `Visa`, `MasterCard`, `AmericanExpress`, `Discover`.\n"
        },
        "id" : {
          "type" : "string",
          "description" : "The ID of the credit card payment method associated with this account.\n"
        },
        "paymentMethodType" : {
          "type" : "string",
          "description" : ""
        }
      },
      "description" : ""
    },
    "GETAccountSummaryType_basicInfo" : {
      "properties" : {
        "defaultPaymentMethod" : {
          "$ref" : "#/definitions/GETAccountSummaryType_basicInfo_defaultPaymentMethod"
        },
        "billCycleDay" : {
          "type" : "string",
          "description" : "Billing cycle day (BCD), the day of the month when a bill run generates invoices for the account.\n"
        },
        "batch" : {
          "type" : "string",
          "description" : "The alias name given to a batch. A string of 50 characters or less.\n"
        },
        "accountNumber" : {
          "type" : "string",
          "description" : "Account number.\n"
        },
        "tags" : {
          "type" : "string",
          "description" : ""
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "lastInvoiceDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date of the most recent invoice for the account; null if no invoice has ever been generated.\n"
        },
        "balance" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Current outstanding balance.\n"
        },
        "lastPaymentDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date of the most recent payment collected for the account. Null if no payment has ever been collected.\n"
        },
        "name" : {
          "type" : "string",
          "description" : "Account name.\n"
        },
        "lastPaymentAmount" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Amount of the most recent payment collected for the account; null if no payment has ever been collected.\n"
        },
        "currency" : {
          "type" : "string",
          "description" : "A currency value.\n"
        },
        "id" : {
          "type" : "string",
          "description" : "Account ID.\n"
        },
        "status" : {
          "type" : "string",
          "description" : "Account status; possible values are: `Active`, `Draft`, `Canceled`.\n"
        }
      },
      "description" : "Container for basic information about the account.\n"
    },
    "GETAccountSummaryType_billToContact" : {
      "properties" : {
        "country" : {
          "type" : "string",
          "description" : "A valid country name or abbreviation.\n"
        },
        "lastName" : {
          "type" : "string",
          "description" : "Last name, 100 characters or less.\n"
        },
        "zipCode" : {
          "type" : "string",
          "description" : "Zip code, 20 characters or less.\n"
        },
        "address2" : {
          "type" : "string",
          "description" : "Second address line, 255 characters or less.\n"
        },
        "city" : {
          "type" : "string",
          "description" : "City, 40 characters or less.\n"
        },
        "workEmail" : {
          "type" : "string",
          "description" : "Work email address, 80 characters or less.\n"
        },
        "address1" : {
          "type" : "string",
          "description" : "First address line, 255 characters or less.\n"
        },
        "county" : {
          "type" : "string",
          "description" : "County; 32 characters or less. Zuora Tax uses this information to calculate county taxation.          "
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "firstName" : {
          "type" : "string",
          "description" : "First name, 100 characters or less.\n"
        },
        "taxRegion" : {
          "type" : "string",
          "description" : "A region string, defined in your Zuora tax rules.\n"
        },
        "workPhone" : {
          "type" : "string",
          "description" : "Work phone number, 40 characters or less.\n"
        },
        "id" : {
          "type" : "string",
          "description" : "Contact ID.\n"
        },
        "state" : {
          "type" : "string",
          "description" : "State name or 2-character abbreviation.\n"
        },
        "fax" : {
          "type" : "string",
          "description" : "Fax phone number, 40 characters or less.\n"
        }
      },
      "description" : "Container for bill-to contact information."
    },
    "GETAccountSummaryType_soldToContact" : {
      "properties" : {
        "country" : {
          "type" : "string",
          "description" : "A valid country name or abbreviation\n"
        },
        "lastName" : {
          "type" : "string",
          "description" : "Last name, 100 characters or less.\n"
        },
        "zipCode" : {
          "type" : "string",
          "description" : "Zip code, 20 characters or less.\n"
        },
        "address2" : {
          "type" : "string",
          "description" : "Second address line, 255 characters or less.\n"
        },
        "city" : {
          "type" : "string",
          "description" : "City, 40 characters or less.\n"
        },
        "workEmail" : {
          "type" : "string",
          "description" : "Work email address, 80 characters or less.\n"
        },
        "address1" : {
          "type" : "string",
          "description" : "First address line, 255 characters or less.\n"
        },
        "county" : {
          "type" : "string",
          "description" : "County; 32 characters or less. Zuora Tax uses this information to calculate county taxation.          "
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "firstName" : {
          "type" : "string",
          "description" : "First name, 100 characters or less.\n"
        },
        "taxRegion" : {
          "type" : "string",
          "description" : "A region string, defined in your Zuora tax rules.\n"
        },
        "workPhone" : {
          "type" : "string",
          "description" : "Work phone number, 40 characters or less.\n"
        },
        "id" : {
          "type" : "string",
          "description" : "Contact ID.\n"
        },
        "state" : {
          "type" : "string",
          "description" : "State name or 2-character abbreviation.\n"
        },
        "fax" : {
          "type" : "string",
          "description" : "Fax phone number, 40 characters or less.\n"
        }
      },
      "description" : "Container for sold-to contact information; uses the same structure as `billToContact`.\n"
    },
    "GETAccountSummaryType_taxInfo" : {
      "properties" : {
        "companyCode" : {
          "type" : "string",
          "description" : "Unique code that identifies a company account in Avalara.\n"
        },
        "exemptIssuingJurisdiction" : {
          "type" : "string",
          "description" : "Jurisdiction in which the customer tax exemption certificate was issued.\n"
        },
        "exemptStatus" : {
          "type" : "string",
          "description" : "Status of the account tax exemption.\n"
        },
        "exemptExpirationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date when the customer tax exemption expires.\n"
        },
        "exemptCertificateType" : {
          "type" : "string",
          "description" : "Type of tax exemption certificate that the customer holds.\n"
        },
        "exemptEffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date when the customer tax exemption starts.\n"
        },
        "exemptDescription" : {
          "type" : "string",
          "description" : "Description of the tax exemption certificate that the customer holds.\n"
        },
        "VATId" : {
          "type" : "string",
          "description" : "EU Value Added Tax ID.\n"
        },
        "exemptCertificateId" : {
          "type" : "string",
          "description" : "ID of the customer tax exemption certificate.\n"
        }
      },
      "description" : "Container for tax exempt information, used to establish the tax exempt status of a customer account.\n"
    },
    "GETAccountType_basicInfo" : {
      "properties" : {
        "crmId" : {
          "type" : "string",
          "description" : "CRM account ID for the account, 100 characters or less.\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "notes" : {
          "type" : "string",
          "description" : "Notes associated with the account, up to 65,535 characters.\n"
        },
        "batch" : {
          "type" : "string",
          "description" : "The alias name given to a batch. A string of 50 characters or less.\n"
        },
        "name" : {
          "type" : "string",
          "description" : "Account name.\n"
        },
        "communicationProfileId" : {
          "type" : "string",
          "description" : "ID of a communication profile.\n"
        },
        "id" : {
          "type" : "string",
          "description" : "Account ID.\n"
        },
        "accountNumber" : {
          "type" : "string",
          "description" : "Account number.\n"
        },
        "invoiceTemplateId" : {
          "type" : "string",
          "description" : "Invoice template ID, configured in Billing Settings in the Zuora UI.\n"
        },
        "status" : {
          "type" : "string",
          "description" : "Account status; possible values are: `Active`, `Draft`, `Canceled`.\n"
        },
        "tags" : {
          "type" : "string",
          "description" : ""
        }
      },
      "description" : "Container for basic information about the account.\n"
    },
    "GETAccountType_billToContact" : {
      "properties" : {
        "country" : {
          "type" : "string",
          "description" : "Country name or abbreviation.\n"
        },
        "lastName" : {
          "type" : "string",
          "description" : "Last name, 100 characters or less.\n"
        },
        "zipCode" : {
          "type" : "string",
          "description" : "Zip code, 20 characters or less.\n"
        },
        "address2" : {
          "type" : "string",
          "description" : "Second address line, 255 characters or less.\n"
        },
        "city" : {
          "type" : "string",
          "description" : "City, 40 characters or less.\n"
        },
        "workEmail" : {
          "type" : "string",
          "description" : "Work email address, 80 characters or less.\n"
        },
        "address1" : {
          "type" : "string",
          "description" : "First address line, 255 characters or less.\n"
        },
        "homePhone" : {
          "type" : "string",
          "description" : "Home phone number, 40 characters or less.\n"
        },
        "county" : {
          "type" : "string",
          "description" : "County; 32 characters or less. Zuora Tax uses this information to calculate county taxation.          "
        },
        "personalEmail" : {
          "type" : "string",
          "description" : "Personal email address, 80 characters or less.\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "firstName" : {
          "type" : "string",
          "description" : "First name, 100 characters or less.\n"
        },
        "taxRegion" : {
          "type" : "string",
          "description" : "A region string, defined in your Zuora tax rules.\n"
        },
        "mobilePhone" : {
          "type" : "string",
          "description" : "Mobile phone number, 40 characters or less.\n"
        },
        "otherPhone" : {
          "type" : "string",
          "description" : "Other phone number, 40 characters or less.\n"
        },
        "nickname" : {
          "type" : "string",
          "description" : "Nickname for this contact.\n"
        },
        "otherPhoneType" : {
          "type" : "string",
          "description" : "Possible values are: `Work`, `Mobile`, `Home`, `Other`.\n"
        },
        "workPhone" : {
          "type" : "string",
          "description" : "Work phone number, 40 characters or less.\n"
        },
        "state" : {
          "type" : "string",
          "description" : "State name or 2-character abbreviation.\n"
        },
        "fax" : {
          "type" : "string",
          "description" : "Fax phone number, 40 characters or less.\n"
        }
      },
      "description" : "Container for bill-to contact information.\n"
    },
    "GETAccountType_billingAndPayment" : {
      "properties" : {
        "billCycleDay" : {
          "type" : "string",
          "description" : "Billing cycle day (BCD), the day of the month when a bill run generates invoices for the account.\n"
        },
        "currency" : {
          "type" : "string",
          "description" : "A currency defined in the web-based UI administrative settings.\n"
        },
        "paymentTerm" : {
          "type" : "string",
          "description" : "A payment-terms indicator defined in the web-based UI administrative settings, e.g., \"Net 30\".\n"
        },
        "paymentGateway" : {
          "type" : "string",
          "description" : "The name of the payment gateway instance. If null or left unassigned, the Account will use the Default Gateway.\n"
        }
      },
      "description" : "Container for billing and payment information for the account.\n"
    },
    "GETAccountType_metrics" : {
      "properties" : {
        "balance" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "The customer's total invoice balance minus credit balance.\n"
        },
        "totalInvoiceBalance" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Total of all open invoices.\n"
        },
        "contractedMrr" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Future expected MRR that accounts for future upgrades, downgrades, upsells and cancellations.\n"
        },
        "creditBalance" : {
          "type" : "string",
          "format" : "decimal",
          "description" : "Current credit balance.\n"
        }
      },
      "description" : "Container for account metrics.\n"
    },
    "GETAccountType_soldToContact" : {
      "properties" : {
        "country" : {
          "type" : "string",
          "description" : "Country name or abbreviation.\n"
        },
        "lastName" : {
          "type" : "string",
          "description" : "Last name, 100 characters or less.\n"
        },
        "zipCode" : {
          "type" : "string",
          "description" : "Zip code, 20 characters or less.\n"
        },
        "address2" : {
          "type" : "string",
          "description" : "Second address line, 255 characters or less.\n"
        },
        "city" : {
          "type" : "string",
          "description" : "City, 40 characters or less.\n"
        },
        "workEmail" : {
          "type" : "string",
          "description" : "Work email address, 80 characters or less.\n"
        },
        "address1" : {
          "type" : "string",
          "description" : "First address line, 255 characters or less.\n"
        },
        "homePhone" : {
          "type" : "string",
          "description" : "Home phone number, 40 characters or less.\n"
        },
        "county" : {
          "type" : "string",
          "description" : "County; 32 characters or less. Zuora tax uses this information to calculate county taxation.          "
        },
        "personalEmail" : {
          "type" : "string",
          "description" : "Personal email address, 80 characters or less.\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "firstName" : {
          "type" : "string",
          "description" : "First name, 100 characters or less.\n"
        },
        "taxRegion" : {
          "type" : "string",
          "description" : "A region string, defined in your Zuora tax rules.\n"
        },
        "mobilePhone" : {
          "type" : "string",
          "description" : "Mobile phone number, 40 characters or less.\n"
        },
        "otherPhone" : {
          "type" : "string",
          "description" : "Other phone number, 40 characters or less.\n"
        },
        "nickname" : {
          "type" : "string",
          "description" : "Nickname for this contact.\n"
        },
        "otherPhoneType" : {
          "type" : "string",
          "description" : "Possible values are: `Work`, `Mobile`, `Home`, `Other`.\n"
        },
        "workPhone" : {
          "type" : "string",
          "description" : "Work phone number, 40 characters or less.\n"
        },
        "state" : {
          "type" : "string",
          "description" : "State name or 2-character abbreviation.\n"
        },
        "fax" : {
          "type" : "string",
          "description" : "Fax phone number, 40 characters or less.\n"
        }
      },
      "description" : "Container for sold-to contact information. Uses the same field structure as billToContact.\n"
    },
    "List of exchange rates" : {
      "properties" : {
        "CURRENCY" : {
          "type" : "string",
          "description" : "The exchange rate on the **providerExchangeRateDate**. The field name is the ISO currency code of the currency, for example, `EUR`.\n\nThere may be more than one currency returned for a given **providerExchangeRateDate**. If the rate for a certain currency is not available on the **providerExchangeRateDate**, the currency is not returned in the response.\n"
        },
        "providerExchangeRateDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date of the exchange rate used. The date is in `yyyy-mm-dd` format.\n\nCorresponds to the value specified in the Provider Exchange Rate Date column in the Import Foreign Exchange Rates template when you uploaded the rates through the Mass Updater.\n"
        }
      },
      "description" : "Container for exchange rate information on a given date. The field name is the date in `yyyy-mm-dd` format, for example, 2016-01-15.\n"
    },
    "GETPaymentMethodType_cardHolderInfo" : {
      "properties" : {
        "country" : {
          "type" : "string",
          "description" : "Country, must be a valid country name or abbreviation.\n"
        },
        "zipCode" : {
          "type" : "string",
          "description" : "Zip code, 20 characters or less.\n"
        },
        "cardHolderName" : {
          "type" : "string",
          "description" : "The full name as it appears on the card, e.g., \"John J Smith\", 50 characters or less.\n"
        },
        "city" : {
          "type" : "string",
          "description" : "City, 40 characters or less.\n"
        },
        "phone" : {
          "type" : "string",
          "description" : "Phone number, 40 characters or less.\n"
        },
        "addressLine1" : {
          "type" : "string",
          "description" : "First address line, 255 characters or less.\n"
        },
        "addressLine2" : {
          "type" : "string",
          "description" : "Second address line, 255 characters or less.\n"
        },
        "state" : {
          "type" : "string",
          "description" : "State, must be a valid state name or 2-character abbreviation.\n"
        },
        "email" : {
          "type" : "string",
          "description" : "Card holder's email address, 80 characters or less.\n"
        }
      },
      "description" : "Container for the name and billing address for the card holder.\n"
    },
    "financeInformation" : {
      "properties" : {
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "deferredRevenueAccountingCodeType" : {
          "type" : "string",
          "description" : "The type associated with the deferred revenue accounting code, such as Deferred Revenue. \n"
        },
        "recognizedRevenueAccountingCode" : {
          "type" : "string",
          "description" : "The accounting code for recognized revenue, such as Monthly Recurring Charges or Overage Charges. \n"
        },
        "deferredRevenueAccountingCode" : {
          "type" : "string",
          "description" : "The accounting code for deferred revenue, such as Monthly Recurring Liability. \n"
        },
        "recognizedRevenueAccountingCodeType" : {
          "type" : "string",
          "description" : "The type associated with the recognized revenue accounting code, such as Sales Revenue or Sales Discount. \n"
        }
      },
      "description" : "Container for finance information of a rate plan charge.\n"
    },
    "POSTAccountType_billToContact" : {
      "required" : [ "firstName", "lastName" ],
      "properties" : {
        "country" : {
          "type" : "string",
          "description" : "Country; must be a valid country name or abbreviation. If using Zuora Tax, you must specify a country in the sold-to contact to calculate tax. A bill-to contact may be used if no sold-to contact is provided.\n"
        },
        "lastName" : {
          "type" : "string",
          "description" : "Last name, 100 characters or less.\n"
        },
        "zipCode" : {
          "type" : "string",
          "description" : "Zip code, 20 characters or less.\n"
        },
        "address2" : {
          "type" : "string",
          "description" : "Second address line, 255 characters or less.\n"
        },
        "city" : {
          "type" : "string",
          "description" : "City, 40 characters or less.\n"
        },
        "workEmail" : {
          "type" : "string",
          "description" : "Work email address, 80 characters or less.\n"
        },
        "address1" : {
          "type" : "string",
          "description" : "First address line, 255 characters or less.\n"
        },
        "homePhone" : {
          "type" : "string",
          "description" : "Home phone number, 40 characters or less.\n"
        },
        "county" : {
          "type" : "string",
          "description" : "County; 32 characters or less. May optionally be used by Zuora Tax to calculate county tax.\n"
        },
        "personalEmail" : {
          "type" : "string",
          "description" : "Personal email address, 80 characters or less.\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "firstName" : {
          "type" : "string",
          "description" : "First name, 100 characters or less.\n"
        },
        "taxRegion" : {
          "type" : "string",
          "description" : "If using Zuora Tax, a region string as optionally defined in your tax rules. Not required.\n"
        },
        "mobilePhone" : {
          "type" : "string",
          "description" : "Mobile phone number, 40 characters or less.\n"
        },
        "otherPhone" : {
          "type" : "string",
          "description" : "Other phone number, 40 characters or less.\n"
        },
        "nickname" : {
          "type" : "string",
          "description" : "Nickname for this contact\n"
        },
        "otherPhoneType" : {
          "type" : "string",
          "description" : "Possible values are: `Work`, `Mobile`, `Home`, `Other`.\n"
        },
        "workPhone" : {
          "type" : "string",
          "description" : "Work phone number, 40 characters or less.\n"
        },
        "state" : {
          "type" : "string",
          "description" : "State; must be a valid state or province name or 2-character abbreviation. If using Zuora Tax, be aware that Zuora tax requires a state (in the US) or province (in Canada) in this field for the sold-to contact to calculate tax, and that a bill-to contact may be used if no sold-to contact is provided.\n"
        },
        "fax" : {
          "type" : "string",
          "description" : "Fax phone number, 40 characters or less.\n"
        }
      },
      "description" : "Container for bill-to contact information for this account. If you do not provide a sold-to contact, the bill-to contact is copied to sold-to contact. Once the sold-to contact is created, changes to billToContact will not affect soldToContact and vice versa.\n"
    },
    "POSTAccountType_creditCard_cardHolderInfo" : {
      "required" : [ "addressLine1", "cardHolderName", "city", "country", "state", "zipCode" ],
      "properties" : {
        "country" : {
          "type" : "string",
          "description" : "Country; must be a valid country name or abbreviation.\n"
        },
        "zipCode" : {
          "type" : "string",
          "description" : "Zip code, 20 characters or less.\n"
        },
        "cardHolderName" : {
          "type" : "string",
          "description" : "The card holder's full name as it appears on the card, e.g., \"John J Smith\", 50 characters or less.\n"
        },
        "city" : {
          "type" : "string",
          "description" : "City, 40 characters or less.\n"
        },
        "phone" : {
          "type" : "string",
          "description" : "Phone number, 40 characters or less.\n"
        },
        "addressLine1" : {
          "type" : "string",
          "description" : "First address line, 255 characters or less.\n"
        },
        "addressLine2" : {
          "type" : "string",
          "description" : "Second address line, 255 characters or less.\n"
        },
        "state" : {
          "type" : "string",
          "description" : "State; must be a valid state name or 2-character abbreviation.\n"
        },
        "email" : {
          "type" : "string",
          "description" : "Card holder's email address, 80 characters or less.\n"
        }
      },
      "description" : "ontainer for cardholder information. If provided, Zuora will only use this information for this card.  If not provided, Zuora will use the account's existing bill-to contact information for this card.\n"
    },
    "POSTAccountType_creditCard" : {
      "required" : [ "cardNumber", "cardType", "expirationMonth", "expirationYear" ],
      "properties" : {
        "expirationYear" : {
          "type" : "string",
          "description" : "Four-digit expiration year.\n"
        },
        "cardType" : {
          "type" : "string",
          "description" : "Possible values are: `Visa`, `MasterCard`, `AmericanExpress`, `Discover`.\n"
        },
        "securityCode" : {
          "type" : "string",
          "description" : "The CVV or CVV2 security code of the card. To ensure PCI compliance, this value isn't stored and can't be queried.\n"
        },
        "cardHolderInfo" : {
          "$ref" : "#/definitions/POSTAccountType_creditCard_cardHolderInfo"
        },
        "expirationMonth" : {
          "type" : "string",
          "description" : "Two-digit expiration month (01-12).\n"
        },
        "cardNumber" : {
          "type" : "string",
          "description" : "Card number, up to 16 characters. Once created, this field can't be updated or queried, and is only available in masked format (e.g., XXXX-XXXX-XXXX-1234).\n"
        }
      },
      "description" : "Container for information on a credit card to associate with this account. You must provide either this structure or the `hpmCreditCardPaymentMethodId` field, but not both.\n"
    },
    "POSTAccountType_soldToContact" : {
      "required" : [ "firstName", "lastName" ],
      "properties" : {
        "country" : {
          "type" : "string",
          "description" : "Country; must be a valid country name or abbreviation. If using Zuora Tax, you must specify a country in the sold-to contact to calculate tax. A bill-to contact may be used if no sold-to contact is provided.\n"
        },
        "lastName" : {
          "type" : "string",
          "description" : "Last name, 100 characters or less.\n"
        },
        "zipCode" : {
          "type" : "string",
          "description" : "Zip code, 20 characters or less.\n"
        },
        "address2" : {
          "type" : "string",
          "description" : "Second address line, 255 characters or less.\n"
        },
        "city" : {
          "type" : "string",
          "description" : "City, 40 characters or less.\n"
        },
        "workEmail" : {
          "type" : "string",
          "description" : "Work email address, 80 characters or less.\n"
        },
        "address1" : {
          "type" : "string",
          "description" : "First address line, 255 characters or less.\n"
        },
        "homePhone" : {
          "type" : "string",
          "description" : "Home phone number, 40 characters or less.\n"
        },
        "county" : {
          "type" : "string",
          "description" : "County; 32 characters or less. May optionally be used by Zuora Tax to calculate county tax.\n"
        },
        "personalEmail" : {
          "type" : "string",
          "description" : "Personal email address, 80 characters or less.\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "firstName" : {
          "type" : "string",
          "description" : "First name, 100 characters or less.\n"
        },
        "taxRegion" : {
          "type" : "string",
          "description" : "If using Zuora Tax, a region string as optionally defined in your tax rules. Not required.\n"
        },
        "mobilePhone" : {
          "type" : "string",
          "description" : "Mobile phone number, 40 characters or less.\n"
        },
        "otherPhone" : {
          "type" : "string",
          "description" : "Other phone number, 40 characters or less.\n"
        },
        "nickname" : {
          "type" : "string",
          "description" : "Nickname for this contact\n"
        },
        "otherPhoneType" : {
          "type" : "string",
          "description" : "Possible values are: `Work`, `Mobile`, `Home`, `Other`.\n"
        },
        "workPhone" : {
          "type" : "string",
          "description" : "Work phone number, 40 characters or less.\n"
        },
        "state" : {
          "type" : "string",
          "description" : "State; must be a valid state or province name or 2-character abbreviation. If using Zuora Tax, be aware that Zuora Tax requires a state (in the US) or province (in Canada) in this field for the sold-to contact to calculate tax, and that a bill-to contact may be used if no sold-to contact is provided.\n"
        },
        "fax" : {
          "type" : "string",
          "description" : "Fax phone number, 40 characters or less.\n"
        }
      },
      "description" : "Container for optional sold-to contact; uses the same field structure as the bill-to contact (above). If a sold-to contact is not specified, one is created from the bill-to contact. Once created, these are two separate data entities, and future changes to one do not affect the other.\n"
    },
    "POSTAccountType_subscription" : {
      "required" : [ "contractEffectiveDate", "termType" ],
      "properties" : {
        "invoiceOwnerAccountKey" : {
          "type" : "string",
          "description" : "Invoice owner account number or ID.\n\n**Note:** This feature is in Limited Availability. If you wish to have access to the feature, submit a request at [Zuora Global Support](https://support.zuora.com). \n"
        },
        "QuoteBusinessType__QT" : {
          "type" : "string",
          "description" : ""
        },
        "QuoteNumber__QT" : {
          "type" : "string",
          "description" : ""
        },
        "notes" : {
          "type" : "string",
          "description" : ""
        },
        "subscriptionNumber" : {
          "type" : "string",
          "description" : "Subscription Number. The value can be up to 1000 characters.\n\nIf you do not specify a subscription number when creating a subscription for the new account, Zuora will generate a subscription number automatically.\n\nIf the account is created successfully, the subscription number is returned in the `subscriptionNumber` response field.\n"
        },
        "OpportunityName__QT" : {
          "type" : "string",
          "description" : ""
        },
        "termType" : {
          "type" : "string",
          "description" : "Possible values are: `TERMED`, `EVERGREEN`.\n"
        },
        "customerAcceptanceDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date on which the services or products within a subscription have been accepted by the customer, as `yyyy-mm-dd`.\n\nDefault value is dependent on the value of other fields. See Notes section for more details.\n"
        },
        "invoiceSeparately" : {
          "type" : "boolean",
          "description" : "Separates a single subscription from other subscriptions and invoices the charge independently. \n\nIf the value is `true`, the subscription is billed separately from other subscriptions. If the value is `false`, the subscription is included with other subscriptions in the account invoice.\nThe default value is `false`.\n\nPrerequisite: The default subscription setting `Enable Subscriptions to be Invoiced Separately` must be set to `Yes`.\n"
        },
        "serviceActivationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date on which the services or products within a subscription have been activated and access has been provided to the customer, as `yyyy-mm-dd`.\n\nDefault value is dependent on the value of other fields. See Notes section for more details.\n"
        },
        "renewalTerm" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Duration of the renewal term in whole months. Default is 0.\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "subscribeToRatePlans" : {
          "type" : "array",
          "description" : "Container for one or more rate plans for this subscription.\n",
          "items" : {
            "$ref" : "#/definitions/POSTSrpCreateType"
          }
        },
        "OpportunityCloseDate__QT" : {
          "type" : "string",
          "description" : ""
        },
        "contractEffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Effective contract date for this subscription, as `yyyy-mm-dd`.\n"
        },
        "initialTerm" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Duration of the initial subscription term in whole months.  Default is 0. \n"
        },
        "termStartDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date on which the subscription term begins, as `yyyy-mm-dd`. If this is a renewal subscription, this date is different from the subscription start date.\n"
        },
        "autoRenew" : {
          "type" : "boolean",
          "description" : "If `true`, auto-renew is enabled. Default is `false`.\n"
        },
        "CpqBundleJsonId__QT" : {
          "type" : "string",
          "description" : ""
        },
        "QuoteType__QT" : {
          "type" : "string",
          "description" : ""
        }
      },
      "description" : "Container for subscription information, used if creating a subscription for the new account at the time of account creation.\n"
    },
    "POSTAccountType_taxInfo" : {
      "properties" : {
        "companyCode" : {
          "type" : "string",
          "description" : "Unique code that identifies a company account in Avalara. Use this field to calculate taxes based on origin and sold-to addresses in Avalara.\n\n**Note:** This feature is in Limited Availability. If you wish to have access to the feature, submit a request at [Zuora Global Support](https://support.zuora.com). \n"
        },
        "exemptIssuingJurisdiction" : {
          "type" : "string",
          "description" : "Jurisdiction in which the customer tax exemption certificate was issued.\n"
        },
        "exemptStatus" : {
          "type" : "string",
          "description" : "Status of the account tax exemption. Requires Zuora Tax.\n\nRequired if you use Zuora Tax. This field is unavailable if Zuora Tax is not used.\n\nValues: `Yes`, `No`, `pendingVerification`.\n"
        },
        "exemptExpirationDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date when the customer tax exemption expires. Requires Zuora Tax.\n\nFormat: `yyyy-mm-dd`. Defaults to the current date.\n"
        },
        "exemptCertificateType" : {
          "type" : "string",
          "description" : "Type of tax exemption certificate that the customer holds. Requires Zuora Tax.\n"
        },
        "exemptEffectiveDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Date when the customer tax exemption starts. Requires Zuora Tax.\n\nFormat: `yyyy-mm-dd`. Defaults to the current date.\n"
        },
        "exemptDescription" : {
          "type" : "string",
          "description" : "Description of the tax exemption certificate that the customer holds. Requires Zuora Tax.\n"
        },
        "VATId" : {
          "type" : "string",
          "description" : "EU Value Added Tax ID. \n\n**Note:** This feature is in Limited Availability. If you wish to have access to the feature, submit a request at [Zuora Global Support](https://support.zuora.com).\n"
        },
        "exemptCertificateId" : {
          "type" : "string",
          "description" : "ID of the customer tax exemption certificate. Requires Zuora Tax.\n"
        }
      },
      "description" : "Container for tax exempt information, used to establish the tax exempt status of a customer account.\n"
    },
    "POSTMassUpdateType_params" : {
      "required" : [ "actionType" ],
      "properties" : {
        "actionType" : {
          "type" : "string",
          "description" : "Type of mass action you want to perform. The following mass actions are supported:\n- UpdateAccountingCode\n- CreateRevenueSchedule\n- UpdateRevenueSchedule\n- DeleteRevenueSchedule\n- ImportFXRate\n"
        },
        "checksum" : {
          "type" : "string",
          "description" : "An MD5 checksum that is used to validate the integrity of the uploaded file. The checksum is a 32-character string.\n"
        }
      },
      "description" : "Container for the following fields. You must format the `params` field as a JSON object.\n"
    },
    "POSTPaymentMethodType_cardHolderInfo" : {
      "required" : [ "cardHolderName", "city", "country", "state", "zipCode" ],
      "properties" : {
        "country" : {
          "type" : "string",
          "description" : "Country, must be a valid country name or abbreviation.\n"
        },
        "zipCode" : {
          "type" : "string",
          "description" : "Zip code, 20 characters or less.\n"
        },
        "cardHolderName" : {
          "type" : "string",
          "description" : "The card holder's full name as it appears on the card, e.g., \"John J Smith\", 50 characters or less.\n"
        },
        "city" : {
          "type" : "string",
          "description" : "City, 40 characters or less.\n"
        },
        "phone" : {
          "type" : "string",
          "description" : "Phone number, 40 characters or less.\n"
        },
        "addressLine1" : {
          "type" : "string",
          "description" : "First address line, 255 characters or less.\n"
        },
        "addressLine2" : {
          "type" : "string",
          "description" : "Second address line, 255 characters or less.\n"
        },
        "state" : {
          "type" : "string",
          "description" : "State; must be a valid state name or 2-character abbreviation.\n"
        },
        "email" : {
          "type" : "string",
          "description" : "Card holder's email address, 80 characters or less.\n"
        }
      },
      "description" : "Container for cardholder information. If provided, Zuora will only use this information for this card.  If not provided, Zuora will use the account's existing bill-to contact information for this card.\n"
    },
    "POSTRevenueScheduleByChargeType_revenueEvent" : {
      "required" : [ "eventType", "eventTypeSystemId" ],
      "properties" : {
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "notes" : {
          "type" : "string",
          "description" : "Additional information about this record.\n"
        },
        "eventTypeSystemId" : {
          "type" : "string",
          "description" : "System ID of the revenue event type. Each eventType has a unique system ID. You can configure your revenue event type system IDs by navigating to **Settings > Finance > Configure Revenue Event Types** in the Zuora UI.\n"
        },
        "eventType" : {
          "type" : "string",
          "description" : "Label of the revenue event type. Revenue event type labels can be duplicated. You can configure your revenue event type labels by navigating to **Settings > Finance > Configure Revenue Event Types** in the Zuora UI. The default revenue event types are:\n* Invoice Posted\n* Invoice Item Adjustment Created\n* Invoice Canceled\n* Invoice Item Adjustment Canceled\n* Revenue Distributed\n"
        }
      },
      "description" : "Represents a change to a revenue schedule, such as posting an invoice or distributing revenue.\n"
    },
    "POSTRevenueScheduleByDateRangeType_revenueEvent" : {
      "properties" : {
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "notes" : {
          "type" : "string",
          "description" : ""
        },
        "eventTypeSystemId" : {
          "type" : "string",
          "description" : "System ID of the revenue event type. Each eventType has a unique system ID. You can configure your revenue event type system IDs by navigating to **Settings > Finance > Configure Revenue Event Types** in the Zuora UI.\n\nRequired only if there is more than one revenue event type with the same label.\n"
        },
        "eventType" : {
          "type" : "string",
          "description" : "Label of the revenue event type. Revenue event type labels can be duplicated. You can configure your revenue event type labels by navigating to **Settings > Finance > Configure Revenue Event Types** in the Zuora UI. The default revenue event types are:\n* Invoice Posted\n* Invoice Item Adjustment Created\n* Invoice Canceled\n* Invoice Item Adjustment Canceled\n* Revenue Distributed\n"
        }
      },
      "description" : "Must specify at least one of `eventType` or `eventTypeSystemId`.\n"
    },
    "POSTRevenueScheduleByTransactionType_revenueEvent" : {
      "properties" : {
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "notes" : {
          "type" : "string",
          "description" : "Additional information about this record.\n"
        },
        "eventTypeSystemId" : {
          "type" : "string",
          "description" : "System ID of the revenue event type. Each eventType has a unique system ID. You can configure your revenue event type system IDs by navigating to **Settings > Finance > Configure Revenue Event Types** in the Zuora UI.\n\nRequired only if there is more than one revenue event type with the same label.\n"
        },
        "eventType" : {
          "type" : "string",
          "description" : "Label of the revenue event type. Revenue event type labels can be duplicated. You can configure your revenue event type labels by navigating to **Settings > Finance > Configure Revenue Event Types** in the Zuora UI. The default revenue event types are:\n* Invoice Posted\n* Invoice Item Adjustment Created\n* Invoice Canceled\n* Invoice Item Adjustment Canceled\n* Revenue Distributed\n"
        }
      },
      "description" : "Represents a change to a revenue schedule, such as posting an invoice or distributing revenue.\n\nYou must specify the `eventType` or the `eventTypeSystemID`, or both. If you have configured more than one revenue event type with the same label, you must specify the `eventTypeSystemId`.\n"
    },
    "POSTSubscriptionPreviewResponseType_chargeMetrics" : {
      "properties" : {
        "originRatePlanId" : {
          "type" : "string",
          "description" : "The origin rate plan ID. Only available for update subscription.\n"
        },
        "productRatePlanChargeId" : {
          "type" : "string",
          "description" : "The product rate plan charge ID.\n"
        },
        "number" : {
          "type" : "string",
          "description" : "The charge number of the subscription. Only available for update subscription.\n"
        },
        "productRatePlanId" : {
          "type" : "string",
          "description" : "The product rate plan ID.\n"
        },
        "dmrr" : {
          "type" : "string",
          "description" : "Change in monthly recurring revenue.\n"
        },
        "tcv" : {
          "type" : "string",
          "description" : "Total contract value.\n"
        },
        "originalId" : {
          "type" : "string",
          "description" : "The original rate plan charge ID. Only available for update subscription.\n"
        },
        "dtcv" : {
          "type" : "string",
          "description" : "Change in total contract value.\n"
        },
        "mrr" : {
          "type" : "string",
          "description" : "Monthly recurring revenue.\n"
        }
      },
      "description" : "Container for charge metrics.\n"
    },
    "POSTSubscriptionPreviewType_previewAccountInfo_billToContact" : {
      "properties" : {
        "country" : {
          "type" : "string",
          "description" : "The country of the bill-to address. The value must be a valid country name or abbreviation.\n"
        },
        "zipCode" : {
          "type" : "string",
          "description" : "The zip code of the bill-to address. The value should be 20 characters or less.\n"
        },
        "taxRegion" : {
          "type" : "string",
          "description" : "If using Zuora Tax, a region string as optionally defined in your tax rules.\n"
        },
        "city" : {
          "type" : "string",
          "description" : "The city of the bill-to address. The value should be 40 characters or less.\n"
        },
        "county" : {
          "type" : "string",
          "description" : "The county of the bill-to address. The value should be 32 characters or less.\n"
        },
        "state" : {
          "type" : "string",
          "description" : "The state of the bill-to address. The value must be a valid state or province name or 2-character abbreviation.\n"
        }
      },
      "description" : "Container for bill-to contact information of this account.\n"
    },
    "POSTSubscriptionPreviewType_previewAccountInfo" : {
      "required" : [ "billCycleDay" ],
      "properties" : {
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "billCycleDay" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "The account's bill cycle day (BCD), when bill runs generate invoices for the account. Specify any day of the month (`1`-`31`, where `31` = end-of-month), or `0` for auto-set.\n"
        },
        "currency" : {
          "type" : "string",
          "description" : "A currency as defined in Billing Settings.\n"
        },
        "billToContact" : {
          "$ref" : "#/definitions/POSTSubscriptionPreviewType_previewAccountInfo_billToContact"
        }
      },
      "description" : "A container for providing a customer account information if you do not have an existing customer account. This customer account information is only used for subscription preview.\n\nYou must specify the account information either in this field or in the `accountKey` field with the following conditions:\n\n* If you already have a customer account, specify the account number or ID in the accountKey field.\n* If you do not have a customer account, provide account information in this field.\n"
    },
    "PUTAccountType_billToContact" : {
      "required" : [ "firstName", "lastName" ],
      "properties" : {
        "country" : {
          "type" : "string",
          "description" : "Country; must be a valid country name or abbreviation. If using Zuora Tax, you must specify a country in the sold-to contact to calculate tax. A bill-to contact may be used if no sold-to contact is provided.\n"
        },
        "lastName" : {
          "type" : "string",
          "description" : "Last name, 100 characters or less.\n"
        },
        "zipCode" : {
          "type" : "string",
          "description" : "Zip code, 20 characters or less.\n"
        },
        "address2" : {
          "type" : "string",
          "description" : "Second address line, 255 characters or less.\n"
        },
        "city" : {
          "type" : "string",
          "description" : "City, 40 characters or less.\n"
        },
        "workEmail" : {
          "type" : "string",
          "description" : "Work email address, 80 characters or less.\n"
        },
        "address1" : {
          "type" : "string",
          "description" : "First address line, 255 characters or less.\n"
        },
        "homePhone" : {
          "type" : "string",
          "description" : "Home phone number, 40 characters or less.\n"
        },
        "county" : {
          "type" : "string",
          "description" : "County; 32 characters or less. May optionally be used by Zuora Tax to calculate county tax.\n"
        },
        "personalEmail" : {
          "type" : "string",
          "description" : "Personal email address, 80 characters or less.\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "firstName" : {
          "type" : "string",
          "description" : "First name, 100 characters or less.\n"
        },
        "taxRegion" : {
          "type" : "string",
          "description" : "If using Zuora Tax, a region string as optionally defined in your tax rules. Not required.\n"
        },
        "mobilePhone" : {
          "type" : "string",
          "description" : "Mobile phone number, 40 characters or less.\n"
        },
        "otherPhone" : {
          "type" : "string",
          "description" : "Other phone number, 40 characters or less.\n"
        },
        "nickname" : {
          "type" : "string",
          "description" : "Nickname for this contact\n"
        },
        "otherPhoneType" : {
          "type" : "string",
          "description" : "Possible values are: `Work`, `Mobile`, `Home`, `Other`.\n"
        },
        "workPhone" : {
          "type" : "string",
          "description" : "Work phone number, 40 characters or less.\n"
        },
        "state" : {
          "type" : "string",
          "description" : "State; must be a valid state or province name or 2-character abbreviation. If using Zuora Tax, be aware that Zuora Tax requires a state (in the US) or province (in Canada) in this field for the sold-to contact to calculate tax, and that a bill-to contact may be used if no sold-to contact is provided.\n"
        },
        "fax" : {
          "type" : "string",
          "description" : "Fax phone number, 40 characters or less.\n"
        }
      },
      "description" : "Container for bill-to contact information for this account.\n"
    },
    "PUTAccountType_soldToContact" : {
      "required" : [ "firstName", "lastName" ],
      "properties" : {
        "country" : {
          "type" : "string",
          "description" : "Country; must be a valid country name or abbreviation. If using Zuora Tax, you must specify a country in the sold-to contact to calculate tax. A bill-to contact may be used if no sold-to contact is provided.\n"
        },
        "lastName" : {
          "type" : "string",
          "description" : "Last name, 100 characters or less.\n"
        },
        "zipCode" : {
          "type" : "string",
          "description" : "Zip code, 20 characters or less.\n"
        },
        "address2" : {
          "type" : "string",
          "description" : "Second address line, 255 characters or less.\n"
        },
        "city" : {
          "type" : "string",
          "description" : "City, 40 characters or less.\n"
        },
        "workEmail" : {
          "type" : "string",
          "description" : "Work email address, 80 characters or less.\n"
        },
        "address1" : {
          "type" : "string",
          "description" : "First address line, 255 characters or less.\n"
        },
        "homePhone" : {
          "type" : "string",
          "description" : "Home phone number, 40 characters or less.\n"
        },
        "county" : {
          "type" : "string",
          "description" : "County; 32 characters or less. May optionally be used by Zuora Tax to calculate county tax.\n"
        },
        "personalEmail" : {
          "type" : "string",
          "description" : "Personal email address, 80 characters or less.\n"
        },
        "customField__c" : {
          "type" : "string",
          "description" : "Any custom fields defined for this object.\n"
        },
        "firstName" : {
          "type" : "string",
          "description" : "First name, 100 characters or less.\n"
        },
        "taxRegion" : {
          "type" : "string",
          "description" : "If using Zuora Tax, a region string as optionally defined in your tax rules. Not required.\n"
        },
        "mobilePhone" : {
          "type" : "string",
          "description" : "Mobile phone number, 40 characters or less.\n"
        },
        "otherPhone" : {
          "type" : "string",
          "description" : "Other phone number, 40 characters or less.\n"
        },
        "nickname" : {
          "type" : "string",
          "description" : "Nickname for this contact\n"
        },
        "otherPhoneType" : {
          "type" : "string",
          "description" : "Possible values are: `Work`, `Mobile`, `Home`, `Other`.\n"
        },
        "workPhone" : {
          "type" : "string",
          "description" : "Work phone number, 40 characters or less.\n"
        },
        "state" : {
          "type" : "string",
          "description" : "State; must be a valid state or province name or 2-character abbreviation. If using Zuora Tax, be aware that Zuora Tax  requires a state (in the US) or province (in Canada) in this field for the sold-to contact to calculate tax, and that a bill-to contact may be used if no sold-to contact is provided.\n"
        },
        "fax" : {
          "type" : "string",
          "description" : "Fax phone number, 40 characters or less.\n"
        }
      },
      "description" : "Container for optional sold-to contact.\n"
    },
    "PUTSubscriptionResponseType_chargeMetrics" : {
      "properties" : {
        "originRatePlanId" : {
          "type" : "string",
          "description" : "The origin rate plan ID. Only available for update subscription.\n"
        },
        "productRatePlanChargeId" : {
          "type" : "string",
          "description" : ""
        },
        "number" : {
          "type" : "string",
          "description" : "The charge number of the subscription. Only available for update subscription.\n"
        },
        "productRatePlanId" : {
          "type" : "string",
          "description" : ""
        },
        "dmrr" : {
          "type" : "string",
          "description" : "Change in total contract value.\n"
        },
        "tcv" : {
          "type" : "string",
          "description" : "Total contract value.\n"
        },
        "originalId" : {
          "type" : "string",
          "description" : "The original rate plan charge ID. Only available for update subscription.\n"
        },
        "dtcv" : {
          "type" : "string",
          "description" : "Change in monthly recurring revenue.\n"
        },
        "mrr" : {
          "type" : "string",
          "description" : "Monthly recurring revenue.\n"
        }
      },
      "description" : "Container for charge metrics.\n"
    },
    "ProxyBadRequestResponse_Errors" : {
      "properties" : {
        "Message" : {
          "type" : "string",
          "description" : ""
        },
        "Code" : {
          "type" : "string",
          "description" : ""
        }
      }
    }
  },
  "parameters" : {
    "entityID" : {
      "name" : "entityID",
      "in" : "header",
      "description" : "The entityName parameter specify the Name of the entity that you want to access.'",
      "required" : false,
      "type" : "string"
    },
    "entityName" : {
      "name" : "entityName",
      "in" : "header",
      "description" : "The entityName parameter specify the Name of the entity that you want to access.",
      "required" : false,
      "type" : "string"
    },
    "zuora-version" : {
      "name" : "zuora-version",
      "in" : "header",
      "description" : "The minor version of the Zuora REST API.\nYou only need to set this parameter if you use the __collect__ or __invoice__ fields.\n    ",
      "required" : false,
      "type" : "string"
    }
  }
}